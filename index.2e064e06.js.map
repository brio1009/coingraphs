{"mappings":"A,S,E,C,C,C,C,C,C,C,E,O,c,C,E,E,C,I,E,I,E,W,C,E,a,C,C,E,C,S,E,C,E,O,G,E,U,C,E,O,C,C,C,I,E,W,E,C,E,E,C,E,E,E,iB,A,O,I,A,C,E,S,C,E,G,K,E,O,C,C,E,C,O,C,G,K,E,C,I,E,C,C,E,A,Q,C,C,E,C,I,E,C,G,E,Q,C,C,E,O,C,C,E,C,E,E,I,C,E,O,C,E,E,O,E,E,O,A,C,I,E,A,M,uB,E,I,O,E,I,C,mB,C,C,E,Q,C,S,C,C,C,E,C,C,E,C,C,E,E,iB,C,G,I,E,E,Q,C,E,Q,S,C,C,C,E,E,E,O,C,U,I,G,I,E,E,SCEA,AAAA,CAAA,EAAA,EAAA,KAAI,AAAJ,EAAM,QAAQ,IAAI,EAAA,aAAY,EAG9B,IAAA,EAAe,EAAA,KAAI,A,G,E,Q,S,C,C,C,E,E,E,O,C,a,I,G,E,E,O,C,qB,I,G,E,E,O,C,U,I,I,E,E,O,C,Q,I,I,E,E,O,C,gB,I,I,E,E,O,C,W,I,A,E,S,C,C;;;;;C,E,I,E,E,SEgNnB,EAAe,aAAA,EAAgB,IA1MxB,MACL0C,aAAc,CACZ,IAAI,CAACC,QAAQ,CAAG,KAChB,IAAI,CAACC,OAAO,CAAG,IAAIC,IACnB,IAAI,CAACC,QAAQ,CAAG,CAAA,EAChB,IAAI,CAACC,SAAS,CAAGC,KAAAA,CACnB,CAKAC,QAAQC,CAAK,CAAEC,CAAK,CAAEC,CAAI,CAAEC,CAAI,CAAE,CAChC,IAAMC,EAAYH,EAAMI,SAAS,CAACF,EAAK,CACjCG,EAAWL,EAAMM,QAAQ,CAE/BH,EAAUI,OAAO,CAACC,AAAAA,GAAMA,EAAG,CACzBT,MAAAA,EACAU,QAAST,EAAMS,OAAO,CACtBJ,SAAAA,EACAK,YAAaC,KAAKC,GAAG,CAACX,EAAOD,EAAMa,KAAK,CAAER,EAC5C,GACF,CAKAS,UAAW,CACL,IAAI,CAACtB,QAAQ,GAGjB,IAAI,CAACG,QAAQ,CAAG,CAAA,EAEhB,IAAI,CAACH,QAAQ,CAAGkoG,AAAAA,CAAAA,EAAAA,EAAAA,CAAAA,AAAAA,EAAiBrpG,IAAI,CAAC2C,OAAQ,KAC5C,IAAI,CAACC,OAAO,GACZ,IAAI,CAACzB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,CAAG,IAAI,CAACt2B,kBAAkB,CAACJ,GAAS,IAAI,CAAC42B,WAAW,CACxF,CAEAx0C,cAAe,CACb,OAAO,IAAI,CAAChN,MAAM,AACpB,CACF,E,Y,G,iB,G,kB,G,U,G,gB,E,G,A,G,E,Q,S,C,C,C,MS3IMlV,E,E,E,O,C,K,I,G,E,E,O,C,K,I,G,E,E,O,C,I,I,G,E,E,O,C,I,I,G,E,E,O,C,I,I,G,E,E,O,C,I,I,G,E,E,O,C,I,I,G,E,E,O,C,I,I,G,E,E,O,C,I,I,G,E,E,O,C,I,I,G,E,E,O,C,I,I,G,E,E,O,C,I,I,G,E,E,O,C,K,I,G,E,E,O,C,K,I,G,E,E,O,C,K,I,G,E,E,O,C,I,I,G,E,E,O,C,K,I,G,E,E,O,C,I,I,G,E,E,O,C,K,I,G,E,E,O,C,K,I,G,E,E,O,C,K,I,G,E,E,O,C,I,I,G,E,E,O,C,I,I,G,E,E,O,C,K,I,G,E,E,O,C,I,I,G,E,E,O,C,K,I,G,E,E,O,C,K,I,G,E,E,O,C,K,I,G,E,E,O,C,I,I,G,E,E,O,C,K,I,G,E,E,O,C,K,I,G,E,E,O,C,I,I,G,E,E,O,C,I,I,G,E,E,O,C,K,I,G,E,E,O,C,K,I,G,E,E,O,C,I,I,G,E,E,O,C,I,I,G,E,E,O,C,K,I,G,E,E,O,C,I,I,G,E,E,O,C,K,I,G,E,E,O,C,K,I,I,E,E,O,C,I,I,I,E,E,O,C,I,I,I,E,E,O,C,I,I,I,E,E,O,C,K,I,I,E,E,O,C,K,I,I,E,E,O,C,I,I,I,E,E,O,C,I,I,I,E,E,O,C,K,I,I,E,E,O,C,I,I,I,E,E,O,C,I,I,I,E,E,O,C,I,I,I,E,E,O,C,I,I,I,E,E,O,C,I,I,I,E,E,O,C,K,I,I,E,E,O,C,K,I,I,E,E,O,C,K,I,I,E,E,O,C,K,I,I,E,E,O,C,I,I,I,E,E,O,C,I,I,I,E,E,O,C,I,I,I,E,E,O,C,I,I,I,E,E,O,C,I,I,I,E,E,O,C,K,I,I,E,E,O,C,K,I,I,E,E,O,C,K,I,I,E,E,O,C,I,I,I,E,E,O,C,I,I,I,E,E,O,C,K,I,I,E,E,O,C,I,I,I,E,E,O,C,K,I,I,E,E,O,C,K,I,I,E,E,O,C,K,I,I,E,E,O,C,I,I,I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5CS,yBAAAA,CAAyB1jE,EAAQC,IACxBD,EAAOwjC,YAAY,CAACe,OAAO,CAC9Bo/B,QAAQrlE,GAAG,CAAC4vB,EAAOjuB,GAAQ,CAAC7G,WAAY,CAAA,EAAMC,aAAc,CAAA,CAAI,EAAIsC,KAAAA,EACpEgoE,QAAQD,wBAAwB,CAACx1C,EAAOjuB,GAM9CugC,eAAAA,IACSmjC,QAAQnjC,cAAc,CAACtS,GAMhC5vB,IAAAA,CAAI0B,EAAQC,IACH0jE,QAAQrlE,GAAG,CAAC4vB,EAAOjuB,GAM5B2jE,QAAAA,IACSD,QAAQC,OAAO,CAAC11C,GAMzB/0B,IAAAA,CAAI6G,EAAQC,EAAMwD,KAChByqB,CAAK,CAACjuB,EAAK,CAAGwD,EACd,OAAOzD,CAAM,CAACC,EAAK,CACZ,CAAA,EAEX,EACF,G,E,E,O,C,K,I,I,E,E,O,C,I,I,I,E,E,O,C,K,I,I,E,E,O,C,I,I,I,E,E,O,C,I,I,I,E,E,O,C,I,I,I,E,E,O,C,I,I,I,E,E,O,C,K,I,I,E,E,O,C,I,I,I,E,E,O,C,I,I,I,E,E,O,C,K,I,I,E,E,O,C,K,I,I,E,E,O,C,K,I,I,E,E,O,C,K,I,I,E,E,O,C,K,I,I,E,E,O,C,K,I,I,E,E,O,C,K,I,I,E,E,O,C,K,I,I,E,E,O,C,K,I,G;;;;;C,E,I,E,E,SdxLO,SAASu4G,IACd,CAMK,IAAMhI,GACPz2G,EAAK,EACF,IAAMA,KAQR,SAAS8rG,EAAcpiG,CAAc,EAC1C,OAAOA,MAAAA,CACT,CAOO,SAASuhE,EAAqBvhE,CAAc,EACjD,GAAI4H,MAAM25D,OAAO,EAAI35D,MAAM25D,OAAO,CAACvhE,GACjC,MAAO,CAAA,EAET,IAAMzH,EAAOhD,OAAO6pB,SAAS,CAACoiD,QAAQ,CAAC9qE,IAAI,CAACsJ,SACxCzH,AAAqB,YAArBA,EAAKmwC,KAAK,CAAC,EAAG,IAAoBnwC,AAAmB,WAAnBA,EAAKmwC,KAAK,CAAC,GAInD,CAOO,SAAS03D,EAASpgG,CAAc,EACrC,OAAOA,AAAU,OAAVA,GAAkBzK,AAA0C,oBAA1CA,OAAO6pB,SAAS,CAACoiD,QAAQ,CAAC9qE,IA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AAC,OAAO,EAAI,EAAI,OAAO,CAAC,QAAQ,GAAK,GAClD,EAAiB,IAAI,CAAC,CAAC,QAAS,CAAG,GAK3C,OAAO,CACT,CAAA,EAzB+C,EAAM,eAAe,CAAE,GAAQ,IAAI,CAAC,CAAC,EAAG,IAAM,EAAE,OAAO,CAAC,OAAO,CAAC,CAAC,CAAG,EAAE,OAAO,CAAC,OAAO,CAAC,CAAC,GAElI,AAyBJ,CAAA,SAAqB,CAAG,CAAE,CAAS,CAAE,CAAK,CAAE,CAAI,EAC9C,IAAM,EAAK,EAAK,OAAO,AACnB,CAAA,EAAK,IAAI,EACX,GAAW,EAAO,EAAI,cACtB,EAAG,IAAI,CAAC,EAAK,GACb,GAAW,EAAO,EAAI,cAEtB,EAAG,IAAI,CAAC,EAAK,EAEjB,CAAA,EAlCgB,EAAK,EAAW,EAAO,GAGjC,GACF,AAAA,CAAA,EAAA,EAAA,CAAS,AAAT,EAAW,EAEf,C,G,E,Q,S,C,C,C,E,E,E,O,C,qB,I,A,E,S,E,E,E,E,O,C,W,I,A,E,S,C,E,E,E,O,C,W,I,A,E,S,C,E,E,E,O,C,U,I,A,E,S,C,E,E,E,O,C,wB,I,A,E,S,E,E,E,E,O,C,oB,I,A,E,S,C,E,E,E,O,C,U,I,A,E,S,C,E,E,E,O,C,U,I,A,E,S,C,E,E,E,O,C,W,I,A,E,S,C,E,E,E,O,C,a,I,A,E,S,E,E,E,E,O,C,W,I,A,E,S,C,E,E,E,O,C,W,I,A,E,S,C,E,E,E,O,C,K,I,A,E,S,C,E,E,E,O,C,a,I,A,E,S,E,E,E,E,O,C,c,I,A,E,S,E,E,E,E,O,C,M,I,A,E,S,C,E,E,E,O,C,Y,I,A,E,S,C,E,E,E,O,C,S,I,A,E,S,E,E,E,E,O,C,Y,I,A,E,S,C,E,E,E,O,C,Y,I,A,E,S,C,E,E,E,O,C,gB,I,A,E,S,E,E,E,E,O,C,gB,I,A,E,S,E,E,E,E,O,C,a,I,A,E,S,C,E,E,E,O,C,iB,I,A,E,S,C,E,E,Q,G,E,Q,S,C,C,C,E,I,E,E,QEz7FA,CAAA,EAAA,OAAA,CAAkB,AAAA,CAAA,EAAO,UAAU,CAAG,EAAS,CAAE,QAAS,CAAO,CAAA,EAAG,OAAO,A,G,E,Q,S,C,C,C,MCUzC,EAVlC,OAAO,cAAc,CAAC,EAAA,OAAA,CAAS,aAAc,CACzC,MAAO,CAAA,CACX,GACA,OAAO,cAAc,CAAC,EAAA,OAAA,CAAS,UAAW,CACtC,WAAY,CAAA,EACZ,IAAK,WACD,OAAO,CACX,CACJ,GACA,IAAM,EAEK,CADuB,EADlC,EAAA,WAEkB,EAAI,UAAU,CAAG,EAAM,CACjC,QAAS,CACb,EAEJ,SAAS,EAAK,CAAA,QAAE,CAAO,CAAA,KAAG,CAAI,CAAA,GAAG,CAAE,CAAG,EAClC,EAAK,OAAO,CAAC,IAAI,CAAC,CAAC,EAAE,EAAK,cAAc,CAAC,CAAE,CACvC,CAAC,mBAAmB,EAAE,EAAQ,IAAI,EAAE,EAAK,yBAAyB,EAAE,EAAG,GAAG,CAAC,CAC3E,0DACH,CACL,CACA,IAAM,EAAW,CACb,QAAS,UACT,QAAS,eACT,YAAa,cACb,MAAO,OACP,MAAO,OACP,MAAO,CACH,GAAI,UACJ,IAAK,UACL,IAAK,UACL,IAAK,UACL,IAAK,UACL,IAAK,UACL,IAAK,UACL,IAAK,UACL,IAAK,UACL,IAAK,UACL,IAAK,SACT,EACA,KAAM,CACF,GAAI,UACJ,IAAK,UACL,IAAK,UACL,IAAK,UACL,IAAK,UACL,IAAK,UACL,IAAK,UACL,IAAK,UACL,IAAK,UACL,IAAK,UACL,IAAK,SACT,EACA,KAAM,CACF,GAAI,UACJ,IAAK,UACL,IAAK,UACL,IAAK,UACL,IAAK,UACL,IAAK,UACL,IAAK,UACL,IAAK,UACL,IAAK,UACL,IAAK,UACL,IAAK,SACT,EACA,QAAS,CACL,GAAI,UACJ,IAAK,UACL,IAAK,UACL,IAAK,UACL,IAAK,UACL,IAAK,UACL,IAAK,UACL,IAAK,UACL,IAAK,UACL,IAAK,UACL,IAAK,SACT,EACA,MAAO,CACH,GAAI,UACJ,IAAK,UACL,IAAK,UACL,IAAK,UACL,IAAK,UACL,IAAK,UACL,IAAK,UACL,IAAK,UACL,IAAK,UACL,IAAK,UACL,IAAK,SACT,EACA,IAAK,CACD,GAAI,UACJ,IAAK,UACL,IAAK,UACL,IAAK,UACL,IAAK,UACL,IAAK,UACL,IAAK,UACL,IAAK,UACL,IAAK,UACL,IAAK,UACL,IAAK,SACT,EACA,OAAQ,CACJ,GAAI,UACJ,IAAK,UACL,IAAK,UACL,IAAK,UACL,IAAK,UACL,IAAK,UACL,IAAK,UACL,IAAK,UACL,IAAK,UACL,IAAK,UACL,IAAK,SACT,EACA,MAAO,CACH,GAAI,UACJ,IAAK,UACL,IAAK,UACL,IAAK,UACL,IAAK,UACL,IAAK,UACL,IAAK,UACL,IAAK,UACL,IAAK,UACL,IAAK,UACL,IAAK,SACT,EACA,OAAQ,CACJ,GAAI,UACJ,IAAK,UACL,IAAK,UACL,IAAK,UACL,IAAK,UACL,IAAK,UACL,IAAK,UACL,IAAK,UACL,IAAK,UACL,IAAK,UACL,IAAK,SACT,EACA,KAAM,CACF,GAAI,UACJ,IAAK,UACL,IAAK,UACL,IAAK,UACL,IAAK,UACL,IAAK,UACL,IAAK,UACL,IAAK,UACL,IAAK,UACL,IAAK,UACL,IAAK,SACT,EACA,MAAO,CACH,GAAI,UACJ,IAAK,UACL,IAAK,UACL,IAAK,UACL,IAAK,UACL,IAAK,UACL,IAAK,UACL,IAAK,UACL,IAAK,UACL,IAAK,UACL,IAAK,SACT,EACA,QAAS,CACL,GAAI,UACJ,IAAK,UACL,IAAK,UACL,IAAK,UACL,IAAK,UACL,IAAK,UACL,IAAK,UACL,IAAK,UACL,IAAK,UACL,IAAK,UACL,IAAK,SACT,EACA,KAAM,CACF,GAAI,UACJ,IAAK,UACL,IAAK,UACL,IAAK,UACL,IAAK,UACL,IAAK,UACL,IAAK,UACL,IAAK,UACL,IAAK,UACL,IAAK,UACL,IAAK,SACT,EACA,KAAM,CACF,GAAI,UACJ,IAAK,UACL,IAAK,UACL,IAAK,UACL,IAAK,UACL,IAAK,UACL,IAAK,UACL,IAAK,UACL,IAAK,UACL,IAAK,UACL,IAAK,SACT,EACA,IAAK,CACD,GAAI,UACJ,IAAK,UACL,IAAK,UACL,IAAK,UACL,IAAK,UACL,IAAK,UACL,IAAK,UACL,IAAK,UACL,IAAK,UACL,IAAK,UACL,IAAK,SACT,EACA,KAAM,CACF,GAAI,UACJ,IAAK,UACL,IAAK,UA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","sources":["<anon>","node_modules/chart.js/auto/auto.js","node_modules/chart.js/dist/chart.js","node_modules/chart.js/src/core/core.animator.js","node_modules/chart.js/src/core/core.animation.js","node_modules/chart.js/src/core/core.animations.js","node_modules/chart.js/src/core/core.datasetController.js","node_modules/chart.js/src/controllers/controller.bar.js","node_modules/chart.js/src/controllers/controller.bubble.js","node_modules/chart.js/src/controllers/controller.doughnut.js","node_modules/chart.js/src/controllers/controller.line.js","node_modules/chart.js/src/controllers/controller.polarArea.js","node_modules/chart.js/src/controllers/controller.pie.js","node_modules/chart.js/src/controllers/controller.radar.js","node_modules/chart.js/src/controllers/controller.scatter.js","node_modules/chart.js/src/core/core.adapters.ts","node_modules/chart.js/src/core/core.interaction.js","node_modules/chart.js/src/core/core.layouts.js","node_modules/chart.js/src/platform/platform.base.js","node_modules/chart.js/src/platform/platform.basic.js","node_modules/chart.js/src/platform/platform.dom.js","node_modules/chart.js/src/platform/index.js","node_modules/chart.js/src/core/core.element.ts","node_modules/chart.js/src/core/core.scale.autoskip.js","node_modules/chart.js/src/core/core.scale.js","node_modules/chart.js/src/core/core.typedRegistry.js","node_modules/chart.js/src/core/core.registry.js","node_modules/chart.js/src/core/core.plugins.js","node_modules/chart.js/src/core/core.config.js","node_modules/chart.js/src/core/core.controller.js","node_modules/chart.js/src/elements/element.arc.ts","node_modules/chart.js/src/elements/element.line.js","node_modules/chart.js/src/elements/element.point.ts","node_modules/chart.js/src/elements/element.bar.js","node_modules/chart.js/src/plugins/plugin.colors.ts","node_modules/chart.js/src/plugins/plugin.decimation.js","node_modules/chart.js/src/plugins/plugin.filler/filler.segment.js","node_modules/chart.js/src/plugins/plugin.filler/filler.helper.js","node_modules/chart.js/src/plugins/plugin.filler/filler.options.js","node_modules/chart.js/src/plugins/plugin.filler/filler.target.stack.js","node_modules/chart.js/src/plugins/plugin.filler/simpleArc.js","node_modules/chart.js/src/plugins/plugin.filler/filler.target.js","node_modules/chart.js/src/plugins/plugin.filler/filler.drawing.js","node_modules/chart.js/src/plugins/plugin.filler/index.js","node_modules/chart.js/src/plugins/plugin.legend.js","node_modules/chart.js/src/plugins/plugin.title.js","node_modules/chart.js/src/plugins/plugin.subtitle.js","node_modules/chart.js/src/plugins/plugin.tooltip.js","node_modules/chart.js/src/scales/scale.category.js","node_modules/chart.js/src/scales/scale.linearbase.js","node_modules/chart.js/src/scales/scale.linear.js","node_modules/chart.js/src/scales/scale.logarithmic.js","node_modules/chart.js/src/scales/scale.radialLinear.js","node_modules/chart.js/src/scales/scale.time.js","node_modules/chart.js/src/scales/scale.timeseries.js","node_modules/chart.js/src/index.ts","node_modules/chart.js/dist/chunks/helpers.segment.js","node_modules/chart.js/src/helpers/helpers.core.ts","node_modules/chart.js/src/helpers/helpers.math.ts","node_modules/chart.js/src/helpers/helpers.collection.ts","node_modules/chart.js/src/helpers/helpers.extras.ts","node_modules/chart.js/src/helpers/helpers.easing.ts","node_modules/chart.js/src/helpers/helpers.color.ts","node_modules/chart.js/src/core/core.animations.defaults.js","node_modules/chart.js/src/core/core.layouts.defaults.js","node_modules/chart.js/src/helpers/helpers.intl.ts","node_modules/chart.js/src/core/core.ticks.js","node_modules/chart.js/src/core/core.scale.defaults.js","node_modules/chart.js/src/core/core.defaults.js","node_modules/chart.js/src/helpers/helpers.canvas.ts","node_modules/chart.js/src/helpers/helpers.options.ts","node_modules/chart.js/src/helpers/helpers.config.ts","node_modules/chart.js/src/helpers/helpers.curve.ts","node_modules/chart.js/src/helpers/helpers.dom.ts","node_modules/chart.js/src/helpers/helpers.interpolation.ts","node_modules/chart.js/src/helpers/helpers.rtl.ts","node_modules/chart.js/src/helpers/helpers.segment.js","node_modules/@kurkle/color/dist/color.esm.js","node_modules/chartjs-plugin-annotation/dist/chartjs-plugin-annotation.esm.js","node_modules/chart.js/helpers/helpers.js","node_modules/tailwindcss/colors.js","node_modules/tailwindcss/lib/public/colors.js","node_modules/tailwindcss/lib/util/log.js","node_modules/process/browser.js","node_modules/picocolors/picocolors.browser.js","data/btc_newest.json","data/btc_prices_until_2023.json","src/utils.ts","src/pi_cycle.ts"],"sourcesContent":["\nfunction $parcel$export(e, n, v, s) {\n  Object.defineProperty(e, n, {get: v, set: s, enumerable: true, configurable: true});\n}\n\nfunction $parcel$interopDefault(a) {\n  return a && a.__esModule ? a.default : a;\n}\n\n      var $parcel$global = globalThis;\n    \nvar $parcel$modules = {};\nvar $parcel$inits = {};\n\nvar parcelRequire = $parcel$global[\"parcelRequire4bea\"];\n\nif (parcelRequire == null) {\n  parcelRequire = function(id) {\n    if (id in $parcel$modules) {\n      return $parcel$modules[id].exports;\n    }\n    if (id in $parcel$inits) {\n      var init = $parcel$inits[id];\n      delete $parcel$inits[id];\n      var module = {id: id, exports: {}};\n      $parcel$modules[id] = module;\n      init.call(module.exports, module, module.exports);\n      return module.exports;\n    }\n    var err = new Error(\"Cannot find module '\" + id + \"'\");\n    err.code = 'MODULE_NOT_FOUND';\n    throw err;\n  };\n\n  parcelRequire.register = function register(id, init) {\n    $parcel$inits[id] = init;\n  };\n\n  $parcel$global[\"parcelRequire4bea\"] = parcelRequire;\n}\n\nvar parcelRegister = parcelRequire.register;\nparcelRegister(\"jqz8H\", function(module, exports) {\n\n$parcel$export(module.exports, \"default\", () => $e24bb3f4f01060dd$export$2e2bcd8739ae039);\n\nvar $2RVy2 = parcelRequire(\"2RVy2\");\n(0, $2RVy2.Chart).register(...(0, $2RVy2.registerables));\nvar $e24bb3f4f01060dd$export$2e2bcd8739ae039 = (0, $2RVy2.Chart);\n\n});\nparcelRegister(\"2RVy2\", function(module, exports) {\n\n$parcel$export(module.exports, \"Animations\", () => $216d2bdc6f281bf6$export$8ab227dac26677d);\n$parcel$export(module.exports, \"DoughnutController\", () => $216d2bdc6f281bf6$export$e04603e7d8b77172);\n$parcel$export(module.exports, \"Element\", () => $216d2bdc6f281bf6$export$db77ccec0bb4ccac);\n$parcel$export(module.exports, \"Chart\", () => $216d2bdc6f281bf6$export$acaa6426d77a227e);\n$parcel$export(module.exports, \"registerables\", () => $216d2bdc6f281bf6$export$e8959e79e3af550f);\n$parcel$export(module.exports, \"defaults\", () => (parcelRequire(\"c7mKY\")).d);\n/*!\n * Chart.js v4.4.5\n * https://www.chartjs.org\n * (c) 2024 Chart.js Contributors\n * Released under the MIT License\n */ \nvar $c7mKY = parcelRequire(\"c7mKY\");\n\nclass $216d2bdc6f281bf6$var$Animator {\n    constructor(){\n        this._request = null;\n        this._charts = new Map();\n        this._running = false;\n        this._lastDate = undefined;\n    }\n    _notify(chart, anims, date, type) {\n        const callbacks = anims.listeners[type];\n        const numSteps = anims.duration;\n        callbacks.forEach((fn)=>fn({\n                chart: chart,\n                initial: anims.initial,\n                numSteps: numSteps,\n                currentStep: Math.min(date - anims.start, numSteps)\n            }));\n    }\n    _refresh() {\n        if (this._request) return;\n        this._running = true;\n        this._request = (0, $c7mKY.r).call(window, ()=>{\n            this._update();\n            this._request = null;\n            if (this._running) this._refresh();\n        });\n    }\n    _update(date = Date.now()) {\n        let remaining = 0;\n        this._charts.forEach((anims, chart)=>{\n            if (!anims.running || !anims.items.length) return;\n            const items = anims.items;\n            let i = items.length - 1;\n            let draw = false;\n            let item;\n            for(; i >= 0; --i){\n                item = items[i];\n                if (item._active) {\n                    if (item._total > anims.duration) anims.duration = item._total;\n                    item.tick(date);\n                    draw = true;\n                } else {\n                    items[i] = items[items.length - 1];\n                    items.pop();\n                }\n            }\n            if (draw) {\n                chart.draw();\n                this._notify(chart, anims, date, \"progress\");\n            }\n            if (!items.length) {\n                anims.running = false;\n                this._notify(chart, anims, date, \"complete\");\n                anims.initial = false;\n            }\n            remaining += items.length;\n        });\n        this._lastDate = date;\n        if (remaining === 0) this._running = false;\n    }\n    _getAnims(chart) {\n        const charts = this._charts;\n        let anims = charts.get(chart);\n        if (!anims) {\n            anims = {\n                running: false,\n                initial: true,\n                items: [],\n                listeners: {\n                    complete: [],\n                    progress: []\n                }\n            };\n            charts.set(chart, anims);\n        }\n        return anims;\n    }\n    listen(chart, event, cb) {\n        this._getAnims(chart).listeners[event].push(cb);\n    }\n    add(chart, items) {\n        if (!items || !items.length) return;\n        this._getAnims(chart).items.push(...items);\n    }\n    has(chart) {\n        return this._getAnims(chart).items.length > 0;\n    }\n    start(chart) {\n        const anims = this._charts.get(chart);\n        if (!anims) return;\n        anims.running = true;\n        anims.start = Date.now();\n        anims.duration = anims.items.reduce((acc, cur)=>Math.max(acc, cur._duration), 0);\n        this._refresh();\n    }\n    running(chart) {\n        if (!this._running) return false;\n        const anims = this._charts.get(chart);\n        if (!anims || !anims.running || !anims.items.length) return false;\n        return true;\n    }\n    stop(chart) {\n        const anims = this._charts.get(chart);\n        if (!anims || !anims.items.length) return;\n        const items = anims.items;\n        let i = items.length - 1;\n        for(; i >= 0; --i)items[i].cancel();\n        anims.items = [];\n        this._notify(chart, anims, Date.now(), \"complete\");\n    }\n    remove(chart) {\n        return this._charts.delete(chart);\n    }\n}\nvar $216d2bdc6f281bf6$export$a424a0aa8f687495 = /* #__PURE__ */ new $216d2bdc6f281bf6$var$Animator();\nconst $216d2bdc6f281bf6$var$transparent = \"transparent\";\nconst $216d2bdc6f281bf6$var$interpolators = {\n    boolean (from, to, factor) {\n        return factor > 0.5 ? to : from;\n    },\n    color (from, to, factor) {\n        const c0 = (0, $c7mKY.c)(from || $216d2bdc6f281bf6$var$transparent);\n        const c1 = c0.valid && (0, $c7mKY.c)(to || $216d2bdc6f281bf6$var$transparent);\n        return c1 && c1.valid ? c1.mix(c0, factor).hexString() : to;\n    },\n    number (from, to, factor) {\n        return from + (to - from) * factor;\n    }\n};\nclass $216d2bdc6f281bf6$export$c35d437ae5945fcd {\n    constructor(cfg, target, prop, to){\n        const currentValue = target[prop];\n        to = (0, $c7mKY.a)([\n            cfg.to,\n            to,\n            currentValue,\n            cfg.from\n        ]);\n        const from = (0, $c7mKY.a)([\n            cfg.from,\n            currentValue,\n            to\n        ]);\n        this._active = true;\n        this._fn = cfg.fn || $216d2bdc6f281bf6$var$interpolators[cfg.type || typeof from];\n        this._easing = (0, $c7mKY.e)[cfg.easing] || (0, $c7mKY.e).linear;\n        this._start = Math.floor(Date.now() + (cfg.delay || 0));\n        this._duration = this._total = Math.floor(cfg.duration);\n        this._loop = !!cfg.loop;\n        this._target = target;\n        this._prop = prop;\n        this._from = from;\n        this._to = to;\n        this._promises = undefined;\n    }\n    active() {\n        return this._active;\n    }\n    update(cfg, to, date) {\n        if (this._active) {\n            this._notify(false);\n            const currentValue = this._target[this._prop];\n            const elapsed = date - this._start;\n            const remain = this._duration - elapsed;\n            this._start = date;\n            this._duration = Math.floor(Math.max(remain, cfg.duration));\n            this._total += elapsed;\n            this._loop = !!cfg.loop;\n            this._to = (0, $c7mKY.a)([\n                cfg.to,\n                to,\n                currentValue,\n                cfg.from\n            ]);\n            this._from = (0, $c7mKY.a)([\n                cfg.from,\n                currentValue,\n                to\n            ]);\n        }\n    }\n    cancel() {\n        if (this._active) {\n            this.tick(Date.now());\n            this._active = false;\n            this._notify(false);\n        }\n    }\n    tick(date) {\n        const elapsed = date - this._start;\n        const duration = this._duration;\n        const prop = this._prop;\n        const from = this._from;\n        const loop = this._loop;\n        const to = this._to;\n        let factor;\n        this._active = from !== to && (loop || elapsed < duration);\n        if (!this._active) {\n            this._target[prop] = to;\n            this._notify(true);\n            return;\n        }\n        if (elapsed < 0) {\n            this._target[prop] = from;\n            return;\n        }\n        factor = elapsed / duration % 2;\n        factor = loop && factor > 1 ? 2 - factor : factor;\n        factor = this._easing(Math.min(1, Math.max(0, factor)));\n        this._target[prop] = this._fn(from, to, factor);\n    }\n    wait() {\n        const promises = this._promises || (this._promises = []);\n        return new Promise((res, rej)=>{\n            promises.push({\n                res: res,\n                rej: rej\n            });\n        });\n    }\n    _notify(resolved) {\n        const method = resolved ? \"res\" : \"rej\";\n        const promises = this._promises || [];\n        for(let i = 0; i < promises.length; i++)promises[i][method]();\n    }\n}\nclass $216d2bdc6f281bf6$export$8ab227dac26677d {\n    constructor(chart, config){\n        this._chart = chart;\n        this._properties = new Map();\n        this.configure(config);\n    }\n    configure(config) {\n        if (!(0, $c7mKY.i)(config)) return;\n        const animationOptions = Object.keys((0, $c7mKY.d).animation);\n        const animatedProps = this._properties;\n        Object.getOwnPropertyNames(config).forEach((key)=>{\n            const cfg = config[key];\n            if (!(0, $c7mKY.i)(cfg)) return;\n            const resolved = {};\n            for (const option of animationOptions)resolved[option] = cfg[option];\n            ((0, $c7mKY.b)(cfg.properties) && cfg.properties || [\n                key\n            ]).forEach((prop)=>{\n                if (prop === key || !animatedProps.has(prop)) animatedProps.set(prop, resolved);\n            });\n        });\n    }\n    _animateOptions(target, values) {\n        const newOptions = values.options;\n        const options = $216d2bdc6f281bf6$var$resolveTargetOptions(target, newOptions);\n        if (!options) return [];\n        const animations = this._createAnimations(options, newOptions);\n        if (newOptions.$shared) $216d2bdc6f281bf6$var$awaitAll(target.options.$animations, newOptions).then(()=>{\n            target.options = newOptions;\n        }, ()=>{});\n        return animations;\n    }\n    _createAnimations(target, values) {\n        const animatedProps = this._properties;\n        const animations = [];\n        const running = target.$animations || (target.$animations = {});\n        const props = Object.keys(values);\n        const date = Date.now();\n        let i;\n        for(i = props.length - 1; i >= 0; --i){\n            const prop = props[i];\n            if (prop.charAt(0) === \"$\") continue;\n            if (prop === \"options\") {\n                animations.push(...this._animateOptions(target, values));\n                continue;\n            }\n            const value = values[prop];\n            let animation = running[prop];\n            const cfg = animatedProps.get(prop);\n            if (animation) {\n                if (cfg && animation.active()) {\n                    animation.update(cfg, value, date);\n                    continue;\n                } else animation.cancel();\n            }\n            if (!cfg || !cfg.duration) {\n                target[prop] = value;\n                continue;\n            }\n            running[prop] = animation = new $216d2bdc6f281bf6$export$c35d437ae5945fcd(cfg, target, prop, value);\n            animations.push(animation);\n        }\n        return animations;\n    }\n    update(target, values) {\n        if (this._properties.size === 0) {\n            Object.assign(target, values);\n            return;\n        }\n        const animations = this._createAnimations(target, values);\n        if (animations.length) {\n            $216d2bdc6f281bf6$export$a424a0aa8f687495.add(this._chart, animations);\n            return true;\n        }\n    }\n}\nfunction $216d2bdc6f281bf6$var$awaitAll(animations, properties) {\n    const running = [];\n    const keys = Object.keys(properties);\n    for(let i = 0; i < keys.length; i++){\n        const anim = animations[keys[i]];\n        if (anim && anim.active()) running.push(anim.wait());\n    }\n    return Promise.all(running);\n}\nfunction $216d2bdc6f281bf6$var$resolveTargetOptions(target, newOptions) {\n    if (!newOptions) return;\n    let options = target.options;\n    if (!options) {\n        target.options = newOptions;\n        return;\n    }\n    if (options.$shared) target.options = options = Object.assign({}, options, {\n        $shared: false,\n        $animations: {}\n    });\n    return options;\n}\nfunction $216d2bdc6f281bf6$var$scaleClip(scale, allowedOverflow) {\n    const opts = scale && scale.options || {};\n    const reverse = opts.reverse;\n    const min = opts.min === undefined ? allowedOverflow : 0;\n    const max = opts.max === undefined ? allowedOverflow : 0;\n    return {\n        start: reverse ? max : min,\n        end: reverse ? min : max\n    };\n}\nfunction $216d2bdc6f281bf6$var$defaultClip(xScale, yScale, allowedOverflow) {\n    if (allowedOverflow === false) return false;\n    const x = $216d2bdc6f281bf6$var$scaleClip(xScale, allowedOverflow);\n    const y = $216d2bdc6f281bf6$var$scaleClip(yScale, allowedOverflow);\n    return {\n        top: y.end,\n        right: x.end,\n        bottom: y.start,\n        left: x.start\n    };\n}\nfunction $216d2bdc6f281bf6$var$toClip(value) {\n    let t, r, b, l;\n    if ((0, $c7mKY.i)(value)) {\n        t = value.top;\n        r = value.right;\n        b = value.bottom;\n        l = value.left;\n    } else t = r = b = l = value;\n    return {\n        top: t,\n        right: r,\n        bottom: b,\n        left: l,\n        disabled: value === false\n    };\n}\nfunction $216d2bdc6f281bf6$var$getSortedDatasetIndices(chart, filterVisible) {\n    const keys = [];\n    const metasets = chart._getSortedDatasetMetas(filterVisible);\n    let i, ilen;\n    for(i = 0, ilen = metasets.length; i < ilen; ++i)keys.push(metasets[i].index);\n    return keys;\n}\nfunction $216d2bdc6f281bf6$var$applyStack(stack, value, dsIndex, options = {}) {\n    const keys = stack.keys;\n    const singleMode = options.mode === \"single\";\n    let i, ilen, datasetIndex, otherValue;\n    if (value === null) return;\n    for(i = 0, ilen = keys.length; i < ilen; ++i){\n        datasetIndex = +keys[i];\n        if (datasetIndex === dsIndex) {\n            if (options.all) continue;\n            break;\n        }\n        otherValue = stack.values[datasetIndex];\n        if ((0, $c7mKY.g)(otherValue) && (singleMode || value === 0 || (0, $c7mKY.s)(value) === (0, $c7mKY.s)(otherValue))) value += otherValue;\n    }\n    return value;\n}\nfunction $216d2bdc6f281bf6$var$convertObjectDataToArray(data, meta) {\n    const { iScale: iScale, vScale: vScale } = meta;\n    const iAxisKey = iScale.axis === \"x\" ? \"x\" : \"y\";\n    const vAxisKey = vScale.axis === \"x\" ? \"x\" : \"y\";\n    const keys = Object.keys(data);\n    const adata = new Array(keys.length);\n    let i, ilen, key;\n    for(i = 0, ilen = keys.length; i < ilen; ++i){\n        key = keys[i];\n        adata[i] = {\n            [iAxisKey]: key,\n            [vAxisKey]: data[key]\n        };\n    }\n    return adata;\n}\nfunction $216d2bdc6f281bf6$var$isStacked(scale, meta) {\n    const stacked = scale && scale.options.stacked;\n    return stacked || stacked === undefined && meta.stack !== undefined;\n}\nfunction $216d2bdc6f281bf6$var$getStackKey(indexScale, valueScale, meta) {\n    return `${indexScale.id}.${valueScale.id}.${meta.stack || meta.type}`;\n}\nfunction $216d2bdc6f281bf6$var$getUserBounds(scale) {\n    const { min: min, max: max, minDefined: minDefined, maxDefined: maxDefined } = scale.getUserBounds();\n    return {\n        min: minDefined ? min : Number.NEGATIVE_INFINITY,\n        max: maxDefined ? max : Number.POSITIVE_INFINITY\n    };\n}\nfunction $216d2bdc6f281bf6$var$getOrCreateStack(stacks, stackKey, indexValue) {\n    const subStack = stacks[stackKey] || (stacks[stackKey] = {});\n    return subStack[indexValue] || (subStack[indexValue] = {});\n}\nfunction $216d2bdc6f281bf6$var$getLastIndexInStack(stack, vScale, positive, type) {\n    for (const meta of vScale.getMatchingVisibleMetas(type).reverse()){\n        const value = stack[meta.index];\n        if (positive && value > 0 || !positive && value < 0) return meta.index;\n    }\n    return null;\n}\nfunction $216d2bdc6f281bf6$var$updateStacks(controller, parsed) {\n    const { chart: chart, _cachedMeta: meta } = controller;\n    const stacks = chart._stacks || (chart._stacks = {});\n    const { iScale: iScale, vScale: vScale, index: datasetIndex } = meta;\n    const iAxis = iScale.axis;\n    const vAxis = vScale.axis;\n    const key = $216d2bdc6f281bf6$var$getStackKey(iScale, vScale, meta);\n    const ilen = parsed.length;\n    let stack;\n    for(let i = 0; i < ilen; ++i){\n        const item = parsed[i];\n        const { [iAxis]: index, [vAxis]: value } = item;\n        const itemStacks = item._stacks || (item._stacks = {});\n        stack = itemStacks[vAxis] = $216d2bdc6f281bf6$var$getOrCreateStack(stacks, key, index);\n        stack[datasetIndex] = value;\n        stack._top = $216d2bdc6f281bf6$var$getLastIndexInStack(stack, vScale, true, meta.type);\n        stack._bottom = $216d2bdc6f281bf6$var$getLastIndexInStack(stack, vScale, false, meta.type);\n        const visualValues = stack._visualValues || (stack._visualValues = {});\n        visualValues[datasetIndex] = value;\n    }\n}\nfunction $216d2bdc6f281bf6$var$getFirstScaleId(chart, axis) {\n    const scales = chart.scales;\n    return Object.keys(scales).filter((key)=>scales[key].axis === axis).shift();\n}\nfunction $216d2bdc6f281bf6$var$createDatasetContext(parent, index) {\n    return (0, $c7mKY.j)(parent, {\n        active: false,\n        dataset: undefined,\n        datasetIndex: index,\n        index: index,\n        mode: \"default\",\n        type: \"dataset\"\n    });\n}\nfunction $216d2bdc6f281bf6$var$createDataContext(parent, index, element) {\n    return (0, $c7mKY.j)(parent, {\n        active: false,\n        dataIndex: index,\n        parsed: undefined,\n        raw: undefined,\n        element: element,\n        index: index,\n        mode: \"default\",\n        type: \"data\"\n    });\n}\nfunction $216d2bdc6f281bf6$var$clearStacks(meta, items) {\n    const datasetIndex = meta.controller.index;\n    const axis = meta.vScale && meta.vScale.axis;\n    if (!axis) return;\n    items = items || meta._parsed;\n    for (const parsed of items){\n        const stacks = parsed._stacks;\n        if (!stacks || stacks[axis] === undefined || stacks[axis][datasetIndex] === undefined) return;\n        delete stacks[axis][datasetIndex];\n        if (stacks[axis]._visualValues !== undefined && stacks[axis]._visualValues[datasetIndex] !== undefined) delete stacks[axis]._visualValues[datasetIndex];\n    }\n}\nconst $216d2bdc6f281bf6$var$isDirectUpdateMode = (mode)=>mode === \"reset\" || mode === \"none\";\nconst $216d2bdc6f281bf6$var$cloneIfNotShared = (cached, shared)=>shared ? cached : Object.assign({}, cached);\nconst $216d2bdc6f281bf6$var$createStack = (canStack, meta, chart)=>canStack && !meta.hidden && meta._stacked && {\n        keys: $216d2bdc6f281bf6$var$getSortedDatasetIndices(chart, true),\n        values: null\n    };\nclass $216d2bdc6f281bf6$export$75572ec5c55b4048 {\n    static defaults = {};\n    static datasetElementType = null;\n    static dataElementType = null;\n    constructor(chart, datasetIndex){\n        this.chart = chart;\n        this._ctx = chart.ctx;\n        this.index = datasetIndex;\n        this._cachedDataOpts = {};\n        this._cachedMeta = this.getMeta();\n        this._type = this._cachedMeta.type;\n        this.options = undefined;\n        this._parsing = false;\n        this._data = undefined;\n        this._objectData = undefined;\n        this._sharedOptions = undefined;\n        this._drawStart = undefined;\n        this._drawCount = undefined;\n        this.enableOptionSharing = false;\n        this.supportsDecimation = false;\n        this.$context = undefined;\n        this._syncList = [];\n        this.datasetElementType = new.target.datasetElementType;\n        this.dataElementType = new.target.dataElementType;\n        this.initialize();\n    }\n    initialize() {\n        const meta = this._cachedMeta;\n        this.configure();\n        this.linkScales();\n        meta._stacked = $216d2bdc6f281bf6$var$isStacked(meta.vScale, meta);\n        this.addElements();\n        if (this.options.fill && !this.chart.isPluginEnabled(\"filler\")) console.warn(\"Tried to use the 'fill' option without the 'Filler' plugin enabled. Please import and register the 'Filler' plugin and make sure it is not disabled in the options\");\n    }\n    updateIndex(datasetIndex) {\n        if (this.index !== datasetIndex) $216d2bdc6f281bf6$var$clearStacks(this._cachedMeta);\n        this.index = datasetIndex;\n    }\n    linkScales() {\n        const chart = this.chart;\n        const meta = this._cachedMeta;\n        const dataset = this.getDataset();\n        const chooseId = (axis, x, y, r)=>axis === \"x\" ? x : axis === \"r\" ? r : y;\n        const xid = meta.xAxisID = (0, $c7mKY.v)(dataset.xAxisID, $216d2bdc6f281bf6$var$getFirstScaleId(chart, \"x\"));\n        const yid = meta.yAxisID = (0, $c7mKY.v)(dataset.yAxisID, $216d2bdc6f281bf6$var$getFirstScaleId(chart, \"y\"));\n        const rid = meta.rAxisID = (0, $c7mKY.v)(dataset.rAxisID, $216d2bdc6f281bf6$var$getFirstScaleId(chart, \"r\"));\n        const indexAxis = meta.indexAxis;\n        const iid = meta.iAxisID = chooseId(indexAxis, xid, yid, rid);\n        const vid = meta.vAxisID = chooseId(indexAxis, yid, xid, rid);\n        meta.xScale = this.getScaleForId(xid);\n        meta.yScale = this.getScaleForId(yid);\n        meta.rScale = this.getScaleForId(rid);\n        meta.iScale = this.getScaleForId(iid);\n        meta.vScale = this.getScaleForId(vid);\n    }\n    getDataset() {\n        return this.chart.data.datasets[this.index];\n    }\n    getMeta() {\n        return this.chart.getDatasetMeta(this.index);\n    }\n    getScaleForId(scaleID) {\n        return this.chart.scales[scaleID];\n    }\n    _getOtherScale(scale) {\n        const meta = this._cachedMeta;\n        return scale === meta.iScale ? meta.vScale : meta.iScale;\n    }\n    reset() {\n        this._update(\"reset\");\n    }\n    _destroy() {\n        const meta = this._cachedMeta;\n        if (this._data) (0, $c7mKY.u)(this._data, this);\n        if (meta._stacked) $216d2bdc6f281bf6$var$clearStacks(meta);\n    }\n    _dataCheck() {\n        const dataset = this.getDataset();\n        const data = dataset.data || (dataset.data = []);\n        const _data = this._data;\n        if ((0, $c7mKY.i)(data)) {\n            const meta = this._cachedMeta;\n            this._data = $216d2bdc6f281bf6$var$convertObjectDataToArray(data, meta);\n        } else if (_data !== data) {\n            if (_data) {\n                (0, $c7mKY.u)(_data, this);\n                const meta = this._cachedMeta;\n                $216d2bdc6f281bf6$var$clearStacks(meta);\n                meta._parsed = [];\n            }\n            if (data && Object.isExtensible(data)) (0, $c7mKY.l)(data, this);\n            this._syncList = [];\n            this._data = data;\n        }\n    }\n    addElements() {\n        const meta = this._cachedMeta;\n        this._dataCheck();\n        if (this.datasetElementType) meta.dataset = new this.datasetElementType();\n    }\n    buildOrUpdateElements(resetNewElements) {\n        const meta = this._cachedMeta;\n        const dataset = this.getDataset();\n        let stackChanged = false;\n        this._dataCheck();\n        const oldStacked = meta._stacked;\n        meta._stacked = $216d2bdc6f281bf6$var$isStacked(meta.vScale, meta);\n        if (meta.stack !== dataset.stack) {\n            stackChanged = true;\n            $216d2bdc6f281bf6$var$clearStacks(meta);\n            meta.stack = dataset.stack;\n        }\n        this._resyncElements(resetNewElements);\n        if (stackChanged || oldStacked !== meta._stacked) {\n            $216d2bdc6f281bf6$var$updateStacks(this, meta._parsed);\n            meta._stacked = $216d2bdc6f281bf6$var$isStacked(meta.vScale, meta);\n        }\n    }\n    configure() {\n        const config = this.chart.config;\n        const scopeKeys = config.datasetScopeKeys(this._type);\n        const scopes = config.getOptionScopes(this.getDataset(), scopeKeys, true);\n        this.options = config.createResolver(scopes, this.getContext());\n        this._parsing = this.options.parsing;\n        this._cachedDataOpts = {};\n    }\n    parse(start, count) {\n        const { _cachedMeta: meta, _data: data } = this;\n        const { iScale: iScale, _stacked: _stacked } = meta;\n        const iAxis = iScale.axis;\n        let sorted = start === 0 && count === data.length ? true : meta._sorted;\n        let prev = start > 0 && meta._parsed[start - 1];\n        let i, cur, parsed;\n        if (this._parsing === false) {\n            meta._parsed = data;\n            meta._sorted = true;\n            parsed = data;\n        } else {\n            if ((0, $c7mKY.b)(data[start])) parsed = this.parseArrayData(meta, data, start, count);\n            else if ((0, $c7mKY.i)(data[start])) parsed = this.parseObjectData(meta, data, start, count);\n            else parsed = this.parsePrimitiveData(meta, data, start, count);\n            const isNotInOrderComparedToPrev = ()=>cur[iAxis] === null || prev && cur[iAxis] < prev[iAxis];\n            for(i = 0; i < count; ++i){\n                meta._parsed[i + start] = cur = parsed[i];\n                if (sorted) {\n                    if (isNotInOrderComparedToPrev()) sorted = false;\n                    prev = cur;\n                }\n            }\n            meta._sorted = sorted;\n        }\n        if (_stacked) $216d2bdc6f281bf6$var$updateStacks(this, parsed);\n    }\n    parsePrimitiveData(meta, data, start, count) {\n        const { iScale: iScale, vScale: vScale } = meta;\n        const iAxis = iScale.axis;\n        const vAxis = vScale.axis;\n        const labels = iScale.getLabels();\n        const singleScale = iScale === vScale;\n        const parsed = new Array(count);\n        let i, ilen, index;\n        for(i = 0, ilen = count; i < ilen; ++i){\n            index = i + start;\n            parsed[i] = {\n                [iAxis]: singleScale || iScale.parse(labels[index], index),\n                [vAxis]: vScale.parse(data[index], index)\n            };\n        }\n        return parsed;\n    }\n    parseArrayData(meta, data, start, count) {\n        const { xScale: xScale, yScale: yScale } = meta;\n        const parsed = new Array(count);\n        let i, ilen, index, item;\n        for(i = 0, ilen = count; i < ilen; ++i){\n            index = i + start;\n            item = data[index];\n            parsed[i] = {\n                x: xScale.parse(item[0], index),\n                y: yScale.parse(item[1], index)\n            };\n        }\n        return parsed;\n    }\n    parseObjectData(meta, data, start, count) {\n        const { xScale: xScale, yScale: yScale } = meta;\n        const { xAxisKey: xAxisKey = \"x\", yAxisKey: yAxisKey = \"y\" } = this._parsing;\n        const parsed = new Array(count);\n        let i, ilen, index, item;\n        for(i = 0, ilen = count; i < ilen; ++i){\n            index = i + start;\n            item = data[index];\n            parsed[i] = {\n                x: xScale.parse((0, $c7mKY.f)(item, xAxisKey), index),\n                y: yScale.parse((0, $c7mKY.f)(item, yAxisKey), index)\n            };\n        }\n        return parsed;\n    }\n    getParsed(index) {\n        return this._cachedMeta._parsed[index];\n    }\n    getDataElement(index) {\n        return this._cachedMeta.data[index];\n    }\n    applyStack(scale, parsed, mode) {\n        const chart = this.chart;\n        const meta = this._cachedMeta;\n        const value = parsed[scale.axis];\n        const stack = {\n            keys: $216d2bdc6f281bf6$var$getSortedDatasetIndices(chart, true),\n            values: parsed._stacks[scale.axis]._visualValues\n        };\n        return $216d2bdc6f281bf6$var$applyStack(stack, value, meta.index, {\n            mode: mode\n        });\n    }\n    updateRangeFromParsed(range, scale, parsed, stack) {\n        const parsedValue = parsed[scale.axis];\n        let value = parsedValue === null ? NaN : parsedValue;\n        const values = stack && parsed._stacks[scale.axis];\n        if (stack && values) {\n            stack.values = values;\n            value = $216d2bdc6f281bf6$var$applyStack(stack, parsedValue, this._cachedMeta.index);\n        }\n        range.min = Math.min(range.min, value);\n        range.max = Math.max(range.max, value);\n    }\n    getMinMax(scale, canStack) {\n        const meta = this._cachedMeta;\n        const _parsed = meta._parsed;\n        const sorted = meta._sorted && scale === meta.iScale;\n        const ilen = _parsed.length;\n        const otherScale = this._getOtherScale(scale);\n        const stack = $216d2bdc6f281bf6$var$createStack(canStack, meta, this.chart);\n        const range = {\n            min: Number.POSITIVE_INFINITY,\n            max: Number.NEGATIVE_INFINITY\n        };\n        const { min: otherMin, max: otherMax } = $216d2bdc6f281bf6$var$getUserBounds(otherScale);\n        let i, parsed;\n        function _skip() {\n            parsed = _parsed[i];\n            const otherValue = parsed[otherScale.axis];\n            return !(0, $c7mKY.g)(parsed[scale.axis]) || otherMin > otherValue || otherMax < otherValue;\n        }\n        for(i = 0; i < ilen; ++i){\n            if (_skip()) continue;\n            this.updateRangeFromParsed(range, scale, parsed, stack);\n            if (sorted) break;\n        }\n        if (sorted) for(i = ilen - 1; i >= 0; --i){\n            if (_skip()) continue;\n            this.updateRangeFromParsed(range, scale, parsed, stack);\n            break;\n        }\n        return range;\n    }\n    getAllParsedValues(scale) {\n        const parsed = this._cachedMeta._parsed;\n        const values = [];\n        let i, ilen, value;\n        for(i = 0, ilen = parsed.length; i < ilen; ++i){\n            value = parsed[i][scale.axis];\n            if ((0, $c7mKY.g)(value)) values.push(value);\n        }\n        return values;\n    }\n    getMaxOverflow() {\n        return false;\n    }\n    getLabelAndValue(index) {\n        const meta = this._cachedMeta;\n        const iScale = meta.iScale;\n        const vScale = meta.vScale;\n        const parsed = this.getParsed(index);\n        return {\n            label: iScale ? \"\" + iScale.getLabelForValue(parsed[iScale.axis]) : \"\",\n            value: vScale ? \"\" + vScale.getLabelForValue(parsed[vScale.axis]) : \"\"\n        };\n    }\n    _update(mode) {\n        const meta = this._cachedMeta;\n        this.update(mode || \"default\");\n        meta._clip = $216d2bdc6f281bf6$var$toClip((0, $c7mKY.v)(this.options.clip, $216d2bdc6f281bf6$var$defaultClip(meta.xScale, meta.yScale, this.getMaxOverflow())));\n    }\n    update(mode) {}\n    draw() {\n        const ctx = this._ctx;\n        const chart = this.chart;\n        const meta = this._cachedMeta;\n        const elements = meta.data || [];\n        const area = chart.chartArea;\n        const active = [];\n        const start = this._drawStart || 0;\n        const count = this._drawCount || elements.length - start;\n        const drawActiveElementsOnTop = this.options.drawActiveElementsOnTop;\n        let i;\n        if (meta.dataset) meta.dataset.draw(ctx, area, start, count);\n        for(i = start; i < start + count; ++i){\n            const element = elements[i];\n            if (element.hidden) continue;\n            if (element.active && drawActiveElementsOnTop) active.push(element);\n            else element.draw(ctx, area);\n        }\n        for(i = 0; i < active.length; ++i)active[i].draw(ctx, area);\n    }\n    getStyle(index, active) {\n        const mode = active ? \"active\" : \"default\";\n        return index === undefined && this._cachedMeta.dataset ? this.resolveDatasetElementOptions(mode) : this.resolveDataElementOptions(index || 0, mode);\n    }\n    getContext(index, active, mode) {\n        const dataset = this.getDataset();\n        let context;\n        if (index >= 0 && index < this._cachedMeta.data.length) {\n            const element = this._cachedMeta.data[index];\n            context = element.$context || (element.$context = $216d2bdc6f281bf6$var$createDataContext(this.getContext(), index, element));\n            context.parsed = this.getParsed(index);\n            context.raw = dataset.data[index];\n            context.index = context.dataIndex = index;\n        } else {\n            context = this.$context || (this.$context = $216d2bdc6f281bf6$var$createDatasetContext(this.chart.getContext(), this.index));\n            context.dataset = dataset;\n            context.index = context.datasetIndex = this.index;\n        }\n        context.active = !!active;\n        context.mode = mode;\n        return context;\n    }\n    resolveDatasetElementOptions(mode) {\n        return this._resolveElementOptions(this.datasetElementType.id, mode);\n    }\n    resolveDataElementOptions(index, mode) {\n        return this._resolveElementOptions(this.dataElementType.id, mode, index);\n    }\n    _resolveElementOptions(elementType, mode = \"default\", index) {\n        const active = mode === \"active\";\n        const cache = this._cachedDataOpts;\n        const cacheKey = elementType + \"-\" + mode;\n        const cached = cache[cacheKey];\n        const sharing = this.enableOptionSharing && (0, $c7mKY.h)(index);\n        if (cached) return $216d2bdc6f281bf6$var$cloneIfNotShared(cached, sharing);\n        const config = this.chart.config;\n        const scopeKeys = config.datasetElementScopeKeys(this._type, elementType);\n        const prefixes = active ? [\n            `${elementType}Hover`,\n            \"hover\",\n            elementType,\n            \"\"\n        ] : [\n            elementType,\n            \"\"\n        ];\n        const scopes = config.getOptionScopes(this.getDataset(), scopeKeys);\n        const names = Object.keys((0, $c7mKY.d).elements[elementType]);\n        const context = ()=>this.getContext(index, active, mode);\n        const values = config.resolveNamedOptions(scopes, names, context, prefixes);\n        if (values.$shared) {\n            values.$shared = sharing;\n            cache[cacheKey] = Object.freeze($216d2bdc6f281bf6$var$cloneIfNotShared(values, sharing));\n        }\n        return values;\n    }\n    _resolveAnimations(index, transition, active) {\n        const chart = this.chart;\n        const cache = this._cachedDataOpts;\n        const cacheKey = `animation-${transition}`;\n        const cached = cache[cacheKey];\n        if (cached) return cached;\n        let options;\n        if (chart.options.animation !== false) {\n            const config = this.chart.config;\n            const scopeKeys = config.datasetAnimationScopeKeys(this._type, transition);\n            const scopes = config.getOptionScopes(this.getDataset(), scopeKeys);\n            options = config.createResolver(scopes, this.getContext(index, active, transition));\n        }\n        const animations = new $216d2bdc6f281bf6$export$8ab227dac26677d(chart, options && options.animations);\n        if (options && options._cacheable) cache[cacheKey] = Object.freeze(animations);\n        return animations;\n    }\n    getSharedOptions(options) {\n        if (!options.$shared) return;\n        return this._sharedOptions || (this._sharedOptions = Object.assign({}, options));\n    }\n    includeOptions(mode, sharedOptions) {\n        return !sharedOptions || $216d2bdc6f281bf6$var$isDirectUpdateMode(mode) || this.chart._animationsDisabled;\n    }\n    _getSharedOptions(start, mode) {\n        const firstOpts = this.resolveDataElementOptions(start, mode);\n        const previouslySharedOptions = this._sharedOptions;\n        const sharedOptions = this.getSharedOptions(firstOpts);\n        const includeOptions = this.includeOptions(mode, sharedOptions) || sharedOptions !== previouslySharedOptions;\n        this.updateSharedOptions(sharedOptions, mode, firstOpts);\n        return {\n            sharedOptions: sharedOptions,\n            includeOptions: includeOptions\n        };\n    }\n    updateElement(element, index, properties, mode) {\n        if ($216d2bdc6f281bf6$var$isDirectUpdateMode(mode)) Object.assign(element, properties);\n        else this._resolveAnimations(index, mode).update(element, properties);\n    }\n    updateSharedOptions(sharedOptions, mode, newOptions) {\n        if (sharedOptions && !$216d2bdc6f281bf6$var$isDirectUpdateMode(mode)) this._resolveAnimations(undefined, mode).update(sharedOptions, newOptions);\n    }\n    _setStyle(element, index, mode, active) {\n        element.active = active;\n        const options = this.getStyle(index, active);\n        this._resolveAnimations(index, mode, active).update(element, {\n            options: !active && this.getSharedOptions(options) || options\n        });\n    }\n    removeHoverStyle(element, datasetIndex, index) {\n        this._setStyle(element, index, \"active\", false);\n    }\n    setHoverStyle(element, datasetIndex, index) {\n        this._setStyle(element, index, \"active\", true);\n    }\n    _removeDatasetHoverStyle() {\n        const element = this._cachedMeta.dataset;\n        if (element) this._setStyle(element, undefined, \"active\", false);\n    }\n    _setDatasetHoverStyle() {\n        const element = this._cachedMeta.dataset;\n        if (element) this._setStyle(element, undefined, \"active\", true);\n    }\n    _resyncElements(resetNewElements) {\n        const data = this._data;\n        const elements = this._cachedMeta.data;\n        for (const [method, arg1, arg2] of this._syncList)this[method](arg1, arg2);\n        this._syncList = [];\n        const numMeta = elements.length;\n        const numData = data.length;\n        const count = Math.min(numData, numMeta);\n        if (count) this.parse(0, count);\n        if (numData > numMeta) this._insertElements(numMeta, numData - numMeta, resetNewElements);\n        else if (numData < numMeta) this._removeElements(numData, numMeta - numData);\n    }\n    _insertElements(start, count, resetNewElements = true) {\n        const meta = this._cachedMeta;\n        const data = meta.data;\n        const end = start + count;\n        let i;\n        const move = (arr)=>{\n            arr.length += count;\n            for(i = arr.length - 1; i >= end; i--)arr[i] = arr[i - count];\n        };\n        move(data);\n        for(i = start; i < end; ++i)data[i] = new this.dataElementType();\n        if (this._parsing) move(meta._parsed);\n        this.parse(start, count);\n        if (resetNewElements) this.updateElements(data, start, count, \"reset\");\n    }\n    updateElements(element, start, count, mode) {}\n    _removeElements(start, count) {\n        const meta = this._cachedMeta;\n        if (this._parsing) {\n            const removed = meta._parsed.splice(start, count);\n            if (meta._stacked) $216d2bdc6f281bf6$var$clearStacks(meta, removed);\n        }\n        meta.data.splice(start, count);\n    }\n    _sync(args) {\n        if (this._parsing) this._syncList.push(args);\n        else {\n            const [method, arg1, arg2] = args;\n            this[method](arg1, arg2);\n        }\n        this.chart._dataChanges.push([\n            this.index,\n            ...args\n        ]);\n    }\n    _onDataPush() {\n        const count = arguments.length;\n        this._sync([\n            \"_insertElements\",\n            this.getDataset().data.length - count,\n            count\n        ]);\n    }\n    _onDataPop() {\n        this._sync([\n            \"_removeElements\",\n            this._cachedMeta.data.length - 1,\n            1\n        ]);\n    }\n    _onDataShift() {\n        this._sync([\n            \"_removeElements\",\n            0,\n            1\n        ]);\n    }\n    _onDataSplice(start, count) {\n        if (count) this._sync([\n            \"_removeElements\",\n            start,\n            count\n        ]);\n        const newCount = arguments.length - 2;\n        if (newCount) this._sync([\n            \"_insertElements\",\n            start,\n            newCount\n        ]);\n    }\n    _onDataUnshift() {\n        this._sync([\n            \"_insertElements\",\n            0,\n            arguments.length\n        ]);\n    }\n}\nfunction $216d2bdc6f281bf6$var$getAllScaleValues(scale, type) {\n    if (!scale._cache.$bar) {\n        const visibleMetas = scale.getMatchingVisibleMetas(type);\n        let values = [];\n        for(let i = 0, ilen = visibleMetas.length; i < ilen; i++)values = values.concat(visibleMetas[i].controller.getAllParsedValues(scale));\n        scale._cache.$bar = (0, $c7mKY._)(values.sort((a, b)=>a - b));\n    }\n    return scale._cache.$bar;\n}\nfunction $216d2bdc6f281bf6$var$computeMinSampleSize(meta) {\n    const scale = meta.iScale;\n    const values = $216d2bdc6f281bf6$var$getAllScaleValues(scale, meta.type);\n    let min = scale._length;\n    let i, ilen, curr, prev;\n    const updateMinAndPrev = ()=>{\n        if (curr === 32767 || curr === -32768) return;\n        if ((0, $c7mKY.h)(prev)) min = Math.min(min, Math.abs(curr - prev) || min);\n        prev = curr;\n    };\n    for(i = 0, ilen = values.length; i < ilen; ++i){\n        curr = scale.getPixelForValue(values[i]);\n        updateMinAndPrev();\n    }\n    prev = undefined;\n    for(i = 0, ilen = scale.ticks.length; i < ilen; ++i){\n        curr = scale.getPixelForTick(i);\n        updateMinAndPrev();\n    }\n    return min;\n}\nfunction $216d2bdc6f281bf6$var$computeFitCategoryTraits(index, ruler, options, stackCount) {\n    const thickness = options.barThickness;\n    let size, ratio;\n    if ((0, $c7mKY.k)(thickness)) {\n        size = ruler.min * options.categoryPercentage;\n        ratio = options.barPercentage;\n    } else {\n        size = thickness * stackCount;\n        ratio = 1;\n    }\n    return {\n        chunk: size / stackCount,\n        ratio: ratio,\n        start: ruler.pixels[index] - size / 2\n    };\n}\nfunction $216d2bdc6f281bf6$var$computeFlexCategoryTraits(index, ruler, options, stackCount) {\n    const pixels = ruler.pixels;\n    const curr = pixels[index];\n    let prev = index > 0 ? pixels[index - 1] : null;\n    let next = index < pixels.length - 1 ? pixels[index + 1] : null;\n    const percent = options.categoryPercentage;\n    if (prev === null) prev = curr - (next === null ? ruler.end - ruler.start : next - curr);\n    if (next === null) next = curr + curr - prev;\n    const start = curr - (curr - Math.min(prev, next)) / 2 * percent;\n    const size = Math.abs(next - prev) / 2 * percent;\n    return {\n        chunk: size / stackCount,\n        ratio: options.barPercentage,\n        start: start\n    };\n}\nfunction $216d2bdc6f281bf6$var$parseFloatBar(entry, item, vScale, i) {\n    const startValue = vScale.parse(entry[0], i);\n    const endValue = vScale.parse(entry[1], i);\n    const min = Math.min(startValue, endValue);\n    const max = Math.max(startValue, endValue);\n    let barStart = min;\n    let barEnd = max;\n    if (Math.abs(min) > Math.abs(max)) {\n        barStart = max;\n        barEnd = min;\n    }\n    item[vScale.axis] = barEnd;\n    item._custom = {\n        barStart: barStart,\n        barEnd: barEnd,\n        start: startValue,\n        end: endValue,\n        min: min,\n        max: max\n    };\n}\nfunction $216d2bdc6f281bf6$var$parseValue(entry, item, vScale, i) {\n    if ((0, $c7mKY.b)(entry)) $216d2bdc6f281bf6$var$parseFloatBar(entry, item, vScale, i);\n    else item[vScale.axis] = vScale.parse(entry, i);\n    return item;\n}\nfunction $216d2bdc6f281bf6$var$parseArrayOrPrimitive(meta, data, start, count) {\n    const iScale = meta.iScale;\n    const vScale = meta.vScale;\n    const labels = iScale.getLabels();\n    const singleScale = iScale === vScale;\n    const parsed = [];\n    let i, ilen, item, entry;\n    for(i = start, ilen = start + count; i < ilen; ++i){\n        entry = data[i];\n        item = {};\n        item[iScale.axis] = singleScale || iScale.parse(labels[i], i);\n        parsed.push($216d2bdc6f281bf6$var$parseValue(entry, item, vScale, i));\n    }\n    return parsed;\n}\nfunction $216d2bdc6f281bf6$var$isFloatBar(custom) {\n    return custom && custom.barStart !== undefined && custom.barEnd !== undefined;\n}\nfunction $216d2bdc6f281bf6$var$barSign(size, vScale, actualBase) {\n    if (size !== 0) return (0, $c7mKY.s)(size);\n    return (vScale.isHorizontal() ? 1 : -1) * (vScale.min >= actualBase ? 1 : -1);\n}\nfunction $216d2bdc6f281bf6$var$borderProps(properties) {\n    let reverse, start, end, top, bottom;\n    if (properties.horizontal) {\n        reverse = properties.base > properties.x;\n        start = \"left\";\n        end = \"right\";\n    } else {\n        reverse = properties.base < properties.y;\n        start = \"bottom\";\n        end = \"top\";\n    }\n    if (reverse) {\n        top = \"end\";\n        bottom = \"start\";\n    } else {\n        top = \"start\";\n        bottom = \"end\";\n    }\n    return {\n        start: start,\n        end: end,\n        reverse: reverse,\n        top: top,\n        bottom: bottom\n    };\n}\nfunction $216d2bdc6f281bf6$var$setBorderSkipped(properties, options, stack, index) {\n    let edge = options.borderSkipped;\n    const res = {};\n    if (!edge) {\n        properties.borderSkipped = res;\n        return;\n    }\n    if (edge === true) {\n        properties.borderSkipped = {\n            top: true,\n            right: true,\n            bottom: true,\n            left: true\n        };\n        return;\n    }\n    const { start: start, end: end, reverse: reverse, top: top, bottom: bottom } = $216d2bdc6f281bf6$var$borderProps(properties);\n    if (edge === \"middle\" && stack) {\n        properties.enableBorderRadius = true;\n        if ((stack._top || 0) === index) edge = top;\n        else if ((stack._bottom || 0) === index) edge = bottom;\n        else {\n            res[$216d2bdc6f281bf6$var$parseEdge(bottom, start, end, reverse)] = true;\n            edge = top;\n        }\n    }\n    res[$216d2bdc6f281bf6$var$parseEdge(edge, start, end, reverse)] = true;\n    properties.borderSkipped = res;\n}\nfunction $216d2bdc6f281bf6$var$parseEdge(edge, a, b, reverse) {\n    if (reverse) {\n        edge = $216d2bdc6f281bf6$var$swap(edge, a, b);\n        edge = $216d2bdc6f281bf6$var$startEnd(edge, b, a);\n    } else edge = $216d2bdc6f281bf6$var$startEnd(edge, a, b);\n    return edge;\n}\nfunction $216d2bdc6f281bf6$var$swap(orig, v1, v2) {\n    return orig === v1 ? v2 : orig === v2 ? v1 : orig;\n}\nfunction $216d2bdc6f281bf6$var$startEnd(v, start, end) {\n    return v === \"start\" ? start : v === \"end\" ? end : v;\n}\nfunction $216d2bdc6f281bf6$var$setInflateAmount(properties, { inflateAmount: inflateAmount }, ratio) {\n    properties.inflateAmount = inflateAmount === \"auto\" ? ratio === 1 ? 0.33 : 0 : inflateAmount;\n}\nclass $216d2bdc6f281bf6$export$e97d5dc64e999004 extends $216d2bdc6f281bf6$export$75572ec5c55b4048 {\n    static id = \"bar\";\n    static defaults = {\n        datasetElementType: false,\n        dataElementType: \"bar\",\n        categoryPercentage: 0.8,\n        barPercentage: 0.9,\n        grouped: true,\n        animations: {\n            numbers: {\n                type: \"number\",\n                properties: [\n                    \"x\",\n                    \"y\",\n                    \"base\",\n                    \"width\",\n                    \"height\"\n                ]\n            }\n        }\n    };\n    static overrides = {\n        scales: {\n            _index_: {\n                type: \"category\",\n                offset: true,\n                grid: {\n                    offset: true\n                }\n            },\n            _value_: {\n                type: \"linear\",\n                beginAtZero: true\n            }\n        }\n    };\n    parsePrimitiveData(meta, data, start, count) {\n        return $216d2bdc6f281bf6$var$parseArrayOrPrimitive(meta, data, start, count);\n    }\n    parseArrayData(meta, data, start, count) {\n        return $216d2bdc6f281bf6$var$parseArrayOrPrimitive(meta, data, start, count);\n    }\n    parseObjectData(meta, data, start, count) {\n        const { iScale: iScale, vScale: vScale } = meta;\n        const { xAxisKey: xAxisKey = \"x\", yAxisKey: yAxisKey = \"y\" } = this._parsing;\n        const iAxisKey = iScale.axis === \"x\" ? xAxisKey : yAxisKey;\n        const vAxisKey = vScale.axis === \"x\" ? xAxisKey : yAxisKey;\n        const parsed = [];\n        let i, ilen, item, obj;\n        for(i = start, ilen = start + count; i < ilen; ++i){\n            obj = data[i];\n            item = {};\n            item[iScale.axis] = iScale.parse((0, $c7mKY.f)(obj, iAxisKey), i);\n            parsed.push($216d2bdc6f281bf6$var$parseValue((0, $c7mKY.f)(obj, vAxisKey), item, vScale, i));\n        }\n        return parsed;\n    }\n    updateRangeFromParsed(range, scale, parsed, stack) {\n        super.updateRangeFromParsed(range, scale, parsed, stack);\n        const custom = parsed._custom;\n        if (custom && scale === this._cachedMeta.vScale) {\n            range.min = Math.min(range.min, custom.min);\n            range.max = Math.max(range.max, custom.max);\n        }\n    }\n    getMaxOverflow() {\n        return 0;\n    }\n    getLabelAndValue(index) {\n        const meta = this._cachedMeta;\n        const { iScale: iScale, vScale: vScale } = meta;\n        const parsed = this.getParsed(index);\n        const custom = parsed._custom;\n        const value = $216d2bdc6f281bf6$var$isFloatBar(custom) ? \"[\" + custom.start + \", \" + custom.end + \"]\" : \"\" + vScale.getLabelForValue(parsed[vScale.axis]);\n        return {\n            label: \"\" + iScale.getLabelForValue(parsed[iScale.axis]),\n            value: value\n        };\n    }\n    initialize() {\n        this.enableOptionSharing = true;\n        super.initialize();\n        const meta = this._cachedMeta;\n        meta.stack = this.getDataset().stack;\n    }\n    update(mode) {\n        const meta = this._cachedMeta;\n        this.updateElements(meta.data, 0, meta.data.length, mode);\n    }\n    updateElements(bars, start, count, mode) {\n        const reset = mode === \"reset\";\n        const { index: index, _cachedMeta: { vScale: vScale } } = this;\n        const base = vScale.getBasePixel();\n        const horizontal = vScale.isHorizontal();\n        const ruler = this._getRuler();\n        const { sharedOptions: sharedOptions, includeOptions: includeOptions } = this._getSharedOptions(start, mode);\n        for(let i = start; i < start + count; i++){\n            const parsed = this.getParsed(i);\n            const vpixels = reset || (0, $c7mKY.k)(parsed[vScale.axis]) ? {\n                base: base,\n                head: base\n            } : this._calculateBarValuePixels(i);\n            const ipixels = this._calculateBarIndexPixels(i, ruler);\n            const stack = (parsed._stacks || {})[vScale.axis];\n            const properties = {\n                horizontal: horizontal,\n                base: vpixels.base,\n                enableBorderRadius: !stack || $216d2bdc6f281bf6$var$isFloatBar(parsed._custom) || index === stack._top || index === stack._bottom,\n                x: horizontal ? vpixels.head : ipixels.center,\n                y: horizontal ? ipixels.center : vpixels.head,\n                height: horizontal ? ipixels.size : Math.abs(vpixels.size),\n                width: horizontal ? Math.abs(vpixels.size) : ipixels.size\n            };\n            if (includeOptions) properties.options = sharedOptions || this.resolveDataElementOptions(i, bars[i].active ? \"active\" : mode);\n            const options = properties.options || bars[i].options;\n            $216d2bdc6f281bf6$var$setBorderSkipped(properties, options, stack, index);\n            $216d2bdc6f281bf6$var$setInflateAmount(properties, options, ruler.ratio);\n            this.updateElement(bars[i], i, properties, mode);\n        }\n    }\n    _getStacks(last, dataIndex) {\n        const { iScale: iScale } = this._cachedMeta;\n        const metasets = iScale.getMatchingVisibleMetas(this._type).filter((meta)=>meta.controller.options.grouped);\n        const stacked = iScale.options.stacked;\n        const stacks = [];\n        const currentParsed = this._cachedMeta.controller.getParsed(dataIndex);\n        const iScaleValue = currentParsed && currentParsed[iScale.axis];\n        const skipNull = (meta)=>{\n            const parsed = meta._parsed.find((item)=>item[iScale.axis] === iScaleValue);\n            const val = parsed && parsed[meta.vScale.axis];\n            if ((0, $c7mKY.k)(val) || isNaN(val)) return true;\n        };\n        for (const meta of metasets){\n            if (dataIndex !== undefined && skipNull(meta)) continue;\n            if (stacked === false || stacks.indexOf(meta.stack) === -1 || stacked === undefined && meta.stack === undefined) stacks.push(meta.stack);\n            if (meta.index === last) break;\n        }\n        if (!stacks.length) stacks.push(undefined);\n        return stacks;\n    }\n    _getStackCount(index) {\n        return this._getStacks(undefined, index).length;\n    }\n    _getStackIndex(datasetIndex, name, dataIndex) {\n        const stacks = this._getStacks(datasetIndex, dataIndex);\n        const index = name !== undefined ? stacks.indexOf(name) : -1;\n        return index === -1 ? stacks.length - 1 : index;\n    }\n    _getRuler() {\n        const opts = this.options;\n        const meta = this._cachedMeta;\n        const iScale = meta.iScale;\n        const pixels = [];\n        let i, ilen;\n        for(i = 0, ilen = meta.data.length; i < ilen; ++i)pixels.push(iScale.getPixelForValue(this.getParsed(i)[iScale.axis], i));\n        const barThickness = opts.barThickness;\n        const min = barThickness || $216d2bdc6f281bf6$var$computeMinSampleSize(meta);\n        return {\n            min: min,\n            pixels: pixels,\n            start: iScale._startPixel,\n            end: iScale._endPixel,\n            stackCount: this._getStackCount(),\n            scale: iScale,\n            grouped: opts.grouped,\n            ratio: barThickness ? 1 : opts.categoryPercentage * opts.barPercentage\n        };\n    }\n    _calculateBarValuePixels(index) {\n        const { _cachedMeta: { vScale: vScale, _stacked: _stacked, index: datasetIndex }, options: { base: baseValue, minBarLength: minBarLength } } = this;\n        const actualBase = baseValue || 0;\n        const parsed = this.getParsed(index);\n        const custom = parsed._custom;\n        const floating = $216d2bdc6f281bf6$var$isFloatBar(custom);\n        let value = parsed[vScale.axis];\n        let start = 0;\n        let length = _stacked ? this.applyStack(vScale, parsed, _stacked) : value;\n        let head, size;\n        if (length !== value) {\n            start = length - value;\n            length = value;\n        }\n        if (floating) {\n            value = custom.barStart;\n            length = custom.barEnd - custom.barStart;\n            if (value !== 0 && (0, $c7mKY.s)(value) !== (0, $c7mKY.s)(custom.barEnd)) start = 0;\n            start += value;\n        }\n        const startValue = !(0, $c7mKY.k)(baseValue) && !floating ? baseValue : start;\n        let base = vScale.getPixelForValue(startValue);\n        if (this.chart.getDataVisibility(index)) head = vScale.getPixelForValue(start + length);\n        else head = base;\n        size = head - base;\n        if (Math.abs(size) < minBarLength) {\n            size = $216d2bdc6f281bf6$var$barSign(size, vScale, actualBase) * minBarLength;\n            if (value === actualBase) base -= size / 2;\n            const startPixel = vScale.getPixelForDecimal(0);\n            const endPixel = vScale.getPixelForDecimal(1);\n            const min = Math.min(startPixel, endPixel);\n            const max = Math.max(startPixel, endPixel);\n            base = Math.max(Math.min(base, max), min);\n            head = base + size;\n            if (_stacked && !floating) parsed._stacks[vScale.axis]._visualValues[datasetIndex] = vScale.getValueForPixel(head) - vScale.getValueForPixel(base);\n        }\n        if (base === vScale.getPixelForValue(actualBase)) {\n            const halfGrid = (0, $c7mKY.s)(size) * vScale.getLineWidthForValue(actualBase) / 2;\n            base += halfGrid;\n            size -= halfGrid;\n        }\n        return {\n            size: size,\n            base: base,\n            head: head,\n            center: head + size / 2\n        };\n    }\n    _calculateBarIndexPixels(index, ruler) {\n        const scale = ruler.scale;\n        const options = this.options;\n        const skipNull = options.skipNull;\n        const maxBarThickness = (0, $c7mKY.v)(options.maxBarThickness, Infinity);\n        let center, size;\n        if (ruler.grouped) {\n            const stackCount = skipNull ? this._getStackCount(index) : ruler.stackCount;\n            const range = options.barThickness === \"flex\" ? $216d2bdc6f281bf6$var$computeFlexCategoryTraits(index, ruler, options, stackCount) : $216d2bdc6f281bf6$var$computeFitCategoryTraits(index, ruler, options, stackCount);\n            const stackIndex = this._getStackIndex(this.index, this._cachedMeta.stack, skipNull ? index : undefined);\n            center = range.start + range.chunk * stackIndex + range.chunk / 2;\n            size = Math.min(maxBarThickness, range.chunk * range.ratio);\n        } else {\n            center = scale.getPixelForValue(this.getParsed(index)[scale.axis], index);\n            size = Math.min(maxBarThickness, ruler.min * ruler.ratio);\n        }\n        return {\n            base: center - size / 2,\n            head: center + size / 2,\n            center: center,\n            size: size\n        };\n    }\n    draw() {\n        const meta = this._cachedMeta;\n        const vScale = meta.vScale;\n        const rects = meta.data;\n        const ilen = rects.length;\n        let i = 0;\n        for(; i < ilen; ++i)if (this.getParsed(i)[vScale.axis] !== null && !rects[i].hidden) rects[i].draw(this._ctx);\n    }\n}\nclass $216d2bdc6f281bf6$export$19b5c4773f17abe extends $216d2bdc6f281bf6$export$75572ec5c55b4048 {\n    static id = \"bubble\";\n    static defaults = {\n        datasetElementType: false,\n        dataElementType: \"point\",\n        animations: {\n            numbers: {\n                type: \"number\",\n                properties: [\n                    \"x\",\n                    \"y\",\n                    \"borderWidth\",\n                    \"radius\"\n                ]\n            }\n        }\n    };\n    static overrides = {\n        scales: {\n            x: {\n                type: \"linear\"\n            },\n            y: {\n                type: \"linear\"\n            }\n        }\n    };\n    initialize() {\n        this.enableOptionSharing = true;\n        super.initialize();\n    }\n    parsePrimitiveData(meta, data, start, count) {\n        const parsed = super.parsePrimitiveData(meta, data, start, count);\n        for(let i = 0; i < parsed.length; i++)parsed[i]._custom = this.resolveDataElementOptions(i + start).radius;\n        return parsed;\n    }\n    parseArrayData(meta, data, start, count) {\n        const parsed = super.parseArrayData(meta, data, start, count);\n        for(let i = 0; i < parsed.length; i++){\n            const item = data[start + i];\n            parsed[i]._custom = (0, $c7mKY.v)(item[2], this.resolveDataElementOptions(i + start).radius);\n        }\n        return parsed;\n    }\n    parseObjectData(meta, data, start, count) {\n        const parsed = super.parseObjectData(meta, data, start, count);\n        for(let i = 0; i < parsed.length; i++){\n            const item = data[start + i];\n            parsed[i]._custom = (0, $c7mKY.v)(item && item.r && +item.r, this.resolveDataElementOptions(i + start).radius);\n        }\n        return parsed;\n    }\n    getMaxOverflow() {\n        const data = this._cachedMeta.data;\n        let max = 0;\n        for(let i = data.length - 1; i >= 0; --i)max = Math.max(max, data[i].size(this.resolveDataElementOptions(i)) / 2);\n        return max > 0 && max;\n    }\n    getLabelAndValue(index) {\n        const meta = this._cachedMeta;\n        const labels = this.chart.data.labels || [];\n        const { xScale: xScale, yScale: yScale } = meta;\n        const parsed = this.getParsed(index);\n        const x = xScale.getLabelForValue(parsed.x);\n        const y = yScale.getLabelForValue(parsed.y);\n        const r = parsed._custom;\n        return {\n            label: labels[index] || \"\",\n            value: \"(\" + x + \", \" + y + (r ? \", \" + r : \"\") + \")\"\n        };\n    }\n    update(mode) {\n        const points = this._cachedMeta.data;\n        this.updateElements(points, 0, points.length, mode);\n    }\n    updateElements(points, start, count, mode) {\n        const reset = mode === \"reset\";\n        const { iScale: iScale, vScale: vScale } = this._cachedMeta;\n        const { sharedOptions: sharedOptions, includeOptions: includeOptions } = this._getSharedOptions(start, mode);\n        const iAxis = iScale.axis;\n        const vAxis = vScale.axis;\n        for(let i = start; i < start + count; i++){\n            const point = points[i];\n            const parsed = !reset && this.getParsed(i);\n            const properties = {};\n            const iPixel = properties[iAxis] = reset ? iScale.getPixelForDecimal(0.5) : iScale.getPixelForValue(parsed[iAxis]);\n            const vPixel = properties[vAxis] = reset ? vScale.getBasePixel() : vScale.getPixelForValue(parsed[vAxis]);\n            properties.skip = isNaN(iPixel) || isNaN(vPixel);\n            if (includeOptions) {\n                properties.options = sharedOptions || this.resolveDataElementOptions(i, point.active ? \"active\" : mode);\n                if (reset) properties.options.radius = 0;\n            }\n            this.updateElement(point, i, properties, mode);\n        }\n    }\n    resolveDataElementOptions(index, mode) {\n        const parsed = this.getParsed(index);\n        let values = super.resolveDataElementOptions(index, mode);\n        if (values.$shared) values = Object.assign({}, values, {\n            $shared: false\n        });\n        const radius = values.radius;\n        if (mode !== \"active\") values.radius = 0;\n        values.radius += (0, $c7mKY.v)(parsed && parsed._custom, radius);\n        return values;\n    }\n}\nfunction $216d2bdc6f281bf6$var$getRatioAndOffset(rotation, circumference, cutout) {\n    let ratioX = 1;\n    let ratioY = 1;\n    let offsetX = 0;\n    let offsetY = 0;\n    if (circumference < (0, $c7mKY.T)) {\n        const startAngle = rotation;\n        const endAngle = startAngle + circumference;\n        const startX = Math.cos(startAngle);\n        const startY = Math.sin(startAngle);\n        const endX = Math.cos(endAngle);\n        const endY = Math.sin(endAngle);\n        const calcMax = (angle, a, b)=>(0, $c7mKY.p)(angle, startAngle, endAngle, true) ? 1 : Math.max(a, a * cutout, b, b * cutout);\n        const calcMin = (angle, a, b)=>(0, $c7mKY.p)(angle, startAngle, endAngle, true) ? -1 : Math.min(a, a * cutout, b, b * cutout);\n        const maxX = calcMax(0, startX, endX);\n        const maxY = calcMax((0, $c7mKY.H), startY, endY);\n        const minX = calcMin((0, $c7mKY.P), startX, endX);\n        const minY = calcMin((0, $c7mKY.P) + (0, $c7mKY.H), startY, endY);\n        ratioX = (maxX - minX) / 2;\n        ratioY = (maxY - minY) / 2;\n        offsetX = -(maxX + minX) / 2;\n        offsetY = -(maxY + minY) / 2;\n    }\n    return {\n        ratioX: ratioX,\n        ratioY: ratioY,\n        offsetX: offsetX,\n        offsetY: offsetY\n    };\n}\nclass $216d2bdc6f281bf6$export$e04603e7d8b77172 extends $216d2bdc6f281bf6$export$75572ec5c55b4048 {\n    static id = \"doughnut\";\n    static defaults = {\n        datasetElementType: false,\n        dataElementType: \"arc\",\n        animation: {\n            animateRotate: true,\n            animateScale: false\n        },\n        animations: {\n            numbers: {\n                type: \"number\",\n                properties: [\n                    \"circumference\",\n                    \"endAngle\",\n                    \"innerRadius\",\n                    \"outerRadius\",\n                    \"startAngle\",\n                    \"x\",\n                    \"y\",\n                    \"offset\",\n                    \"borderWidth\",\n                    \"spacing\"\n                ]\n            }\n        },\n        cutout: \"50%\",\n        rotation: 0,\n        circumference: 360,\n        radius: \"100%\",\n        spacing: 0,\n        indexAxis: \"r\"\n    };\n    static descriptors = {\n        _scriptable: (name)=>name !== \"spacing\",\n        _indexable: (name)=>name !== \"spacing\" && !name.startsWith(\"borderDash\") && !name.startsWith(\"hoverBorderDash\")\n    };\n    static overrides = {\n        aspectRatio: 1,\n        plugins: {\n            legend: {\n                labels: {\n                    generateLabels (chart) {\n                        const data = chart.data;\n                        if (data.labels.length && data.datasets.length) {\n                            const { labels: { pointStyle: pointStyle, color: color } } = chart.legend.options;\n                            return data.labels.map((label, i)=>{\n                                const meta = chart.getDatasetMeta(0);\n                                const style = meta.controller.getStyle(i);\n                                return {\n                                    text: label,\n                                    fillStyle: style.backgroundColor,\n                                    strokeStyle: style.borderColor,\n                                    fontColor: color,\n                                    lineWidth: style.borderWidth,\n                                    pointStyle: pointStyle,\n                                    hidden: !chart.getDataVisibility(i),\n                                    index: i\n                                };\n                            });\n                        }\n                        return [];\n                    }\n                },\n                onClick (e, legendItem, legend) {\n                    legend.chart.toggleDataVisibility(legendItem.index);\n                    legend.chart.update();\n                }\n            }\n        }\n    };\n    constructor(chart, datasetIndex){\n        super(chart, datasetIndex);\n        this.enableOptionSharing = true;\n        this.innerRadius = undefined;\n        this.outerRadius = undefined;\n        this.offsetX = undefined;\n        this.offsetY = undefined;\n    }\n    linkScales() {}\n    parse(start, count) {\n        const data = this.getDataset().data;\n        const meta = this._cachedMeta;\n        if (this._parsing === false) meta._parsed = data;\n        else {\n            let getter = (i)=>+data[i];\n            if ((0, $c7mKY.i)(data[start])) {\n                const { key: key = \"value\" } = this._parsing;\n                getter = (i)=>+(0, $c7mKY.f)(data[i], key);\n            }\n            let i, ilen;\n            for(i = start, ilen = start + count; i < ilen; ++i)meta._parsed[i] = getter(i);\n        }\n    }\n    _getRotation() {\n        return (0, $c7mKY.t)(this.options.rotation - 90);\n    }\n    _getCircumference() {\n        return (0, $c7mKY.t)(this.options.circumference);\n    }\n    _getRotationExtents() {\n        let min = (0, $c7mKY.T);\n        let max = -(0, $c7mKY.T);\n        for(let i = 0; i < this.chart.data.datasets.length; ++i)if (this.chart.isDatasetVisible(i) && this.chart.getDatasetMeta(i).type === this._type) {\n            const controller = this.chart.getDatasetMeta(i).controller;\n            const rotation = controller._getRotation();\n            const circumference = controller._getCircumference();\n            min = Math.min(min, rotation);\n            max = Math.max(max, rotation + circumference);\n        }\n        return {\n            rotation: min,\n            circumference: max - min\n        };\n    }\n    update(mode) {\n        const chart = this.chart;\n        const { chartArea: chartArea } = chart;\n        const meta = this._cachedMeta;\n        const arcs = meta.data;\n        const spacing = this.getMaxBorderWidth() + this.getMaxOffset(arcs) + this.options.spacing;\n        const maxSize = Math.max((Math.min(chartArea.width, chartArea.height) - spacing) / 2, 0);\n        const cutout = Math.min((0, $c7mKY.m)(this.options.cutout, maxSize), 1);\n        const chartWeight = this._getRingWeight(this.index);\n        const { circumference: circumference, rotation: rotation } = this._getRotationExtents();\n        const { ratioX: ratioX, ratioY: ratioY, offsetX: offsetX, offsetY: offsetY } = $216d2bdc6f281bf6$var$getRatioAndOffset(rotation, circumference, cutout);\n        const maxWidth = (chartArea.width - spacing) / ratioX;\n        const maxHeight = (chartArea.height - spacing) / ratioY;\n        const maxRadius = Math.max(Math.min(maxWidth, maxHeight) / 2, 0);\n        const outerRadius = (0, $c7mKY.n)(this.options.radius, maxRadius);\n        const innerRadius = Math.max(outerRadius * cutout, 0);\n        const radiusLength = (outerRadius - innerRadius) / this._getVisibleDatasetWeightTotal();\n        this.offsetX = offsetX * outerRadius;\n        this.offsetY = offsetY * outerRadius;\n        meta.total = this.calculateTotal();\n        this.outerRadius = outerRadius - radiusLength * this._getRingWeightOffset(this.index);\n        this.innerRadius = Math.max(this.outerRadius - radiusLength * chartWeight, 0);\n        this.updateElements(arcs, 0, arcs.length, mode);\n    }\n    _circumference(i, reset) {\n        const opts = this.options;\n        const meta = this._cachedMeta;\n        const circumference = this._getCircumference();\n        if (reset && opts.animation.animateRotate || !this.chart.getDataVisibility(i) || meta._parsed[i] === null || meta.data[i].hidden) return 0;\n        return this.calculateCircumference(meta._parsed[i] * circumference / (0, $c7mKY.T));\n    }\n    updateElements(arcs, start, count, mode) {\n        const reset = mode === \"reset\";\n        const chart = this.chart;\n        const chartArea = chart.chartArea;\n        const opts = chart.options;\n        const animationOpts = opts.animation;\n        const centerX = (chartArea.left + chartArea.right) / 2;\n        const centerY = (chartArea.top + chartArea.bottom) / 2;\n        const animateScale = reset && animationOpts.animateScale;\n        const innerRadius = animateScale ? 0 : this.innerRadius;\n        const outerRadius = animateScale ? 0 : this.outerRadius;\n        const { sharedOptions: sharedOptions, includeOptions: includeOptions } = this._getSharedOptions(start, mode);\n        let startAngle = this._getRotation();\n        let i;\n        for(i = 0; i < start; ++i)startAngle += this._circumference(i, reset);\n        for(i = start; i < start + count; ++i){\n            const circumference = this._circumference(i, reset);\n            const arc = arcs[i];\n            const properties = {\n                x: centerX + this.offsetX,\n                y: centerY + this.offsetY,\n                startAngle: startAngle,\n                endAngle: startAngle + circumference,\n                circumference: circumference,\n                outerRadius: outerRadius,\n                innerRadius: innerRadius\n            };\n            if (includeOptions) properties.options = sharedOptions || this.resolveDataElementOptions(i, arc.active ? \"active\" : mode);\n            startAngle += circumference;\n            this.updateElement(arc, i, properties, mode);\n        }\n    }\n    calculateTotal() {\n        const meta = this._cachedMeta;\n        const metaData = meta.data;\n        let total = 0;\n        let i;\n        for(i = 0; i < metaData.length; i++){\n            const value = meta._parsed[i];\n            if (value !== null && !isNaN(value) && this.chart.getDataVisibility(i) && !metaData[i].hidden) total += Math.abs(value);\n        }\n        return total;\n    }\n    calculateCircumference(value) {\n        const total = this._cachedMeta.total;\n        if (total > 0 && !isNaN(value)) return (0, $c7mKY.T) * (Math.abs(value) / total);\n        return 0;\n    }\n    getLabelAndValue(index) {\n        const meta = this._cachedMeta;\n        const chart = this.chart;\n        const labels = chart.data.labels || [];\n        const value = (0, $c7mKY.o)(meta._parsed[index], chart.options.locale);\n        return {\n            label: labels[index] || \"\",\n            value: value\n        };\n    }\n    getMaxBorderWidth(arcs) {\n        let max = 0;\n        const chart = this.chart;\n        let i, ilen, meta, controller, options;\n        if (!arcs) {\n            for(i = 0, ilen = chart.data.datasets.length; i < ilen; ++i)if (chart.isDatasetVisible(i)) {\n                meta = chart.getDatasetMeta(i);\n                arcs = meta.data;\n                controller = meta.controller;\n                break;\n            }\n        }\n        if (!arcs) return 0;\n        for(i = 0, ilen = arcs.length; i < ilen; ++i){\n            options = controller.resolveDataElementOptions(i);\n            if (options.borderAlign !== \"inner\") max = Math.max(max, options.borderWidth || 0, options.hoverBorderWidth || 0);\n        }\n        return max;\n    }\n    getMaxOffset(arcs) {\n        let max = 0;\n        for(let i = 0, ilen = arcs.length; i < ilen; ++i){\n            const options = this.resolveDataElementOptions(i);\n            max = Math.max(max, options.offset || 0, options.hoverOffset || 0);\n        }\n        return max;\n    }\n    _getRingWeightOffset(datasetIndex) {\n        let ringWeightOffset = 0;\n        for(let i = 0; i < datasetIndex; ++i)if (this.chart.isDatasetVisible(i)) ringWeightOffset += this._getRingWeight(i);\n        return ringWeightOffset;\n    }\n    _getRingWeight(datasetIndex) {\n        return Math.max((0, $c7mKY.v)(this.chart.data.datasets[datasetIndex].weight, 1), 0);\n    }\n    _getVisibleDatasetWeightTotal() {\n        return this._getRingWeightOffset(this.chart.data.datasets.length) || 1;\n    }\n}\nclass $216d2bdc6f281bf6$export$3c9b5d28c11cbfd0 extends $216d2bdc6f281bf6$export$75572ec5c55b4048 {\n    static id = \"line\";\n    static defaults = {\n        datasetElementType: \"line\",\n        dataElementType: \"point\",\n        showLine: true,\n        spanGaps: false\n    };\n    static overrides = {\n        scales: {\n            _index_: {\n                type: \"category\"\n            },\n            _value_: {\n                type: \"linear\"\n            }\n        }\n    };\n    initialize() {\n        this.enableOptionSharing = true;\n        this.supportsDecimation = true;\n        super.initialize();\n    }\n    update(mode) {\n        const meta = this._cachedMeta;\n        const { dataset: line, data: points = [], _dataset: _dataset } = meta;\n        const animationsDisabled = this.chart._animationsDisabled;\n        let { start: start, count: count } = (0, $c7mKY.q)(meta, points, animationsDisabled);\n        this._drawStart = start;\n        this._drawCount = count;\n        if ((0, $c7mKY.w)(meta)) {\n            start = 0;\n            count = points.length;\n        }\n        line._chart = this.chart;\n        line._datasetIndex = this.index;\n        line._decimated = !!_dataset._decimated;\n        line.points = points;\n        const options = this.resolveDatasetElementOptions(mode);\n        if (!this.options.showLine) options.borderWidth = 0;\n        options.segment = this.options.segment;\n        this.updateElement(line, undefined, {\n            animated: !animationsDisabled,\n            options: options\n        }, mode);\n        this.updateElements(points, start, count, mode);\n    }\n    updateElements(points, start, count, mode) {\n        const reset = mode === \"reset\";\n        const { iScale: iScale, vScale: vScale, _stacked: _stacked, _dataset: _dataset } = this._cachedMeta;\n        const { sharedOptions: sharedOptions, includeOptions: includeOptions } = this._getSharedOptions(start, mode);\n        const iAxis = iScale.axis;\n        const vAxis = vScale.axis;\n        const { spanGaps: spanGaps, segment: segment } = this.options;\n        const maxGapLength = (0, $c7mKY.x)(spanGaps) ? spanGaps : Number.POSITIVE_INFINITY;\n        const directUpdate = this.chart._animationsDisabled || reset || mode === \"none\";\n        const end = start + count;\n        const pointsCount = points.length;\n        let prevParsed = start > 0 && this.getParsed(start - 1);\n        for(let i = 0; i < pointsCount; ++i){\n            const point = points[i];\n            const properties = directUpdate ? point : {};\n            if (i < start || i >= end) {\n                properties.skip = true;\n                continue;\n            }\n            const parsed = this.getParsed(i);\n            const nullData = (0, $c7mKY.k)(parsed[vAxis]);\n            const iPixel = properties[iAxis] = iScale.getPixelForValue(parsed[iAxis], i);\n            const vPixel = properties[vAxis] = reset || nullData ? vScale.getBasePixel() : vScale.getPixelForValue(_stacked ? this.applyStack(vScale, parsed, _stacked) : parsed[vAxis], i);\n            properties.skip = isNaN(iPixel) || isNaN(vPixel) || nullData;\n            properties.stop = i > 0 && Math.abs(parsed[iAxis] - prevParsed[iAxis]) > maxGapLength;\n            if (segment) {\n                properties.parsed = parsed;\n                properties.raw = _dataset.data[i];\n            }\n            if (includeOptions) properties.options = sharedOptions || this.resolveDataElementOptions(i, point.active ? \"active\" : mode);\n            if (!directUpdate) this.updateElement(point, i, properties, mode);\n            prevParsed = parsed;\n        }\n    }\n    getMaxOverflow() {\n        const meta = this._cachedMeta;\n        const dataset = meta.dataset;\n        const border = dataset.options && dataset.options.borderWidth || 0;\n        const data = meta.data || [];\n        if (!data.length) return border;\n        const firstPoint = data[0].size(this.resolveDataElementOptions(0));\n        const lastPoint = data[data.length - 1].size(this.resolveDataElementOptions(data.length - 1));\n        return Math.max(border, firstPoint, lastPoint) / 2;\n    }\n    draw() {\n        const meta = this._cachedMeta;\n        meta.dataset.updateControlPoints(this.chart.chartArea, meta.iScale.axis);\n        super.draw();\n    }\n}\nclass $216d2bdc6f281bf6$export$2a270b3a0d973c85 extends $216d2bdc6f281bf6$export$75572ec5c55b4048 {\n    static id = \"polarArea\";\n    static defaults = {\n        dataElementType: \"arc\",\n        animation: {\n            animateRotate: true,\n            animateScale: true\n        },\n        animations: {\n            numbers: {\n                type: \"number\",\n                properties: [\n                    \"x\",\n                    \"y\",\n                    \"startAngle\",\n                    \"endAngle\",\n                    \"innerRadius\",\n                    \"outerRadius\"\n                ]\n            }\n        },\n        indexAxis: \"r\",\n        startAngle: 0\n    };\n    static overrides = {\n        aspectRatio: 1,\n        plugins: {\n            legend: {\n                labels: {\n                    generateLabels (chart) {\n                        const data = chart.data;\n                        if (data.labels.length && data.datasets.length) {\n                            const { labels: { pointStyle: pointStyle, color: color } } = chart.legend.options;\n                            return data.labels.map((label, i)=>{\n                                const meta = chart.getDatasetMeta(0);\n                                const style = meta.controller.getStyle(i);\n                                return {\n                                    text: label,\n                                    fillStyle: style.backgroundColor,\n                                    strokeStyle: style.borderColor,\n                                    fontColor: color,\n                                    lineWidth: style.borderWidth,\n                                    pointStyle: pointStyle,\n                                    hidden: !chart.getDataVisibility(i),\n                                    index: i\n                                };\n                            });\n                        }\n                        return [];\n                    }\n                },\n                onClick (e, legendItem, legend) {\n                    legend.chart.toggleDataVisibility(legendItem.index);\n                    legend.chart.update();\n                }\n            }\n        },\n        scales: {\n            r: {\n                type: \"radialLinear\",\n                angleLines: {\n                    display: false\n                },\n                beginAtZero: true,\n                grid: {\n                    circular: true\n                },\n                pointLabels: {\n                    display: false\n                },\n                startAngle: 0\n            }\n        }\n    };\n    constructor(chart, datasetIndex){\n        super(chart, datasetIndex);\n        this.innerRadius = undefined;\n        this.outerRadius = undefined;\n    }\n    getLabelAndValue(index) {\n        const meta = this._cachedMeta;\n        const chart = this.chart;\n        const labels = chart.data.labels || [];\n        const value = (0, $c7mKY.o)(meta._parsed[index].r, chart.options.locale);\n        return {\n            label: labels[index] || \"\",\n            value: value\n        };\n    }\n    parseObjectData(meta, data, start, count) {\n        return (0, $c7mKY.y).bind(this)(meta, data, start, count);\n    }\n    update(mode) {\n        const arcs = this._cachedMeta.data;\n        this._updateRadius();\n        this.updateElements(arcs, 0, arcs.length, mode);\n    }\n    getMinMax() {\n        const meta = this._cachedMeta;\n        const range = {\n            min: Number.POSITIVE_INFINITY,\n            max: Number.NEGATIVE_INFINITY\n        };\n        meta.data.forEach((element, index)=>{\n            const parsed = this.getParsed(index).r;\n            if (!isNaN(parsed) && this.chart.getDataVisibility(index)) {\n                if (parsed < range.min) range.min = parsed;\n                if (parsed > range.max) range.max = parsed;\n            }\n        });\n        return range;\n    }\n    _updateRadius() {\n        const chart = this.chart;\n        const chartArea = chart.chartArea;\n        const opts = chart.options;\n        const minSize = Math.min(chartArea.right - chartArea.left, chartArea.bottom - chartArea.top);\n        const outerRadius = Math.max(minSize / 2, 0);\n        const innerRadius = Math.max(opts.cutoutPercentage ? outerRadius / 100 * opts.cutoutPercentage : 1, 0);\n        const radiusLength = (outerRadius - innerRadius) / chart.getVisibleDatasetCount();\n        this.outerRadius = outerRadius - radiusLength * this.index;\n        this.innerRadius = this.outerRadius - radiusLength;\n    }\n    updateElements(arcs, start, count, mode) {\n        const reset = mode === \"reset\";\n        const chart = this.chart;\n        const opts = chart.options;\n        const animationOpts = opts.animation;\n        const scale = this._cachedMeta.rScale;\n        const centerX = scale.xCenter;\n        const centerY = scale.yCenter;\n        const datasetStartAngle = scale.getIndexAngle(0) - 0.5 * (0, $c7mKY.P);\n        let angle = datasetStartAngle;\n        let i;\n        const defaultAngle = 360 / this.countVisibleElements();\n        for(i = 0; i < start; ++i)angle += this._computeAngle(i, mode, defaultAngle);\n        for(i = start; i < start + count; i++){\n            const arc = arcs[i];\n            let startAngle = angle;\n            let endAngle = angle + this._computeAngle(i, mode, defaultAngle);\n            let outerRadius = chart.getDataVisibility(i) ? scale.getDistanceFromCenterForValue(this.getParsed(i).r) : 0;\n            angle = endAngle;\n            if (reset) {\n                if (animationOpts.animateScale) outerRadius = 0;\n                if (animationOpts.animateRotate) startAngle = endAngle = datasetStartAngle;\n            }\n            const properties = {\n                x: centerX,\n                y: centerY,\n                innerRadius: 0,\n                outerRadius: outerRadius,\n                startAngle: startAngle,\n                endAngle: endAngle,\n                options: this.resolveDataElementOptions(i, arc.active ? \"active\" : mode)\n            };\n            this.updateElement(arc, i, properties, mode);\n        }\n    }\n    countVisibleElements() {\n        const meta = this._cachedMeta;\n        let count = 0;\n        meta.data.forEach((element, index)=>{\n            if (!isNaN(this.getParsed(index).r) && this.chart.getDataVisibility(index)) count++;\n        });\n        return count;\n    }\n    _computeAngle(index, mode, defaultAngle) {\n        return this.chart.getDataVisibility(index) ? (0, $c7mKY.t)(this.resolveDataElementOptions(index, mode).angle || defaultAngle) : 0;\n    }\n}\nclass $216d2bdc6f281bf6$export$b21a3f1286706191 extends $216d2bdc6f281bf6$export$e04603e7d8b77172 {\n    static id = \"pie\";\n    static defaults = {\n        cutout: 0,\n        rotation: 0,\n        circumference: 360,\n        radius: \"100%\"\n    };\n}\nclass $216d2bdc6f281bf6$export$48dbc6ac651bf8be extends $216d2bdc6f281bf6$export$75572ec5c55b4048 {\n    static id = \"radar\";\n    static defaults = {\n        datasetElementType: \"line\",\n        dataElementType: \"point\",\n        indexAxis: \"r\",\n        showLine: true,\n        elements: {\n            line: {\n                fill: \"start\"\n            }\n        }\n    };\n    static overrides = {\n        aspectRatio: 1,\n        scales: {\n            r: {\n                type: \"radialLinear\"\n            }\n        }\n    };\n    getLabelAndValue(index) {\n        const vScale = this._cachedMeta.vScale;\n        const parsed = this.getParsed(index);\n        return {\n            label: vScale.getLabels()[index],\n            value: \"\" + vScale.getLabelForValue(parsed[vScale.axis])\n        };\n    }\n    parseObjectData(meta, data, start, count) {\n        return (0, $c7mKY.y).bind(this)(meta, data, start, count);\n    }\n    update(mode) {\n        const meta = this._cachedMeta;\n        const line = meta.dataset;\n        const points = meta.data || [];\n        const labels = meta.iScale.getLabels();\n        line.points = points;\n        if (mode !== \"resize\") {\n            const options = this.resolveDatasetElementOptions(mode);\n            if (!this.options.showLine) options.borderWidth = 0;\n            const properties = {\n                _loop: true,\n                _fullLoop: labels.length === points.length,\n                options: options\n            };\n            this.updateElement(line, undefined, properties, mode);\n        }\n        this.updateElements(points, 0, points.length, mode);\n    }\n    updateElements(points, start, count, mode) {\n        const scale = this._cachedMeta.rScale;\n        const reset = mode === \"reset\";\n        for(let i = start; i < start + count; i++){\n            const point = points[i];\n            const options = this.resolveDataElementOptions(i, point.active ? \"active\" : mode);\n            const pointPosition = scale.getPointPositionForValue(i, this.getParsed(i).r);\n            const x = reset ? scale.xCenter : pointPosition.x;\n            const y = reset ? scale.yCenter : pointPosition.y;\n            const properties = {\n                x: x,\n                y: y,\n                angle: pointPosition.angle,\n                skip: isNaN(x) || isNaN(y),\n                options: options\n            };\n            this.updateElement(point, i, properties, mode);\n        }\n    }\n}\nclass $216d2bdc6f281bf6$export$b2f2bae6713db87 extends $216d2bdc6f281bf6$export$75572ec5c55b4048 {\n    static id = \"scatter\";\n    static defaults = {\n        datasetElementType: false,\n        dataElementType: \"point\",\n        showLine: false,\n        fill: false\n    };\n    static overrides = {\n        interaction: {\n            mode: \"point\"\n        },\n        scales: {\n            x: {\n                type: \"linear\"\n            },\n            y: {\n                type: \"linear\"\n            }\n        }\n    };\n    getLabelAndValue(index) {\n        const meta = this._cachedMeta;\n        const labels = this.chart.data.labels || [];\n        const { xScale: xScale, yScale: yScale } = meta;\n        const parsed = this.getParsed(index);\n        const x = xScale.getLabelForValue(parsed.x);\n        const y = yScale.getLabelForValue(parsed.y);\n        return {\n            label: labels[index] || \"\",\n            value: \"(\" + x + \", \" + y + \")\"\n        };\n    }\n    update(mode) {\n        const meta = this._cachedMeta;\n        const { data: points = [] } = meta;\n        const animationsDisabled = this.chart._animationsDisabled;\n        let { start: start, count: count } = (0, $c7mKY.q)(meta, points, animationsDisabled);\n        this._drawStart = start;\n        this._drawCount = count;\n        if ((0, $c7mKY.w)(meta)) {\n            start = 0;\n            count = points.length;\n        }\n        if (this.options.showLine) {\n            if (!this.datasetElementType) this.addElements();\n            const { dataset: line, _dataset: _dataset } = meta;\n            line._chart = this.chart;\n            line._datasetIndex = this.index;\n            line._decimated = !!_dataset._decimated;\n            line.points = points;\n            const options = this.resolveDatasetElementOptions(mode);\n            options.segment = this.options.segment;\n            this.updateElement(line, undefined, {\n                animated: !animationsDisabled,\n                options: options\n            }, mode);\n        } else if (this.datasetElementType) {\n            delete meta.dataset;\n            this.datasetElementType = false;\n        }\n        this.updateElements(points, start, count, mode);\n    }\n    addElements() {\n        const { showLine: showLine } = this.options;\n        if (!this.datasetElementType && showLine) this.datasetElementType = this.chart.registry.getElement(\"line\");\n        super.addElements();\n    }\n    updateElements(points, start, count, mode) {\n        const reset = mode === \"reset\";\n        const { iScale: iScale, vScale: vScale, _stacked: _stacked, _dataset: _dataset } = this._cachedMeta;\n        const firstOpts = this.resolveDataElementOptions(start, mode);\n        const sharedOptions = this.getSharedOptions(firstOpts);\n        const includeOptions = this.includeOptions(mode, sharedOptions);\n        const iAxis = iScale.axis;\n        const vAxis = vScale.axis;\n        const { spanGaps: spanGaps, segment: segment } = this.options;\n        const maxGapLength = (0, $c7mKY.x)(spanGaps) ? spanGaps : Number.POSITIVE_INFINITY;\n        const directUpdate = this.chart._animationsDisabled || reset || mode === \"none\";\n        let prevParsed = start > 0 && this.getParsed(start - 1);\n        for(let i = start; i < start + count; ++i){\n            const point = points[i];\n            const parsed = this.getParsed(i);\n            const properties = directUpdate ? point : {};\n            const nullData = (0, $c7mKY.k)(parsed[vAxis]);\n            const iPixel = properties[iAxis] = iScale.getPixelForValue(parsed[iAxis], i);\n            const vPixel = properties[vAxis] = reset || nullData ? vScale.getBasePixel() : vScale.getPixelForValue(_stacked ? this.applyStack(vScale, parsed, _stacked) : parsed[vAxis], i);\n            properties.skip = isNaN(iPixel) || isNaN(vPixel) || nullData;\n            properties.stop = i > 0 && Math.abs(parsed[iAxis] - prevParsed[iAxis]) > maxGapLength;\n            if (segment) {\n                properties.parsed = parsed;\n                properties.raw = _dataset.data[i];\n            }\n            if (includeOptions) properties.options = sharedOptions || this.resolveDataElementOptions(i, point.active ? \"active\" : mode);\n            if (!directUpdate) this.updateElement(point, i, properties, mode);\n            prevParsed = parsed;\n        }\n        this.updateSharedOptions(sharedOptions, mode, firstOpts);\n    }\n    getMaxOverflow() {\n        const meta = this._cachedMeta;\n        const data = meta.data || [];\n        if (!this.options.showLine) {\n            let max = 0;\n            for(let i = data.length - 1; i >= 0; --i)max = Math.max(max, data[i].size(this.resolveDataElementOptions(i)) / 2);\n            return max > 0 && max;\n        }\n        const dataset = meta.dataset;\n        const border = dataset.options && dataset.options.borderWidth || 0;\n        if (!data.length) return border;\n        const firstPoint = data[0].size(this.resolveDataElementOptions(0));\n        const lastPoint = data[data.length - 1].size(this.resolveDataElementOptions(data.length - 1));\n        return Math.max(border, firstPoint, lastPoint) / 2;\n    }\n}\nvar $216d2bdc6f281bf6$export$a6506504f799c5d5 = /*#__PURE__*/ Object.freeze({\n    __proto__: null,\n    BarController: $216d2bdc6f281bf6$export$e97d5dc64e999004,\n    BubbleController: $216d2bdc6f281bf6$export$19b5c4773f17abe,\n    DoughnutController: $216d2bdc6f281bf6$export$e04603e7d8b77172,\n    LineController: $216d2bdc6f281bf6$export$3c9b5d28c11cbfd0,\n    PieController: $216d2bdc6f281bf6$export$b21a3f1286706191,\n    PolarAreaController: $216d2bdc6f281bf6$export$2a270b3a0d973c85,\n    RadarController: $216d2bdc6f281bf6$export$48dbc6ac651bf8be,\n    ScatterController: $216d2bdc6f281bf6$export$b2f2bae6713db87\n});\n/**\n * @namespace Chart._adapters\n * @since 2.8.0\n * @private\n */ function $216d2bdc6f281bf6$var$abstract() {\n    throw new Error(\"This method is not implemented: Check that a complete date adapter is provided.\");\n}\n/**\n * Date adapter (current used by the time scale)\n * @namespace Chart._adapters._date\n * @memberof Chart._adapters\n * @private\n */ class $216d2bdc6f281bf6$var$DateAdapterBase {\n    /**\n   * Override default date adapter methods.\n   * Accepts type parameter to define options type.\n   * @example\n   * Chart._adapters._date.override<{myAdapterOption: string}>({\n   *   init() {\n   *     console.log(this.options.myAdapterOption);\n   *   }\n   * })\n   */ static override(members) {\n        Object.assign($216d2bdc6f281bf6$var$DateAdapterBase.prototype, members);\n    }\n    options;\n    constructor(options){\n        this.options = options || {};\n    }\n    // eslint-disable-next-line @typescript-eslint/no-empty-function\n    init() {}\n    formats() {\n        return $216d2bdc6f281bf6$var$abstract();\n    }\n    parse() {\n        return $216d2bdc6f281bf6$var$abstract();\n    }\n    format() {\n        return $216d2bdc6f281bf6$var$abstract();\n    }\n    add() {\n        return $216d2bdc6f281bf6$var$abstract();\n    }\n    diff() {\n        return $216d2bdc6f281bf6$var$abstract();\n    }\n    startOf() {\n        return $216d2bdc6f281bf6$var$abstract();\n    }\n    endOf() {\n        return $216d2bdc6f281bf6$var$abstract();\n    }\n}\nvar $216d2bdc6f281bf6$export$f32766ea09ec8bc4 = {\n    _date: $216d2bdc6f281bf6$var$DateAdapterBase\n};\nfunction $216d2bdc6f281bf6$var$binarySearch(metaset, axis, value, intersect) {\n    const { controller: controller, data: data, _sorted: _sorted } = metaset;\n    const iScale = controller._cachedMeta.iScale;\n    if (iScale && axis === iScale.axis && axis !== \"r\" && _sorted && data.length) {\n        const lookupMethod = iScale._reversePixels ? (0, $c7mKY.A) : (0, $c7mKY.B);\n        if (!intersect) return lookupMethod(data, axis, value);\n        else if (controller._sharedOptions) {\n            const el = data[0];\n            const range = typeof el.getRange === \"function\" && el.getRange(axis);\n            if (range) {\n                const start = lookupMethod(data, axis, value - range);\n                const end = lookupMethod(data, axis, value + range);\n                return {\n                    lo: start.lo,\n                    hi: end.hi\n                };\n            }\n        }\n    }\n    return {\n        lo: 0,\n        hi: data.length - 1\n    };\n}\nfunction $216d2bdc6f281bf6$var$evaluateInteractionItems(chart, axis, position, handler, intersect) {\n    const metasets = chart.getSortedVisibleDatasetMetas();\n    const value = position[axis];\n    for(let i = 0, ilen = metasets.length; i < ilen; ++i){\n        const { index: index, data: data } = metasets[i];\n        const { lo: lo, hi: hi } = $216d2bdc6f281bf6$var$binarySearch(metasets[i], axis, value, intersect);\n        for(let j = lo; j <= hi; ++j){\n            const element = data[j];\n            if (!element.skip) handler(element, index, j);\n        }\n    }\n}\nfunction $216d2bdc6f281bf6$var$getDistanceMetricForAxis(axis) {\n    const useX = axis.indexOf(\"x\") !== -1;\n    const useY = axis.indexOf(\"y\") !== -1;\n    return function(pt1, pt2) {\n        const deltaX = useX ? Math.abs(pt1.x - pt2.x) : 0;\n        const deltaY = useY ? Math.abs(pt1.y - pt2.y) : 0;\n        return Math.sqrt(Math.pow(deltaX, 2) + Math.pow(deltaY, 2));\n    };\n}\nfunction $216d2bdc6f281bf6$var$getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible) {\n    const items = [];\n    if (!includeInvisible && !chart.isPointInArea(position)) return items;\n    const evaluationFunc = function(element, datasetIndex, index) {\n        if (!includeInvisible && !(0, $c7mKY.C)(element, chart.chartArea, 0)) return;\n        if (element.inRange(position.x, position.y, useFinalPosition)) items.push({\n            element: element,\n            datasetIndex: datasetIndex,\n            index: index\n        });\n    };\n    $216d2bdc6f281bf6$var$evaluateInteractionItems(chart, axis, position, evaluationFunc, true);\n    return items;\n}\nfunction $216d2bdc6f281bf6$var$getNearestRadialItems(chart, position, axis, useFinalPosition) {\n    let items = [];\n    function evaluationFunc(element, datasetIndex, index) {\n        const { startAngle: startAngle, endAngle: endAngle } = element.getProps([\n            \"startAngle\",\n            \"endAngle\"\n        ], useFinalPosition);\n        const { angle: angle } = (0, $c7mKY.D)(element, {\n            x: position.x,\n            y: position.y\n        });\n        if ((0, $c7mKY.p)(angle, startAngle, endAngle)) items.push({\n            element: element,\n            datasetIndex: datasetIndex,\n            index: index\n        });\n    }\n    $216d2bdc6f281bf6$var$evaluateInteractionItems(chart, axis, position, evaluationFunc);\n    return items;\n}\nfunction $216d2bdc6f281bf6$var$getNearestCartesianItems(chart, position, axis, intersect, useFinalPosition, includeInvisible) {\n    let items = [];\n    const distanceMetric = $216d2bdc6f281bf6$var$getDistanceMetricForAxis(axis);\n    let minDistance = Number.POSITIVE_INFINITY;\n    function evaluationFunc(element, datasetIndex, index) {\n        const inRange = element.inRange(position.x, position.y, useFinalPosition);\n        if (intersect && !inRange) return;\n        const center = element.getCenterPoint(useFinalPosition);\n        const pointInArea = !!includeInvisible || chart.isPointInArea(center);\n        if (!pointInArea && !inRange) return;\n        const distance = distanceMetric(position, center);\n        if (distance < minDistance) {\n            items = [\n                {\n                    element: element,\n                    datasetIndex: datasetIndex,\n                    index: index\n                }\n            ];\n            minDistance = distance;\n        } else if (distance === minDistance) items.push({\n            element: element,\n            datasetIndex: datasetIndex,\n            index: index\n        });\n    }\n    $216d2bdc6f281bf6$var$evaluateInteractionItems(chart, axis, position, evaluationFunc);\n    return items;\n}\nfunction $216d2bdc6f281bf6$var$getNearestItems(chart, position, axis, intersect, useFinalPosition, includeInvisible) {\n    if (!includeInvisible && !chart.isPointInArea(position)) return [];\n    return axis === \"r\" && !intersect ? $216d2bdc6f281bf6$var$getNearestRadialItems(chart, position, axis, useFinalPosition) : $216d2bdc6f281bf6$var$getNearestCartesianItems(chart, position, axis, intersect, useFinalPosition, includeInvisible);\n}\nfunction $216d2bdc6f281bf6$var$getAxisItems(chart, position, axis, intersect, useFinalPosition) {\n    const items = [];\n    const rangeMethod = axis === \"x\" ? \"inXRange\" : \"inYRange\";\n    let intersectsItem = false;\n    $216d2bdc6f281bf6$var$evaluateInteractionItems(chart, axis, position, (element, datasetIndex, index)=>{\n        if (element[rangeMethod] && element[rangeMethod](position[axis], useFinalPosition)) {\n            items.push({\n                element: element,\n                datasetIndex: datasetIndex,\n                index: index\n            });\n            intersectsItem = intersectsItem || element.inRange(position.x, position.y, useFinalPosition);\n        }\n    });\n    if (intersect && !intersectsItem) return [];\n    return items;\n}\nvar $216d2bdc6f281bf6$export$a13296960cae0384 = {\n    evaluateInteractionItems: $216d2bdc6f281bf6$var$evaluateInteractionItems,\n    modes: {\n        index (chart, e, options, useFinalPosition) {\n            const position = (0, $c7mKY.z)(e, chart);\n            const axis = options.axis || \"x\";\n            const includeInvisible = options.includeInvisible || false;\n            const items = options.intersect ? $216d2bdc6f281bf6$var$getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible) : $216d2bdc6f281bf6$var$getNearestItems(chart, position, axis, false, useFinalPosition, includeInvisible);\n            const elements = [];\n            if (!items.length) return [];\n            chart.getSortedVisibleDatasetMetas().forEach((meta)=>{\n                const index = items[0].index;\n                const element = meta.data[index];\n                if (element && !element.skip) elements.push({\n                    element: element,\n                    datasetIndex: meta.index,\n                    index: index\n                });\n            });\n            return elements;\n        },\n        dataset (chart, e, options, useFinalPosition) {\n            const position = (0, $c7mKY.z)(e, chart);\n            const axis = options.axis || \"xy\";\n            const includeInvisible = options.includeInvisible || false;\n            let items = options.intersect ? $216d2bdc6f281bf6$var$getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible) : $216d2bdc6f281bf6$var$getNearestItems(chart, position, axis, false, useFinalPosition, includeInvisible);\n            if (items.length > 0) {\n                const datasetIndex = items[0].datasetIndex;\n                const data = chart.getDatasetMeta(datasetIndex).data;\n                items = [];\n                for(let i = 0; i < data.length; ++i)items.push({\n                    element: data[i],\n                    datasetIndex: datasetIndex,\n                    index: i\n                });\n            }\n            return items;\n        },\n        point (chart, e, options, useFinalPosition) {\n            const position = (0, $c7mKY.z)(e, chart);\n            const axis = options.axis || \"xy\";\n            const includeInvisible = options.includeInvisible || false;\n            return $216d2bdc6f281bf6$var$getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible);\n        },\n        nearest (chart, e, options, useFinalPosition) {\n            const position = (0, $c7mKY.z)(e, chart);\n            const axis = options.axis || \"xy\";\n            const includeInvisible = options.includeInvisible || false;\n            return $216d2bdc6f281bf6$var$getNearestItems(chart, position, axis, options.intersect, useFinalPosition, includeInvisible);\n        },\n        x (chart, e, options, useFinalPosition) {\n            const position = (0, $c7mKY.z)(e, chart);\n            return $216d2bdc6f281bf6$var$getAxisItems(chart, position, \"x\", options.intersect, useFinalPosition);\n        },\n        y (chart, e, options, useFinalPosition) {\n            const position = (0, $c7mKY.z)(e, chart);\n            return $216d2bdc6f281bf6$var$getAxisItems(chart, position, \"y\", options.intersect, useFinalPosition);\n        }\n    }\n};\nconst $216d2bdc6f281bf6$var$STATIC_POSITIONS = [\n    \"left\",\n    \"top\",\n    \"right\",\n    \"bottom\"\n];\nfunction $216d2bdc6f281bf6$var$filterByPosition(array, position) {\n    return array.filter((v)=>v.pos === position);\n}\nfunction $216d2bdc6f281bf6$var$filterDynamicPositionByAxis(array, axis) {\n    return array.filter((v)=>$216d2bdc6f281bf6$var$STATIC_POSITIONS.indexOf(v.pos) === -1 && v.box.axis === axis);\n}\nfunction $216d2bdc6f281bf6$var$sortByWeight(array, reverse) {\n    return array.sort((a, b)=>{\n        const v0 = reverse ? b : a;\n        const v1 = reverse ? a : b;\n        return v0.weight === v1.weight ? v0.index - v1.index : v0.weight - v1.weight;\n    });\n}\nfunction $216d2bdc6f281bf6$var$wrapBoxes(boxes) {\n    const layoutBoxes = [];\n    let i, ilen, box, pos, stack, stackWeight;\n    for(i = 0, ilen = (boxes || []).length; i < ilen; ++i){\n        box = boxes[i];\n        ({ position: pos, options: { stack: stack, stackWeight: stackWeight = 1 } } = box);\n        layoutBoxes.push({\n            index: i,\n            box: box,\n            pos: pos,\n            horizontal: box.isHorizontal(),\n            weight: box.weight,\n            stack: stack && pos + stack,\n            stackWeight: stackWeight\n        });\n    }\n    return layoutBoxes;\n}\nfunction $216d2bdc6f281bf6$var$buildStacks(layouts) {\n    const stacks = {};\n    for (const wrap of layouts){\n        const { stack: stack, pos: pos, stackWeight: stackWeight } = wrap;\n        if (!stack || !$216d2bdc6f281bf6$var$STATIC_POSITIONS.includes(pos)) continue;\n        const _stack = stacks[stack] || (stacks[stack] = {\n            count: 0,\n            placed: 0,\n            weight: 0,\n            size: 0\n        });\n        _stack.count++;\n        _stack.weight += stackWeight;\n    }\n    return stacks;\n}\nfunction $216d2bdc6f281bf6$var$setLayoutDims(layouts, params) {\n    const stacks = $216d2bdc6f281bf6$var$buildStacks(layouts);\n    const { vBoxMaxWidth: vBoxMaxWidth, hBoxMaxHeight: hBoxMaxHeight } = params;\n    let i, ilen, layout;\n    for(i = 0, ilen = layouts.length; i < ilen; ++i){\n        layout = layouts[i];\n        const { fullSize: fullSize } = layout.box;\n        const stack = stacks[layout.stack];\n        const factor = stack && layout.stackWeight / stack.weight;\n        if (layout.horizontal) {\n            layout.width = factor ? factor * vBoxMaxWidth : fullSize && params.availableWidth;\n            layout.height = hBoxMaxHeight;\n        } else {\n            layout.width = vBoxMaxWidth;\n            layout.height = factor ? factor * hBoxMaxHeight : fullSize && params.availableHeight;\n        }\n    }\n    return stacks;\n}\nfunction $216d2bdc6f281bf6$var$buildLayoutBoxes(boxes) {\n    const layoutBoxes = $216d2bdc6f281bf6$var$wrapBoxes(boxes);\n    const fullSize = $216d2bdc6f281bf6$var$sortByWeight(layoutBoxes.filter((wrap)=>wrap.box.fullSize), true);\n    const left = $216d2bdc6f281bf6$var$sortByWeight($216d2bdc6f281bf6$var$filterByPosition(layoutBoxes, \"left\"), true);\n    const right = $216d2bdc6f281bf6$var$sortByWeight($216d2bdc6f281bf6$var$filterByPosition(layoutBoxes, \"right\"));\n    const top = $216d2bdc6f281bf6$var$sortByWeight($216d2bdc6f281bf6$var$filterByPosition(layoutBoxes, \"top\"), true);\n    const bottom = $216d2bdc6f281bf6$var$sortByWeight($216d2bdc6f281bf6$var$filterByPosition(layoutBoxes, \"bottom\"));\n    const centerHorizontal = $216d2bdc6f281bf6$var$filterDynamicPositionByAxis(layoutBoxes, \"x\");\n    const centerVertical = $216d2bdc6f281bf6$var$filterDynamicPositionByAxis(layoutBoxes, \"y\");\n    return {\n        fullSize: fullSize,\n        leftAndTop: left.concat(top),\n        rightAndBottom: right.concat(centerVertical).concat(bottom).concat(centerHorizontal),\n        chartArea: $216d2bdc6f281bf6$var$filterByPosition(layoutBoxes, \"chartArea\"),\n        vertical: left.concat(right).concat(centerVertical),\n        horizontal: top.concat(bottom).concat(centerHorizontal)\n    };\n}\nfunction $216d2bdc6f281bf6$var$getCombinedMax(maxPadding, chartArea, a, b) {\n    return Math.max(maxPadding[a], chartArea[a]) + Math.max(maxPadding[b], chartArea[b]);\n}\nfunction $216d2bdc6f281bf6$var$updateMaxPadding(maxPadding, boxPadding) {\n    maxPadding.top = Math.max(maxPadding.top, boxPadding.top);\n    maxPadding.left = Math.max(maxPadding.left, boxPadding.left);\n    maxPadding.bottom = Math.max(maxPadding.bottom, boxPadding.bottom);\n    maxPadding.right = Math.max(maxPadding.right, boxPadding.right);\n}\nfunction $216d2bdc6f281bf6$var$updateDims(chartArea, params, layout, stacks) {\n    const { pos: pos, box: box } = layout;\n    const maxPadding = chartArea.maxPadding;\n    if (!(0, $c7mKY.i)(pos)) {\n        if (layout.size) chartArea[pos] -= layout.size;\n        const stack = stacks[layout.stack] || {\n            size: 0,\n            count: 1\n        };\n        stack.size = Math.max(stack.size, layout.horizontal ? box.height : box.width);\n        layout.size = stack.size / stack.count;\n        chartArea[pos] += layout.size;\n    }\n    if (box.getPadding) $216d2bdc6f281bf6$var$updateMaxPadding(maxPadding, box.getPadding());\n    const newWidth = Math.max(0, params.outerWidth - $216d2bdc6f281bf6$var$getCombinedMax(maxPadding, chartArea, \"left\", \"right\"));\n    const newHeight = Math.max(0, params.outerHeight - $216d2bdc6f281bf6$var$getCombinedMax(maxPadding, chartArea, \"top\", \"bottom\"));\n    const widthChanged = newWidth !== chartArea.w;\n    const heightChanged = newHeight !== chartArea.h;\n    chartArea.w = newWidth;\n    chartArea.h = newHeight;\n    return layout.horizontal ? {\n        same: widthChanged,\n        other: heightChanged\n    } : {\n        same: heightChanged,\n        other: widthChanged\n    };\n}\nfunction $216d2bdc6f281bf6$var$handleMaxPadding(chartArea) {\n    const maxPadding = chartArea.maxPadding;\n    function updatePos(pos) {\n        const change = Math.max(maxPadding[pos] - chartArea[pos], 0);\n        chartArea[pos] += change;\n        return change;\n    }\n    chartArea.y += updatePos(\"top\");\n    chartArea.x += updatePos(\"left\");\n    updatePos(\"right\");\n    updatePos(\"bottom\");\n}\nfunction $216d2bdc6f281bf6$var$getMargins(horizontal, chartArea) {\n    const maxPadding = chartArea.maxPadding;\n    function marginForPositions(positions) {\n        const margin = {\n            left: 0,\n            top: 0,\n            right: 0,\n            bottom: 0\n        };\n        positions.forEach((pos)=>{\n            margin[pos] = Math.max(chartArea[pos], maxPadding[pos]);\n        });\n        return margin;\n    }\n    return horizontal ? marginForPositions([\n        \"left\",\n        \"right\"\n    ]) : marginForPositions([\n        \"top\",\n        \"bottom\"\n    ]);\n}\nfunction $216d2bdc6f281bf6$var$fitBoxes(boxes, chartArea, params, stacks) {\n    const refitBoxes = [];\n    let i, ilen, layout, box, refit, changed;\n    for(i = 0, ilen = boxes.length, refit = 0; i < ilen; ++i){\n        layout = boxes[i];\n        box = layout.box;\n        box.update(layout.width || chartArea.w, layout.height || chartArea.h, $216d2bdc6f281bf6$var$getMargins(layout.horizontal, chartArea));\n        const { same: same, other: other } = $216d2bdc6f281bf6$var$updateDims(chartArea, params, layout, stacks);\n        refit |= same && refitBoxes.length;\n        changed = changed || other;\n        if (!box.fullSize) refitBoxes.push(layout);\n    }\n    return refit && $216d2bdc6f281bf6$var$fitBoxes(refitBoxes, chartArea, params, stacks) || changed;\n}\nfunction $216d2bdc6f281bf6$var$setBoxDims(box, left, top, width, height) {\n    box.top = top;\n    box.left = left;\n    box.right = left + width;\n    box.bottom = top + height;\n    box.width = width;\n    box.height = height;\n}\nfunction $216d2bdc6f281bf6$var$placeBoxes(boxes, chartArea, params, stacks) {\n    const userPadding = params.padding;\n    let { x: x, y: y } = chartArea;\n    for (const layout of boxes){\n        const box = layout.box;\n        const stack = stacks[layout.stack] || {\n            count: 1,\n            placed: 0,\n            weight: 1\n        };\n        const weight = layout.stackWeight / stack.weight || 1;\n        if (layout.horizontal) {\n            const width = chartArea.w * weight;\n            const height = stack.size || box.height;\n            if ((0, $c7mKY.h)(stack.start)) y = stack.start;\n            if (box.fullSize) $216d2bdc6f281bf6$var$setBoxDims(box, userPadding.left, y, params.outerWidth - userPadding.right - userPadding.left, height);\n            else $216d2bdc6f281bf6$var$setBoxDims(box, chartArea.left + stack.placed, y, width, height);\n            stack.start = y;\n            stack.placed += width;\n            y = box.bottom;\n        } else {\n            const height = chartArea.h * weight;\n            const width = stack.size || box.width;\n            if ((0, $c7mKY.h)(stack.start)) x = stack.start;\n            if (box.fullSize) $216d2bdc6f281bf6$var$setBoxDims(box, x, userPadding.top, width, params.outerHeight - userPadding.bottom - userPadding.top);\n            else $216d2bdc6f281bf6$var$setBoxDims(box, x, chartArea.top + stack.placed, width, height);\n            stack.start = x;\n            stack.placed += height;\n            x = box.right;\n        }\n    }\n    chartArea.x = x;\n    chartArea.y = y;\n}\nvar $216d2bdc6f281bf6$export$1ecca0613f5e56d2 = {\n    addBox (chart, item) {\n        if (!chart.boxes) chart.boxes = [];\n        item.fullSize = item.fullSize || false;\n        item.position = item.position || \"top\";\n        item.weight = item.weight || 0;\n        item._layers = item._layers || function() {\n            return [\n                {\n                    z: 0,\n                    draw (chartArea) {\n                        item.draw(chartArea);\n                    }\n                }\n            ];\n        };\n        chart.boxes.push(item);\n    },\n    removeBox (chart, layoutItem) {\n        const index = chart.boxes ? chart.boxes.indexOf(layoutItem) : -1;\n        if (index !== -1) chart.boxes.splice(index, 1);\n    },\n    configure (chart, item, options) {\n        item.fullSize = options.fullSize;\n        item.position = options.position;\n        item.weight = options.weight;\n    },\n    update (chart, width, height, minPadding) {\n        if (!chart) return;\n        const padding = (0, $c7mKY.E)(chart.options.layout.padding);\n        const availableWidth = Math.max(width - padding.width, 0);\n        const availableHeight = Math.max(height - padding.height, 0);\n        const boxes = $216d2bdc6f281bf6$var$buildLayoutBoxes(chart.boxes);\n        const verticalBoxes = boxes.vertical;\n        const horizontalBoxes = boxes.horizontal;\n        (0, $c7mKY.F)(chart.boxes, (box)=>{\n            if (typeof box.beforeLayout === \"function\") box.beforeLayout();\n        });\n        const visibleVerticalBoxCount = verticalBoxes.reduce((total, wrap)=>wrap.box.options && wrap.box.options.display === false ? total : total + 1, 0) || 1;\n        const params = Object.freeze({\n            outerWidth: width,\n            outerHeight: height,\n            padding: padding,\n            availableWidth: availableWidth,\n            availableHeight: availableHeight,\n            vBoxMaxWidth: availableWidth / 2 / visibleVerticalBoxCount,\n            hBoxMaxHeight: availableHeight / 2\n        });\n        const maxPadding = Object.assign({}, padding);\n        $216d2bdc6f281bf6$var$updateMaxPadding(maxPadding, (0, $c7mKY.E)(minPadding));\n        const chartArea = Object.assign({\n            maxPadding: maxPadding,\n            w: availableWidth,\n            h: availableHeight,\n            x: padding.left,\n            y: padding.top\n        }, padding);\n        const stacks = $216d2bdc6f281bf6$var$setLayoutDims(verticalBoxes.concat(horizontalBoxes), params);\n        $216d2bdc6f281bf6$var$fitBoxes(boxes.fullSize, chartArea, params, stacks);\n        $216d2bdc6f281bf6$var$fitBoxes(verticalBoxes, chartArea, params, stacks);\n        if ($216d2bdc6f281bf6$var$fitBoxes(horizontalBoxes, chartArea, params, stacks)) $216d2bdc6f281bf6$var$fitBoxes(verticalBoxes, chartArea, params, stacks);\n        $216d2bdc6f281bf6$var$handleMaxPadding(chartArea);\n        $216d2bdc6f281bf6$var$placeBoxes(boxes.leftAndTop, chartArea, params, stacks);\n        chartArea.x += chartArea.w;\n        chartArea.y += chartArea.h;\n        $216d2bdc6f281bf6$var$placeBoxes(boxes.rightAndBottom, chartArea, params, stacks);\n        chart.chartArea = {\n            left: chartArea.left,\n            top: chartArea.top,\n            right: chartArea.left + chartArea.w,\n            bottom: chartArea.top + chartArea.h,\n            height: chartArea.h,\n            width: chartArea.w\n        };\n        (0, $c7mKY.F)(boxes.chartArea, (layout)=>{\n            const box = layout.box;\n            Object.assign(box, chart.chartArea);\n            box.update(chartArea.w, chartArea.h, {\n                left: 0,\n                top: 0,\n                right: 0,\n                bottom: 0\n            });\n        });\n    }\n};\nclass $216d2bdc6f281bf6$export$7b1aeb87f31f7da8 {\n    acquireContext(canvas, aspectRatio) {}\n    releaseContext(context) {\n        return false;\n    }\n    addEventListener(chart, type, listener) {}\n    removeEventListener(chart, type, listener) {}\n    getDevicePixelRatio() {\n        return 1;\n    }\n    getMaximumSize(element, width, height, aspectRatio) {\n        width = Math.max(0, width || element.width);\n        height = height || element.height;\n        return {\n            width: width,\n            height: Math.max(0, aspectRatio ? Math.floor(width / aspectRatio) : height)\n        };\n    }\n    isAttached(canvas) {\n        return true;\n    }\n    updateConfig(config) {}\n}\nclass $216d2bdc6f281bf6$export$a40a96b24b46cf35 extends $216d2bdc6f281bf6$export$7b1aeb87f31f7da8 {\n    acquireContext(item) {\n        return item && item.getContext && item.getContext(\"2d\") || null;\n    }\n    updateConfig(config) {\n        config.options.animation = false;\n    }\n}\nconst $216d2bdc6f281bf6$var$EXPANDO_KEY = \"$chartjs\";\nconst $216d2bdc6f281bf6$var$EVENT_TYPES = {\n    touchstart: \"mousedown\",\n    touchmove: \"mousemove\",\n    touchend: \"mouseup\",\n    pointerenter: \"mouseenter\",\n    pointerdown: \"mousedown\",\n    pointermove: \"mousemove\",\n    pointerup: \"mouseup\",\n    pointerleave: \"mouseout\",\n    pointerout: \"mouseout\"\n};\nconst $216d2bdc6f281bf6$var$isNullOrEmpty = (value)=>value === null || value === \"\";\nfunction $216d2bdc6f281bf6$var$initCanvas(canvas, aspectRatio) {\n    const style = canvas.style;\n    const renderHeight = canvas.getAttribute(\"height\");\n    const renderWidth = canvas.getAttribute(\"width\");\n    canvas[$216d2bdc6f281bf6$var$EXPANDO_KEY] = {\n        initial: {\n            height: renderHeight,\n            width: renderWidth,\n            style: {\n                display: style.display,\n                height: style.height,\n                width: style.width\n            }\n        }\n    };\n    style.display = style.display || \"block\";\n    style.boxSizing = style.boxSizing || \"border-box\";\n    if ($216d2bdc6f281bf6$var$isNullOrEmpty(renderWidth)) {\n        const displayWidth = (0, $c7mKY.J)(canvas, \"width\");\n        if (displayWidth !== undefined) canvas.width = displayWidth;\n    }\n    if ($216d2bdc6f281bf6$var$isNullOrEmpty(renderHeight)) {\n        if (canvas.style.height === \"\") canvas.height = canvas.width / (aspectRatio || 2);\n        else {\n            const displayHeight = (0, $c7mKY.J)(canvas, \"height\");\n            if (displayHeight !== undefined) canvas.height = displayHeight;\n        }\n    }\n    return canvas;\n}\nconst $216d2bdc6f281bf6$var$eventListenerOptions = (0, $c7mKY.K) ? {\n    passive: true\n} : false;\nfunction $216d2bdc6f281bf6$var$addListener(node, type, listener) {\n    if (node) node.addEventListener(type, listener, $216d2bdc6f281bf6$var$eventListenerOptions);\n}\nfunction $216d2bdc6f281bf6$var$removeListener(chart, type, listener) {\n    if (chart && chart.canvas) chart.canvas.removeEventListener(type, listener, $216d2bdc6f281bf6$var$eventListenerOptions);\n}\nfunction $216d2bdc6f281bf6$var$fromNativeEvent(event, chart) {\n    const type = $216d2bdc6f281bf6$var$EVENT_TYPES[event.type] || event.type;\n    const { x: x, y: y } = (0, $c7mKY.z)(event, chart);\n    return {\n        type: type,\n        chart: chart,\n        native: event,\n        x: x !== undefined ? x : null,\n        y: y !== undefined ? y : null\n    };\n}\nfunction $216d2bdc6f281bf6$var$nodeListContains(nodeList, canvas) {\n    for (const node of nodeList){\n        if (node === canvas || node.contains(canvas)) return true;\n    }\n}\nfunction $216d2bdc6f281bf6$var$createAttachObserver(chart, type, listener) {\n    const canvas = chart.canvas;\n    const observer = new MutationObserver((entries)=>{\n        let trigger = false;\n        for (const entry of entries){\n            trigger = trigger || $216d2bdc6f281bf6$var$nodeListContains(entry.addedNodes, canvas);\n            trigger = trigger && !$216d2bdc6f281bf6$var$nodeListContains(entry.removedNodes, canvas);\n        }\n        if (trigger) listener();\n    });\n    observer.observe(document, {\n        childList: true,\n        subtree: true\n    });\n    return observer;\n}\nfunction $216d2bdc6f281bf6$var$createDetachObserver(chart, type, listener) {\n    const canvas = chart.canvas;\n    const observer = new MutationObserver((entries)=>{\n        let trigger = false;\n        for (const entry of entries){\n            trigger = trigger || $216d2bdc6f281bf6$var$nodeListContains(entry.removedNodes, canvas);\n            trigger = trigger && !$216d2bdc6f281bf6$var$nodeListContains(entry.addedNodes, canvas);\n        }\n        if (trigger) listener();\n    });\n    observer.observe(document, {\n        childList: true,\n        subtree: true\n    });\n    return observer;\n}\nconst $216d2bdc6f281bf6$var$drpListeningCharts = new Map();\nlet $216d2bdc6f281bf6$var$oldDevicePixelRatio = 0;\nfunction $216d2bdc6f281bf6$var$onWindowResize() {\n    const dpr = window.devicePixelRatio;\n    if (dpr === $216d2bdc6f281bf6$var$oldDevicePixelRatio) return;\n    $216d2bdc6f281bf6$var$oldDevicePixelRatio = dpr;\n    $216d2bdc6f281bf6$var$drpListeningCharts.forEach((resize, chart)=>{\n        if (chart.currentDevicePixelRatio !== dpr) resize();\n    });\n}\nfunction $216d2bdc6f281bf6$var$listenDevicePixelRatioChanges(chart, resize) {\n    if (!$216d2bdc6f281bf6$var$drpListeningCharts.size) window.addEventListener(\"resize\", $216d2bdc6f281bf6$var$onWindowResize);\n    $216d2bdc6f281bf6$var$drpListeningCharts.set(chart, resize);\n}\nfunction $216d2bdc6f281bf6$var$unlistenDevicePixelRatioChanges(chart) {\n    $216d2bdc6f281bf6$var$drpListeningCharts.delete(chart);\n    if (!$216d2bdc6f281bf6$var$drpListeningCharts.size) window.removeEventListener(\"resize\", $216d2bdc6f281bf6$var$onWindowResize);\n}\nfunction $216d2bdc6f281bf6$var$createResizeObserver(chart, type, listener) {\n    const canvas = chart.canvas;\n    const container = canvas && (0, $c7mKY.I)(canvas);\n    if (!container) return;\n    const resize = (0, $c7mKY.L)((width, height)=>{\n        const w = container.clientWidth;\n        listener(width, height);\n        if (w < container.clientWidth) listener();\n    }, window);\n    const observer = new ResizeObserver((entries)=>{\n        const entry = entries[0];\n        const width = entry.contentRect.width;\n        const height = entry.contentRect.height;\n        if (width === 0 && height === 0) return;\n        resize(width, height);\n    });\n    observer.observe(container);\n    $216d2bdc6f281bf6$var$listenDevicePixelRatioChanges(chart, resize);\n    return observer;\n}\nfunction $216d2bdc6f281bf6$var$releaseObserver(chart, type, observer) {\n    if (observer) observer.disconnect();\n    if (type === \"resize\") $216d2bdc6f281bf6$var$unlistenDevicePixelRatioChanges(chart);\n}\nfunction $216d2bdc6f281bf6$var$createProxyAndListen(chart, type, listener) {\n    const canvas = chart.canvas;\n    const proxy = (0, $c7mKY.L)((event)=>{\n        if (chart.ctx !== null) listener($216d2bdc6f281bf6$var$fromNativeEvent(event, chart));\n    }, chart);\n    $216d2bdc6f281bf6$var$addListener(canvas, type, proxy);\n    return proxy;\n}\nclass $216d2bdc6f281bf6$export$f02da7f882cf6b2e extends $216d2bdc6f281bf6$export$7b1aeb87f31f7da8 {\n    acquireContext(canvas, aspectRatio) {\n        const context = canvas && canvas.getContext && canvas.getContext(\"2d\");\n        if (context && context.canvas === canvas) {\n            $216d2bdc6f281bf6$var$initCanvas(canvas, aspectRatio);\n            return context;\n        }\n        return null;\n    }\n    releaseContext(context) {\n        const canvas = context.canvas;\n        if (!canvas[$216d2bdc6f281bf6$var$EXPANDO_KEY]) return false;\n        const initial = canvas[$216d2bdc6f281bf6$var$EXPANDO_KEY].initial;\n        [\n            \"height\",\n            \"width\"\n        ].forEach((prop)=>{\n            const value = initial[prop];\n            if ((0, $c7mKY.k)(value)) canvas.removeAttribute(prop);\n            else canvas.setAttribute(prop, value);\n        });\n        const style = initial.style || {};\n        Object.keys(style).forEach((key)=>{\n            canvas.style[key] = style[key];\n        });\n        canvas.width = canvas.width;\n        delete canvas[$216d2bdc6f281bf6$var$EXPANDO_KEY];\n        return true;\n    }\n    addEventListener(chart, type, listener) {\n        this.removeEventListener(chart, type);\n        const proxies = chart.$proxies || (chart.$proxies = {});\n        const handlers = {\n            attach: $216d2bdc6f281bf6$var$createAttachObserver,\n            detach: $216d2bdc6f281bf6$var$createDetachObserver,\n            resize: $216d2bdc6f281bf6$var$createResizeObserver\n        };\n        const handler = handlers[type] || $216d2bdc6f281bf6$var$createProxyAndListen;\n        proxies[type] = handler(chart, type, listener);\n    }\n    removeEventListener(chart, type) {\n        const proxies = chart.$proxies || (chart.$proxies = {});\n        const proxy = proxies[type];\n        if (!proxy) return;\n        const handlers = {\n            attach: $216d2bdc6f281bf6$var$releaseObserver,\n            detach: $216d2bdc6f281bf6$var$releaseObserver,\n            resize: $216d2bdc6f281bf6$var$releaseObserver\n        };\n        const handler = handlers[type] || $216d2bdc6f281bf6$var$removeListener;\n        handler(chart, type, proxy);\n        proxies[type] = undefined;\n    }\n    getDevicePixelRatio() {\n        return window.devicePixelRatio;\n    }\n    getMaximumSize(canvas, width, height, aspectRatio) {\n        return (0, $c7mKY.G)(canvas, width, height, aspectRatio);\n    }\n    isAttached(canvas) {\n        const container = canvas && (0, $c7mKY.I)(canvas);\n        return !!(container && container.isConnected);\n    }\n}\nfunction $216d2bdc6f281bf6$export$72cd9e67b1b784f9(canvas) {\n    if (!(0, $c7mKY.M)() || typeof OffscreenCanvas !== \"undefined\" && canvas instanceof OffscreenCanvas) return $216d2bdc6f281bf6$export$a40a96b24b46cf35;\n    return $216d2bdc6f281bf6$export$f02da7f882cf6b2e;\n}\nclass $216d2bdc6f281bf6$export$db77ccec0bb4ccac {\n    static defaults = {};\n    static defaultRoutes = undefined;\n    x;\n    y;\n    active = false;\n    options;\n    $animations;\n    tooltipPosition(useFinalPosition) {\n        const { x: x, y: y } = this.getProps([\n            \"x\",\n            \"y\"\n        ], useFinalPosition);\n        return {\n            x: x,\n            y: y\n        };\n    }\n    hasValue() {\n        return (0, $c7mKY.x)(this.x) && (0, $c7mKY.x)(this.y);\n    }\n    getProps(props, final) {\n        const anims = this.$animations;\n        if (!final || !anims) // let's not create an object, if not needed\n        return this;\n        const ret = {};\n        props.forEach((prop)=>{\n            ret[prop] = anims[prop] && anims[prop].active() ? anims[prop]._to : this[prop];\n        });\n        return ret;\n    }\n}\nfunction $216d2bdc6f281bf6$var$autoSkip(scale, ticks) {\n    const tickOpts = scale.options.ticks;\n    const determinedMaxTicks = $216d2bdc6f281bf6$var$determineMaxTicks(scale);\n    const ticksLimit = Math.min(tickOpts.maxTicksLimit || determinedMaxTicks, determinedMaxTicks);\n    const majorIndices = tickOpts.major.enabled ? $216d2bdc6f281bf6$var$getMajorIndices(ticks) : [];\n    const numMajorIndices = majorIndices.length;\n    const first = majorIndices[0];\n    const last = majorIndices[numMajorIndices - 1];\n    const newTicks = [];\n    if (numMajorIndices > ticksLimit) {\n        $216d2bdc6f281bf6$var$skipMajors(ticks, newTicks, majorIndices, numMajorIndices / ticksLimit);\n        return newTicks;\n    }\n    const spacing = $216d2bdc6f281bf6$var$calculateSpacing(majorIndices, ticks, ticksLimit);\n    if (numMajorIndices > 0) {\n        let i, ilen;\n        const avgMajorSpacing = numMajorIndices > 1 ? Math.round((last - first) / (numMajorIndices - 1)) : null;\n        $216d2bdc6f281bf6$var$skip(ticks, newTicks, spacing, (0, $c7mKY.k)(avgMajorSpacing) ? 0 : first - avgMajorSpacing, first);\n        for(i = 0, ilen = numMajorIndices - 1; i < ilen; i++)$216d2bdc6f281bf6$var$skip(ticks, newTicks, spacing, majorIndices[i], majorIndices[i + 1]);\n        $216d2bdc6f281bf6$var$skip(ticks, newTicks, spacing, last, (0, $c7mKY.k)(avgMajorSpacing) ? ticks.length : last + avgMajorSpacing);\n        return newTicks;\n    }\n    $216d2bdc6f281bf6$var$skip(ticks, newTicks, spacing);\n    return newTicks;\n}\nfunction $216d2bdc6f281bf6$var$determineMaxTicks(scale) {\n    const offset = scale.options.offset;\n    const tickLength = scale._tickSize();\n    const maxScale = scale._length / tickLength + (offset ? 0 : 1);\n    const maxChart = scale._maxLength / tickLength;\n    return Math.floor(Math.min(maxScale, maxChart));\n}\nfunction $216d2bdc6f281bf6$var$calculateSpacing(majorIndices, ticks, ticksLimit) {\n    const evenMajorSpacing = $216d2bdc6f281bf6$var$getEvenSpacing(majorIndices);\n    const spacing = ticks.length / ticksLimit;\n    if (!evenMajorSpacing) return Math.max(spacing, 1);\n    const factors = (0, $c7mKY.N)(evenMajorSpacing);\n    for(let i = 0, ilen = factors.length - 1; i < ilen; i++){\n        const factor = factors[i];\n        if (factor > spacing) return factor;\n    }\n    return Math.max(spacing, 1);\n}\nfunction $216d2bdc6f281bf6$var$getMajorIndices(ticks) {\n    const result = [];\n    let i, ilen;\n    for(i = 0, ilen = ticks.length; i < ilen; i++)if (ticks[i].major) result.push(i);\n    return result;\n}\nfunction $216d2bdc6f281bf6$var$skipMajors(ticks, newTicks, majorIndices, spacing) {\n    let count = 0;\n    let next = majorIndices[0];\n    let i;\n    spacing = Math.ceil(spacing);\n    for(i = 0; i < ticks.length; i++)if (i === next) {\n        newTicks.push(ticks[i]);\n        count++;\n        next = majorIndices[count * spacing];\n    }\n}\nfunction $216d2bdc6f281bf6$var$skip(ticks, newTicks, spacing, majorStart, majorEnd) {\n    const start = (0, $c7mKY.v)(majorStart, 0);\n    const end = Math.min((0, $c7mKY.v)(majorEnd, ticks.length), ticks.length);\n    let count = 0;\n    let length, i, next;\n    spacing = Math.ceil(spacing);\n    if (majorEnd) {\n        length = majorEnd - majorStart;\n        spacing = length / Math.floor(length / spacing);\n    }\n    next = start;\n    while(next < 0){\n        count++;\n        next = Math.round(start + count * spacing);\n    }\n    for(i = Math.max(start, 0); i < end; i++)if (i === next) {\n        newTicks.push(ticks[i]);\n        count++;\n        next = Math.round(start + count * spacing);\n    }\n}\nfunction $216d2bdc6f281bf6$var$getEvenSpacing(arr) {\n    const len = arr.length;\n    let i, diff;\n    if (len < 2) return false;\n    for(diff = arr[0], i = 1; i < len; ++i){\n        if (arr[i] - arr[i - 1] !== diff) return false;\n    }\n    return diff;\n}\nconst $216d2bdc6f281bf6$var$reverseAlign = (align)=>align === \"left\" ? \"right\" : align === \"right\" ? \"left\" : align;\nconst $216d2bdc6f281bf6$var$offsetFromEdge = (scale, edge, offset)=>edge === \"top\" || edge === \"left\" ? scale[edge] + offset : scale[edge] - offset;\nconst $216d2bdc6f281bf6$var$getTicksLimit = (ticksLength, maxTicksLimit)=>Math.min(maxTicksLimit || ticksLength, ticksLength);\nfunction $216d2bdc6f281bf6$var$sample(arr, numItems) {\n    const result = [];\n    const increment = arr.length / numItems;\n    const len = arr.length;\n    let i = 0;\n    for(; i < len; i += increment)result.push(arr[Math.floor(i)]);\n    return result;\n}\nfunction $216d2bdc6f281bf6$var$getPixelForGridLine(scale, index, offsetGridLines) {\n    const length = scale.ticks.length;\n    const validIndex = Math.min(index, length - 1);\n    const start = scale._startPixel;\n    const end = scale._endPixel;\n    const epsilon = 1e-6;\n    let lineValue = scale.getPixelForTick(validIndex);\n    let offset;\n    if (offsetGridLines) {\n        if (length === 1) offset = Math.max(lineValue - start, end - lineValue);\n        else if (index === 0) offset = (scale.getPixelForTick(1) - lineValue) / 2;\n        else offset = (lineValue - scale.getPixelForTick(validIndex - 1)) / 2;\n        lineValue += validIndex < index ? offset : -offset;\n        if (lineValue < start - epsilon || lineValue > end + epsilon) return;\n    }\n    return lineValue;\n}\nfunction $216d2bdc6f281bf6$var$garbageCollect(caches, length) {\n    (0, $c7mKY.F)(caches, (cache)=>{\n        const gc = cache.gc;\n        const gcLen = gc.length / 2;\n        let i;\n        if (gcLen > length) {\n            for(i = 0; i < gcLen; ++i)delete cache.data[gc[i]];\n            gc.splice(0, gcLen);\n        }\n    });\n}\nfunction $216d2bdc6f281bf6$var$getTickMarkLength(options) {\n    return options.drawTicks ? options.tickLength : 0;\n}\nfunction $216d2bdc6f281bf6$var$getTitleHeight(options, fallback) {\n    if (!options.display) return 0;\n    const font = (0, $c7mKY.a0)(options.font, fallback);\n    const padding = (0, $c7mKY.E)(options.padding);\n    const lines = (0, $c7mKY.b)(options.text) ? options.text.length : 1;\n    return lines * font.lineHeight + padding.height;\n}\nfunction $216d2bdc6f281bf6$var$createScaleContext(parent, scale) {\n    return (0, $c7mKY.j)(parent, {\n        scale: scale,\n        type: \"scale\"\n    });\n}\nfunction $216d2bdc6f281bf6$var$createTickContext(parent, index, tick) {\n    return (0, $c7mKY.j)(parent, {\n        tick: tick,\n        index: index,\n        type: \"tick\"\n    });\n}\nfunction $216d2bdc6f281bf6$var$titleAlign(align, position, reverse) {\n    let ret = (0, $c7mKY.a1)(align);\n    if (reverse && position !== \"right\" || !reverse && position === \"right\") ret = $216d2bdc6f281bf6$var$reverseAlign(ret);\n    return ret;\n}\nfunction $216d2bdc6f281bf6$var$titleArgs(scale, offset, position, align) {\n    const { top: top, left: left, bottom: bottom, right: right, chart: chart } = scale;\n    const { chartArea: chartArea, scales: scales } = chart;\n    let rotation = 0;\n    let maxWidth, titleX, titleY;\n    const height = bottom - top;\n    const width = right - left;\n    if (scale.isHorizontal()) {\n        titleX = (0, $c7mKY.a2)(align, left, right);\n        if ((0, $c7mKY.i)(position)) {\n            const positionAxisID = Object.keys(position)[0];\n            const value = position[positionAxisID];\n            titleY = scales[positionAxisID].getPixelForValue(value) + height - offset;\n        } else if (position === \"center\") titleY = (chartArea.bottom + chartArea.top) / 2 + height - offset;\n        else titleY = $216d2bdc6f281bf6$var$offsetFromEdge(scale, position, offset);\n        maxWidth = right - left;\n    } else {\n        if ((0, $c7mKY.i)(position)) {\n            const positionAxisID = Object.keys(position)[0];\n            const value = position[positionAxisID];\n            titleX = scales[positionAxisID].getPixelForValue(value) - width + offset;\n        } else if (position === \"center\") titleX = (chartArea.left + chartArea.right) / 2 - width + offset;\n        else titleX = $216d2bdc6f281bf6$var$offsetFromEdge(scale, position, offset);\n        titleY = (0, $c7mKY.a2)(align, bottom, top);\n        rotation = position === \"left\" ? -(0, $c7mKY.H) : (0, $c7mKY.H);\n    }\n    return {\n        titleX: titleX,\n        titleY: titleY,\n        maxWidth: maxWidth,\n        rotation: rotation\n    };\n}\nclass $216d2bdc6f281bf6$export$d60cfc58d3c358b6 extends $216d2bdc6f281bf6$export$db77ccec0bb4ccac {\n    constructor(cfg){\n        super();\n        this.id = cfg.id;\n        this.type = cfg.type;\n        this.options = undefined;\n        this.ctx = cfg.ctx;\n        this.chart = cfg.chart;\n        this.top = undefined;\n        this.bottom = undefined;\n        this.left = undefined;\n        this.right = undefined;\n        this.width = undefined;\n        this.height = undefined;\n        this._margins = {\n            left: 0,\n            right: 0,\n            top: 0,\n            bottom: 0\n        };\n        this.maxWidth = undefined;\n        this.maxHeight = undefined;\n        this.paddingTop = undefined;\n        this.paddingBottom = undefined;\n        this.paddingLeft = undefined;\n        this.paddingRight = undefined;\n        this.axis = undefined;\n        this.labelRotation = undefined;\n        this.min = undefined;\n        this.max = undefined;\n        this._range = undefined;\n        this.ticks = [];\n        this._gridLineItems = null;\n        this._labelItems = null;\n        this._labelSizes = null;\n        this._length = 0;\n        this._maxLength = 0;\n        this._longestTextCache = {};\n        this._startPixel = undefined;\n        this._endPixel = undefined;\n        this._reversePixels = false;\n        this._userMax = undefined;\n        this._userMin = undefined;\n        this._suggestedMax = undefined;\n        this._suggestedMin = undefined;\n        this._ticksLength = 0;\n        this._borderValue = 0;\n        this._cache = {};\n        this._dataLimitsCached = false;\n        this.$context = undefined;\n    }\n    init(options) {\n        this.options = options.setContext(this.getContext());\n        this.axis = options.axis;\n        this._userMin = this.parse(options.min);\n        this._userMax = this.parse(options.max);\n        this._suggestedMin = this.parse(options.suggestedMin);\n        this._suggestedMax = this.parse(options.suggestedMax);\n    }\n    parse(raw, index) {\n        return raw;\n    }\n    getUserBounds() {\n        let { _userMin: _userMin, _userMax: _userMax, _suggestedMin: _suggestedMin, _suggestedMax: _suggestedMax } = this;\n        _userMin = (0, $c7mKY.O)(_userMin, Number.POSITIVE_INFINITY);\n        _userMax = (0, $c7mKY.O)(_userMax, Number.NEGATIVE_INFINITY);\n        _suggestedMin = (0, $c7mKY.O)(_suggestedMin, Number.POSITIVE_INFINITY);\n        _suggestedMax = (0, $c7mKY.O)(_suggestedMax, Number.NEGATIVE_INFINITY);\n        return {\n            min: (0, $c7mKY.O)(_userMin, _suggestedMin),\n            max: (0, $c7mKY.O)(_userMax, _suggestedMax),\n            minDefined: (0, $c7mKY.g)(_userMin),\n            maxDefined: (0, $c7mKY.g)(_userMax)\n        };\n    }\n    getMinMax(canStack) {\n        let { min: min, max: max, minDefined: minDefined, maxDefined: maxDefined } = this.getUserBounds();\n        let range;\n        if (minDefined && maxDefined) return {\n            min: min,\n            max: max\n        };\n        const metas = this.getMatchingVisibleMetas();\n        for(let i = 0, ilen = metas.length; i < ilen; ++i){\n            range = metas[i].controller.getMinMax(this, canStack);\n            if (!minDefined) min = Math.min(min, range.min);\n            if (!maxDefined) max = Math.max(max, range.max);\n        }\n        min = maxDefined && min > max ? max : min;\n        max = minDefined && min > max ? min : max;\n        return {\n            min: (0, $c7mKY.O)(min, (0, $c7mKY.O)(max, min)),\n            max: (0, $c7mKY.O)(max, (0, $c7mKY.O)(min, max))\n        };\n    }\n    getPadding() {\n        return {\n            left: this.paddingLeft || 0,\n            top: this.paddingTop || 0,\n            right: this.paddingRight || 0,\n            bottom: this.paddingBottom || 0\n        };\n    }\n    getTicks() {\n        return this.ticks;\n    }\n    getLabels() {\n        const data = this.chart.data;\n        return this.options.labels || (this.isHorizontal() ? data.xLabels : data.yLabels) || data.labels || [];\n    }\n    getLabelItems(chartArea = this.chart.chartArea) {\n        const items = this._labelItems || (this._labelItems = this._computeLabelItems(chartArea));\n        return items;\n    }\n    beforeLayout() {\n        this._cache = {};\n        this._dataLimitsCached = false;\n    }\n    beforeUpdate() {\n        (0, $c7mKY.Q)(this.options.beforeUpdate, [\n            this\n        ]);\n    }\n    update(maxWidth, maxHeight, margins) {\n        const { beginAtZero: beginAtZero, grace: grace, ticks: tickOpts } = this.options;\n        const sampleSize = tickOpts.sampleSize;\n        this.beforeUpdate();\n        this.maxWidth = maxWidth;\n        this.maxHeight = maxHeight;\n        this._margins = margins = Object.assign({\n            left: 0,\n            right: 0,\n            top: 0,\n            bottom: 0\n        }, margins);\n        this.ticks = null;\n        this._labelSizes = null;\n        this._gridLineItems = null;\n        this._labelItems = null;\n        this.beforeSetDimensions();\n        this.setDimensions();\n        this.afterSetDimensions();\n        this._maxLength = this.isHorizontal() ? this.width + margins.left + margins.right : this.height + margins.top + margins.bottom;\n        if (!this._dataLimitsCached) {\n            this.beforeDataLimits();\n            this.determineDataLimits();\n            this.afterDataLimits();\n            this._range = (0, $c7mKY.R)(this, grace, beginAtZero);\n            this._dataLimitsCached = true;\n        }\n        this.beforeBuildTicks();\n        this.ticks = this.buildTicks() || [];\n        this.afterBuildTicks();\n        const samplingEnabled = sampleSize < this.ticks.length;\n        this._convertTicksToLabels(samplingEnabled ? $216d2bdc6f281bf6$var$sample(this.ticks, sampleSize) : this.ticks);\n        this.configure();\n        this.beforeCalculateLabelRotation();\n        this.calculateLabelRotation();\n        this.afterCalculateLabelRotation();\n        if (tickOpts.display && (tickOpts.autoSkip || tickOpts.source === \"auto\")) {\n            this.ticks = $216d2bdc6f281bf6$var$autoSkip(this, this.ticks);\n            this._labelSizes = null;\n            this.afterAutoSkip();\n        }\n        if (samplingEnabled) this._convertTicksToLabels(this.ticks);\n        this.beforeFit();\n        this.fit();\n        this.afterFit();\n        this.afterUpdate();\n    }\n    configure() {\n        let reversePixels = this.options.reverse;\n        let startPixel, endPixel;\n        if (this.isHorizontal()) {\n            startPixel = this.left;\n            endPixel = this.right;\n        } else {\n            startPixel = this.top;\n            endPixel = this.bottom;\n            reversePixels = !reversePixels;\n        }\n        this._startPixel = startPixel;\n        this._endPixel = endPixel;\n        this._reversePixels = reversePixels;\n        this._length = endPixel - startPixel;\n        this._alignToPixels = this.options.alignToPixels;\n    }\n    afterUpdate() {\n        (0, $c7mKY.Q)(this.options.afterUpdate, [\n            this\n        ]);\n    }\n    beforeSetDimensions() {\n        (0, $c7mKY.Q)(this.options.beforeSetDimensions, [\n            this\n        ]);\n    }\n    setDimensions() {\n        if (this.isHorizontal()) {\n            this.width = this.maxWidth;\n            this.left = 0;\n            this.right = this.width;\n        } else {\n            this.height = this.maxHeight;\n            this.top = 0;\n            this.bottom = this.height;\n        }\n        this.paddingLeft = 0;\n        this.paddingTop = 0;\n        this.paddingRight = 0;\n        this.paddingBottom = 0;\n    }\n    afterSetDimensions() {\n        (0, $c7mKY.Q)(this.options.afterSetDimensions, [\n            this\n        ]);\n    }\n    _callHooks(name) {\n        this.chart.notifyPlugins(name, this.getContext());\n        (0, $c7mKY.Q)(this.options[name], [\n            this\n        ]);\n    }\n    beforeDataLimits() {\n        this._callHooks(\"beforeDataLimits\");\n    }\n    determineDataLimits() {}\n    afterDataLimits() {\n        this._callHooks(\"afterDataLimits\");\n    }\n    beforeBuildTicks() {\n        this._callHooks(\"beforeBuildTicks\");\n    }\n    buildTicks() {\n        return [];\n    }\n    afterBuildTicks() {\n        this._callHooks(\"afterBuildTicks\");\n    }\n    beforeTickToLabelConversion() {\n        (0, $c7mKY.Q)(this.options.beforeTickToLabelConversion, [\n            this\n        ]);\n    }\n    generateTickLabels(ticks) {\n        const tickOpts = this.options.ticks;\n        let i, ilen, tick;\n        for(i = 0, ilen = ticks.length; i < ilen; i++){\n            tick = ticks[i];\n            tick.label = (0, $c7mKY.Q)(tickOpts.callback, [\n                tick.value,\n                i,\n                ticks\n            ], this);\n        }\n    }\n    afterTickToLabelConversion() {\n        (0, $c7mKY.Q)(this.options.afterTickToLabelConversion, [\n            this\n        ]);\n    }\n    beforeCalculateLabelRotation() {\n        (0, $c7mKY.Q)(this.options.beforeCalculateLabelRotation, [\n            this\n        ]);\n    }\n    calculateLabelRotation() {\n        const options = this.options;\n        const tickOpts = options.ticks;\n        const numTicks = $216d2bdc6f281bf6$var$getTicksLimit(this.ticks.length, options.ticks.maxTicksLimit);\n        const minRotation = tickOpts.minRotation || 0;\n        const maxRotation = tickOpts.maxRotation;\n        let labelRotation = minRotation;\n        let tickWidth, maxHeight, maxLabelDiagonal;\n        if (!this._isVisible() || !tickOpts.display || minRotation >= maxRotation || numTicks <= 1 || !this.isHorizontal()) {\n            this.labelRotation = minRotation;\n            return;\n        }\n        const labelSizes = this._getLabelSizes();\n        const maxLabelWidth = labelSizes.widest.width;\n        const maxLabelHeight = labelSizes.highest.height;\n        const maxWidth = (0, $c7mKY.S)(this.chart.width - maxLabelWidth, 0, this.maxWidth);\n        tickWidth = options.offset ? this.maxWidth / numTicks : maxWidth / (numTicks - 1);\n        if (maxLabelWidth + 6 > tickWidth) {\n            tickWidth = maxWidth / (numTicks - (options.offset ? 0.5 : 1));\n            maxHeight = this.maxHeight - $216d2bdc6f281bf6$var$getTickMarkLength(options.grid) - tickOpts.padding - $216d2bdc6f281bf6$var$getTitleHeight(options.title, this.chart.options.font);\n            maxLabelDiagonal = Math.sqrt(maxLabelWidth * maxLabelWidth + maxLabelHeight * maxLabelHeight);\n            labelRotation = (0, $c7mKY.U)(Math.min(Math.asin((0, $c7mKY.S)((labelSizes.highest.height + 6) / tickWidth, -1, 1)), Math.asin((0, $c7mKY.S)(maxHeight / maxLabelDiagonal, -1, 1)) - Math.asin((0, $c7mKY.S)(maxLabelHeight / maxLabelDiagonal, -1, 1))));\n            labelRotation = Math.max(minRotation, Math.min(maxRotation, labelRotation));\n        }\n        this.labelRotation = labelRotation;\n    }\n    afterCalculateLabelRotation() {\n        (0, $c7mKY.Q)(this.options.afterCalculateLabelRotation, [\n            this\n        ]);\n    }\n    afterAutoSkip() {}\n    beforeFit() {\n        (0, $c7mKY.Q)(this.options.beforeFit, [\n            this\n        ]);\n    }\n    fit() {\n        const minSize = {\n            width: 0,\n            height: 0\n        };\n        const { chart: chart, options: { ticks: tickOpts, title: titleOpts, grid: gridOpts } } = this;\n        const display = this._isVisible();\n        const isHorizontal = this.isHorizontal();\n        if (display) {\n            const titleHeight = $216d2bdc6f281bf6$var$getTitleHeight(titleOpts, chart.options.font);\n            if (isHorizontal) {\n                minSize.width = this.maxWidth;\n                minSize.height = $216d2bdc6f281bf6$var$getTickMarkLength(gridOpts) + titleHeight;\n            } else {\n                minSize.height = this.maxHeight;\n                minSize.width = $216d2bdc6f281bf6$var$getTickMarkLength(gridOpts) + titleHeight;\n            }\n            if (tickOpts.display && this.ticks.length) {\n                const { first: first, last: last, widest: widest, highest: highest } = this._getLabelSizes();\n                const tickPadding = tickOpts.padding * 2;\n                const angleRadians = (0, $c7mKY.t)(this.labelRotation);\n                const cos = Math.cos(angleRadians);\n                const sin = Math.sin(angleRadians);\n                if (isHorizontal) {\n                    const labelHeight = tickOpts.mirror ? 0 : sin * widest.width + cos * highest.height;\n                    minSize.height = Math.min(this.maxHeight, minSize.height + labelHeight + tickPadding);\n                } else {\n                    const labelWidth = tickOpts.mirror ? 0 : cos * widest.width + sin * highest.height;\n                    minSize.width = Math.min(this.maxWidth, minSize.width + labelWidth + tickPadding);\n                }\n                this._calculatePadding(first, last, sin, cos);\n            }\n        }\n        this._handleMargins();\n        if (isHorizontal) {\n            this.width = this._length = chart.width - this._margins.left - this._margins.right;\n            this.height = minSize.height;\n        } else {\n            this.width = minSize.width;\n            this.height = this._length = chart.height - this._margins.top - this._margins.bottom;\n        }\n    }\n    _calculatePadding(first, last, sin, cos) {\n        const { ticks: { align: align, padding: padding }, position: position } = this.options;\n        const isRotated = this.labelRotation !== 0;\n        const labelsBelowTicks = position !== \"top\" && this.axis === \"x\";\n        if (this.isHorizontal()) {\n            const offsetLeft = this.getPixelForTick(0) - this.left;\n            const offsetRight = this.right - this.getPixelForTick(this.ticks.length - 1);\n            let paddingLeft = 0;\n            let paddingRight = 0;\n            if (isRotated) {\n                if (labelsBelowTicks) {\n                    paddingLeft = cos * first.width;\n                    paddingRight = sin * last.height;\n                } else {\n                    paddingLeft = sin * first.height;\n                    paddingRight = cos * last.width;\n                }\n            } else if (align === \"start\") paddingRight = last.width;\n            else if (align === \"end\") paddingLeft = first.width;\n            else if (align !== \"inner\") {\n                paddingLeft = first.width / 2;\n                paddingRight = last.width / 2;\n            }\n            this.paddingLeft = Math.max((paddingLeft - offsetLeft + padding) * this.width / (this.width - offsetLeft), 0);\n            this.paddingRight = Math.max((paddingRight - offsetRight + padding) * this.width / (this.width - offsetRight), 0);\n        } else {\n            let paddingTop = last.height / 2;\n            let paddingBottom = first.height / 2;\n            if (align === \"start\") {\n                paddingTop = 0;\n                paddingBottom = first.height;\n            } else if (align === \"end\") {\n                paddingTop = last.height;\n                paddingBottom = 0;\n            }\n            this.paddingTop = paddingTop + padding;\n            this.paddingBottom = paddingBottom + padding;\n        }\n    }\n    _handleMargins() {\n        if (this._margins) {\n            this._margins.left = Math.max(this.paddingLeft, this._margins.left);\n            this._margins.top = Math.max(this.paddingTop, this._margins.top);\n            this._margins.right = Math.max(this.paddingRight, this._margins.right);\n            this._margins.bottom = Math.max(this.paddingBottom, this._margins.bottom);\n        }\n    }\n    afterFit() {\n        (0, $c7mKY.Q)(this.options.afterFit, [\n            this\n        ]);\n    }\n    isHorizontal() {\n        const { axis: axis, position: position } = this.options;\n        return position === \"top\" || position === \"bottom\" || axis === \"x\";\n    }\n    isFullSize() {\n        return this.options.fullSize;\n    }\n    _convertTicksToLabels(ticks) {\n        this.beforeTickToLabelConversion();\n        this.generateTickLabels(ticks);\n        let i, ilen;\n        for(i = 0, ilen = ticks.length; i < ilen; i++)if ((0, $c7mKY.k)(ticks[i].label)) {\n            ticks.splice(i, 1);\n            ilen--;\n            i--;\n        }\n        this.afterTickToLabelConversion();\n    }\n    _getLabelSizes() {\n        let labelSizes = this._labelSizes;\n        if (!labelSizes) {\n            const sampleSize = this.options.ticks.sampleSize;\n            let ticks = this.ticks;\n            if (sampleSize < ticks.length) ticks = $216d2bdc6f281bf6$var$sample(ticks, sampleSize);\n            this._labelSizes = labelSizes = this._computeLabelSizes(ticks, ticks.length, this.options.ticks.maxTicksLimit);\n        }\n        return labelSizes;\n    }\n    _computeLabelSizes(ticks, length, maxTicksLimit) {\n        const { ctx: ctx, _longestTextCache: caches } = this;\n        const widths = [];\n        const heights = [];\n        const increment = Math.floor(length / $216d2bdc6f281bf6$var$getTicksLimit(length, maxTicksLimit));\n        let widestLabelSize = 0;\n        let highestLabelSize = 0;\n        let i, j, jlen, label, tickFont, fontString, cache, lineHeight, width, height, nestedLabel;\n        for(i = 0; i < length; i += increment){\n            label = ticks[i].label;\n            tickFont = this._resolveTickFontOptions(i);\n            ctx.font = fontString = tickFont.string;\n            cache = caches[fontString] = caches[fontString] || {\n                data: {},\n                gc: []\n            };\n            lineHeight = tickFont.lineHeight;\n            width = height = 0;\n            if (!(0, $c7mKY.k)(label) && !(0, $c7mKY.b)(label)) {\n                width = (0, $c7mKY.V)(ctx, cache.data, cache.gc, width, label);\n                height = lineHeight;\n            } else if ((0, $c7mKY.b)(label)) for(j = 0, jlen = label.length; j < jlen; ++j){\n                nestedLabel = label[j];\n                if (!(0, $c7mKY.k)(nestedLabel) && !(0, $c7mKY.b)(nestedLabel)) {\n                    width = (0, $c7mKY.V)(ctx, cache.data, cache.gc, width, nestedLabel);\n                    height += lineHeight;\n                }\n            }\n            widths.push(width);\n            heights.push(height);\n            widestLabelSize = Math.max(width, widestLabelSize);\n            highestLabelSize = Math.max(height, highestLabelSize);\n        }\n        $216d2bdc6f281bf6$var$garbageCollect(caches, length);\n        const widest = widths.indexOf(widestLabelSize);\n        const highest = heights.indexOf(highestLabelSize);\n        const valueAt = (idx)=>({\n                width: widths[idx] || 0,\n                height: heights[idx] || 0\n            });\n        return {\n            first: valueAt(0),\n            last: valueAt(length - 1),\n            widest: valueAt(widest),\n            highest: valueAt(highest),\n            widths: widths,\n            heights: heights\n        };\n    }\n    getLabelForValue(value) {\n        return value;\n    }\n    getPixelForValue(value, index) {\n        return NaN;\n    }\n    getValueForPixel(pixel) {}\n    getPixelForTick(index) {\n        const ticks = this.ticks;\n        if (index < 0 || index > ticks.length - 1) return null;\n        return this.getPixelForValue(ticks[index].value);\n    }\n    getPixelForDecimal(decimal) {\n        if (this._reversePixels) decimal = 1 - decimal;\n        const pixel = this._startPixel + decimal * this._length;\n        return (0, $c7mKY.W)(this._alignToPixels ? (0, $c7mKY.X)(this.chart, pixel, 0) : pixel);\n    }\n    getDecimalForPixel(pixel) {\n        const decimal = (pixel - this._startPixel) / this._length;\n        return this._reversePixels ? 1 - decimal : decimal;\n    }\n    getBasePixel() {\n        return this.getPixelForValue(this.getBaseValue());\n    }\n    getBaseValue() {\n        const { min: min, max: max } = this;\n        return min < 0 && max < 0 ? max : min > 0 && max > 0 ? min : 0;\n    }\n    getContext(index) {\n        const ticks = this.ticks || [];\n        if (index >= 0 && index < ticks.length) {\n            const tick = ticks[index];\n            return tick.$context || (tick.$context = $216d2bdc6f281bf6$var$createTickContext(this.getContext(), index, tick));\n        }\n        return this.$context || (this.$context = $216d2bdc6f281bf6$var$createScaleContext(this.chart.getContext(), this));\n    }\n    _tickSize() {\n        const optionTicks = this.options.ticks;\n        const rot = (0, $c7mKY.t)(this.labelRotation);\n        const cos = Math.abs(Math.cos(rot));\n        const sin = Math.abs(Math.sin(rot));\n        const labelSizes = this._getLabelSizes();\n        const padding = optionTicks.autoSkipPadding || 0;\n        const w = labelSizes ? labelSizes.widest.width + padding : 0;\n        const h = labelSizes ? labelSizes.highest.height + padding : 0;\n        return this.isHorizontal() ? h * cos > w * sin ? w / cos : h / sin : h * sin < w * cos ? h / cos : w / sin;\n    }\n    _isVisible() {\n        const display = this.options.display;\n        if (display !== \"auto\") return !!display;\n        return this.getMatchingVisibleMetas().length > 0;\n    }\n    _computeGridLineItems(chartArea) {\n        const axis = this.axis;\n        const chart = this.chart;\n        const options = this.options;\n        const { grid: grid, position: position, border: border } = options;\n        const offset = grid.offset;\n        const isHorizontal = this.isHorizontal();\n        const ticks = this.ticks;\n        const ticksLength = ticks.length + (offset ? 1 : 0);\n        const tl = $216d2bdc6f281bf6$var$getTickMarkLength(grid);\n        const items = [];\n        const borderOpts = border.setContext(this.getContext());\n        const axisWidth = borderOpts.display ? borderOpts.width : 0;\n        const axisHalfWidth = axisWidth / 2;\n        const alignBorderValue = function(pixel) {\n            return (0, $c7mKY.X)(chart, pixel, axisWidth);\n        };\n        let borderValue, i, lineValue, alignedLineValue;\n        let tx1, ty1, tx2, ty2, x1, y1, x2, y2;\n        if (position === \"top\") {\n            borderValue = alignBorderValue(this.bottom);\n            ty1 = this.bottom - tl;\n            ty2 = borderValue - axisHalfWidth;\n            y1 = alignBorderValue(chartArea.top) + axisHalfWidth;\n            y2 = chartArea.bottom;\n        } else if (position === \"bottom\") {\n            borderValue = alignBorderValue(this.top);\n            y1 = chartArea.top;\n            y2 = alignBorderValue(chartArea.bottom) - axisHalfWidth;\n            ty1 = borderValue + axisHalfWidth;\n            ty2 = this.top + tl;\n        } else if (position === \"left\") {\n            borderValue = alignBorderValue(this.right);\n            tx1 = this.right - tl;\n            tx2 = borderValue - axisHalfWidth;\n            x1 = alignBorderValue(chartArea.left) + axisHalfWidth;\n            x2 = chartArea.right;\n        } else if (position === \"right\") {\n            borderValue = alignBorderValue(this.left);\n            x1 = chartArea.left;\n            x2 = alignBorderValue(chartArea.right) - axisHalfWidth;\n            tx1 = borderValue + axisHalfWidth;\n            tx2 = this.left + tl;\n        } else if (axis === \"x\") {\n            if (position === \"center\") borderValue = alignBorderValue((chartArea.top + chartArea.bottom) / 2 + 0.5);\n            else if ((0, $c7mKY.i)(position)) {\n                const positionAxisID = Object.keys(position)[0];\n                const value = position[positionAxisID];\n                borderValue = alignBorderValue(this.chart.scales[positionAxisID].getPixelForValue(value));\n            }\n            y1 = chartArea.top;\n            y2 = chartArea.bottom;\n            ty1 = borderValue + axisHalfWidth;\n            ty2 = ty1 + tl;\n        } else if (axis === \"y\") {\n            if (position === \"center\") borderValue = alignBorderValue((chartArea.left + chartArea.right) / 2);\n            else if ((0, $c7mKY.i)(position)) {\n                const positionAxisID = Object.keys(position)[0];\n                const value = position[positionAxisID];\n                borderValue = alignBorderValue(this.chart.scales[positionAxisID].getPixelForValue(value));\n            }\n            tx1 = borderValue - axisHalfWidth;\n            tx2 = tx1 - tl;\n            x1 = chartArea.left;\n            x2 = chartArea.right;\n        }\n        const limit = (0, $c7mKY.v)(options.ticks.maxTicksLimit, ticksLength);\n        const step = Math.max(1, Math.ceil(ticksLength / limit));\n        for(i = 0; i < ticksLength; i += step){\n            const context = this.getContext(i);\n            const optsAtIndex = grid.setContext(context);\n            const optsAtIndexBorder = border.setContext(context);\n            const lineWidth = optsAtIndex.lineWidth;\n            const lineColor = optsAtIndex.color;\n            const borderDash = optsAtIndexBorder.dash || [];\n            const borderDashOffset = optsAtIndexBorder.dashOffset;\n            const tickWidth = optsAtIndex.tickWidth;\n            const tickColor = optsAtIndex.tickColor;\n            const tickBorderDash = optsAtIndex.tickBorderDash || [];\n            const tickBorderDashOffset = optsAtIndex.tickBorderDashOffset;\n            lineValue = $216d2bdc6f281bf6$var$getPixelForGridLine(this, i, offset);\n            if (lineValue === undefined) continue;\n            alignedLineValue = (0, $c7mKY.X)(chart, lineValue, lineWidth);\n            if (isHorizontal) tx1 = tx2 = x1 = x2 = alignedLineValue;\n            else ty1 = ty2 = y1 = y2 = alignedLineValue;\n            items.push({\n                tx1: tx1,\n                ty1: ty1,\n                tx2: tx2,\n                ty2: ty2,\n                x1: x1,\n                y1: y1,\n                x2: x2,\n                y2: y2,\n                width: lineWidth,\n                color: lineColor,\n                borderDash: borderDash,\n                borderDashOffset: borderDashOffset,\n                tickWidth: tickWidth,\n                tickColor: tickColor,\n                tickBorderDash: tickBorderDash,\n                tickBorderDashOffset: tickBorderDashOffset\n            });\n        }\n        this._ticksLength = ticksLength;\n        this._borderValue = borderValue;\n        return items;\n    }\n    _computeLabelItems(chartArea) {\n        const axis = this.axis;\n        const options = this.options;\n        const { position: position, ticks: optionTicks } = options;\n        const isHorizontal = this.isHorizontal();\n        const ticks = this.ticks;\n        const { align: align, crossAlign: crossAlign, padding: padding, mirror: mirror } = optionTicks;\n        const tl = $216d2bdc6f281bf6$var$getTickMarkLength(options.grid);\n        const tickAndPadding = tl + padding;\n        const hTickAndPadding = mirror ? -padding : tickAndPadding;\n        const rotation = -(0, $c7mKY.t)(this.labelRotation);\n        const items = [];\n        let i, ilen, tick, label, x, y, textAlign, pixel, font, lineHeight, lineCount, textOffset;\n        let textBaseline = \"middle\";\n        if (position === \"top\") {\n            y = this.bottom - hTickAndPadding;\n            textAlign = this._getXAxisLabelAlignment();\n        } else if (position === \"bottom\") {\n            y = this.top + hTickAndPadding;\n            textAlign = this._getXAxisLabelAlignment();\n        } else if (position === \"left\") {\n            const ret = this._getYAxisLabelAlignment(tl);\n            textAlign = ret.textAlign;\n            x = ret.x;\n        } else if (position === \"right\") {\n            const ret = this._getYAxisLabelAlignment(tl);\n            textAlign = ret.textAlign;\n            x = ret.x;\n        } else if (axis === \"x\") {\n            if (position === \"center\") y = (chartArea.top + chartArea.bottom) / 2 + tickAndPadding;\n            else if ((0, $c7mKY.i)(position)) {\n                const positionAxisID = Object.keys(position)[0];\n                const value = position[positionAxisID];\n                y = this.chart.scales[positionAxisID].getPixelForValue(value) + tickAndPadding;\n            }\n            textAlign = this._getXAxisLabelAlignment();\n        } else if (axis === \"y\") {\n            if (position === \"center\") x = (chartArea.left + chartArea.right) / 2 - tickAndPadding;\n            else if ((0, $c7mKY.i)(position)) {\n                const positionAxisID = Object.keys(position)[0];\n                const value = position[positionAxisID];\n                x = this.chart.scales[positionAxisID].getPixelForValue(value);\n            }\n            textAlign = this._getYAxisLabelAlignment(tl).textAlign;\n        }\n        if (axis === \"y\") {\n            if (align === \"start\") textBaseline = \"top\";\n            else if (align === \"end\") textBaseline = \"bottom\";\n        }\n        const labelSizes = this._getLabelSizes();\n        for(i = 0, ilen = ticks.length; i < ilen; ++i){\n            tick = ticks[i];\n            label = tick.label;\n            const optsAtIndex = optionTicks.setContext(this.getContext(i));\n            pixel = this.getPixelForTick(i) + optionTicks.labelOffset;\n            font = this._resolveTickFontOptions(i);\n            lineHeight = font.lineHeight;\n            lineCount = (0, $c7mKY.b)(label) ? label.length : 1;\n            const halfCount = lineCount / 2;\n            const color = optsAtIndex.color;\n            const strokeColor = optsAtIndex.textStrokeColor;\n            const strokeWidth = optsAtIndex.textStrokeWidth;\n            let tickTextAlign = textAlign;\n            if (isHorizontal) {\n                x = pixel;\n                if (textAlign === \"inner\") {\n                    if (i === ilen - 1) tickTextAlign = !this.options.reverse ? \"right\" : \"left\";\n                    else if (i === 0) tickTextAlign = !this.options.reverse ? \"left\" : \"right\";\n                    else tickTextAlign = \"center\";\n                }\n                if (position === \"top\") {\n                    if (crossAlign === \"near\" || rotation !== 0) textOffset = -lineCount * lineHeight + lineHeight / 2;\n                    else if (crossAlign === \"center\") textOffset = -labelSizes.highest.height / 2 - halfCount * lineHeight + lineHeight;\n                    else textOffset = -labelSizes.highest.height + lineHeight / 2;\n                } else {\n                    if (crossAlign === \"near\" || rotation !== 0) textOffset = lineHeight / 2;\n                    else if (crossAlign === \"center\") textOffset = labelSizes.highest.height / 2 - halfCount * lineHeight;\n                    else textOffset = labelSizes.highest.height - lineCount * lineHeight;\n                }\n                if (mirror) textOffset *= -1;\n                if (rotation !== 0 && !optsAtIndex.showLabelBackdrop) x += lineHeight / 2 * Math.sin(rotation);\n            } else {\n                y = pixel;\n                textOffset = (1 - lineCount) * lineHeight / 2;\n            }\n            let backdrop;\n            if (optsAtIndex.showLabelBackdrop) {\n                const labelPadding = (0, $c7mKY.E)(optsAtIndex.backdropPadding);\n                const height = labelSizes.heights[i];\n                const width = labelSizes.widths[i];\n                let top = textOffset - labelPadding.top;\n                let left = 0 - labelPadding.left;\n                switch(textBaseline){\n                    case \"middle\":\n                        top -= height / 2;\n                        break;\n                    case \"bottom\":\n                        top -= height;\n                        break;\n                }\n                switch(textAlign){\n                    case \"center\":\n                        left -= width / 2;\n                        break;\n                    case \"right\":\n                        left -= width;\n                        break;\n                    case \"inner\":\n                        if (i === ilen - 1) left -= width;\n                        else if (i > 0) left -= width / 2;\n                        break;\n                }\n                backdrop = {\n                    left: left,\n                    top: top,\n                    width: width + labelPadding.width,\n                    height: height + labelPadding.height,\n                    color: optsAtIndex.backdropColor\n                };\n            }\n            items.push({\n                label: label,\n                font: font,\n                textOffset: textOffset,\n                options: {\n                    rotation: rotation,\n                    color: color,\n                    strokeColor: strokeColor,\n                    strokeWidth: strokeWidth,\n                    textAlign: tickTextAlign,\n                    textBaseline: textBaseline,\n                    translation: [\n                        x,\n                        y\n                    ],\n                    backdrop: backdrop\n                }\n            });\n        }\n        return items;\n    }\n    _getXAxisLabelAlignment() {\n        const { position: position, ticks: ticks } = this.options;\n        const rotation = -(0, $c7mKY.t)(this.labelRotation);\n        if (rotation) return position === \"top\" ? \"left\" : \"right\";\n        let align = \"center\";\n        if (ticks.align === \"start\") align = \"left\";\n        else if (ticks.align === \"end\") align = \"right\";\n        else if (ticks.align === \"inner\") align = \"inner\";\n        return align;\n    }\n    _getYAxisLabelAlignment(tl) {\n        const { position: position, ticks: { crossAlign: crossAlign, mirror: mirror, padding: padding } } = this.options;\n        const labelSizes = this._getLabelSizes();\n        const tickAndPadding = tl + padding;\n        const widest = labelSizes.widest.width;\n        let textAlign;\n        let x;\n        if (position === \"left\") {\n            if (mirror) {\n                x = this.right + padding;\n                if (crossAlign === \"near\") textAlign = \"left\";\n                else if (crossAlign === \"center\") {\n                    textAlign = \"center\";\n                    x += widest / 2;\n                } else {\n                    textAlign = \"right\";\n                    x += widest;\n                }\n            } else {\n                x = this.right - tickAndPadding;\n                if (crossAlign === \"near\") textAlign = \"right\";\n                else if (crossAlign === \"center\") {\n                    textAlign = \"center\";\n                    x -= widest / 2;\n                } else {\n                    textAlign = \"left\";\n                    x = this.left;\n                }\n            }\n        } else if (position === \"right\") {\n            if (mirror) {\n                x = this.left + padding;\n                if (crossAlign === \"near\") textAlign = \"right\";\n                else if (crossAlign === \"center\") {\n                    textAlign = \"center\";\n                    x -= widest / 2;\n                } else {\n                    textAlign = \"left\";\n                    x -= widest;\n                }\n            } else {\n                x = this.left + tickAndPadding;\n                if (crossAlign === \"near\") textAlign = \"left\";\n                else if (crossAlign === \"center\") {\n                    textAlign = \"center\";\n                    x += widest / 2;\n                } else {\n                    textAlign = \"right\";\n                    x = this.right;\n                }\n            }\n        } else textAlign = \"right\";\n        return {\n            textAlign: textAlign,\n            x: x\n        };\n    }\n    _computeLabelArea() {\n        if (this.options.ticks.mirror) return;\n        const chart = this.chart;\n        const position = this.options.position;\n        if (position === \"left\" || position === \"right\") return {\n            top: 0,\n            left: this.left,\n            bottom: chart.height,\n            right: this.right\n        };\n        if (position === \"top\" || position === \"bottom\") return {\n            top: this.top,\n            left: 0,\n            bottom: this.bottom,\n            right: chart.width\n        };\n    }\n    drawBackground() {\n        const { ctx: ctx, options: { backgroundColor: backgroundColor }, left: left, top: top, width: width, height: height } = this;\n        if (backgroundColor) {\n            ctx.save();\n            ctx.fillStyle = backgroundColor;\n            ctx.fillRect(left, top, width, height);\n            ctx.restore();\n        }\n    }\n    getLineWidthForValue(value) {\n        const grid = this.options.grid;\n        if (!this._isVisible() || !grid.display) return 0;\n        const ticks = this.ticks;\n        const index = ticks.findIndex((t)=>t.value === value);\n        if (index >= 0) {\n            const opts = grid.setContext(this.getContext(index));\n            return opts.lineWidth;\n        }\n        return 0;\n    }\n    drawGrid(chartArea) {\n        const grid = this.options.grid;\n        const ctx = this.ctx;\n        const items = this._gridLineItems || (this._gridLineItems = this._computeGridLineItems(chartArea));\n        let i, ilen;\n        const drawLine = (p1, p2, style)=>{\n            if (!style.width || !style.color) return;\n            ctx.save();\n            ctx.lineWidth = style.width;\n            ctx.strokeStyle = style.color;\n            ctx.setLineDash(style.borderDash || []);\n            ctx.lineDashOffset = style.borderDashOffset;\n            ctx.beginPath();\n            ctx.moveTo(p1.x, p1.y);\n            ctx.lineTo(p2.x, p2.y);\n            ctx.stroke();\n            ctx.restore();\n        };\n        if (grid.display) for(i = 0, ilen = items.length; i < ilen; ++i){\n            const item = items[i];\n            if (grid.drawOnChartArea) drawLine({\n                x: item.x1,\n                y: item.y1\n            }, {\n                x: item.x2,\n                y: item.y2\n            }, item);\n            if (grid.drawTicks) drawLine({\n                x: item.tx1,\n                y: item.ty1\n            }, {\n                x: item.tx2,\n                y: item.ty2\n            }, {\n                color: item.tickColor,\n                width: item.tickWidth,\n                borderDash: item.tickBorderDash,\n                borderDashOffset: item.tickBorderDashOffset\n            });\n        }\n    }\n    drawBorder() {\n        const { chart: chart, ctx: ctx, options: { border: border, grid: grid } } = this;\n        const borderOpts = border.setContext(this.getContext());\n        const axisWidth = border.display ? borderOpts.width : 0;\n        if (!axisWidth) return;\n        const lastLineWidth = grid.setContext(this.getContext(0)).lineWidth;\n        const borderValue = this._borderValue;\n        let x1, x2, y1, y2;\n        if (this.isHorizontal()) {\n            x1 = (0, $c7mKY.X)(chart, this.left, axisWidth) - axisWidth / 2;\n            x2 = (0, $c7mKY.X)(chart, this.right, lastLineWidth) + lastLineWidth / 2;\n            y1 = y2 = borderValue;\n        } else {\n            y1 = (0, $c7mKY.X)(chart, this.top, axisWidth) - axisWidth / 2;\n            y2 = (0, $c7mKY.X)(chart, this.bottom, lastLineWidth) + lastLineWidth / 2;\n            x1 = x2 = borderValue;\n        }\n        ctx.save();\n        ctx.lineWidth = borderOpts.width;\n        ctx.strokeStyle = borderOpts.color;\n        ctx.beginPath();\n        ctx.moveTo(x1, y1);\n        ctx.lineTo(x2, y2);\n        ctx.stroke();\n        ctx.restore();\n    }\n    drawLabels(chartArea) {\n        const optionTicks = this.options.ticks;\n        if (!optionTicks.display) return;\n        const ctx = this.ctx;\n        const area = this._computeLabelArea();\n        if (area) (0, $c7mKY.Y)(ctx, area);\n        const items = this.getLabelItems(chartArea);\n        for (const item of items){\n            const renderTextOptions = item.options;\n            const tickFont = item.font;\n            const label = item.label;\n            const y = item.textOffset;\n            (0, $c7mKY.Z)(ctx, label, 0, y, tickFont, renderTextOptions);\n        }\n        if (area) (0, $c7mKY.$)(ctx);\n    }\n    drawTitle() {\n        const { ctx: ctx, options: { position: position, title: title, reverse: reverse } } = this;\n        if (!title.display) return;\n        const font = (0, $c7mKY.a0)(title.font);\n        const padding = (0, $c7mKY.E)(title.padding);\n        const align = title.align;\n        let offset = font.lineHeight / 2;\n        if (position === \"bottom\" || position === \"center\" || (0, $c7mKY.i)(position)) {\n            offset += padding.bottom;\n            if ((0, $c7mKY.b)(title.text)) offset += font.lineHeight * (title.text.length - 1);\n        } else offset += padding.top;\n        const { titleX: titleX, titleY: titleY, maxWidth: maxWidth, rotation: rotation } = $216d2bdc6f281bf6$var$titleArgs(this, offset, position, align);\n        (0, $c7mKY.Z)(ctx, title.text, 0, 0, font, {\n            color: title.color,\n            maxWidth: maxWidth,\n            rotation: rotation,\n            textAlign: $216d2bdc6f281bf6$var$titleAlign(align, position, reverse),\n            textBaseline: \"middle\",\n            translation: [\n                titleX,\n                titleY\n            ]\n        });\n    }\n    draw(chartArea) {\n        if (!this._isVisible()) return;\n        this.drawBackground();\n        this.drawGrid(chartArea);\n        this.drawBorder();\n        this.drawTitle();\n        this.drawLabels(chartArea);\n    }\n    _layers() {\n        const opts = this.options;\n        const tz = opts.ticks && opts.ticks.z || 0;\n        const gz = (0, $c7mKY.v)(opts.grid && opts.grid.z, -1);\n        const bz = (0, $c7mKY.v)(opts.border && opts.border.z, 0);\n        if (!this._isVisible() || this.draw !== $216d2bdc6f281bf6$export$d60cfc58d3c358b6.prototype.draw) return [\n            {\n                z: tz,\n                draw: (chartArea)=>{\n                    this.draw(chartArea);\n                }\n            }\n        ];\n        return [\n            {\n                z: gz,\n                draw: (chartArea)=>{\n                    this.drawBackground();\n                    this.drawGrid(chartArea);\n                    this.drawTitle();\n                }\n            },\n            {\n                z: bz,\n                draw: ()=>{\n                    this.drawBorder();\n                }\n            },\n            {\n                z: tz,\n                draw: (chartArea)=>{\n                    this.drawLabels(chartArea);\n                }\n            }\n        ];\n    }\n    getMatchingVisibleMetas(type) {\n        const metas = this.chart.getSortedVisibleDatasetMetas();\n        const axisID = this.axis + \"AxisID\";\n        const result = [];\n        let i, ilen;\n        for(i = 0, ilen = metas.length; i < ilen; ++i){\n            const meta = metas[i];\n            if (meta[axisID] === this.id && (!type || meta.type === type)) result.push(meta);\n        }\n        return result;\n    }\n    _resolveTickFontOptions(index) {\n        const opts = this.options.ticks.setContext(this.getContext(index));\n        return (0, $c7mKY.a0)(opts.font);\n    }\n    _maxDigits() {\n        const fontSize = this._resolveTickFontOptions(0).lineHeight;\n        return (this.isHorizontal() ? this.width : this.height) / fontSize;\n    }\n}\nclass $216d2bdc6f281bf6$var$TypedRegistry {\n    constructor(type, scope, override){\n        this.type = type;\n        this.scope = scope;\n        this.override = override;\n        this.items = Object.create(null);\n    }\n    isForType(type) {\n        return Object.prototype.isPrototypeOf.call(this.type.prototype, type.prototype);\n    }\n    register(item) {\n        const proto = Object.getPrototypeOf(item);\n        let parentScope;\n        if ($216d2bdc6f281bf6$var$isIChartComponent(proto)) parentScope = this.register(proto);\n        const items = this.items;\n        const id = item.id;\n        const scope = this.scope + \".\" + id;\n        if (!id) throw new Error(\"class does not have id: \" + item);\n        if (id in items) return scope;\n        items[id] = item;\n        $216d2bdc6f281bf6$var$registerDefaults(item, scope, parentScope);\n        if (this.override) (0, $c7mKY.d).override(item.id, item.overrides);\n        return scope;\n    }\n    get(id) {\n        return this.items[id];\n    }\n    unregister(item) {\n        const items = this.items;\n        const id = item.id;\n        const scope = this.scope;\n        if (id in items) delete items[id];\n        if (scope && id in (0, $c7mKY.d)[scope]) {\n            delete (0, $c7mKY.d)[scope][id];\n            if (this.override) delete (0, $c7mKY.a3)[id];\n        }\n    }\n}\nfunction $216d2bdc6f281bf6$var$registerDefaults(item, scope, parentScope) {\n    const itemDefaults = (0, $c7mKY.a4)(Object.create(null), [\n        parentScope ? (0, $c7mKY.d).get(parentScope) : {},\n        (0, $c7mKY.d).get(scope),\n        item.defaults\n    ]);\n    (0, $c7mKY.d).set(scope, itemDefaults);\n    if (item.defaultRoutes) $216d2bdc6f281bf6$var$routeDefaults(scope, item.defaultRoutes);\n    if (item.descriptors) (0, $c7mKY.d).describe(scope, item.descriptors);\n}\nfunction $216d2bdc6f281bf6$var$routeDefaults(scope, routes) {\n    Object.keys(routes).forEach((property)=>{\n        const propertyParts = property.split(\".\");\n        const sourceName = propertyParts.pop();\n        const sourceScope = [\n            scope\n        ].concat(propertyParts).join(\".\");\n        const parts = routes[property].split(\".\");\n        const targetName = parts.pop();\n        const targetScope = parts.join(\".\");\n        (0, $c7mKY.d).route(sourceScope, sourceName, targetScope, targetName);\n    });\n}\nfunction $216d2bdc6f281bf6$var$isIChartComponent(proto) {\n    return \"id\" in proto && \"defaults\" in proto;\n}\nclass $216d2bdc6f281bf6$var$Registry {\n    constructor(){\n        this.controllers = new $216d2bdc6f281bf6$var$TypedRegistry($216d2bdc6f281bf6$export$75572ec5c55b4048, \"datasets\", true);\n        this.elements = new $216d2bdc6f281bf6$var$TypedRegistry($216d2bdc6f281bf6$export$db77ccec0bb4ccac, \"elements\");\n        this.plugins = new $216d2bdc6f281bf6$var$TypedRegistry(Object, \"plugins\");\n        this.scales = new $216d2bdc6f281bf6$var$TypedRegistry($216d2bdc6f281bf6$export$d60cfc58d3c358b6, \"scales\");\n        this._typedRegistries = [\n            this.controllers,\n            this.scales,\n            this.elements\n        ];\n    }\n    add(...args) {\n        this._each(\"register\", args);\n    }\n    remove(...args) {\n        this._each(\"unregister\", args);\n    }\n    addControllers(...args) {\n        this._each(\"register\", args, this.controllers);\n    }\n    addElements(...args) {\n        this._each(\"register\", args, this.elements);\n    }\n    addPlugins(...args) {\n        this._each(\"register\", args, this.plugins);\n    }\n    addScales(...args) {\n        this._each(\"register\", args, this.scales);\n    }\n    getController(id) {\n        return this._get(id, this.controllers, \"controller\");\n    }\n    getElement(id) {\n        return this._get(id, this.elements, \"element\");\n    }\n    getPlugin(id) {\n        return this._get(id, this.plugins, \"plugin\");\n    }\n    getScale(id) {\n        return this._get(id, this.scales, \"scale\");\n    }\n    removeControllers(...args) {\n        this._each(\"unregister\", args, this.controllers);\n    }\n    removeElements(...args) {\n        this._each(\"unregister\", args, this.elements);\n    }\n    removePlugins(...args) {\n        this._each(\"unregister\", args, this.plugins);\n    }\n    removeScales(...args) {\n        this._each(\"unregister\", args, this.scales);\n    }\n    _each(method, args, typedRegistry) {\n        [\n            ...args\n        ].forEach((arg)=>{\n            const reg = typedRegistry || this._getRegistryForType(arg);\n            if (typedRegistry || reg.isForType(arg) || reg === this.plugins && arg.id) this._exec(method, reg, arg);\n            else (0, $c7mKY.F)(arg, (item)=>{\n                const itemReg = typedRegistry || this._getRegistryForType(item);\n                this._exec(method, itemReg, item);\n            });\n        });\n    }\n    _exec(method, registry, component) {\n        const camelMethod = (0, $c7mKY.a5)(method);\n        (0, $c7mKY.Q)(component[\"before\" + camelMethod], [], component);\n        registry[method](component);\n        (0, $c7mKY.Q)(component[\"after\" + camelMethod], [], component);\n    }\n    _getRegistryForType(type) {\n        for(let i = 0; i < this._typedRegistries.length; i++){\n            const reg = this._typedRegistries[i];\n            if (reg.isForType(type)) return reg;\n        }\n        return this.plugins;\n    }\n    _get(id, typedRegistry, type) {\n        const item = typedRegistry.get(id);\n        if (item === undefined) throw new Error('\"' + id + '\" is not a registered ' + type + \".\");\n        return item;\n    }\n}\nvar $216d2bdc6f281bf6$export$4bb7493d241fd8a5 = /* #__PURE__ */ new $216d2bdc6f281bf6$var$Registry();\nclass $216d2bdc6f281bf6$var$PluginService {\n    constructor(){\n        this._init = [];\n    }\n    notify(chart, hook, args, filter) {\n        if (hook === \"beforeInit\") {\n            this._init = this._createDescriptors(chart, true);\n            this._notify(this._init, chart, \"install\");\n        }\n        const descriptors = filter ? this._descriptors(chart).filter(filter) : this._descriptors(chart);\n        const result = this._notify(descriptors, chart, hook, args);\n        if (hook === \"afterDestroy\") {\n            this._notify(descriptors, chart, \"stop\");\n            this._notify(this._init, chart, \"uninstall\");\n        }\n        return result;\n    }\n    _notify(descriptors, chart, hook, args) {\n        args = args || {};\n        for (const descriptor of descriptors){\n            const plugin = descriptor.plugin;\n            const method = plugin[hook];\n            const params = [\n                chart,\n                args,\n                descriptor.options\n            ];\n            if ((0, $c7mKY.Q)(method, params, plugin) === false && args.cancelable) return false;\n        }\n        return true;\n    }\n    invalidate() {\n        if (!(0, $c7mKY.k)(this._cache)) {\n            this._oldCache = this._cache;\n            this._cache = undefined;\n        }\n    }\n    _descriptors(chart) {\n        if (this._cache) return this._cache;\n        const descriptors = this._cache = this._createDescriptors(chart);\n        this._notifyStateChanges(chart);\n        return descriptors;\n    }\n    _createDescriptors(chart, all) {\n        const config = chart && chart.config;\n        const options = (0, $c7mKY.v)(config.options && config.options.plugins, {});\n        const plugins = $216d2bdc6f281bf6$var$allPlugins(config);\n        return options === false && !all ? [] : $216d2bdc6f281bf6$var$createDescriptors(chart, plugins, options, all);\n    }\n    _notifyStateChanges(chart) {\n        const previousDescriptors = this._oldCache || [];\n        const descriptors = this._cache;\n        const diff = (a, b)=>a.filter((x)=>!b.some((y)=>x.plugin.id === y.plugin.id));\n        this._notify(diff(previousDescriptors, descriptors), chart, \"stop\");\n        this._notify(diff(descriptors, previousDescriptors), chart, \"start\");\n    }\n}\nfunction $216d2bdc6f281bf6$var$allPlugins(config) {\n    const localIds = {};\n    const plugins = [];\n    const keys = Object.keys($216d2bdc6f281bf6$export$4bb7493d241fd8a5.plugins.items);\n    for(let i = 0; i < keys.length; i++)plugins.push($216d2bdc6f281bf6$export$4bb7493d241fd8a5.getPlugin(keys[i]));\n    const local = config.plugins || [];\n    for(let i = 0; i < local.length; i++){\n        const plugin = local[i];\n        if (plugins.indexOf(plugin) === -1) {\n            plugins.push(plugin);\n            localIds[plugin.id] = true;\n        }\n    }\n    return {\n        plugins: plugins,\n        localIds: localIds\n    };\n}\nfunction $216d2bdc6f281bf6$var$getOpts(options, all) {\n    if (!all && options === false) return null;\n    if (options === true) return {};\n    return options;\n}\nfunction $216d2bdc6f281bf6$var$createDescriptors(chart, { plugins: plugins, localIds: localIds }, options, all) {\n    const result = [];\n    const context = chart.getContext();\n    for (const plugin of plugins){\n        const id = plugin.id;\n        const opts = $216d2bdc6f281bf6$var$getOpts(options[id], all);\n        if (opts === null) continue;\n        result.push({\n            plugin: plugin,\n            options: $216d2bdc6f281bf6$var$pluginOpts(chart.config, {\n                plugin: plugin,\n                local: localIds[id]\n            }, opts, context)\n        });\n    }\n    return result;\n}\nfunction $216d2bdc6f281bf6$var$pluginOpts(config, { plugin: plugin, local: local }, opts, context) {\n    const keys = config.pluginScopeKeys(plugin);\n    const scopes = config.getOptionScopes(opts, keys);\n    if (local && plugin.defaults) scopes.push(plugin.defaults);\n    return config.createResolver(scopes, context, [\n        \"\"\n    ], {\n        scriptable: false,\n        indexable: false,\n        allKeys: true\n    });\n}\nfunction $216d2bdc6f281bf6$var$getIndexAxis(type, options) {\n    const datasetDefaults = (0, $c7mKY.d).datasets[type] || {};\n    const datasetOptions = (options.datasets || {})[type] || {};\n    return datasetOptions.indexAxis || options.indexAxis || datasetDefaults.indexAxis || \"x\";\n}\nfunction $216d2bdc6f281bf6$var$getAxisFromDefaultScaleID(id, indexAxis) {\n    let axis = id;\n    if (id === \"_index_\") axis = indexAxis;\n    else if (id === \"_value_\") axis = indexAxis === \"x\" ? \"y\" : \"x\";\n    return axis;\n}\nfunction $216d2bdc6f281bf6$var$getDefaultScaleIDFromAxis(axis, indexAxis) {\n    return axis === indexAxis ? \"_index_\" : \"_value_\";\n}\nfunction $216d2bdc6f281bf6$var$idMatchesAxis(id) {\n    if (id === \"x\" || id === \"y\" || id === \"r\") return id;\n}\nfunction $216d2bdc6f281bf6$var$axisFromPosition(position) {\n    if (position === \"top\" || position === \"bottom\") return \"x\";\n    if (position === \"left\" || position === \"right\") return \"y\";\n}\nfunction $216d2bdc6f281bf6$var$determineAxis(id, ...scaleOptions) {\n    if ($216d2bdc6f281bf6$var$idMatchesAxis(id)) return id;\n    for (const opts of scaleOptions){\n        const axis = opts.axis || $216d2bdc6f281bf6$var$axisFromPosition(opts.position) || id.length > 1 && $216d2bdc6f281bf6$var$idMatchesAxis(id[0].toLowerCase());\n        if (axis) return axis;\n    }\n    throw new Error(`Cannot determine type of '${id}' axis. Please provide 'axis' or 'position' option.`);\n}\nfunction $216d2bdc6f281bf6$var$getAxisFromDataset(id, axis, dataset) {\n    if (dataset[axis + \"AxisID\"] === id) return {\n        axis: axis\n    };\n}\nfunction $216d2bdc6f281bf6$var$retrieveAxisFromDatasets(id, config) {\n    if (config.data && config.data.datasets) {\n        const boundDs = config.data.datasets.filter((d)=>d.xAxisID === id || d.yAxisID === id);\n        if (boundDs.length) return $216d2bdc6f281bf6$var$getAxisFromDataset(id, \"x\", boundDs[0]) || $216d2bdc6f281bf6$var$getAxisFromDataset(id, \"y\", boundDs[0]);\n    }\n    return {};\n}\nfunction $216d2bdc6f281bf6$var$mergeScaleConfig(config, options) {\n    const chartDefaults = (0, $c7mKY.a3)[config.type] || {\n        scales: {}\n    };\n    const configScales = options.scales || {};\n    const chartIndexAxis = $216d2bdc6f281bf6$var$getIndexAxis(config.type, options);\n    const scales = Object.create(null);\n    Object.keys(configScales).forEach((id)=>{\n        const scaleConf = configScales[id];\n        if (!(0, $c7mKY.i)(scaleConf)) return console.error(`Invalid scale configuration for scale: ${id}`);\n        if (scaleConf._proxy) return console.warn(`Ignoring resolver passed as options for scale: ${id}`);\n        const axis = $216d2bdc6f281bf6$var$determineAxis(id, scaleConf, $216d2bdc6f281bf6$var$retrieveAxisFromDatasets(id, config), (0, $c7mKY.d).scales[scaleConf.type]);\n        const defaultId = $216d2bdc6f281bf6$var$getDefaultScaleIDFromAxis(axis, chartIndexAxis);\n        const defaultScaleOptions = chartDefaults.scales || {};\n        scales[id] = (0, $c7mKY.ab)(Object.create(null), [\n            {\n                axis: axis\n            },\n            scaleConf,\n            defaultScaleOptions[axis],\n            defaultScaleOptions[defaultId]\n        ]);\n    });\n    config.data.datasets.forEach((dataset)=>{\n        const type = dataset.type || config.type;\n        const indexAxis = dataset.indexAxis || $216d2bdc6f281bf6$var$getIndexAxis(type, options);\n        const datasetDefaults = (0, $c7mKY.a3)[type] || {};\n        const defaultScaleOptions = datasetDefaults.scales || {};\n        Object.keys(defaultScaleOptions).forEach((defaultID)=>{\n            const axis = $216d2bdc6f281bf6$var$getAxisFromDefaultScaleID(defaultID, indexAxis);\n            const id = dataset[axis + \"AxisID\"] || axis;\n            scales[id] = scales[id] || Object.create(null);\n            (0, $c7mKY.ab)(scales[id], [\n                {\n                    axis: axis\n                },\n                configScales[id],\n                defaultScaleOptions[defaultID]\n            ]);\n        });\n    });\n    Object.keys(scales).forEach((key)=>{\n        const scale = scales[key];\n        (0, $c7mKY.ab)(scale, [\n            (0, $c7mKY.d).scales[scale.type],\n            (0, $c7mKY.d).scale\n        ]);\n    });\n    return scales;\n}\nfunction $216d2bdc6f281bf6$var$initOptions(config) {\n    const options = config.options || (config.options = {});\n    options.plugins = (0, $c7mKY.v)(options.plugins, {});\n    options.scales = $216d2bdc6f281bf6$var$mergeScaleConfig(config, options);\n}\nfunction $216d2bdc6f281bf6$var$initData(data) {\n    data = data || {};\n    data.datasets = data.datasets || [];\n    data.labels = data.labels || [];\n    return data;\n}\nfunction $216d2bdc6f281bf6$var$initConfig(config) {\n    config = config || {};\n    config.data = $216d2bdc6f281bf6$var$initData(config.data);\n    $216d2bdc6f281bf6$var$initOptions(config);\n    return config;\n}\nconst $216d2bdc6f281bf6$var$keyCache = new Map();\nconst $216d2bdc6f281bf6$var$keysCached = new Set();\nfunction $216d2bdc6f281bf6$var$cachedKeys(cacheKey, generate) {\n    let keys = $216d2bdc6f281bf6$var$keyCache.get(cacheKey);\n    if (!keys) {\n        keys = generate();\n        $216d2bdc6f281bf6$var$keyCache.set(cacheKey, keys);\n        $216d2bdc6f281bf6$var$keysCached.add(keys);\n    }\n    return keys;\n}\nconst $216d2bdc6f281bf6$var$addIfFound = (set, obj, key)=>{\n    const opts = (0, $c7mKY.f)(obj, key);\n    if (opts !== undefined) set.add(opts);\n};\nclass $216d2bdc6f281bf6$var$Config {\n    constructor(config){\n        this._config = $216d2bdc6f281bf6$var$initConfig(config);\n        this._scopeCache = new Map();\n        this._resolverCache = new Map();\n    }\n    get platform() {\n        return this._config.platform;\n    }\n    get type() {\n        return this._config.type;\n    }\n    set type(type) {\n        this._config.type = type;\n    }\n    get data() {\n        return this._config.data;\n    }\n    set data(data) {\n        this._config.data = $216d2bdc6f281bf6$var$initData(data);\n    }\n    get options() {\n        return this._config.options;\n    }\n    set options(options) {\n        this._config.options = options;\n    }\n    get plugins() {\n        return this._config.plugins;\n    }\n    update() {\n        const config = this._config;\n        this.clearCache();\n        $216d2bdc6f281bf6$var$initOptions(config);\n    }\n    clearCache() {\n        this._scopeCache.clear();\n        this._resolverCache.clear();\n    }\n    datasetScopeKeys(datasetType) {\n        return $216d2bdc6f281bf6$var$cachedKeys(datasetType, ()=>[\n                [\n                    `datasets.${datasetType}`,\n                    \"\"\n                ]\n            ]);\n    }\n    datasetAnimationScopeKeys(datasetType, transition) {\n        return $216d2bdc6f281bf6$var$cachedKeys(`${datasetType}.transition.${transition}`, ()=>[\n                [\n                    `datasets.${datasetType}.transitions.${transition}`,\n                    `transitions.${transition}`\n                ],\n                [\n                    `datasets.${datasetType}`,\n                    \"\"\n                ]\n            ]);\n    }\n    datasetElementScopeKeys(datasetType, elementType) {\n        return $216d2bdc6f281bf6$var$cachedKeys(`${datasetType}-${elementType}`, ()=>[\n                [\n                    `datasets.${datasetType}.elements.${elementType}`,\n                    `datasets.${datasetType}`,\n                    `elements.${elementType}`,\n                    \"\"\n                ]\n            ]);\n    }\n    pluginScopeKeys(plugin) {\n        const id = plugin.id;\n        const type = this.type;\n        return $216d2bdc6f281bf6$var$cachedKeys(`${type}-plugin-${id}`, ()=>[\n                [\n                    `plugins.${id}`,\n                    ...plugin.additionalOptionScopes || []\n                ]\n            ]);\n    }\n    _cachedScopes(mainScope, resetCache) {\n        const _scopeCache = this._scopeCache;\n        let cache = _scopeCache.get(mainScope);\n        if (!cache || resetCache) {\n            cache = new Map();\n            _scopeCache.set(mainScope, cache);\n        }\n        return cache;\n    }\n    getOptionScopes(mainScope, keyLists, resetCache) {\n        const { options: options, type: type } = this;\n        const cache = this._cachedScopes(mainScope, resetCache);\n        const cached = cache.get(keyLists);\n        if (cached) return cached;\n        const scopes = new Set();\n        keyLists.forEach((keys)=>{\n            if (mainScope) {\n                scopes.add(mainScope);\n                keys.forEach((key)=>$216d2bdc6f281bf6$var$addIfFound(scopes, mainScope, key));\n            }\n            keys.forEach((key)=>$216d2bdc6f281bf6$var$addIfFound(scopes, options, key));\n            keys.forEach((key)=>$216d2bdc6f281bf6$var$addIfFound(scopes, (0, $c7mKY.a3)[type] || {}, key));\n            keys.forEach((key)=>$216d2bdc6f281bf6$var$addIfFound(scopes, (0, $c7mKY.d), key));\n            keys.forEach((key)=>$216d2bdc6f281bf6$var$addIfFound(scopes, (0, $c7mKY.a6), key));\n        });\n        const array = Array.from(scopes);\n        if (array.length === 0) array.push(Object.create(null));\n        if ($216d2bdc6f281bf6$var$keysCached.has(keyLists)) cache.set(keyLists, array);\n        return array;\n    }\n    chartOptionScopes() {\n        const { options: options, type: type } = this;\n        return [\n            options,\n            (0, $c7mKY.a3)[type] || {},\n            (0, $c7mKY.d).datasets[type] || {},\n            {\n                type: type\n            },\n            (0, $c7mKY.d),\n            (0, $c7mKY.a6)\n        ];\n    }\n    resolveNamedOptions(scopes, names, context, prefixes = [\n        \"\"\n    ]) {\n        const result = {\n            $shared: true\n        };\n        const { resolver: resolver, subPrefixes: subPrefixes } = $216d2bdc6f281bf6$var$getResolver(this._resolverCache, scopes, prefixes);\n        let options = resolver;\n        if ($216d2bdc6f281bf6$var$needContext(resolver, names)) {\n            result.$shared = false;\n            context = (0, $c7mKY.a7)(context) ? context() : context;\n            const subResolver = this.createResolver(scopes, context, subPrefixes);\n            options = (0, $c7mKY.a8)(resolver, context, subResolver);\n        }\n        for (const prop of names)result[prop] = options[prop];\n        return result;\n    }\n    createResolver(scopes, context, prefixes = [\n        \"\"\n    ], descriptorDefaults) {\n        const { resolver: resolver } = $216d2bdc6f281bf6$var$getResolver(this._resolverCache, scopes, prefixes);\n        return (0, $c7mKY.i)(context) ? (0, $c7mKY.a8)(resolver, context, undefined, descriptorDefaults) : resolver;\n    }\n}\nfunction $216d2bdc6f281bf6$var$getResolver(resolverCache, scopes, prefixes) {\n    let cache = resolverCache.get(scopes);\n    if (!cache) {\n        cache = new Map();\n        resolverCache.set(scopes, cache);\n    }\n    const cacheKey = prefixes.join();\n    let cached = cache.get(cacheKey);\n    if (!cached) {\n        const resolver = (0, $c7mKY.a9)(scopes, prefixes);\n        cached = {\n            resolver: resolver,\n            subPrefixes: prefixes.filter((p)=>!p.toLowerCase().includes(\"hover\"))\n        };\n        cache.set(cacheKey, cached);\n    }\n    return cached;\n}\nconst $216d2bdc6f281bf6$var$hasFunction = (value)=>(0, $c7mKY.i)(value) && Object.getOwnPropertyNames(value).some((key)=>(0, $c7mKY.a7)(value[key]));\nfunction $216d2bdc6f281bf6$var$needContext(proxy, names) {\n    const { isScriptable: isScriptable, isIndexable: isIndexable } = (0, $c7mKY.aa)(proxy);\n    for (const prop of names){\n        const scriptable = isScriptable(prop);\n        const indexable = isIndexable(prop);\n        const value = (indexable || scriptable) && proxy[prop];\n        if (scriptable && ((0, $c7mKY.a7)(value) || $216d2bdc6f281bf6$var$hasFunction(value)) || indexable && (0, $c7mKY.b)(value)) return true;\n    }\n    return false;\n}\nvar $216d2bdc6f281bf6$var$version = \"4.4.5\";\nconst $216d2bdc6f281bf6$var$KNOWN_POSITIONS = [\n    \"top\",\n    \"bottom\",\n    \"left\",\n    \"right\",\n    \"chartArea\"\n];\nfunction $216d2bdc6f281bf6$var$positionIsHorizontal(position, axis) {\n    return position === \"top\" || position === \"bottom\" || $216d2bdc6f281bf6$var$KNOWN_POSITIONS.indexOf(position) === -1 && axis === \"x\";\n}\nfunction $216d2bdc6f281bf6$var$compare2Level(l1, l2) {\n    return function(a, b) {\n        return a[l1] === b[l1] ? a[l2] - b[l2] : a[l1] - b[l1];\n    };\n}\nfunction $216d2bdc6f281bf6$var$onAnimationsComplete(context) {\n    const chart = context.chart;\n    const animationOptions = chart.options.animation;\n    chart.notifyPlugins(\"afterRender\");\n    (0, $c7mKY.Q)(animationOptions && animationOptions.onComplete, [\n        context\n    ], chart);\n}\nfunction $216d2bdc6f281bf6$var$onAnimationProgress(context) {\n    const chart = context.chart;\n    const animationOptions = chart.options.animation;\n    (0, $c7mKY.Q)(animationOptions && animationOptions.onProgress, [\n        context\n    ], chart);\n}\nfunction $216d2bdc6f281bf6$var$getCanvas(item) {\n    if ((0, $c7mKY.M)() && typeof item === \"string\") item = document.getElementById(item);\n    else if (item && item.length) item = item[0];\n    if (item && item.canvas) item = item.canvas;\n    return item;\n}\nconst $216d2bdc6f281bf6$var$instances = {};\nconst $216d2bdc6f281bf6$var$getChart = (key)=>{\n    const canvas = $216d2bdc6f281bf6$var$getCanvas(key);\n    return Object.values($216d2bdc6f281bf6$var$instances).filter((c)=>c.canvas === canvas).pop();\n};\nfunction $216d2bdc6f281bf6$var$moveNumericKeys(obj, start, move) {\n    const keys = Object.keys(obj);\n    for (const key of keys){\n        const intKey = +key;\n        if (intKey >= start) {\n            const value = obj[key];\n            delete obj[key];\n            if (move > 0 || intKey > start) obj[intKey + move] = value;\n        }\n    }\n}\nfunction $216d2bdc6f281bf6$var$determineLastEvent(e, lastEvent, inChartArea, isClick) {\n    if (!inChartArea || e.type === \"mouseout\") return null;\n    if (isClick) return lastEvent;\n    return e;\n}\nfunction $216d2bdc6f281bf6$var$getSizeForArea(scale, chartArea, field) {\n    return scale.options.clip ? scale[field] : chartArea[field];\n}\nfunction $216d2bdc6f281bf6$var$getDatasetArea(meta, chartArea) {\n    const { xScale: xScale, yScale: yScale } = meta;\n    if (xScale && yScale) return {\n        left: $216d2bdc6f281bf6$var$getSizeForArea(xScale, chartArea, \"left\"),\n        right: $216d2bdc6f281bf6$var$getSizeForArea(xScale, chartArea, \"right\"),\n        top: $216d2bdc6f281bf6$var$getSizeForArea(yScale, chartArea, \"top\"),\n        bottom: $216d2bdc6f281bf6$var$getSizeForArea(yScale, chartArea, \"bottom\")\n    };\n    return chartArea;\n}\nclass $216d2bdc6f281bf6$export$acaa6426d77a227e {\n    static defaults = (0, $c7mKY.d);\n    static instances = $216d2bdc6f281bf6$var$instances;\n    static overrides = (0, $c7mKY.a3);\n    static registry = $216d2bdc6f281bf6$export$4bb7493d241fd8a5;\n    static version = $216d2bdc6f281bf6$var$version;\n    static getChart = $216d2bdc6f281bf6$var$getChart;\n    static register(...items) {\n        $216d2bdc6f281bf6$export$4bb7493d241fd8a5.add(...items);\n        $216d2bdc6f281bf6$var$invalidatePlugins();\n    }\n    static unregister(...items) {\n        $216d2bdc6f281bf6$export$4bb7493d241fd8a5.remove(...items);\n        $216d2bdc6f281bf6$var$invalidatePlugins();\n    }\n    constructor(item, userConfig){\n        const config = this.config = new $216d2bdc6f281bf6$var$Config(userConfig);\n        const initialCanvas = $216d2bdc6f281bf6$var$getCanvas(item);\n        const existingChart = $216d2bdc6f281bf6$var$getChart(initialCanvas);\n        if (existingChart) throw new Error(\"Canvas is already in use. Chart with ID '\" + existingChart.id + \"'\" + \" must be destroyed before the canvas with ID '\" + existingChart.canvas.id + \"' can be reused.\");\n        const options = config.createResolver(config.chartOptionScopes(), this.getContext());\n        this.platform = new (config.platform || $216d2bdc6f281bf6$export$72cd9e67b1b784f9(initialCanvas))();\n        this.platform.updateConfig(config);\n        const context = this.platform.acquireContext(initialCanvas, options.aspectRatio);\n        const canvas = context && context.canvas;\n        const height = canvas && canvas.height;\n        const width = canvas && canvas.width;\n        this.id = (0, $c7mKY.ac)();\n        this.ctx = context;\n        this.canvas = canvas;\n        this.width = width;\n        this.height = height;\n        this._options = options;\n        this._aspectRatio = this.aspectRatio;\n        this._layers = [];\n        this._metasets = [];\n        this._stacks = undefined;\n        this.boxes = [];\n        this.currentDevicePixelRatio = undefined;\n        this.chartArea = undefined;\n        this._active = [];\n        this._lastEvent = undefined;\n        this._listeners = {};\n        this._responsiveListeners = undefined;\n        this._sortedMetasets = [];\n        this.scales = {};\n        this._plugins = new $216d2bdc6f281bf6$var$PluginService();\n        this.$proxies = {};\n        this._hiddenIndices = {};\n        this.attached = false;\n        this._animationsDisabled = undefined;\n        this.$context = undefined;\n        this._doResize = (0, $c7mKY.ad)((mode)=>this.update(mode), options.resizeDelay || 0);\n        this._dataChanges = [];\n        $216d2bdc6f281bf6$var$instances[this.id] = this;\n        if (!context || !canvas) {\n            console.error(\"Failed to create chart: can't acquire context from the given item\");\n            return;\n        }\n        $216d2bdc6f281bf6$export$a424a0aa8f687495.listen(this, \"complete\", $216d2bdc6f281bf6$var$onAnimationsComplete);\n        $216d2bdc6f281bf6$export$a424a0aa8f687495.listen(this, \"progress\", $216d2bdc6f281bf6$var$onAnimationProgress);\n        this._initialize();\n        if (this.attached) this.update();\n    }\n    get aspectRatio() {\n        const { options: { aspectRatio: aspectRatio, maintainAspectRatio: maintainAspectRatio }, width: width, height: height, _aspectRatio: _aspectRatio } = this;\n        if (!(0, $c7mKY.k)(aspectRatio)) return aspectRatio;\n        if (maintainAspectRatio && _aspectRatio) return _aspectRatio;\n        return height ? width / height : null;\n    }\n    get data() {\n        return this.config.data;\n    }\n    set data(data) {\n        this.config.data = data;\n    }\n    get options() {\n        return this._options;\n    }\n    set options(options) {\n        this.config.options = options;\n    }\n    get registry() {\n        return $216d2bdc6f281bf6$export$4bb7493d241fd8a5;\n    }\n    _initialize() {\n        this.notifyPlugins(\"beforeInit\");\n        if (this.options.responsive) this.resize();\n        else (0, $c7mKY.ae)(this, this.options.devicePixelRatio);\n        this.bindEvents();\n        this.notifyPlugins(\"afterInit\");\n        return this;\n    }\n    clear() {\n        (0, $c7mKY.af)(this.canvas, this.ctx);\n        return this;\n    }\n    stop() {\n        $216d2bdc6f281bf6$export$a424a0aa8f687495.stop(this);\n        return this;\n    }\n    resize(width, height) {\n        if (!$216d2bdc6f281bf6$export$a424a0aa8f687495.running(this)) this._resize(width, height);\n        else this._resizeBeforeDraw = {\n            width: width,\n            height: height\n        };\n    }\n    _resize(width, height) {\n        const options = this.options;\n        const canvas = this.canvas;\n        const aspectRatio = options.maintainAspectRatio && this.aspectRatio;\n        const newSize = this.platform.getMaximumSize(canvas, width, height, aspectRatio);\n        const newRatio = options.devicePixelRatio || this.platform.getDevicePixelRatio();\n        const mode = this.width ? \"resize\" : \"attach\";\n        this.width = newSize.width;\n        this.height = newSize.height;\n        this._aspectRatio = this.aspectRatio;\n        if (!(0, $c7mKY.ae)(this, newRatio, true)) return;\n        this.notifyPlugins(\"resize\", {\n            size: newSize\n        });\n        (0, $c7mKY.Q)(options.onResize, [\n            this,\n            newSize\n        ], this);\n        if (this.attached) {\n            if (this._doResize(mode)) this.render();\n        }\n    }\n    ensureScalesHaveIDs() {\n        const options = this.options;\n        const scalesOptions = options.scales || {};\n        (0, $c7mKY.F)(scalesOptions, (axisOptions, axisID)=>{\n            axisOptions.id = axisID;\n        });\n    }\n    buildOrUpdateScales() {\n        const options = this.options;\n        const scaleOpts = options.scales;\n        const scales = this.scales;\n        const updated = Object.keys(scales).reduce((obj, id)=>{\n            obj[id] = false;\n            return obj;\n        }, {});\n        let items = [];\n        if (scaleOpts) items = items.concat(Object.keys(scaleOpts).map((id)=>{\n            const scaleOptions = scaleOpts[id];\n            const axis = $216d2bdc6f281bf6$var$determineAxis(id, scaleOptions);\n            const isRadial = axis === \"r\";\n            const isHorizontal = axis === \"x\";\n            return {\n                options: scaleOptions,\n                dposition: isRadial ? \"chartArea\" : isHorizontal ? \"bottom\" : \"left\",\n                dtype: isRadial ? \"radialLinear\" : isHorizontal ? \"category\" : \"linear\"\n            };\n        }));\n        (0, $c7mKY.F)(items, (item)=>{\n            const scaleOptions = item.options;\n            const id = scaleOptions.id;\n            const axis = $216d2bdc6f281bf6$var$determineAxis(id, scaleOptions);\n            const scaleType = (0, $c7mKY.v)(scaleOptions.type, item.dtype);\n            if (scaleOptions.position === undefined || $216d2bdc6f281bf6$var$positionIsHorizontal(scaleOptions.position, axis) !== $216d2bdc6f281bf6$var$positionIsHorizontal(item.dposition)) scaleOptions.position = item.dposition;\n            updated[id] = true;\n            let scale = null;\n            if (id in scales && scales[id].type === scaleType) scale = scales[id];\n            else {\n                const scaleClass = $216d2bdc6f281bf6$export$4bb7493d241fd8a5.getScale(scaleType);\n                scale = new scaleClass({\n                    id: id,\n                    type: scaleType,\n                    ctx: this.ctx,\n                    chart: this\n                });\n                scales[scale.id] = scale;\n            }\n            scale.init(scaleOptions, options);\n        });\n        (0, $c7mKY.F)(updated, (hasUpdated, id)=>{\n            if (!hasUpdated) delete scales[id];\n        });\n        (0, $c7mKY.F)(scales, (scale)=>{\n            $216d2bdc6f281bf6$export$1ecca0613f5e56d2.configure(this, scale, scale.options);\n            $216d2bdc6f281bf6$export$1ecca0613f5e56d2.addBox(this, scale);\n        });\n    }\n    _updateMetasets() {\n        const metasets = this._metasets;\n        const numData = this.data.datasets.length;\n        const numMeta = metasets.length;\n        metasets.sort((a, b)=>a.index - b.index);\n        if (numMeta > numData) {\n            for(let i = numData; i < numMeta; ++i)this._destroyDatasetMeta(i);\n            metasets.splice(numData, numMeta - numData);\n        }\n        this._sortedMetasets = metasets.slice(0).sort($216d2bdc6f281bf6$var$compare2Level(\"order\", \"index\"));\n    }\n    _removeUnreferencedMetasets() {\n        const { _metasets: metasets, data: { datasets: datasets } } = this;\n        if (metasets.length > datasets.length) delete this._stacks;\n        metasets.forEach((meta, index)=>{\n            if (datasets.filter((x)=>x === meta._dataset).length === 0) this._destroyDatasetMeta(index);\n        });\n    }\n    buildOrUpdateControllers() {\n        const newControllers = [];\n        const datasets = this.data.datasets;\n        let i, ilen;\n        this._removeUnreferencedMetasets();\n        for(i = 0, ilen = datasets.length; i < ilen; i++){\n            const dataset = datasets[i];\n            let meta = this.getDatasetMeta(i);\n            const type = dataset.type || this.config.type;\n            if (meta.type && meta.type !== type) {\n                this._destroyDatasetMeta(i);\n                meta = this.getDatasetMeta(i);\n            }\n            meta.type = type;\n            meta.indexAxis = dataset.indexAxis || $216d2bdc6f281bf6$var$getIndexAxis(type, this.options);\n            meta.order = dataset.order || 0;\n            meta.index = i;\n            meta.label = \"\" + dataset.label;\n            meta.visible = this.isDatasetVisible(i);\n            if (meta.controller) {\n                meta.controller.updateIndex(i);\n                meta.controller.linkScales();\n            } else {\n                const ControllerClass = $216d2bdc6f281bf6$export$4bb7493d241fd8a5.getController(type);\n                const { datasetElementType: datasetElementType, dataElementType: dataElementType } = (0, $c7mKY.d).datasets[type];\n                Object.assign(ControllerClass, {\n                    dataElementType: $216d2bdc6f281bf6$export$4bb7493d241fd8a5.getElement(dataElementType),\n                    datasetElementType: datasetElementType && $216d2bdc6f281bf6$export$4bb7493d241fd8a5.getElement(datasetElementType)\n                });\n                meta.controller = new ControllerClass(this, i);\n                newControllers.push(meta.controller);\n            }\n        }\n        this._updateMetasets();\n        return newControllers;\n    }\n    _resetElements() {\n        (0, $c7mKY.F)(this.data.datasets, (dataset, datasetIndex)=>{\n            this.getDatasetMeta(datasetIndex).controller.reset();\n        }, this);\n    }\n    reset() {\n        this._resetElements();\n        this.notifyPlugins(\"reset\");\n    }\n    update(mode) {\n        const config = this.config;\n        config.update();\n        const options = this._options = config.createResolver(config.chartOptionScopes(), this.getContext());\n        const animsDisabled = this._animationsDisabled = !options.animation;\n        this._updateScales();\n        this._checkEventBindings();\n        this._updateHiddenIndices();\n        this._plugins.invalidate();\n        if (this.notifyPlugins(\"beforeUpdate\", {\n            mode: mode,\n            cancelable: true\n        }) === false) return;\n        const newControllers = this.buildOrUpdateControllers();\n        this.notifyPlugins(\"beforeElementsUpdate\");\n        let minPadding = 0;\n        for(let i = 0, ilen = this.data.datasets.length; i < ilen; i++){\n            const { controller: controller } = this.getDatasetMeta(i);\n            const reset = !animsDisabled && newControllers.indexOf(controller) === -1;\n            controller.buildOrUpdateElements(reset);\n            minPadding = Math.max(+controller.getMaxOverflow(), minPadding);\n        }\n        minPadding = this._minPadding = options.layout.autoPadding ? minPadding : 0;\n        this._updateLayout(minPadding);\n        if (!animsDisabled) (0, $c7mKY.F)(newControllers, (controller)=>{\n            controller.reset();\n        });\n        this._updateDatasets(mode);\n        this.notifyPlugins(\"afterUpdate\", {\n            mode: mode\n        });\n        this._layers.sort($216d2bdc6f281bf6$var$compare2Level(\"z\", \"_idx\"));\n        const { _active: _active, _lastEvent: _lastEvent } = this;\n        if (_lastEvent) this._eventHandler(_lastEvent, true);\n        else if (_active.length) this._updateHoverStyles(_active, _active, true);\n        this.render();\n    }\n    _updateScales() {\n        (0, $c7mKY.F)(this.scales, (scale)=>{\n            $216d2bdc6f281bf6$export$1ecca0613f5e56d2.removeBox(this, scale);\n        });\n        this.ensureScalesHaveIDs();\n        this.buildOrUpdateScales();\n    }\n    _checkEventBindings() {\n        const options = this.options;\n        const existingEvents = new Set(Object.keys(this._listeners));\n        const newEvents = new Set(options.events);\n        if (!(0, $c7mKY.ag)(existingEvents, newEvents) || !!this._responsiveListeners !== options.responsive) {\n            this.unbindEvents();\n            this.bindEvents();\n        }\n    }\n    _updateHiddenIndices() {\n        const { _hiddenIndices: _hiddenIndices } = this;\n        const changes = this._getUniformDataChanges() || [];\n        for (const { method: method, start: start, count: count } of changes){\n            const move = method === \"_removeElements\" ? -count : count;\n            $216d2bdc6f281bf6$var$moveNumericKeys(_hiddenIndices, start, move);\n        }\n    }\n    _getUniformDataChanges() {\n        const _dataChanges = this._dataChanges;\n        if (!_dataChanges || !_dataChanges.length) return;\n        this._dataChanges = [];\n        const datasetCount = this.data.datasets.length;\n        const makeSet = (idx)=>new Set(_dataChanges.filter((c)=>c[0] === idx).map((c, i)=>i + \",\" + c.splice(1).join(\",\")));\n        const changeSet = makeSet(0);\n        for(let i = 1; i < datasetCount; i++){\n            if (!(0, $c7mKY.ag)(changeSet, makeSet(i))) return;\n        }\n        return Array.from(changeSet).map((c)=>c.split(\",\")).map((a)=>({\n                method: a[1],\n                start: +a[2],\n                count: +a[3]\n            }));\n    }\n    _updateLayout(minPadding) {\n        if (this.notifyPlugins(\"beforeLayout\", {\n            cancelable: true\n        }) === false) return;\n        $216d2bdc6f281bf6$export$1ecca0613f5e56d2.update(this, this.width, this.height, minPadding);\n        const area = this.chartArea;\n        const noArea = area.width <= 0 || area.height <= 0;\n        this._layers = [];\n        (0, $c7mKY.F)(this.boxes, (box)=>{\n            if (noArea && box.position === \"chartArea\") return;\n            if (box.configure) box.configure();\n            this._layers.push(...box._layers());\n        }, this);\n        this._layers.forEach((item, index)=>{\n            item._idx = index;\n        });\n        this.notifyPlugins(\"afterLayout\");\n    }\n    _updateDatasets(mode) {\n        if (this.notifyPlugins(\"beforeDatasetsUpdate\", {\n            mode: mode,\n            cancelable: true\n        }) === false) return;\n        for(let i = 0, ilen = this.data.datasets.length; i < ilen; ++i)this.getDatasetMeta(i).controller.configure();\n        for(let i = 0, ilen = this.data.datasets.length; i < ilen; ++i)this._updateDataset(i, (0, $c7mKY.a7)(mode) ? mode({\n            datasetIndex: i\n        }) : mode);\n        this.notifyPlugins(\"afterDatasetsUpdate\", {\n            mode: mode\n        });\n    }\n    _updateDataset(index, mode) {\n        const meta = this.getDatasetMeta(index);\n        const args = {\n            meta: meta,\n            index: index,\n            mode: mode,\n            cancelable: true\n        };\n        if (this.notifyPlugins(\"beforeDatasetUpdate\", args) === false) return;\n        meta.controller._update(mode);\n        args.cancelable = false;\n        this.notifyPlugins(\"afterDatasetUpdate\", args);\n    }\n    render() {\n        if (this.notifyPlugins(\"beforeRender\", {\n            cancelable: true\n        }) === false) return;\n        if ($216d2bdc6f281bf6$export$a424a0aa8f687495.has(this)) {\n            if (this.attached && !$216d2bdc6f281bf6$export$a424a0aa8f687495.running(this)) $216d2bdc6f281bf6$export$a424a0aa8f687495.start(this);\n        } else {\n            this.draw();\n            $216d2bdc6f281bf6$var$onAnimationsComplete({\n                chart: this\n            });\n        }\n    }\n    draw() {\n        let i;\n        if (this._resizeBeforeDraw) {\n            const { width: width, height: height } = this._resizeBeforeDraw;\n            this._resizeBeforeDraw = null;\n            this._resize(width, height);\n        }\n        this.clear();\n        if (this.width <= 0 || this.height <= 0) return;\n        if (this.notifyPlugins(\"beforeDraw\", {\n            cancelable: true\n        }) === false) return;\n        const layers = this._layers;\n        for(i = 0; i < layers.length && layers[i].z <= 0; ++i)layers[i].draw(this.chartArea);\n        this._drawDatasets();\n        for(; i < layers.length; ++i)layers[i].draw(this.chartArea);\n        this.notifyPlugins(\"afterDraw\");\n    }\n    _getSortedDatasetMetas(filterVisible) {\n        const metasets = this._sortedMetasets;\n        const result = [];\n        let i, ilen;\n        for(i = 0, ilen = metasets.length; i < ilen; ++i){\n            const meta = metasets[i];\n            if (!filterVisible || meta.visible) result.push(meta);\n        }\n        return result;\n    }\n    getSortedVisibleDatasetMetas() {\n        return this._getSortedDatasetMetas(true);\n    }\n    _drawDatasets() {\n        if (this.notifyPlugins(\"beforeDatasetsDraw\", {\n            cancelable: true\n        }) === false) return;\n        const metasets = this.getSortedVisibleDatasetMetas();\n        for(let i = metasets.length - 1; i >= 0; --i)this._drawDataset(metasets[i]);\n        this.notifyPlugins(\"afterDatasetsDraw\");\n    }\n    _drawDataset(meta) {\n        const ctx = this.ctx;\n        const clip = meta._clip;\n        const useClip = !clip.disabled;\n        const area = $216d2bdc6f281bf6$var$getDatasetArea(meta, this.chartArea);\n        const args = {\n            meta: meta,\n            index: meta.index,\n            cancelable: true\n        };\n        if (this.notifyPlugins(\"beforeDatasetDraw\", args) === false) return;\n        if (useClip) (0, $c7mKY.Y)(ctx, {\n            left: clip.left === false ? 0 : area.left - clip.left,\n            right: clip.right === false ? this.width : area.right + clip.right,\n            top: clip.top === false ? 0 : area.top - clip.top,\n            bottom: clip.bottom === false ? this.height : area.bottom + clip.bottom\n        });\n        meta.controller.draw();\n        if (useClip) (0, $c7mKY.$)(ctx);\n        args.cancelable = false;\n        this.notifyPlugins(\"afterDatasetDraw\", args);\n    }\n    isPointInArea(point) {\n        return (0, $c7mKY.C)(point, this.chartArea, this._minPadding);\n    }\n    getElementsAtEventForMode(e, mode, options, useFinalPosition) {\n        const method = $216d2bdc6f281bf6$export$a13296960cae0384.modes[mode];\n        if (typeof method === \"function\") return method(this, e, options, useFinalPosition);\n        return [];\n    }\n    getDatasetMeta(datasetIndex) {\n        const dataset = this.data.datasets[datasetIndex];\n        const metasets = this._metasets;\n        let meta = metasets.filter((x)=>x && x._dataset === dataset).pop();\n        if (!meta) {\n            meta = {\n                type: null,\n                data: [],\n                dataset: null,\n                controller: null,\n                hidden: null,\n                xAxisID: null,\n                yAxisID: null,\n                order: dataset && dataset.order || 0,\n                index: datasetIndex,\n                _dataset: dataset,\n                _parsed: [],\n                _sorted: false\n            };\n            metasets.push(meta);\n        }\n        return meta;\n    }\n    getContext() {\n        return this.$context || (this.$context = (0, $c7mKY.j)(null, {\n            chart: this,\n            type: \"chart\"\n        }));\n    }\n    getVisibleDatasetCount() {\n        return this.getSortedVisibleDatasetMetas().length;\n    }\n    isDatasetVisible(datasetIndex) {\n        const dataset = this.data.datasets[datasetIndex];\n        if (!dataset) return false;\n        const meta = this.getDatasetMeta(datasetIndex);\n        return typeof meta.hidden === \"boolean\" ? !meta.hidden : !dataset.hidden;\n    }\n    setDatasetVisibility(datasetIndex, visible) {\n        const meta = this.getDatasetMeta(datasetIndex);\n        meta.hidden = !visible;\n    }\n    toggleDataVisibility(index) {\n        this._hiddenIndices[index] = !this._hiddenIndices[index];\n    }\n    getDataVisibility(index) {\n        return !this._hiddenIndices[index];\n    }\n    _updateVisibility(datasetIndex, dataIndex, visible) {\n        const mode = visible ? \"show\" : \"hide\";\n        const meta = this.getDatasetMeta(datasetIndex);\n        const anims = meta.controller._resolveAnimations(undefined, mode);\n        if ((0, $c7mKY.h)(dataIndex)) {\n            meta.data[dataIndex].hidden = !visible;\n            this.update();\n        } else {\n            this.setDatasetVisibility(datasetIndex, visible);\n            anims.update(meta, {\n                visible: visible\n            });\n            this.update((ctx)=>ctx.datasetIndex === datasetIndex ? mode : undefined);\n        }\n    }\n    hide(datasetIndex, dataIndex) {\n        this._updateVisibility(datasetIndex, dataIndex, false);\n    }\n    show(datasetIndex, dataIndex) {\n        this._updateVisibility(datasetIndex, dataIndex, true);\n    }\n    _destroyDatasetMeta(datasetIndex) {\n        const meta = this._metasets[datasetIndex];\n        if (meta && meta.controller) meta.controller._destroy();\n        delete this._metasets[datasetIndex];\n    }\n    _stop() {\n        let i, ilen;\n        this.stop();\n        $216d2bdc6f281bf6$export$a424a0aa8f687495.remove(this);\n        for(i = 0, ilen = this.data.datasets.length; i < ilen; ++i)this._destroyDatasetMeta(i);\n    }\n    destroy() {\n        this.notifyPlugins(\"beforeDestroy\");\n        const { canvas: canvas, ctx: ctx } = this;\n        this._stop();\n        this.config.clearCache();\n        if (canvas) {\n            this.unbindEvents();\n            (0, $c7mKY.af)(canvas, ctx);\n            this.platform.releaseContext(ctx);\n            this.canvas = null;\n            this.ctx = null;\n        }\n        delete $216d2bdc6f281bf6$var$instances[this.id];\n        this.notifyPlugins(\"afterDestroy\");\n    }\n    toBase64Image(...args) {\n        return this.canvas.toDataURL(...args);\n    }\n    bindEvents() {\n        this.bindUserEvents();\n        if (this.options.responsive) this.bindResponsiveEvents();\n        else this.attached = true;\n    }\n    bindUserEvents() {\n        const listeners = this._listeners;\n        const platform = this.platform;\n        const _add = (type, listener)=>{\n            platform.addEventListener(this, type, listener);\n            listeners[type] = listener;\n        };\n        const listener = (e, x, y)=>{\n            e.offsetX = x;\n            e.offsetY = y;\n            this._eventHandler(e);\n        };\n        (0, $c7mKY.F)(this.options.events, (type)=>_add(type, listener));\n    }\n    bindResponsiveEvents() {\n        if (!this._responsiveListeners) this._responsiveListeners = {};\n        const listeners = this._responsiveListeners;\n        const platform = this.platform;\n        const _add = (type, listener)=>{\n            platform.addEventListener(this, type, listener);\n            listeners[type] = listener;\n        };\n        const _remove = (type, listener)=>{\n            if (listeners[type]) {\n                platform.removeEventListener(this, type, listener);\n                delete listeners[type];\n            }\n        };\n        const listener = (width, height)=>{\n            if (this.canvas) this.resize(width, height);\n        };\n        let detached;\n        const attached = ()=>{\n            _remove(\"attach\", attached);\n            this.attached = true;\n            this.resize();\n            _add(\"resize\", listener);\n            _add(\"detach\", detached);\n        };\n        detached = ()=>{\n            this.attached = false;\n            _remove(\"resize\", listener);\n            this._stop();\n            this._resize(0, 0);\n            _add(\"attach\", attached);\n        };\n        if (platform.isAttached(this.canvas)) attached();\n        else detached();\n    }\n    unbindEvents() {\n        (0, $c7mKY.F)(this._listeners, (listener, type)=>{\n            this.platform.removeEventListener(this, type, listener);\n        });\n        this._listeners = {};\n        (0, $c7mKY.F)(this._responsiveListeners, (listener, type)=>{\n            this.platform.removeEventListener(this, type, listener);\n        });\n        this._responsiveListeners = undefined;\n    }\n    updateHoverStyle(items, mode, enabled) {\n        const prefix = enabled ? \"set\" : \"remove\";\n        let meta, item, i, ilen;\n        if (mode === \"dataset\") {\n            meta = this.getDatasetMeta(items[0].datasetIndex);\n            meta.controller[\"_\" + prefix + \"DatasetHoverStyle\"]();\n        }\n        for(i = 0, ilen = items.length; i < ilen; ++i){\n            item = items[i];\n            const controller = item && this.getDatasetMeta(item.datasetIndex).controller;\n            if (controller) controller[prefix + \"HoverStyle\"](item.element, item.datasetIndex, item.index);\n        }\n    }\n    getActiveElements() {\n        return this._active || [];\n    }\n    setActiveElements(activeElements) {\n        const lastActive = this._active || [];\n        const active = activeElements.map(({ datasetIndex: datasetIndex, index: index })=>{\n            const meta = this.getDatasetMeta(datasetIndex);\n            if (!meta) throw new Error(\"No dataset found at index \" + datasetIndex);\n            return {\n                datasetIndex: datasetIndex,\n                element: meta.data[index],\n                index: index\n            };\n        });\n        const changed = !(0, $c7mKY.ah)(active, lastActive);\n        if (changed) {\n            this._active = active;\n            this._lastEvent = null;\n            this._updateHoverStyles(active, lastActive);\n        }\n    }\n    notifyPlugins(hook, args, filter) {\n        return this._plugins.notify(this, hook, args, filter);\n    }\n    isPluginEnabled(pluginId) {\n        return this._plugins._cache.filter((p)=>p.plugin.id === pluginId).length === 1;\n    }\n    _updateHoverStyles(active, lastActive, replay) {\n        const hoverOptions = this.options.hover;\n        const diff = (a, b)=>a.filter((x)=>!b.some((y)=>x.datasetIndex === y.datasetIndex && x.index === y.index));\n        const deactivated = diff(lastActive, active);\n        const activated = replay ? active : diff(active, lastActive);\n        if (deactivated.length) this.updateHoverStyle(deactivated, hoverOptions.mode, false);\n        if (activated.length && hoverOptions.mode) this.updateHoverStyle(activated, hoverOptions.mode, true);\n    }\n    _eventHandler(e, replay) {\n        const args = {\n            event: e,\n            replay: replay,\n            cancelable: true,\n            inChartArea: this.isPointInArea(e)\n        };\n        const eventFilter = (plugin)=>(plugin.options.events || this.options.events).includes(e.native.type);\n        if (this.notifyPlugins(\"beforeEvent\", args, eventFilter) === false) return;\n        const changed = this._handleEvent(e, replay, args.inChartArea);\n        args.cancelable = false;\n        this.notifyPlugins(\"afterEvent\", args, eventFilter);\n        if (changed || args.changed) this.render();\n        return this;\n    }\n    _handleEvent(e, replay, inChartArea) {\n        const { _active: lastActive = [], options: options } = this;\n        const useFinalPosition = replay;\n        const active = this._getActiveElements(e, lastActive, inChartArea, useFinalPosition);\n        const isClick = (0, $c7mKY.ai)(e);\n        const lastEvent = $216d2bdc6f281bf6$var$determineLastEvent(e, this._lastEvent, inChartArea, isClick);\n        if (inChartArea) {\n            this._lastEvent = null;\n            (0, $c7mKY.Q)(options.onHover, [\n                e,\n                active,\n                this\n            ], this);\n            if (isClick) (0, $c7mKY.Q)(options.onClick, [\n                e,\n                active,\n                this\n            ], this);\n        }\n        const changed = !(0, $c7mKY.ah)(active, lastActive);\n        if (changed || replay) {\n            this._active = active;\n            this._updateHoverStyles(active, lastActive, replay);\n        }\n        this._lastEvent = lastEvent;\n        return changed;\n    }\n    _getActiveElements(e, lastActive, inChartArea, useFinalPosition) {\n        if (e.type === \"mouseout\") return [];\n        if (!inChartArea) return lastActive;\n        const hoverOptions = this.options.hover;\n        return this.getElementsAtEventForMode(e, hoverOptions.mode, hoverOptions, useFinalPosition);\n    }\n}\nfunction $216d2bdc6f281bf6$var$invalidatePlugins() {\n    return (0, $c7mKY.F)($216d2bdc6f281bf6$export$acaa6426d77a227e.instances, (chart)=>chart._plugins.invalidate());\n}\nfunction $216d2bdc6f281bf6$var$clipArc(ctx, element, endAngle) {\n    const { startAngle: startAngle, pixelMargin: pixelMargin, x: x, y: y, outerRadius: outerRadius, innerRadius: innerRadius } = element;\n    let angleMargin = pixelMargin / outerRadius;\n    // Draw an inner border by clipping the arc and drawing a double-width border\n    // Enlarge the clipping arc by 0.33 pixels to eliminate glitches between borders\n    ctx.beginPath();\n    ctx.arc(x, y, outerRadius, startAngle - angleMargin, endAngle + angleMargin);\n    if (innerRadius > pixelMargin) {\n        angleMargin = pixelMargin / innerRadius;\n        ctx.arc(x, y, innerRadius, endAngle + angleMargin, startAngle - angleMargin, true);\n    } else ctx.arc(x, y, pixelMargin, endAngle + (0, $c7mKY.H), startAngle - (0, $c7mKY.H));\n    ctx.closePath();\n    ctx.clip();\n}\nfunction $216d2bdc6f281bf6$var$toRadiusCorners(value) {\n    return (0, $c7mKY.ak)(value, [\n        \"outerStart\",\n        \"outerEnd\",\n        \"innerStart\",\n        \"innerEnd\"\n    ]);\n}\n/**\n * Parse border radius from the provided options\n */ function $216d2bdc6f281bf6$var$parseBorderRadius$1(arc, innerRadius, outerRadius, angleDelta) {\n    const o = $216d2bdc6f281bf6$var$toRadiusCorners(arc.options.borderRadius);\n    const halfThickness = (outerRadius - innerRadius) / 2;\n    const innerLimit = Math.min(halfThickness, angleDelta * innerRadius / 2);\n    // Outer limits are complicated. We want to compute the available angular distance at\n    // a radius of outerRadius - borderRadius because for small angular distances, this term limits.\n    // We compute at r = outerRadius - borderRadius because this circle defines the center of the border corners.\n    //\n    // If the borderRadius is large, that value can become negative.\n    // This causes the outer borders to lose their radius entirely, which is rather unexpected. To solve that, if borderRadius > outerRadius\n    // we know that the thickness term will dominate and compute the limits at that point\n    const computeOuterLimit = (val)=>{\n        const outerArcLimit = (outerRadius - Math.min(halfThickness, val)) * angleDelta / 2;\n        return (0, $c7mKY.S)(val, 0, Math.min(halfThickness, outerArcLimit));\n    };\n    return {\n        outerStart: computeOuterLimit(o.outerStart),\n        outerEnd: computeOuterLimit(o.outerEnd),\n        innerStart: (0, $c7mKY.S)(o.innerStart, 0, innerLimit),\n        innerEnd: (0, $c7mKY.S)(o.innerEnd, 0, innerLimit)\n    };\n}\n/**\n * Convert (r, 𝜃) to (x, y)\n */ function $216d2bdc6f281bf6$var$rThetaToXY(r, theta, x, y) {\n    return {\n        x: x + r * Math.cos(theta),\n        y: y + r * Math.sin(theta)\n    };\n}\n/**\n * Path the arc, respecting border radius by separating into left and right halves.\n *\n *   Start      End\n *\n *    1--->a--->2    Outer\n *   /           \\\n *   8           3\n *   |           |\n *   |           |\n *   7           4\n *   \\           /\n *    6<---b<---5    Inner\n */ function $216d2bdc6f281bf6$var$pathArc(ctx, element, offset, spacing, end, circular) {\n    const { x: x, y: y, startAngle: start, pixelMargin: pixelMargin, innerRadius: innerR } = element;\n    const outerRadius = Math.max(element.outerRadius + spacing + offset - pixelMargin, 0);\n    const innerRadius = innerR > 0 ? innerR + spacing + offset + pixelMargin : 0;\n    let spacingOffset = 0;\n    const alpha = end - start;\n    if (spacing) {\n        // When spacing is present, it is the same for all items\n        // So we adjust the start and end angle of the arc such that\n        // the distance is the same as it would be without the spacing\n        const noSpacingInnerRadius = innerR > 0 ? innerR - spacing : 0;\n        const noSpacingOuterRadius = outerRadius > 0 ? outerRadius - spacing : 0;\n        const avNogSpacingRadius = (noSpacingInnerRadius + noSpacingOuterRadius) / 2;\n        const adjustedAngle = avNogSpacingRadius !== 0 ? alpha * avNogSpacingRadius / (avNogSpacingRadius + spacing) : alpha;\n        spacingOffset = (alpha - adjustedAngle) / 2;\n    }\n    const beta = Math.max(0.001, alpha * outerRadius - offset / (0, $c7mKY.P)) / outerRadius;\n    const angleOffset = (alpha - beta) / 2;\n    const startAngle = start + angleOffset + spacingOffset;\n    const endAngle = end - angleOffset - spacingOffset;\n    const { outerStart: outerStart, outerEnd: outerEnd, innerStart: innerStart, innerEnd: innerEnd } = $216d2bdc6f281bf6$var$parseBorderRadius$1(element, innerRadius, outerRadius, endAngle - startAngle);\n    const outerStartAdjustedRadius = outerRadius - outerStart;\n    const outerEndAdjustedRadius = outerRadius - outerEnd;\n    const outerStartAdjustedAngle = startAngle + outerStart / outerStartAdjustedRadius;\n    const outerEndAdjustedAngle = endAngle - outerEnd / outerEndAdjustedRadius;\n    const innerStartAdjustedRadius = innerRadius + innerStart;\n    const innerEndAdjustedRadius = innerRadius + innerEnd;\n    const innerStartAdjustedAngle = startAngle + innerStart / innerStartAdjustedRadius;\n    const innerEndAdjustedAngle = endAngle - innerEnd / innerEndAdjustedRadius;\n    ctx.beginPath();\n    if (circular) {\n        // The first arc segments from point 1 to point a to point 2\n        const outerMidAdjustedAngle = (outerStartAdjustedAngle + outerEndAdjustedAngle) / 2;\n        ctx.arc(x, y, outerRadius, outerStartAdjustedAngle, outerMidAdjustedAngle);\n        ctx.arc(x, y, outerRadius, outerMidAdjustedAngle, outerEndAdjustedAngle);\n        // The corner segment from point 2 to point 3\n        if (outerEnd > 0) {\n            const pCenter = $216d2bdc6f281bf6$var$rThetaToXY(outerEndAdjustedRadius, outerEndAdjustedAngle, x, y);\n            ctx.arc(pCenter.x, pCenter.y, outerEnd, outerEndAdjustedAngle, endAngle + (0, $c7mKY.H));\n        }\n        // The line from point 3 to point 4\n        const p4 = $216d2bdc6f281bf6$var$rThetaToXY(innerEndAdjustedRadius, endAngle, x, y);\n        ctx.lineTo(p4.x, p4.y);\n        // The corner segment from point 4 to point 5\n        if (innerEnd > 0) {\n            const pCenter = $216d2bdc6f281bf6$var$rThetaToXY(innerEndAdjustedRadius, innerEndAdjustedAngle, x, y);\n            ctx.arc(pCenter.x, pCenter.y, innerEnd, endAngle + (0, $c7mKY.H), innerEndAdjustedAngle + Math.PI);\n        }\n        // The inner arc from point 5 to point b to point 6\n        const innerMidAdjustedAngle = (endAngle - innerEnd / innerRadius + (startAngle + innerStart / innerRadius)) / 2;\n        ctx.arc(x, y, innerRadius, endAngle - innerEnd / innerRadius, innerMidAdjustedAngle, true);\n        ctx.arc(x, y, innerRadius, innerMidAdjustedAngle, startAngle + innerStart / innerRadius, true);\n        // The corner segment from point 6 to point 7\n        if (innerStart > 0) {\n            const pCenter = $216d2bdc6f281bf6$var$rThetaToXY(innerStartAdjustedRadius, innerStartAdjustedAngle, x, y);\n            ctx.arc(pCenter.x, pCenter.y, innerStart, innerStartAdjustedAngle + Math.PI, startAngle - (0, $c7mKY.H));\n        }\n        // The line from point 7 to point 8\n        const p8 = $216d2bdc6f281bf6$var$rThetaToXY(outerStartAdjustedRadius, startAngle, x, y);\n        ctx.lineTo(p8.x, p8.y);\n        // The corner segment from point 8 to point 1\n        if (outerStart > 0) {\n            const pCenter = $216d2bdc6f281bf6$var$rThetaToXY(outerStartAdjustedRadius, outerStartAdjustedAngle, x, y);\n            ctx.arc(pCenter.x, pCenter.y, outerStart, startAngle - (0, $c7mKY.H), outerStartAdjustedAngle);\n        }\n    } else {\n        ctx.moveTo(x, y);\n        const outerStartX = Math.cos(outerStartAdjustedAngle) * outerRadius + x;\n        const outerStartY = Math.sin(outerStartAdjustedAngle) * outerRadius + y;\n        ctx.lineTo(outerStartX, outerStartY);\n        const outerEndX = Math.cos(outerEndAdjustedAngle) * outerRadius + x;\n        const outerEndY = Math.sin(outerEndAdjustedAngle) * outerRadius + y;\n        ctx.lineTo(outerEndX, outerEndY);\n    }\n    ctx.closePath();\n}\nfunction $216d2bdc6f281bf6$var$drawArc(ctx, element, offset, spacing, circular) {\n    const { fullCircles: fullCircles, startAngle: startAngle, circumference: circumference } = element;\n    let endAngle = element.endAngle;\n    if (fullCircles) {\n        $216d2bdc6f281bf6$var$pathArc(ctx, element, offset, spacing, endAngle, circular);\n        for(let i = 0; i < fullCircles; ++i)ctx.fill();\n        if (!isNaN(circumference)) endAngle = startAngle + (circumference % (0, $c7mKY.T) || (0, $c7mKY.T));\n    }\n    $216d2bdc6f281bf6$var$pathArc(ctx, element, offset, spacing, endAngle, circular);\n    ctx.fill();\n    return endAngle;\n}\nfunction $216d2bdc6f281bf6$var$drawBorder(ctx, element, offset, spacing, circular) {\n    const { fullCircles: fullCircles, startAngle: startAngle, circumference: circumference, options: options } = element;\n    const { borderWidth: borderWidth, borderJoinStyle: borderJoinStyle, borderDash: borderDash, borderDashOffset: borderDashOffset } = options;\n    const inner = options.borderAlign === \"inner\";\n    if (!borderWidth) return;\n    ctx.setLineDash(borderDash || []);\n    ctx.lineDashOffset = borderDashOffset;\n    if (inner) {\n        ctx.lineWidth = borderWidth * 2;\n        ctx.lineJoin = borderJoinStyle || \"round\";\n    } else {\n        ctx.lineWidth = borderWidth;\n        ctx.lineJoin = borderJoinStyle || \"bevel\";\n    }\n    let endAngle = element.endAngle;\n    if (fullCircles) {\n        $216d2bdc6f281bf6$var$pathArc(ctx, element, offset, spacing, endAngle, circular);\n        for(let i = 0; i < fullCircles; ++i)ctx.stroke();\n        if (!isNaN(circumference)) endAngle = startAngle + (circumference % (0, $c7mKY.T) || (0, $c7mKY.T));\n    }\n    if (inner) $216d2bdc6f281bf6$var$clipArc(ctx, element, endAngle);\n    if (!fullCircles) {\n        $216d2bdc6f281bf6$var$pathArc(ctx, element, offset, spacing, endAngle, circular);\n        ctx.stroke();\n    }\n}\nclass $216d2bdc6f281bf6$export$d48203c759d6a1fc extends $216d2bdc6f281bf6$export$db77ccec0bb4ccac {\n    static id = \"arc\";\n    static defaults = {\n        borderAlign: \"center\",\n        borderColor: \"#fff\",\n        borderDash: [],\n        borderDashOffset: 0,\n        borderJoinStyle: undefined,\n        borderRadius: 0,\n        borderWidth: 2,\n        offset: 0,\n        spacing: 0,\n        angle: undefined,\n        circular: true\n    };\n    static defaultRoutes = {\n        backgroundColor: \"backgroundColor\"\n    };\n    static descriptors = {\n        _scriptable: true,\n        _indexable: (name)=>name !== \"borderDash\"\n    };\n    circumference;\n    endAngle;\n    fullCircles;\n    innerRadius;\n    outerRadius;\n    pixelMargin;\n    startAngle;\n    constructor(cfg){\n        super();\n        this.options = undefined;\n        this.circumference = undefined;\n        this.startAngle = undefined;\n        this.endAngle = undefined;\n        this.innerRadius = undefined;\n        this.outerRadius = undefined;\n        this.pixelMargin = 0;\n        this.fullCircles = 0;\n        if (cfg) Object.assign(this, cfg);\n    }\n    inRange(chartX, chartY, useFinalPosition) {\n        const point = this.getProps([\n            \"x\",\n            \"y\"\n        ], useFinalPosition);\n        const { angle: angle, distance: distance } = (0, $c7mKY.D)(point, {\n            x: chartX,\n            y: chartY\n        });\n        const { startAngle: startAngle, endAngle: endAngle, innerRadius: innerRadius, outerRadius: outerRadius, circumference: circumference } = this.getProps([\n            \"startAngle\",\n            \"endAngle\",\n            \"innerRadius\",\n            \"outerRadius\",\n            \"circumference\"\n        ], useFinalPosition);\n        const rAdjust = (this.options.spacing + this.options.borderWidth) / 2;\n        const _circumference = (0, $c7mKY.v)(circumference, endAngle - startAngle);\n        const nonZeroBetween = (0, $c7mKY.p)(angle, startAngle, endAngle) && startAngle !== endAngle;\n        const betweenAngles = _circumference >= (0, $c7mKY.T) || nonZeroBetween;\n        const withinRadius = (0, $c7mKY.aj)(distance, innerRadius + rAdjust, outerRadius + rAdjust);\n        return betweenAngles && withinRadius;\n    }\n    getCenterPoint(useFinalPosition) {\n        const { x: x, y: y, startAngle: startAngle, endAngle: endAngle, innerRadius: innerRadius, outerRadius: outerRadius } = this.getProps([\n            \"x\",\n            \"y\",\n            \"startAngle\",\n            \"endAngle\",\n            \"innerRadius\",\n            \"outerRadius\"\n        ], useFinalPosition);\n        const { offset: offset, spacing: spacing } = this.options;\n        const halfAngle = (startAngle + endAngle) / 2;\n        const halfRadius = (innerRadius + outerRadius + spacing + offset) / 2;\n        return {\n            x: x + Math.cos(halfAngle) * halfRadius,\n            y: y + Math.sin(halfAngle) * halfRadius\n        };\n    }\n    tooltipPosition(useFinalPosition) {\n        return this.getCenterPoint(useFinalPosition);\n    }\n    draw(ctx) {\n        const { options: options, circumference: circumference } = this;\n        const offset = (options.offset || 0) / 4;\n        const spacing = (options.spacing || 0) / 2;\n        const circular = options.circular;\n        this.pixelMargin = options.borderAlign === \"inner\" ? 0.33 : 0;\n        this.fullCircles = circumference > (0, $c7mKY.T) ? Math.floor(circumference / (0, $c7mKY.T)) : 0;\n        if (circumference === 0 || this.innerRadius < 0 || this.outerRadius < 0) return;\n        ctx.save();\n        const halfAngle = (this.startAngle + this.endAngle) / 2;\n        ctx.translate(Math.cos(halfAngle) * offset, Math.sin(halfAngle) * offset);\n        const fix = 1 - Math.sin(Math.min((0, $c7mKY.P), circumference || 0));\n        const radiusOffset = offset * fix;\n        ctx.fillStyle = options.backgroundColor;\n        ctx.strokeStyle = options.borderColor;\n        $216d2bdc6f281bf6$var$drawArc(ctx, this, radiusOffset, spacing, circular);\n        $216d2bdc6f281bf6$var$drawBorder(ctx, this, radiusOffset, spacing, circular);\n        ctx.restore();\n    }\n}\nfunction $216d2bdc6f281bf6$var$setStyle(ctx, options, style = options) {\n    ctx.lineCap = (0, $c7mKY.v)(style.borderCapStyle, options.borderCapStyle);\n    ctx.setLineDash((0, $c7mKY.v)(style.borderDash, options.borderDash));\n    ctx.lineDashOffset = (0, $c7mKY.v)(style.borderDashOffset, options.borderDashOffset);\n    ctx.lineJoin = (0, $c7mKY.v)(style.borderJoinStyle, options.borderJoinStyle);\n    ctx.lineWidth = (0, $c7mKY.v)(style.borderWidth, options.borderWidth);\n    ctx.strokeStyle = (0, $c7mKY.v)(style.borderColor, options.borderColor);\n}\nfunction $216d2bdc6f281bf6$var$lineTo(ctx, previous, target) {\n    ctx.lineTo(target.x, target.y);\n}\nfunction $216d2bdc6f281bf6$var$getLineMethod(options) {\n    if (options.stepped) return 0, $c7mKY.ar;\n    if (options.tension || options.cubicInterpolationMode === \"monotone\") return 0, $c7mKY.as;\n    return $216d2bdc6f281bf6$var$lineTo;\n}\nfunction $216d2bdc6f281bf6$var$pathVars(points, segment, params = {}) {\n    const count = points.length;\n    const { start: paramsStart = 0, end: paramsEnd = count - 1 } = params;\n    const { start: segmentStart, end: segmentEnd } = segment;\n    const start = Math.max(paramsStart, segmentStart);\n    const end = Math.min(paramsEnd, segmentEnd);\n    const outside = paramsStart < segmentStart && paramsEnd < segmentStart || paramsStart > segmentEnd && paramsEnd > segmentEnd;\n    return {\n        count: count,\n        start: start,\n        loop: segment.loop,\n        ilen: end < start && !outside ? count + end - start : end - start\n    };\n}\nfunction $216d2bdc6f281bf6$var$pathSegment(ctx, line, segment, params) {\n    const { points: points, options: options } = line;\n    const { count: count, start: start, loop: loop, ilen: ilen } = $216d2bdc6f281bf6$var$pathVars(points, segment, params);\n    const lineMethod = $216d2bdc6f281bf6$var$getLineMethod(options);\n    let { move: move = true, reverse: reverse } = params || {};\n    let i, point, prev;\n    for(i = 0; i <= ilen; ++i){\n        point = points[(start + (reverse ? ilen - i : i)) % count];\n        if (point.skip) continue;\n        else if (move) {\n            ctx.moveTo(point.x, point.y);\n            move = false;\n        } else lineMethod(ctx, prev, point, reverse, options.stepped);\n        prev = point;\n    }\n    if (loop) {\n        point = points[(start + (reverse ? ilen : 0)) % count];\n        lineMethod(ctx, prev, point, reverse, options.stepped);\n    }\n    return !!loop;\n}\nfunction $216d2bdc6f281bf6$var$fastPathSegment(ctx, line, segment, params) {\n    const points = line.points;\n    const { count: count, start: start, ilen: ilen } = $216d2bdc6f281bf6$var$pathVars(points, segment, params);\n    const { move: move = true, reverse: reverse } = params || {};\n    let avgX = 0;\n    let countX = 0;\n    let i, point, prevX, minY, maxY, lastY;\n    const pointIndex = (index)=>(start + (reverse ? ilen - index : index)) % count;\n    const drawX = ()=>{\n        if (minY !== maxY) {\n            ctx.lineTo(avgX, maxY);\n            ctx.lineTo(avgX, minY);\n            ctx.lineTo(avgX, lastY);\n        }\n    };\n    if (move) {\n        point = points[pointIndex(0)];\n        ctx.moveTo(point.x, point.y);\n    }\n    for(i = 0; i <= ilen; ++i){\n        point = points[pointIndex(i)];\n        if (point.skip) continue;\n        const x = point.x;\n        const y = point.y;\n        const truncX = x | 0;\n        if (truncX === prevX) {\n            if (y < minY) minY = y;\n            else if (y > maxY) maxY = y;\n            avgX = (countX * avgX + x) / ++countX;\n        } else {\n            drawX();\n            ctx.lineTo(x, y);\n            prevX = truncX;\n            countX = 0;\n            minY = maxY = y;\n        }\n        lastY = y;\n    }\n    drawX();\n}\nfunction $216d2bdc6f281bf6$var$_getSegmentMethod(line) {\n    const opts = line.options;\n    const borderDash = opts.borderDash && opts.borderDash.length;\n    const useFastPath = !line._decimated && !line._loop && !opts.tension && opts.cubicInterpolationMode !== \"monotone\" && !opts.stepped && !borderDash;\n    return useFastPath ? $216d2bdc6f281bf6$var$fastPathSegment : $216d2bdc6f281bf6$var$pathSegment;\n}\nfunction $216d2bdc6f281bf6$var$_getInterpolationMethod(options) {\n    if (options.stepped) return 0, $c7mKY.ao;\n    if (options.tension || options.cubicInterpolationMode === \"monotone\") return 0, $c7mKY.ap;\n    return 0, $c7mKY.aq;\n}\nfunction $216d2bdc6f281bf6$var$strokePathWithCache(ctx, line, start, count) {\n    let path = line._path;\n    if (!path) {\n        path = line._path = new Path2D();\n        if (line.path(path, start, count)) path.closePath();\n    }\n    $216d2bdc6f281bf6$var$setStyle(ctx, line.options);\n    ctx.stroke(path);\n}\nfunction $216d2bdc6f281bf6$var$strokePathDirect(ctx, line, start, count) {\n    const { segments: segments, options: options } = line;\n    const segmentMethod = $216d2bdc6f281bf6$var$_getSegmentMethod(line);\n    for (const segment of segments){\n        $216d2bdc6f281bf6$var$setStyle(ctx, options, segment.style);\n        ctx.beginPath();\n        if (segmentMethod(ctx, line, segment, {\n            start: start,\n            end: start + count - 1\n        })) ctx.closePath();\n        ctx.stroke();\n    }\n}\nconst $216d2bdc6f281bf6$var$usePath2D = typeof Path2D === \"function\";\nfunction $216d2bdc6f281bf6$var$draw(ctx, line, start, count) {\n    if ($216d2bdc6f281bf6$var$usePath2D && !line.options.segment) $216d2bdc6f281bf6$var$strokePathWithCache(ctx, line, start, count);\n    else $216d2bdc6f281bf6$var$strokePathDirect(ctx, line, start, count);\n}\nclass $216d2bdc6f281bf6$export$55e463fa7bcd3469 extends $216d2bdc6f281bf6$export$db77ccec0bb4ccac {\n    static id = \"line\";\n    static defaults = {\n        borderCapStyle: \"butt\",\n        borderDash: [],\n        borderDashOffset: 0,\n        borderJoinStyle: \"miter\",\n        borderWidth: 3,\n        capBezierPoints: true,\n        cubicInterpolationMode: \"default\",\n        fill: false,\n        spanGaps: false,\n        stepped: false,\n        tension: 0\n    };\n    static defaultRoutes = {\n        backgroundColor: \"backgroundColor\",\n        borderColor: \"borderColor\"\n    };\n    static descriptors = {\n        _scriptable: true,\n        _indexable: (name)=>name !== \"borderDash\" && name !== \"fill\"\n    };\n    constructor(cfg){\n        super();\n        this.animated = true;\n        this.options = undefined;\n        this._chart = undefined;\n        this._loop = undefined;\n        this._fullLoop = undefined;\n        this._path = undefined;\n        this._points = undefined;\n        this._segments = undefined;\n        this._decimated = false;\n        this._pointsUpdated = false;\n        this._datasetIndex = undefined;\n        if (cfg) Object.assign(this, cfg);\n    }\n    updateControlPoints(chartArea, indexAxis) {\n        const options = this.options;\n        if ((options.tension || options.cubicInterpolationMode === \"monotone\") && !options.stepped && !this._pointsUpdated) {\n            const loop = options.spanGaps ? this._loop : this._fullLoop;\n            (0, $c7mKY.al)(this._points, options, chartArea, loop, indexAxis);\n            this._pointsUpdated = true;\n        }\n    }\n    set points(points) {\n        this._points = points;\n        delete this._segments;\n        delete this._path;\n        this._pointsUpdated = false;\n    }\n    get points() {\n        return this._points;\n    }\n    get segments() {\n        return this._segments || (this._segments = (0, $c7mKY.am)(this, this.options.segment));\n    }\n    first() {\n        const segments = this.segments;\n        const points = this.points;\n        return segments.length && points[segments[0].start];\n    }\n    last() {\n        const segments = this.segments;\n        const points = this.points;\n        const count = segments.length;\n        return count && points[segments[count - 1].end];\n    }\n    interpolate(point, property) {\n        const options = this.options;\n        const value = point[property];\n        const points = this.points;\n        const segments = (0, $c7mKY.an)(this, {\n            property: property,\n            start: value,\n            end: value\n        });\n        if (!segments.length) return;\n        const result = [];\n        const _interpolate = $216d2bdc6f281bf6$var$_getInterpolationMethod(options);\n        let i, ilen;\n        for(i = 0, ilen = segments.length; i < ilen; ++i){\n            const { start: start, end: end } = segments[i];\n            const p1 = points[start];\n            const p2 = points[end];\n            if (p1 === p2) {\n                result.push(p1);\n                continue;\n            }\n            const t = Math.abs((value - p1[property]) / (p2[property] - p1[property]));\n            const interpolated = _interpolate(p1, p2, t, options.stepped);\n            interpolated[property] = point[property];\n            result.push(interpolated);\n        }\n        return result.length === 1 ? result[0] : result;\n    }\n    pathSegment(ctx, segment, params) {\n        const segmentMethod = $216d2bdc6f281bf6$var$_getSegmentMethod(this);\n        return segmentMethod(ctx, this, segment, params);\n    }\n    path(ctx, start, count) {\n        const segments = this.segments;\n        const segmentMethod = $216d2bdc6f281bf6$var$_getSegmentMethod(this);\n        let loop = this._loop;\n        start = start || 0;\n        count = count || this.points.length - start;\n        for (const segment of segments)loop &= segmentMethod(ctx, this, segment, {\n            start: start,\n            end: start + count - 1\n        });\n        return !!loop;\n    }\n    draw(ctx, chartArea, start, count) {\n        const options = this.options || {};\n        const points = this.points || [];\n        if (points.length && options.borderWidth) {\n            ctx.save();\n            $216d2bdc6f281bf6$var$draw(ctx, this, start, count);\n            ctx.restore();\n        }\n        if (this.animated) {\n            this._pointsUpdated = false;\n            this._path = undefined;\n        }\n    }\n}\nfunction $216d2bdc6f281bf6$var$inRange$1(el, pos, axis, useFinalPosition) {\n    const options = el.options;\n    const { [axis]: value } = el.getProps([\n        axis\n    ], useFinalPosition);\n    return Math.abs(pos - value) < options.radius + options.hitRadius;\n}\nclass $216d2bdc6f281bf6$export$bd159b522b230b7a extends $216d2bdc6f281bf6$export$db77ccec0bb4ccac {\n    static id = \"point\";\n    parsed;\n    skip;\n    stop;\n    /**\n   * @type {any}\n   */ static defaults = {\n        borderWidth: 1,\n        hitRadius: 1,\n        hoverBorderWidth: 1,\n        hoverRadius: 4,\n        pointStyle: \"circle\",\n        radius: 3,\n        rotation: 0\n    };\n    /**\n   * @type {any}\n   */ static defaultRoutes = {\n        backgroundColor: \"backgroundColor\",\n        borderColor: \"borderColor\"\n    };\n    constructor(cfg){\n        super();\n        this.options = undefined;\n        this.parsed = undefined;\n        this.skip = undefined;\n        this.stop = undefined;\n        if (cfg) Object.assign(this, cfg);\n    }\n    inRange(mouseX, mouseY, useFinalPosition) {\n        const options = this.options;\n        const { x: x, y: y } = this.getProps([\n            \"x\",\n            \"y\"\n        ], useFinalPosition);\n        return Math.pow(mouseX - x, 2) + Math.pow(mouseY - y, 2) < Math.pow(options.hitRadius + options.radius, 2);\n    }\n    inXRange(mouseX, useFinalPosition) {\n        return $216d2bdc6f281bf6$var$inRange$1(this, mouseX, \"x\", useFinalPosition);\n    }\n    inYRange(mouseY, useFinalPosition) {\n        return $216d2bdc6f281bf6$var$inRange$1(this, mouseY, \"y\", useFinalPosition);\n    }\n    getCenterPoint(useFinalPosition) {\n        const { x: x, y: y } = this.getProps([\n            \"x\",\n            \"y\"\n        ], useFinalPosition);\n        return {\n            x: x,\n            y: y\n        };\n    }\n    size(options) {\n        options = options || this.options || {};\n        let radius = options.radius || 0;\n        radius = Math.max(radius, radius && options.hoverRadius || 0);\n        const borderWidth = radius && options.borderWidth || 0;\n        return (radius + borderWidth) * 2;\n    }\n    draw(ctx, area) {\n        const options = this.options;\n        if (this.skip || options.radius < 0.1 || !(0, $c7mKY.C)(this, area, this.size(options) / 2)) return;\n        ctx.strokeStyle = options.borderColor;\n        ctx.lineWidth = options.borderWidth;\n        ctx.fillStyle = options.backgroundColor;\n        (0, $c7mKY.at)(ctx, options, this.x, this.y);\n    }\n    getRange() {\n        const options = this.options || {};\n        // @ts-expect-error Fallbacks should never be hit in practice\n        return options.radius + options.hitRadius;\n    }\n}\nfunction $216d2bdc6f281bf6$var$getBarBounds(bar, useFinalPosition) {\n    const { x: x, y: y, base: base, width: width, height: height } = bar.getProps([\n        \"x\",\n        \"y\",\n        \"base\",\n        \"width\",\n        \"height\"\n    ], useFinalPosition);\n    let left, right, top, bottom, half;\n    if (bar.horizontal) {\n        half = height / 2;\n        left = Math.min(x, base);\n        right = Math.max(x, base);\n        top = y - half;\n        bottom = y + half;\n    } else {\n        half = width / 2;\n        left = x - half;\n        right = x + half;\n        top = Math.min(y, base);\n        bottom = Math.max(y, base);\n    }\n    return {\n        left: left,\n        top: top,\n        right: right,\n        bottom: bottom\n    };\n}\nfunction $216d2bdc6f281bf6$var$skipOrLimit(skip, value, min, max) {\n    return skip ? 0 : (0, $c7mKY.S)(value, min, max);\n}\nfunction $216d2bdc6f281bf6$var$parseBorderWidth(bar, maxW, maxH) {\n    const value = bar.options.borderWidth;\n    const skip = bar.borderSkipped;\n    const o = (0, $c7mKY.av)(value);\n    return {\n        t: $216d2bdc6f281bf6$var$skipOrLimit(skip.top, o.top, 0, maxH),\n        r: $216d2bdc6f281bf6$var$skipOrLimit(skip.right, o.right, 0, maxW),\n        b: $216d2bdc6f281bf6$var$skipOrLimit(skip.bottom, o.bottom, 0, maxH),\n        l: $216d2bdc6f281bf6$var$skipOrLimit(skip.left, o.left, 0, maxW)\n    };\n}\nfunction $216d2bdc6f281bf6$var$parseBorderRadius(bar, maxW, maxH) {\n    const { enableBorderRadius: enableBorderRadius } = bar.getProps([\n        \"enableBorderRadius\"\n    ]);\n    const value = bar.options.borderRadius;\n    const o = (0, $c7mKY.aw)(value);\n    const maxR = Math.min(maxW, maxH);\n    const skip = bar.borderSkipped;\n    const enableBorder = enableBorderRadius || (0, $c7mKY.i)(value);\n    return {\n        topLeft: $216d2bdc6f281bf6$var$skipOrLimit(!enableBorder || skip.top || skip.left, o.topLeft, 0, maxR),\n        topRight: $216d2bdc6f281bf6$var$skipOrLimit(!enableBorder || skip.top || skip.right, o.topRight, 0, maxR),\n        bottomLeft: $216d2bdc6f281bf6$var$skipOrLimit(!enableBorder || skip.bottom || skip.left, o.bottomLeft, 0, maxR),\n        bottomRight: $216d2bdc6f281bf6$var$skipOrLimit(!enableBorder || skip.bottom || skip.right, o.bottomRight, 0, maxR)\n    };\n}\nfunction $216d2bdc6f281bf6$var$boundingRects(bar) {\n    const bounds = $216d2bdc6f281bf6$var$getBarBounds(bar);\n    const width = bounds.right - bounds.left;\n    const height = bounds.bottom - bounds.top;\n    const border = $216d2bdc6f281bf6$var$parseBorderWidth(bar, width / 2, height / 2);\n    const radius = $216d2bdc6f281bf6$var$parseBorderRadius(bar, width / 2, height / 2);\n    return {\n        outer: {\n            x: bounds.left,\n            y: bounds.top,\n            w: width,\n            h: height,\n            radius: radius\n        },\n        inner: {\n            x: bounds.left + border.l,\n            y: bounds.top + border.t,\n            w: width - border.l - border.r,\n            h: height - border.t - border.b,\n            radius: {\n                topLeft: Math.max(0, radius.topLeft - Math.max(border.t, border.l)),\n                topRight: Math.max(0, radius.topRight - Math.max(border.t, border.r)),\n                bottomLeft: Math.max(0, radius.bottomLeft - Math.max(border.b, border.l)),\n                bottomRight: Math.max(0, radius.bottomRight - Math.max(border.b, border.r))\n            }\n        }\n    };\n}\nfunction $216d2bdc6f281bf6$var$inRange(bar, x, y, useFinalPosition) {\n    const skipX = x === null;\n    const skipY = y === null;\n    const skipBoth = skipX && skipY;\n    const bounds = bar && !skipBoth && $216d2bdc6f281bf6$var$getBarBounds(bar, useFinalPosition);\n    return bounds && (skipX || (0, $c7mKY.aj)(x, bounds.left, bounds.right)) && (skipY || (0, $c7mKY.aj)(y, bounds.top, bounds.bottom));\n}\nfunction $216d2bdc6f281bf6$var$hasRadius(radius) {\n    return radius.topLeft || radius.topRight || radius.bottomLeft || radius.bottomRight;\n}\nfunction $216d2bdc6f281bf6$var$addNormalRectPath(ctx, rect) {\n    ctx.rect(rect.x, rect.y, rect.w, rect.h);\n}\nfunction $216d2bdc6f281bf6$var$inflateRect(rect, amount, refRect = {}) {\n    const x = rect.x !== refRect.x ? -amount : 0;\n    const y = rect.y !== refRect.y ? -amount : 0;\n    const w = (rect.x + rect.w !== refRect.x + refRect.w ? amount : 0) - x;\n    const h = (rect.y + rect.h !== refRect.y + refRect.h ? amount : 0) - y;\n    return {\n        x: rect.x + x,\n        y: rect.y + y,\n        w: rect.w + w,\n        h: rect.h + h,\n        radius: rect.radius\n    };\n}\nclass $216d2bdc6f281bf6$export$a16ed71bf4b07672 extends $216d2bdc6f281bf6$export$db77ccec0bb4ccac {\n    static id = \"bar\";\n    static defaults = {\n        borderSkipped: \"start\",\n        borderWidth: 0,\n        borderRadius: 0,\n        inflateAmount: \"auto\",\n        pointStyle: undefined\n    };\n    static defaultRoutes = {\n        backgroundColor: \"backgroundColor\",\n        borderColor: \"borderColor\"\n    };\n    constructor(cfg){\n        super();\n        this.options = undefined;\n        this.horizontal = undefined;\n        this.base = undefined;\n        this.width = undefined;\n        this.height = undefined;\n        this.inflateAmount = undefined;\n        if (cfg) Object.assign(this, cfg);\n    }\n    draw(ctx) {\n        const { inflateAmount: inflateAmount, options: { borderColor: borderColor, backgroundColor: backgroundColor } } = this;\n        const { inner: inner, outer: outer } = $216d2bdc6f281bf6$var$boundingRects(this);\n        const addRectPath = $216d2bdc6f281bf6$var$hasRadius(outer.radius) ? (0, $c7mKY.au) : $216d2bdc6f281bf6$var$addNormalRectPath;\n        ctx.save();\n        if (outer.w !== inner.w || outer.h !== inner.h) {\n            ctx.beginPath();\n            addRectPath(ctx, $216d2bdc6f281bf6$var$inflateRect(outer, inflateAmount, inner));\n            ctx.clip();\n            addRectPath(ctx, $216d2bdc6f281bf6$var$inflateRect(inner, -inflateAmount, outer));\n            ctx.fillStyle = borderColor;\n            ctx.fill(\"evenodd\");\n        }\n        ctx.beginPath();\n        addRectPath(ctx, $216d2bdc6f281bf6$var$inflateRect(inner, inflateAmount));\n        ctx.fillStyle = backgroundColor;\n        ctx.fill();\n        ctx.restore();\n    }\n    inRange(mouseX, mouseY, useFinalPosition) {\n        return $216d2bdc6f281bf6$var$inRange(this, mouseX, mouseY, useFinalPosition);\n    }\n    inXRange(mouseX, useFinalPosition) {\n        return $216d2bdc6f281bf6$var$inRange(this, mouseX, null, useFinalPosition);\n    }\n    inYRange(mouseY, useFinalPosition) {\n        return $216d2bdc6f281bf6$var$inRange(this, null, mouseY, useFinalPosition);\n    }\n    getCenterPoint(useFinalPosition) {\n        const { x: x, y: y, base: base, horizontal: horizontal } = this.getProps([\n            \"x\",\n            \"y\",\n            \"base\",\n            \"horizontal\"\n        ], useFinalPosition);\n        return {\n            x: horizontal ? (x + base) / 2 : x,\n            y: horizontal ? y : (y + base) / 2\n        };\n    }\n    getRange(axis) {\n        return axis === \"x\" ? this.width / 2 : this.height / 2;\n    }\n}\nvar $216d2bdc6f281bf6$export$7a5d735b2ab6389d = /*#__PURE__*/ Object.freeze({\n    __proto__: null,\n    ArcElement: $216d2bdc6f281bf6$export$d48203c759d6a1fc,\n    BarElement: $216d2bdc6f281bf6$export$a16ed71bf4b07672,\n    LineElement: $216d2bdc6f281bf6$export$55e463fa7bcd3469,\n    PointElement: $216d2bdc6f281bf6$export$bd159b522b230b7a\n});\nconst $216d2bdc6f281bf6$var$BORDER_COLORS = [\n    \"rgb(54, 162, 235)\",\n    \"rgb(255, 99, 132)\",\n    \"rgb(255, 159, 64)\",\n    \"rgb(255, 205, 86)\",\n    \"rgb(75, 192, 192)\",\n    \"rgb(153, 102, 255)\",\n    \"rgb(201, 203, 207)\" // grey\n];\n// Border colors with 50% transparency\nconst $216d2bdc6f281bf6$var$BACKGROUND_COLORS = /* #__PURE__ */ $216d2bdc6f281bf6$var$BORDER_COLORS.map((color)=>color.replace(\"rgb(\", \"rgba(\").replace(\")\", \", 0.5)\"));\nfunction $216d2bdc6f281bf6$var$getBorderColor(i) {\n    return $216d2bdc6f281bf6$var$BORDER_COLORS[i % $216d2bdc6f281bf6$var$BORDER_COLORS.length];\n}\nfunction $216d2bdc6f281bf6$var$getBackgroundColor(i) {\n    return $216d2bdc6f281bf6$var$BACKGROUND_COLORS[i % $216d2bdc6f281bf6$var$BACKGROUND_COLORS.length];\n}\nfunction $216d2bdc6f281bf6$var$colorizeDefaultDataset(dataset, i) {\n    dataset.borderColor = $216d2bdc6f281bf6$var$getBorderColor(i);\n    dataset.backgroundColor = $216d2bdc6f281bf6$var$getBackgroundColor(i);\n    return ++i;\n}\nfunction $216d2bdc6f281bf6$var$colorizeDoughnutDataset(dataset, i) {\n    dataset.backgroundColor = dataset.data.map(()=>$216d2bdc6f281bf6$var$getBorderColor(i++));\n    return i;\n}\nfunction $216d2bdc6f281bf6$var$colorizePolarAreaDataset(dataset, i) {\n    dataset.backgroundColor = dataset.data.map(()=>$216d2bdc6f281bf6$var$getBackgroundColor(i++));\n    return i;\n}\nfunction $216d2bdc6f281bf6$var$getColorizer(chart) {\n    let i = 0;\n    return (dataset, datasetIndex)=>{\n        const controller = chart.getDatasetMeta(datasetIndex).controller;\n        if (controller instanceof $216d2bdc6f281bf6$export$e04603e7d8b77172) i = $216d2bdc6f281bf6$var$colorizeDoughnutDataset(dataset, i);\n        else if (controller instanceof $216d2bdc6f281bf6$export$2a270b3a0d973c85) i = $216d2bdc6f281bf6$var$colorizePolarAreaDataset(dataset, i);\n        else if (controller) i = $216d2bdc6f281bf6$var$colorizeDefaultDataset(dataset, i);\n    };\n}\nfunction $216d2bdc6f281bf6$var$containsColorsDefinitions(descriptors) {\n    let k;\n    for(k in descriptors){\n        if (descriptors[k].borderColor || descriptors[k].backgroundColor) return true;\n    }\n    return false;\n}\nfunction $216d2bdc6f281bf6$var$containsColorsDefinition(descriptor) {\n    return descriptor && (descriptor.borderColor || descriptor.backgroundColor);\n}\nfunction $216d2bdc6f281bf6$var$containsDefaultColorsDefenitions() {\n    return (0, $c7mKY.d).borderColor !== \"rgba(0,0,0,0.1)\" || (0, $c7mKY.d).backgroundColor !== \"rgba(0,0,0,0.1)\";\n}\nvar $216d2bdc6f281bf6$export$c537fa0d021d010b = {\n    id: \"colors\",\n    defaults: {\n        enabled: true,\n        forceOverride: false\n    },\n    beforeLayout (chart, _args, options) {\n        if (!options.enabled) return;\n        const { data: { datasets: datasets }, options: chartOptions } = chart.config;\n        const { elements: elements } = chartOptions;\n        const containsColorDefenition = $216d2bdc6f281bf6$var$containsColorsDefinitions(datasets) || $216d2bdc6f281bf6$var$containsColorsDefinition(chartOptions) || elements && $216d2bdc6f281bf6$var$containsColorsDefinitions(elements) || $216d2bdc6f281bf6$var$containsDefaultColorsDefenitions();\n        if (!options.forceOverride && containsColorDefenition) return;\n        const colorizer = $216d2bdc6f281bf6$var$getColorizer(chart);\n        datasets.forEach(colorizer);\n    }\n};\nfunction $216d2bdc6f281bf6$var$lttbDecimation(data, start, count, availableWidth, options) {\n    const samples = options.samples || availableWidth;\n    if (samples >= count) return data.slice(start, start + count);\n    const decimated = [];\n    const bucketWidth = (count - 2) / (samples - 2);\n    let sampledIndex = 0;\n    const endIndex = start + count - 1;\n    let a = start;\n    let i, maxAreaPoint, maxArea, area, nextA;\n    decimated[sampledIndex++] = data[a];\n    for(i = 0; i < samples - 2; i++){\n        let avgX = 0;\n        let avgY = 0;\n        let j;\n        const avgRangeStart = Math.floor((i + 1) * bucketWidth) + 1 + start;\n        const avgRangeEnd = Math.min(Math.floor((i + 2) * bucketWidth) + 1, count) + start;\n        const avgRangeLength = avgRangeEnd - avgRangeStart;\n        for(j = avgRangeStart; j < avgRangeEnd; j++){\n            avgX += data[j].x;\n            avgY += data[j].y;\n        }\n        avgX /= avgRangeLength;\n        avgY /= avgRangeLength;\n        const rangeOffs = Math.floor(i * bucketWidth) + 1 + start;\n        const rangeTo = Math.min(Math.floor((i + 1) * bucketWidth) + 1, count) + start;\n        const { x: pointAx, y: pointAy } = data[a];\n        maxArea = area = -1;\n        for(j = rangeOffs; j < rangeTo; j++){\n            area = 0.5 * Math.abs((pointAx - avgX) * (data[j].y - pointAy) - (pointAx - data[j].x) * (avgY - pointAy));\n            if (area > maxArea) {\n                maxArea = area;\n                maxAreaPoint = data[j];\n                nextA = j;\n            }\n        }\n        decimated[sampledIndex++] = maxAreaPoint;\n        a = nextA;\n    }\n    decimated[sampledIndex++] = data[endIndex];\n    return decimated;\n}\nfunction $216d2bdc6f281bf6$var$minMaxDecimation(data, start, count, availableWidth) {\n    let avgX = 0;\n    let countX = 0;\n    let i, point, x, y, prevX, minIndex, maxIndex, startIndex, minY, maxY;\n    const decimated = [];\n    const endIndex = start + count - 1;\n    const xMin = data[start].x;\n    const xMax = data[endIndex].x;\n    const dx = xMax - xMin;\n    for(i = start; i < start + count; ++i){\n        point = data[i];\n        x = (point.x - xMin) / dx * availableWidth;\n        y = point.y;\n        const truncX = x | 0;\n        if (truncX === prevX) {\n            if (y < minY) {\n                minY = y;\n                minIndex = i;\n            } else if (y > maxY) {\n                maxY = y;\n                maxIndex = i;\n            }\n            avgX = (countX * avgX + point.x) / ++countX;\n        } else {\n            const lastIndex = i - 1;\n            if (!(0, $c7mKY.k)(minIndex) && !(0, $c7mKY.k)(maxIndex)) {\n                const intermediateIndex1 = Math.min(minIndex, maxIndex);\n                const intermediateIndex2 = Math.max(minIndex, maxIndex);\n                if (intermediateIndex1 !== startIndex && intermediateIndex1 !== lastIndex) decimated.push({\n                    ...data[intermediateIndex1],\n                    x: avgX\n                });\n                if (intermediateIndex2 !== startIndex && intermediateIndex2 !== lastIndex) decimated.push({\n                    ...data[intermediateIndex2],\n                    x: avgX\n                });\n            }\n            if (i > 0 && lastIndex !== startIndex) decimated.push(data[lastIndex]);\n            decimated.push(point);\n            prevX = truncX;\n            countX = 0;\n            minY = maxY = y;\n            minIndex = maxIndex = startIndex = i;\n        }\n    }\n    return decimated;\n}\nfunction $216d2bdc6f281bf6$var$cleanDecimatedDataset(dataset) {\n    if (dataset._decimated) {\n        const data = dataset._data;\n        delete dataset._decimated;\n        delete dataset._data;\n        Object.defineProperty(dataset, \"data\", {\n            configurable: true,\n            enumerable: true,\n            writable: true,\n            value: data\n        });\n    }\n}\nfunction $216d2bdc6f281bf6$var$cleanDecimatedData(chart) {\n    chart.data.datasets.forEach((dataset)=>{\n        $216d2bdc6f281bf6$var$cleanDecimatedDataset(dataset);\n    });\n}\nfunction $216d2bdc6f281bf6$var$getStartAndCountOfVisiblePointsSimplified(meta, points) {\n    const pointCount = points.length;\n    let start = 0;\n    let count;\n    const { iScale: iScale } = meta;\n    const { min: min, max: max, minDefined: minDefined, maxDefined: maxDefined } = iScale.getUserBounds();\n    if (minDefined) start = (0, $c7mKY.S)((0, $c7mKY.B)(points, iScale.axis, min).lo, 0, pointCount - 1);\n    if (maxDefined) count = (0, $c7mKY.S)((0, $c7mKY.B)(points, iScale.axis, max).hi + 1, start, pointCount) - start;\n    else count = pointCount - start;\n    return {\n        start: start,\n        count: count\n    };\n}\nvar $216d2bdc6f281bf6$export$be17f937e9aa7533 = {\n    id: \"decimation\",\n    defaults: {\n        algorithm: \"min-max\",\n        enabled: false\n    },\n    beforeElementsUpdate: (chart, args, options)=>{\n        if (!options.enabled) {\n            $216d2bdc6f281bf6$var$cleanDecimatedData(chart);\n            return;\n        }\n        const availableWidth = chart.width;\n        chart.data.datasets.forEach((dataset, datasetIndex)=>{\n            const { _data: _data, indexAxis: indexAxis } = dataset;\n            const meta = chart.getDatasetMeta(datasetIndex);\n            const data = _data || dataset.data;\n            if ((0, $c7mKY.a)([\n                indexAxis,\n                chart.options.indexAxis\n            ]) === \"y\") return;\n            if (!meta.controller.supportsDecimation) return;\n            const xAxis = chart.scales[meta.xAxisID];\n            if (xAxis.type !== \"linear\" && xAxis.type !== \"time\") return;\n            if (chart.options.parsing) return;\n            let { start: start, count: count } = $216d2bdc6f281bf6$var$getStartAndCountOfVisiblePointsSimplified(meta, data);\n            const threshold = options.threshold || 4 * availableWidth;\n            if (count <= threshold) {\n                $216d2bdc6f281bf6$var$cleanDecimatedDataset(dataset);\n                return;\n            }\n            if ((0, $c7mKY.k)(_data)) {\n                dataset._data = data;\n                delete dataset.data;\n                Object.defineProperty(dataset, \"data\", {\n                    configurable: true,\n                    enumerable: true,\n                    get: function() {\n                        return this._decimated;\n                    },\n                    set: function(d) {\n                        this._data = d;\n                    }\n                });\n            }\n            let decimated;\n            switch(options.algorithm){\n                case \"lttb\":\n                    decimated = $216d2bdc6f281bf6$var$lttbDecimation(data, start, count, availableWidth, options);\n                    break;\n                case \"min-max\":\n                    decimated = $216d2bdc6f281bf6$var$minMaxDecimation(data, start, count, availableWidth);\n                    break;\n                default:\n                    throw new Error(`Unsupported decimation algorithm '${options.algorithm}'`);\n            }\n            dataset._decimated = decimated;\n        });\n    },\n    destroy (chart) {\n        $216d2bdc6f281bf6$var$cleanDecimatedData(chart);\n    }\n};\nfunction $216d2bdc6f281bf6$var$_segments(line, target, property) {\n    const segments = line.segments;\n    const points = line.points;\n    const tpoints = target.points;\n    const parts = [];\n    for (const segment of segments){\n        let { start: start, end: end } = segment;\n        end = $216d2bdc6f281bf6$var$_findSegmentEnd(start, end, points);\n        const bounds = $216d2bdc6f281bf6$var$_getBounds(property, points[start], points[end], segment.loop);\n        if (!target.segments) {\n            parts.push({\n                source: segment,\n                target: bounds,\n                start: points[start],\n                end: points[end]\n            });\n            continue;\n        }\n        const targetSegments = (0, $c7mKY.an)(target, bounds);\n        for (const tgt of targetSegments){\n            const subBounds = $216d2bdc6f281bf6$var$_getBounds(property, tpoints[tgt.start], tpoints[tgt.end], tgt.loop);\n            const fillSources = (0, $c7mKY.ax)(segment, points, subBounds);\n            for (const fillSource of fillSources)parts.push({\n                source: fillSource,\n                target: tgt,\n                start: {\n                    [property]: $216d2bdc6f281bf6$var$_getEdge(bounds, subBounds, \"start\", Math.max)\n                },\n                end: {\n                    [property]: $216d2bdc6f281bf6$var$_getEdge(bounds, subBounds, \"end\", Math.min)\n                }\n            });\n        }\n    }\n    return parts;\n}\nfunction $216d2bdc6f281bf6$var$_getBounds(property, first, last, loop) {\n    if (loop) return;\n    let start = first[property];\n    let end = last[property];\n    if (property === \"angle\") {\n        start = (0, $c7mKY.ay)(start);\n        end = (0, $c7mKY.ay)(end);\n    }\n    return {\n        property: property,\n        start: start,\n        end: end\n    };\n}\nfunction $216d2bdc6f281bf6$var$_pointsFromSegments(boundary, line) {\n    const { x: x = null, y: y = null } = boundary || {};\n    const linePoints = line.points;\n    const points = [];\n    line.segments.forEach(({ start: start, end: end })=>{\n        end = $216d2bdc6f281bf6$var$_findSegmentEnd(start, end, linePoints);\n        const first = linePoints[start];\n        const last = linePoints[end];\n        if (y !== null) {\n            points.push({\n                x: first.x,\n                y: y\n            });\n            points.push({\n                x: last.x,\n                y: y\n            });\n        } else if (x !== null) {\n            points.push({\n                x: x,\n                y: first.y\n            });\n            points.push({\n                x: x,\n                y: last.y\n            });\n        }\n    });\n    return points;\n}\nfunction $216d2bdc6f281bf6$var$_findSegmentEnd(start, end, points) {\n    for(; end > start; end--){\n        const point = points[end];\n        if (!isNaN(point.x) && !isNaN(point.y)) break;\n    }\n    return end;\n}\nfunction $216d2bdc6f281bf6$var$_getEdge(a, b, prop, fn) {\n    if (a && b) return fn(a[prop], b[prop]);\n    return a ? a[prop] : b ? b[prop] : 0;\n}\nfunction $216d2bdc6f281bf6$var$_createBoundaryLine(boundary, line) {\n    let points = [];\n    let _loop = false;\n    if ((0, $c7mKY.b)(boundary)) {\n        _loop = true;\n        points = boundary;\n    } else points = $216d2bdc6f281bf6$var$_pointsFromSegments(boundary, line);\n    return points.length ? new $216d2bdc6f281bf6$export$55e463fa7bcd3469({\n        points: points,\n        options: {\n            tension: 0\n        },\n        _loop: _loop,\n        _fullLoop: _loop\n    }) : null;\n}\nfunction $216d2bdc6f281bf6$var$_shouldApplyFill(source) {\n    return source && source.fill !== false;\n}\nfunction $216d2bdc6f281bf6$var$_resolveTarget(sources, index, propagate) {\n    const source = sources[index];\n    let fill = source.fill;\n    const visited = [\n        index\n    ];\n    let target;\n    if (!propagate) return fill;\n    while(fill !== false && visited.indexOf(fill) === -1){\n        if (!(0, $c7mKY.g)(fill)) return fill;\n        target = sources[fill];\n        if (!target) return false;\n        if (target.visible) return fill;\n        visited.push(fill);\n        fill = target.fill;\n    }\n    return false;\n}\nfunction $216d2bdc6f281bf6$var$_decodeFill(line, index, count) {\n    const fill = $216d2bdc6f281bf6$var$parseFillOption(line);\n    if ((0, $c7mKY.i)(fill)) return isNaN(fill.value) ? false : fill;\n    let target = parseFloat(fill);\n    if ((0, $c7mKY.g)(target) && Math.floor(target) === target) return $216d2bdc6f281bf6$var$decodeTargetIndex(fill[0], index, target, count);\n    return [\n        \"origin\",\n        \"start\",\n        \"end\",\n        \"stack\",\n        \"shape\"\n    ].indexOf(fill) >= 0 && fill;\n}\nfunction $216d2bdc6f281bf6$var$decodeTargetIndex(firstCh, index, target, count) {\n    if (firstCh === \"-\" || firstCh === \"+\") target = index + target;\n    if (target === index || target < 0 || target >= count) return false;\n    return target;\n}\nfunction $216d2bdc6f281bf6$var$_getTargetPixel(fill, scale) {\n    let pixel = null;\n    if (fill === \"start\") pixel = scale.bottom;\n    else if (fill === \"end\") pixel = scale.top;\n    else if ((0, $c7mKY.i)(fill)) pixel = scale.getPixelForValue(fill.value);\n    else if (scale.getBasePixel) pixel = scale.getBasePixel();\n    return pixel;\n}\nfunction $216d2bdc6f281bf6$var$_getTargetValue(fill, scale, startValue) {\n    let value;\n    if (fill === \"start\") value = startValue;\n    else if (fill === \"end\") value = scale.options.reverse ? scale.min : scale.max;\n    else if ((0, $c7mKY.i)(fill)) value = fill.value;\n    else value = scale.getBaseValue();\n    return value;\n}\nfunction $216d2bdc6f281bf6$var$parseFillOption(line) {\n    const options = line.options;\n    const fillOption = options.fill;\n    let fill = (0, $c7mKY.v)(fillOption && fillOption.target, fillOption);\n    if (fill === undefined) fill = !!options.backgroundColor;\n    if (fill === false || fill === null) return false;\n    if (fill === true) return \"origin\";\n    return fill;\n}\nfunction $216d2bdc6f281bf6$var$_buildStackLine(source) {\n    const { scale: scale, index: index, line: line } = source;\n    const points = [];\n    const segments = line.segments;\n    const sourcePoints = line.points;\n    const linesBelow = $216d2bdc6f281bf6$var$getLinesBelow(scale, index);\n    linesBelow.push($216d2bdc6f281bf6$var$_createBoundaryLine({\n        x: null,\n        y: scale.bottom\n    }, line));\n    for(let i = 0; i < segments.length; i++){\n        const segment = segments[i];\n        for(let j = segment.start; j <= segment.end; j++)$216d2bdc6f281bf6$var$addPointsBelow(points, sourcePoints[j], linesBelow);\n    }\n    return new $216d2bdc6f281bf6$export$55e463fa7bcd3469({\n        points: points,\n        options: {}\n    });\n}\nfunction $216d2bdc6f281bf6$var$getLinesBelow(scale, index) {\n    const below = [];\n    const metas = scale.getMatchingVisibleMetas(\"line\");\n    for(let i = 0; i < metas.length; i++){\n        const meta = metas[i];\n        if (meta.index === index) break;\n        if (!meta.hidden) below.unshift(meta.dataset);\n    }\n    return below;\n}\nfunction $216d2bdc6f281bf6$var$addPointsBelow(points, sourcePoint, linesBelow) {\n    const postponed = [];\n    for(let j = 0; j < linesBelow.length; j++){\n        const line = linesBelow[j];\n        const { first: first, last: last, point: point } = $216d2bdc6f281bf6$var$findPoint(line, sourcePoint, \"x\");\n        if (!point || first && last) continue;\n        if (first) postponed.unshift(point);\n        else {\n            points.push(point);\n            if (!last) break;\n        }\n    }\n    points.push(...postponed);\n}\nfunction $216d2bdc6f281bf6$var$findPoint(line, sourcePoint, property) {\n    const point = line.interpolate(sourcePoint, property);\n    if (!point) return {};\n    const pointValue = point[property];\n    const segments = line.segments;\n    const linePoints = line.points;\n    let first = false;\n    let last = false;\n    for(let i = 0; i < segments.length; i++){\n        const segment = segments[i];\n        const firstValue = linePoints[segment.start][property];\n        const lastValue = linePoints[segment.end][property];\n        if ((0, $c7mKY.aj)(pointValue, firstValue, lastValue)) {\n            first = pointValue === firstValue;\n            last = pointValue === lastValue;\n            break;\n        }\n    }\n    return {\n        first: first,\n        last: last,\n        point: point\n    };\n}\nclass $216d2bdc6f281bf6$var$simpleArc {\n    constructor(opts){\n        this.x = opts.x;\n        this.y = opts.y;\n        this.radius = opts.radius;\n    }\n    pathSegment(ctx, bounds, opts) {\n        const { x: x, y: y, radius: radius } = this;\n        bounds = bounds || {\n            start: 0,\n            end: (0, $c7mKY.T)\n        };\n        ctx.arc(x, y, radius, bounds.end, bounds.start, true);\n        return !opts.bounds;\n    }\n    interpolate(point) {\n        const { x: x, y: y, radius: radius } = this;\n        const angle = point.angle;\n        return {\n            x: x + Math.cos(angle) * radius,\n            y: y + Math.sin(angle) * radius,\n            angle: angle\n        };\n    }\n}\nfunction $216d2bdc6f281bf6$var$_getTarget(source) {\n    const { chart: chart, fill: fill, line: line } = source;\n    if ((0, $c7mKY.g)(fill)) return $216d2bdc6f281bf6$var$getLineByIndex(chart, fill);\n    if (fill === \"stack\") return $216d2bdc6f281bf6$var$_buildStackLine(source);\n    if (fill === \"shape\") return true;\n    const boundary = $216d2bdc6f281bf6$var$computeBoundary(source);\n    if (boundary instanceof $216d2bdc6f281bf6$var$simpleArc) return boundary;\n    return $216d2bdc6f281bf6$var$_createBoundaryLine(boundary, line);\n}\nfunction $216d2bdc6f281bf6$var$getLineByIndex(chart, index) {\n    const meta = chart.getDatasetMeta(index);\n    const visible = meta && chart.isDatasetVisible(index);\n    return visible ? meta.dataset : null;\n}\nfunction $216d2bdc6f281bf6$var$computeBoundary(source) {\n    const scale = source.scale || {};\n    if (scale.getPointPositionForValue) return $216d2bdc6f281bf6$var$computeCircularBoundary(source);\n    return $216d2bdc6f281bf6$var$computeLinearBoundary(source);\n}\nfunction $216d2bdc6f281bf6$var$computeLinearBoundary(source) {\n    const { scale: scale = {}, fill: fill } = source;\n    const pixel = $216d2bdc6f281bf6$var$_getTargetPixel(fill, scale);\n    if ((0, $c7mKY.g)(pixel)) {\n        const horizontal = scale.isHorizontal();\n        return {\n            x: horizontal ? pixel : null,\n            y: horizontal ? null : pixel\n        };\n    }\n    return null;\n}\nfunction $216d2bdc6f281bf6$var$computeCircularBoundary(source) {\n    const { scale: scale, fill: fill } = source;\n    const options = scale.options;\n    const length = scale.getLabels().length;\n    const start = options.reverse ? scale.max : scale.min;\n    const value = $216d2bdc6f281bf6$var$_getTargetValue(fill, scale, start);\n    const target = [];\n    if (options.grid.circular) {\n        const center = scale.getPointPositionForValue(0, start);\n        return new $216d2bdc6f281bf6$var$simpleArc({\n            x: center.x,\n            y: center.y,\n            radius: scale.getDistanceFromCenterForValue(value)\n        });\n    }\n    for(let i = 0; i < length; ++i)target.push(scale.getPointPositionForValue(i, value));\n    return target;\n}\nfunction $216d2bdc6f281bf6$var$_drawfill(ctx, source, area) {\n    const target = $216d2bdc6f281bf6$var$_getTarget(source);\n    const { line: line, scale: scale, axis: axis } = source;\n    const lineOpts = line.options;\n    const fillOption = lineOpts.fill;\n    const color = lineOpts.backgroundColor;\n    const { above: above = color, below: below = color } = fillOption || {};\n    if (target && line.points.length) {\n        (0, $c7mKY.Y)(ctx, area);\n        $216d2bdc6f281bf6$var$doFill(ctx, {\n            line: line,\n            target: target,\n            above: above,\n            below: below,\n            area: area,\n            scale: scale,\n            axis: axis\n        });\n        (0, $c7mKY.$)(ctx);\n    }\n}\nfunction $216d2bdc6f281bf6$var$doFill(ctx, cfg) {\n    const { line: line, target: target, above: above, below: below, area: area, scale: scale } = cfg;\n    const property = line._loop ? \"angle\" : cfg.axis;\n    ctx.save();\n    if (property === \"x\" && below !== above) {\n        $216d2bdc6f281bf6$var$clipVertical(ctx, target, area.top);\n        $216d2bdc6f281bf6$var$fill(ctx, {\n            line: line,\n            target: target,\n            color: above,\n            scale: scale,\n            property: property\n        });\n        ctx.restore();\n        ctx.save();\n        $216d2bdc6f281bf6$var$clipVertical(ctx, target, area.bottom);\n    }\n    $216d2bdc6f281bf6$var$fill(ctx, {\n        line: line,\n        target: target,\n        color: below,\n        scale: scale,\n        property: property\n    });\n    ctx.restore();\n}\nfunction $216d2bdc6f281bf6$var$clipVertical(ctx, target, clipY) {\n    const { segments: segments, points: points } = target;\n    let first = true;\n    let lineLoop = false;\n    ctx.beginPath();\n    for (const segment of segments){\n        const { start: start, end: end } = segment;\n        const firstPoint = points[start];\n        const lastPoint = points[$216d2bdc6f281bf6$var$_findSegmentEnd(start, end, points)];\n        if (first) {\n            ctx.moveTo(firstPoint.x, firstPoint.y);\n            first = false;\n        } else {\n            ctx.lineTo(firstPoint.x, clipY);\n            ctx.lineTo(firstPoint.x, firstPoint.y);\n        }\n        lineLoop = !!target.pathSegment(ctx, segment, {\n            move: lineLoop\n        });\n        if (lineLoop) ctx.closePath();\n        else ctx.lineTo(lastPoint.x, clipY);\n    }\n    ctx.lineTo(target.first().x, clipY);\n    ctx.closePath();\n    ctx.clip();\n}\nfunction $216d2bdc6f281bf6$var$fill(ctx, cfg) {\n    const { line: line, target: target, property: property, color: color, scale: scale } = cfg;\n    const segments = $216d2bdc6f281bf6$var$_segments(line, target, property);\n    for (const { source: src, target: tgt, start: start, end: end } of segments){\n        const { style: { backgroundColor: backgroundColor = color } = {} } = src;\n        const notShape = target !== true;\n        ctx.save();\n        ctx.fillStyle = backgroundColor;\n        $216d2bdc6f281bf6$var$clipBounds(ctx, scale, notShape && $216d2bdc6f281bf6$var$_getBounds(property, start, end));\n        ctx.beginPath();\n        const lineLoop = !!line.pathSegment(ctx, src);\n        let loop;\n        if (notShape) {\n            if (lineLoop) ctx.closePath();\n            else $216d2bdc6f281bf6$var$interpolatedLineTo(ctx, target, end, property);\n            const targetLoop = !!target.pathSegment(ctx, tgt, {\n                move: lineLoop,\n                reverse: true\n            });\n            loop = lineLoop && targetLoop;\n            if (!loop) $216d2bdc6f281bf6$var$interpolatedLineTo(ctx, target, start, property);\n        }\n        ctx.closePath();\n        ctx.fill(loop ? \"evenodd\" : \"nonzero\");\n        ctx.restore();\n    }\n}\nfunction $216d2bdc6f281bf6$var$clipBounds(ctx, scale, bounds) {\n    const { top: top, bottom: bottom } = scale.chart.chartArea;\n    const { property: property, start: start, end: end } = bounds || {};\n    if (property === \"x\") {\n        ctx.beginPath();\n        ctx.rect(start, top, end - start, bottom - top);\n        ctx.clip();\n    }\n}\nfunction $216d2bdc6f281bf6$var$interpolatedLineTo(ctx, target, point, property) {\n    const interpolatedPoint = target.interpolate(point, property);\n    if (interpolatedPoint) ctx.lineTo(interpolatedPoint.x, interpolatedPoint.y);\n}\nvar $216d2bdc6f281bf6$export$d19ba4d812bed757 = {\n    id: \"filler\",\n    afterDatasetsUpdate (chart, _args, options) {\n        const count = (chart.data.datasets || []).length;\n        const sources = [];\n        let meta, i, line, source;\n        for(i = 0; i < count; ++i){\n            meta = chart.getDatasetMeta(i);\n            line = meta.dataset;\n            source = null;\n            if (line && line.options && line instanceof $216d2bdc6f281bf6$export$55e463fa7bcd3469) source = {\n                visible: chart.isDatasetVisible(i),\n                index: i,\n                fill: $216d2bdc6f281bf6$var$_decodeFill(line, i, count),\n                chart: chart,\n                axis: meta.controller.options.indexAxis,\n                scale: meta.vScale,\n                line: line\n            };\n            meta.$filler = source;\n            sources.push(source);\n        }\n        for(i = 0; i < count; ++i){\n            source = sources[i];\n            if (!source || source.fill === false) continue;\n            source.fill = $216d2bdc6f281bf6$var$_resolveTarget(sources, i, options.propagate);\n        }\n    },\n    beforeDraw (chart, _args, options) {\n        const draw = options.drawTime === \"beforeDraw\";\n        const metasets = chart.getSortedVisibleDatasetMetas();\n        const area = chart.chartArea;\n        for(let i = metasets.length - 1; i >= 0; --i){\n            const source = metasets[i].$filler;\n            if (!source) continue;\n            source.line.updateControlPoints(area, source.axis);\n            if (draw && source.fill) $216d2bdc6f281bf6$var$_drawfill(chart.ctx, source, area);\n        }\n    },\n    beforeDatasetsDraw (chart, _args, options) {\n        if (options.drawTime !== \"beforeDatasetsDraw\") return;\n        const metasets = chart.getSortedVisibleDatasetMetas();\n        for(let i = metasets.length - 1; i >= 0; --i){\n            const source = metasets[i].$filler;\n            if ($216d2bdc6f281bf6$var$_shouldApplyFill(source)) $216d2bdc6f281bf6$var$_drawfill(chart.ctx, source, chart.chartArea);\n        }\n    },\n    beforeDatasetDraw (chart, args, options) {\n        const source = args.meta.$filler;\n        if (!$216d2bdc6f281bf6$var$_shouldApplyFill(source) || options.drawTime !== \"beforeDatasetDraw\") return;\n        $216d2bdc6f281bf6$var$_drawfill(chart.ctx, source, chart.chartArea);\n    },\n    defaults: {\n        propagate: true,\n        drawTime: \"beforeDatasetDraw\"\n    }\n};\nconst $216d2bdc6f281bf6$var$getBoxSize = (labelOpts, fontSize)=>{\n    let { boxHeight: boxHeight = fontSize, boxWidth: boxWidth = fontSize } = labelOpts;\n    if (labelOpts.usePointStyle) {\n        boxHeight = Math.min(boxHeight, fontSize);\n        boxWidth = labelOpts.pointStyleWidth || Math.min(boxWidth, fontSize);\n    }\n    return {\n        boxWidth: boxWidth,\n        boxHeight: boxHeight,\n        itemHeight: Math.max(fontSize, boxHeight)\n    };\n};\nconst $216d2bdc6f281bf6$var$itemsEqual = (a, b)=>a !== null && b !== null && a.datasetIndex === b.datasetIndex && a.index === b.index;\nclass $216d2bdc6f281bf6$var$Legend extends $216d2bdc6f281bf6$export$db77ccec0bb4ccac {\n    constructor(config){\n        super();\n        this._added = false;\n        this.legendHitBoxes = [];\n        this._hoveredItem = null;\n        this.doughnutMode = false;\n        this.chart = config.chart;\n        this.options = config.options;\n        this.ctx = config.ctx;\n        this.legendItems = undefined;\n        this.columnSizes = undefined;\n        this.lineWidths = undefined;\n        this.maxHeight = undefined;\n        this.maxWidth = undefined;\n        this.top = undefined;\n        this.bottom = undefined;\n        this.left = undefined;\n        this.right = undefined;\n        this.height = undefined;\n        this.width = undefined;\n        this._margins = undefined;\n        this.position = undefined;\n        this.weight = undefined;\n        this.fullSize = undefined;\n    }\n    update(maxWidth, maxHeight, margins) {\n        this.maxWidth = maxWidth;\n        this.maxHeight = maxHeight;\n        this._margins = margins;\n        this.setDimensions();\n        this.buildLabels();\n        this.fit();\n    }\n    setDimensions() {\n        if (this.isHorizontal()) {\n            this.width = this.maxWidth;\n            this.left = this._margins.left;\n            this.right = this.width;\n        } else {\n            this.height = this.maxHeight;\n            this.top = this._margins.top;\n            this.bottom = this.height;\n        }\n    }\n    buildLabels() {\n        const labelOpts = this.options.labels || {};\n        let legendItems = (0, $c7mKY.Q)(labelOpts.generateLabels, [\n            this.chart\n        ], this) || [];\n        if (labelOpts.filter) legendItems = legendItems.filter((item)=>labelOpts.filter(item, this.chart.data));\n        if (labelOpts.sort) legendItems = legendItems.sort((a, b)=>labelOpts.sort(a, b, this.chart.data));\n        if (this.options.reverse) legendItems.reverse();\n        this.legendItems = legendItems;\n    }\n    fit() {\n        const { options: options, ctx: ctx } = this;\n        if (!options.display) {\n            this.width = this.height = 0;\n            return;\n        }\n        const labelOpts = options.labels;\n        const labelFont = (0, $c7mKY.a0)(labelOpts.font);\n        const fontSize = labelFont.size;\n        const titleHeight = this._computeTitleHeight();\n        const { boxWidth: boxWidth, itemHeight: itemHeight } = $216d2bdc6f281bf6$var$getBoxSize(labelOpts, fontSize);\n        let width, height;\n        ctx.font = labelFont.string;\n        if (this.isHorizontal()) {\n            width = this.maxWidth;\n            height = this._fitRows(titleHeight, fontSize, boxWidth, itemHeight) + 10;\n        } else {\n            height = this.maxHeight;\n            width = this._fitCols(titleHeight, labelFont, boxWidth, itemHeight) + 10;\n        }\n        this.width = Math.min(width, options.maxWidth || this.maxWidth);\n        this.height = Math.min(height, options.maxHeight || this.maxHeight);\n    }\n    _fitRows(titleHeight, fontSize, boxWidth, itemHeight) {\n        const { ctx: ctx, maxWidth: maxWidth, options: { labels: { padding: padding } } } = this;\n        const hitboxes = this.legendHitBoxes = [];\n        const lineWidths = this.lineWidths = [\n            0\n        ];\n        const lineHeight = itemHeight + padding;\n        let totalHeight = titleHeight;\n        ctx.textAlign = \"left\";\n        ctx.textBaseline = \"middle\";\n        let row = -1;\n        let top = -lineHeight;\n        this.legendItems.forEach((legendItem, i)=>{\n            const itemWidth = boxWidth + fontSize / 2 + ctx.measureText(legendItem.text).width;\n            if (i === 0 || lineWidths[lineWidths.length - 1] + itemWidth + 2 * padding > maxWidth) {\n                totalHeight += lineHeight;\n                lineWidths[lineWidths.length - (i > 0 ? 0 : 1)] = 0;\n                top += lineHeight;\n                row++;\n            }\n            hitboxes[i] = {\n                left: 0,\n                top: top,\n                row: row,\n                width: itemWidth,\n                height: itemHeight\n            };\n            lineWidths[lineWidths.length - 1] += itemWidth + padding;\n        });\n        return totalHeight;\n    }\n    _fitCols(titleHeight, labelFont, boxWidth, _itemHeight) {\n        const { ctx: ctx, maxHeight: maxHeight, options: { labels: { padding: padding } } } = this;\n        const hitboxes = this.legendHitBoxes = [];\n        const columnSizes = this.columnSizes = [];\n        const heightLimit = maxHeight - titleHeight;\n        let totalWidth = padding;\n        let currentColWidth = 0;\n        let currentColHeight = 0;\n        let left = 0;\n        let col = 0;\n        this.legendItems.forEach((legendItem, i)=>{\n            const { itemWidth: itemWidth, itemHeight: itemHeight } = $216d2bdc6f281bf6$var$calculateItemSize(boxWidth, labelFont, ctx, legendItem, _itemHeight);\n            if (i > 0 && currentColHeight + itemHeight + 2 * padding > heightLimit) {\n                totalWidth += currentColWidth + padding;\n                columnSizes.push({\n                    width: currentColWidth,\n                    height: currentColHeight\n                });\n                left += currentColWidth + padding;\n                col++;\n                currentColWidth = currentColHeight = 0;\n            }\n            hitboxes[i] = {\n                left: left,\n                top: currentColHeight,\n                col: col,\n                width: itemWidth,\n                height: itemHeight\n            };\n            currentColWidth = Math.max(currentColWidth, itemWidth);\n            currentColHeight += itemHeight + padding;\n        });\n        totalWidth += currentColWidth;\n        columnSizes.push({\n            width: currentColWidth,\n            height: currentColHeight\n        });\n        return totalWidth;\n    }\n    adjustHitBoxes() {\n        if (!this.options.display) return;\n        const titleHeight = this._computeTitleHeight();\n        const { legendHitBoxes: hitboxes, options: { align: align, labels: { padding: padding }, rtl: rtl } } = this;\n        const rtlHelper = (0, $c7mKY.az)(rtl, this.left, this.width);\n        if (this.isHorizontal()) {\n            let row = 0;\n            let left = (0, $c7mKY.a2)(align, this.left + padding, this.right - this.lineWidths[row]);\n            for (const hitbox of hitboxes){\n                if (row !== hitbox.row) {\n                    row = hitbox.row;\n                    left = (0, $c7mKY.a2)(align, this.left + padding, this.right - this.lineWidths[row]);\n                }\n                hitbox.top += this.top + titleHeight + padding;\n                hitbox.left = rtlHelper.leftForLtr(rtlHelper.x(left), hitbox.width);\n                left += hitbox.width + padding;\n            }\n        } else {\n            let col = 0;\n            let top = (0, $c7mKY.a2)(align, this.top + titleHeight + padding, this.bottom - this.columnSizes[col].height);\n            for (const hitbox of hitboxes){\n                if (hitbox.col !== col) {\n                    col = hitbox.col;\n                    top = (0, $c7mKY.a2)(align, this.top + titleHeight + padding, this.bottom - this.columnSizes[col].height);\n                }\n                hitbox.top = top;\n                hitbox.left += this.left + padding;\n                hitbox.left = rtlHelper.leftForLtr(rtlHelper.x(hitbox.left), hitbox.width);\n                top += hitbox.height + padding;\n            }\n        }\n    }\n    isHorizontal() {\n        return this.options.position === \"top\" || this.options.position === \"bottom\";\n    }\n    draw() {\n        if (this.options.display) {\n            const ctx = this.ctx;\n            (0, $c7mKY.Y)(ctx, this);\n            this._draw();\n            (0, $c7mKY.$)(ctx);\n        }\n    }\n    _draw() {\n        const { options: opts, columnSizes: columnSizes, lineWidths: lineWidths, ctx: ctx } = this;\n        const { align: align, labels: labelOpts } = opts;\n        const defaultColor = (0, $c7mKY.d).color;\n        const rtlHelper = (0, $c7mKY.az)(opts.rtl, this.left, this.width);\n        const labelFont = (0, $c7mKY.a0)(labelOpts.font);\n        const { padding: padding } = labelOpts;\n        const fontSize = labelFont.size;\n        const halfFontSize = fontSize / 2;\n        let cursor;\n        this.drawTitle();\n        ctx.textAlign = rtlHelper.textAlign(\"left\");\n        ctx.textBaseline = \"middle\";\n        ctx.lineWidth = 0.5;\n        ctx.font = labelFont.string;\n        const { boxWidth: boxWidth, boxHeight: boxHeight, itemHeight: itemHeight } = $216d2bdc6f281bf6$var$getBoxSize(labelOpts, fontSize);\n        const drawLegendBox = function(x, y, legendItem) {\n            if (isNaN(boxWidth) || boxWidth <= 0 || isNaN(boxHeight) || boxHeight < 0) return;\n            ctx.save();\n            const lineWidth = (0, $c7mKY.v)(legendItem.lineWidth, 1);\n            ctx.fillStyle = (0, $c7mKY.v)(legendItem.fillStyle, defaultColor);\n            ctx.lineCap = (0, $c7mKY.v)(legendItem.lineCap, \"butt\");\n            ctx.lineDashOffset = (0, $c7mKY.v)(legendItem.lineDashOffset, 0);\n            ctx.lineJoin = (0, $c7mKY.v)(legendItem.lineJoin, \"miter\");\n            ctx.lineWidth = lineWidth;\n            ctx.strokeStyle = (0, $c7mKY.v)(legendItem.strokeStyle, defaultColor);\n            ctx.setLineDash((0, $c7mKY.v)(legendItem.lineDash, []));\n            if (labelOpts.usePointStyle) {\n                const drawOptions = {\n                    radius: boxHeight * Math.SQRT2 / 2,\n                    pointStyle: legendItem.pointStyle,\n                    rotation: legendItem.rotation,\n                    borderWidth: lineWidth\n                };\n                const centerX = rtlHelper.xPlus(x, boxWidth / 2);\n                const centerY = y + halfFontSize;\n                (0, $c7mKY.aD)(ctx, drawOptions, centerX, centerY, labelOpts.pointStyleWidth && boxWidth);\n            } else {\n                const yBoxTop = y + Math.max((fontSize - boxHeight) / 2, 0);\n                const xBoxLeft = rtlHelper.leftForLtr(x, boxWidth);\n                const borderRadius = (0, $c7mKY.aw)(legendItem.borderRadius);\n                ctx.beginPath();\n                if (Object.values(borderRadius).some((v)=>v !== 0)) (0, $c7mKY.au)(ctx, {\n                    x: xBoxLeft,\n                    y: yBoxTop,\n                    w: boxWidth,\n                    h: boxHeight,\n                    radius: borderRadius\n                });\n                else ctx.rect(xBoxLeft, yBoxTop, boxWidth, boxHeight);\n                ctx.fill();\n                if (lineWidth !== 0) ctx.stroke();\n            }\n            ctx.restore();\n        };\n        const fillText = function(x, y, legendItem) {\n            (0, $c7mKY.Z)(ctx, legendItem.text, x, y + itemHeight / 2, labelFont, {\n                strikethrough: legendItem.hidden,\n                textAlign: rtlHelper.textAlign(legendItem.textAlign)\n            });\n        };\n        const isHorizontal = this.isHorizontal();\n        const titleHeight = this._computeTitleHeight();\n        if (isHorizontal) cursor = {\n            x: (0, $c7mKY.a2)(align, this.left + padding, this.right - lineWidths[0]),\n            y: this.top + padding + titleHeight,\n            line: 0\n        };\n        else cursor = {\n            x: this.left + padding,\n            y: (0, $c7mKY.a2)(align, this.top + titleHeight + padding, this.bottom - columnSizes[0].height),\n            line: 0\n        };\n        (0, $c7mKY.aA)(this.ctx, opts.textDirection);\n        const lineHeight = itemHeight + padding;\n        this.legendItems.forEach((legendItem, i)=>{\n            ctx.strokeStyle = legendItem.fontColor;\n            ctx.fillStyle = legendItem.fontColor;\n            const textWidth = ctx.measureText(legendItem.text).width;\n            const textAlign = rtlHelper.textAlign(legendItem.textAlign || (legendItem.textAlign = labelOpts.textAlign));\n            const width = boxWidth + halfFontSize + textWidth;\n            let x = cursor.x;\n            let y = cursor.y;\n            rtlHelper.setWidth(this.width);\n            if (isHorizontal) {\n                if (i > 0 && x + width + padding > this.right) {\n                    y = cursor.y += lineHeight;\n                    cursor.line++;\n                    x = cursor.x = (0, $c7mKY.a2)(align, this.left + padding, this.right - lineWidths[cursor.line]);\n                }\n            } else if (i > 0 && y + lineHeight > this.bottom) {\n                x = cursor.x = x + columnSizes[cursor.line].width + padding;\n                cursor.line++;\n                y = cursor.y = (0, $c7mKY.a2)(align, this.top + titleHeight + padding, this.bottom - columnSizes[cursor.line].height);\n            }\n            const realX = rtlHelper.x(x);\n            drawLegendBox(realX, y, legendItem);\n            x = (0, $c7mKY.aB)(textAlign, x + boxWidth + halfFontSize, isHorizontal ? x + width : this.right, opts.rtl);\n            fillText(rtlHelper.x(x), y, legendItem);\n            if (isHorizontal) cursor.x += width + padding;\n            else if (typeof legendItem.text !== \"string\") {\n                const fontLineHeight = labelFont.lineHeight;\n                cursor.y += $216d2bdc6f281bf6$var$calculateLegendItemHeight(legendItem, fontLineHeight) + padding;\n            } else cursor.y += lineHeight;\n        });\n        (0, $c7mKY.aC)(this.ctx, opts.textDirection);\n    }\n    drawTitle() {\n        const opts = this.options;\n        const titleOpts = opts.title;\n        const titleFont = (0, $c7mKY.a0)(titleOpts.font);\n        const titlePadding = (0, $c7mKY.E)(titleOpts.padding);\n        if (!titleOpts.display) return;\n        const rtlHelper = (0, $c7mKY.az)(opts.rtl, this.left, this.width);\n        const ctx = this.ctx;\n        const position = titleOpts.position;\n        const halfFontSize = titleFont.size / 2;\n        const topPaddingPlusHalfFontSize = titlePadding.top + halfFontSize;\n        let y;\n        let left = this.left;\n        let maxWidth = this.width;\n        if (this.isHorizontal()) {\n            maxWidth = Math.max(...this.lineWidths);\n            y = this.top + topPaddingPlusHalfFontSize;\n            left = (0, $c7mKY.a2)(opts.align, left, this.right - maxWidth);\n        } else {\n            const maxHeight = this.columnSizes.reduce((acc, size)=>Math.max(acc, size.height), 0);\n            y = topPaddingPlusHalfFontSize + (0, $c7mKY.a2)(opts.align, this.top, this.bottom - maxHeight - opts.labels.padding - this._computeTitleHeight());\n        }\n        const x = (0, $c7mKY.a2)(position, left, left + maxWidth);\n        ctx.textAlign = rtlHelper.textAlign((0, $c7mKY.a1)(position));\n        ctx.textBaseline = \"middle\";\n        ctx.strokeStyle = titleOpts.color;\n        ctx.fillStyle = titleOpts.color;\n        ctx.font = titleFont.string;\n        (0, $c7mKY.Z)(ctx, titleOpts.text, x, y, titleFont);\n    }\n    _computeTitleHeight() {\n        const titleOpts = this.options.title;\n        const titleFont = (0, $c7mKY.a0)(titleOpts.font);\n        const titlePadding = (0, $c7mKY.E)(titleOpts.padding);\n        return titleOpts.display ? titleFont.lineHeight + titlePadding.height : 0;\n    }\n    _getLegendItemAt(x, y) {\n        let i, hitBox, lh;\n        if ((0, $c7mKY.aj)(x, this.left, this.right) && (0, $c7mKY.aj)(y, this.top, this.bottom)) {\n            lh = this.legendHitBoxes;\n            for(i = 0; i < lh.length; ++i){\n                hitBox = lh[i];\n                if ((0, $c7mKY.aj)(x, hitBox.left, hitBox.left + hitBox.width) && (0, $c7mKY.aj)(y, hitBox.top, hitBox.top + hitBox.height)) return this.legendItems[i];\n            }\n        }\n        return null;\n    }\n    handleEvent(e) {\n        const opts = this.options;\n        if (!$216d2bdc6f281bf6$var$isListened(e.type, opts)) return;\n        const hoveredItem = this._getLegendItemAt(e.x, e.y);\n        if (e.type === \"mousemove\" || e.type === \"mouseout\") {\n            const previous = this._hoveredItem;\n            const sameItem = $216d2bdc6f281bf6$var$itemsEqual(previous, hoveredItem);\n            if (previous && !sameItem) (0, $c7mKY.Q)(opts.onLeave, [\n                e,\n                previous,\n                this\n            ], this);\n            this._hoveredItem = hoveredItem;\n            if (hoveredItem && !sameItem) (0, $c7mKY.Q)(opts.onHover, [\n                e,\n                hoveredItem,\n                this\n            ], this);\n        } else if (hoveredItem) (0, $c7mKY.Q)(opts.onClick, [\n            e,\n            hoveredItem,\n            this\n        ], this);\n    }\n}\nfunction $216d2bdc6f281bf6$var$calculateItemSize(boxWidth, labelFont, ctx, legendItem, _itemHeight) {\n    const itemWidth = $216d2bdc6f281bf6$var$calculateItemWidth(legendItem, boxWidth, labelFont, ctx);\n    const itemHeight = $216d2bdc6f281bf6$var$calculateItemHeight(_itemHeight, legendItem, labelFont.lineHeight);\n    return {\n        itemWidth: itemWidth,\n        itemHeight: itemHeight\n    };\n}\nfunction $216d2bdc6f281bf6$var$calculateItemWidth(legendItem, boxWidth, labelFont, ctx) {\n    let legendItemText = legendItem.text;\n    if (legendItemText && typeof legendItemText !== \"string\") legendItemText = legendItemText.reduce((a, b)=>a.length > b.length ? a : b);\n    return boxWidth + labelFont.size / 2 + ctx.measureText(legendItemText).width;\n}\nfunction $216d2bdc6f281bf6$var$calculateItemHeight(_itemHeight, legendItem, fontLineHeight) {\n    let itemHeight = _itemHeight;\n    if (typeof legendItem.text !== \"string\") itemHeight = $216d2bdc6f281bf6$var$calculateLegendItemHeight(legendItem, fontLineHeight);\n    return itemHeight;\n}\nfunction $216d2bdc6f281bf6$var$calculateLegendItemHeight(legendItem, fontLineHeight) {\n    const labelHeight = legendItem.text ? legendItem.text.length : 0;\n    return fontLineHeight * labelHeight;\n}\nfunction $216d2bdc6f281bf6$var$isListened(type, opts) {\n    if ((type === \"mousemove\" || type === \"mouseout\") && (opts.onHover || opts.onLeave)) return true;\n    if (opts.onClick && (type === \"click\" || type === \"mouseup\")) return true;\n    return false;\n}\nvar $216d2bdc6f281bf6$export$ed247974535929c7 = {\n    id: \"legend\",\n    _element: $216d2bdc6f281bf6$var$Legend,\n    start (chart, _args, options) {\n        const legend = chart.legend = new $216d2bdc6f281bf6$var$Legend({\n            ctx: chart.ctx,\n            options: options,\n            chart: chart\n        });\n        $216d2bdc6f281bf6$export$1ecca0613f5e56d2.configure(chart, legend, options);\n        $216d2bdc6f281bf6$export$1ecca0613f5e56d2.addBox(chart, legend);\n    },\n    stop (chart) {\n        $216d2bdc6f281bf6$export$1ecca0613f5e56d2.removeBox(chart, chart.legend);\n        delete chart.legend;\n    },\n    beforeUpdate (chart, _args, options) {\n        const legend = chart.legend;\n        $216d2bdc6f281bf6$export$1ecca0613f5e56d2.configure(chart, legend, options);\n        legend.options = options;\n    },\n    afterUpdate (chart) {\n        const legend = chart.legend;\n        legend.buildLabels();\n        legend.adjustHitBoxes();\n    },\n    afterEvent (chart, args) {\n        if (!args.replay) chart.legend.handleEvent(args.event);\n    },\n    defaults: {\n        display: true,\n        position: \"top\",\n        align: \"center\",\n        fullSize: true,\n        reverse: false,\n        weight: 1000,\n        onClick (e, legendItem, legend) {\n            const index = legendItem.datasetIndex;\n            const ci = legend.chart;\n            if (ci.isDatasetVisible(index)) {\n                ci.hide(index);\n                legendItem.hidden = true;\n            } else {\n                ci.show(index);\n                legendItem.hidden = false;\n            }\n        },\n        onHover: null,\n        onLeave: null,\n        labels: {\n            color: (ctx)=>ctx.chart.options.color,\n            boxWidth: 40,\n            padding: 10,\n            generateLabels (chart) {\n                const datasets = chart.data.datasets;\n                const { labels: { usePointStyle: usePointStyle, pointStyle: pointStyle, textAlign: textAlign, color: color, useBorderRadius: useBorderRadius, borderRadius: borderRadius } } = chart.legend.options;\n                return chart._getSortedDatasetMetas().map((meta)=>{\n                    const style = meta.controller.getStyle(usePointStyle ? 0 : undefined);\n                    const borderWidth = (0, $c7mKY.E)(style.borderWidth);\n                    return {\n                        text: datasets[meta.index].label,\n                        fillStyle: style.backgroundColor,\n                        fontColor: color,\n                        hidden: !meta.visible,\n                        lineCap: style.borderCapStyle,\n                        lineDash: style.borderDash,\n                        lineDashOffset: style.borderDashOffset,\n                        lineJoin: style.borderJoinStyle,\n                        lineWidth: (borderWidth.width + borderWidth.height) / 4,\n                        strokeStyle: style.borderColor,\n                        pointStyle: pointStyle || style.pointStyle,\n                        rotation: style.rotation,\n                        textAlign: textAlign || style.textAlign,\n                        borderRadius: useBorderRadius && (borderRadius || style.borderRadius),\n                        datasetIndex: meta.index\n                    };\n                }, this);\n            }\n        },\n        title: {\n            color: (ctx)=>ctx.chart.options.color,\n            display: false,\n            position: \"center\",\n            text: \"\"\n        }\n    },\n    descriptors: {\n        _scriptable: (name)=>!name.startsWith(\"on\"),\n        labels: {\n            _scriptable: (name)=>![\n                    \"generateLabels\",\n                    \"filter\",\n                    \"sort\"\n                ].includes(name)\n        }\n    }\n};\nclass $216d2bdc6f281bf6$var$Title extends $216d2bdc6f281bf6$export$db77ccec0bb4ccac {\n    constructor(config){\n        super();\n        this.chart = config.chart;\n        this.options = config.options;\n        this.ctx = config.ctx;\n        this._padding = undefined;\n        this.top = undefined;\n        this.bottom = undefined;\n        this.left = undefined;\n        this.right = undefined;\n        this.width = undefined;\n        this.height = undefined;\n        this.position = undefined;\n        this.weight = undefined;\n        this.fullSize = undefined;\n    }\n    update(maxWidth, maxHeight) {\n        const opts = this.options;\n        this.left = 0;\n        this.top = 0;\n        if (!opts.display) {\n            this.width = this.height = this.right = this.bottom = 0;\n            return;\n        }\n        this.width = this.right = maxWidth;\n        this.height = this.bottom = maxHeight;\n        const lineCount = (0, $c7mKY.b)(opts.text) ? opts.text.length : 1;\n        this._padding = (0, $c7mKY.E)(opts.padding);\n        const textSize = lineCount * (0, $c7mKY.a0)(opts.font).lineHeight + this._padding.height;\n        if (this.isHorizontal()) this.height = textSize;\n        else this.width = textSize;\n    }\n    isHorizontal() {\n        const pos = this.options.position;\n        return pos === \"top\" || pos === \"bottom\";\n    }\n    _drawArgs(offset) {\n        const { top: top, left: left, bottom: bottom, right: right, options: options } = this;\n        const align = options.align;\n        let rotation = 0;\n        let maxWidth, titleX, titleY;\n        if (this.isHorizontal()) {\n            titleX = (0, $c7mKY.a2)(align, left, right);\n            titleY = top + offset;\n            maxWidth = right - left;\n        } else {\n            if (options.position === \"left\") {\n                titleX = left + offset;\n                titleY = (0, $c7mKY.a2)(align, bottom, top);\n                rotation = (0, $c7mKY.P) * -0.5;\n            } else {\n                titleX = right - offset;\n                titleY = (0, $c7mKY.a2)(align, top, bottom);\n                rotation = (0, $c7mKY.P) * 0.5;\n            }\n            maxWidth = bottom - top;\n        }\n        return {\n            titleX: titleX,\n            titleY: titleY,\n            maxWidth: maxWidth,\n            rotation: rotation\n        };\n    }\n    draw() {\n        const ctx = this.ctx;\n        const opts = this.options;\n        if (!opts.display) return;\n        const fontOpts = (0, $c7mKY.a0)(opts.font);\n        const lineHeight = fontOpts.lineHeight;\n        const offset = lineHeight / 2 + this._padding.top;\n        const { titleX: titleX, titleY: titleY, maxWidth: maxWidth, rotation: rotation } = this._drawArgs(offset);\n        (0, $c7mKY.Z)(ctx, opts.text, 0, 0, fontOpts, {\n            color: opts.color,\n            maxWidth: maxWidth,\n            rotation: rotation,\n            textAlign: (0, $c7mKY.a1)(opts.align),\n            textBaseline: \"middle\",\n            translation: [\n                titleX,\n                titleY\n            ]\n        });\n    }\n}\nfunction $216d2bdc6f281bf6$var$createTitle(chart, titleOpts) {\n    const title = new $216d2bdc6f281bf6$var$Title({\n        ctx: chart.ctx,\n        options: titleOpts,\n        chart: chart\n    });\n    $216d2bdc6f281bf6$export$1ecca0613f5e56d2.configure(chart, title, titleOpts);\n    $216d2bdc6f281bf6$export$1ecca0613f5e56d2.addBox(chart, title);\n    chart.titleBlock = title;\n}\nvar $216d2bdc6f281bf6$export$f99233281efd08a0 = {\n    id: \"title\",\n    _element: $216d2bdc6f281bf6$var$Title,\n    start (chart, _args, options) {\n        $216d2bdc6f281bf6$var$createTitle(chart, options);\n    },\n    stop (chart) {\n        const titleBlock = chart.titleBlock;\n        $216d2bdc6f281bf6$export$1ecca0613f5e56d2.removeBox(chart, titleBlock);\n        delete chart.titleBlock;\n    },\n    beforeUpdate (chart, _args, options) {\n        const title = chart.titleBlock;\n        $216d2bdc6f281bf6$export$1ecca0613f5e56d2.configure(chart, title, options);\n        title.options = options;\n    },\n    defaults: {\n        align: \"center\",\n        display: false,\n        font: {\n            weight: \"bold\"\n        },\n        fullSize: true,\n        padding: 10,\n        position: \"top\",\n        text: \"\",\n        weight: 2000\n    },\n    defaultRoutes: {\n        color: \"color\"\n    },\n    descriptors: {\n        _scriptable: true,\n        _indexable: false\n    }\n};\nconst $216d2bdc6f281bf6$var$map = new WeakMap();\nvar $216d2bdc6f281bf6$export$d5c56664638992a4 = {\n    id: \"subtitle\",\n    start (chart, _args, options) {\n        const title = new $216d2bdc6f281bf6$var$Title({\n            ctx: chart.ctx,\n            options: options,\n            chart: chart\n        });\n        $216d2bdc6f281bf6$export$1ecca0613f5e56d2.configure(chart, title, options);\n        $216d2bdc6f281bf6$export$1ecca0613f5e56d2.addBox(chart, title);\n        $216d2bdc6f281bf6$var$map.set(chart, title);\n    },\n    stop (chart) {\n        $216d2bdc6f281bf6$export$1ecca0613f5e56d2.removeBox(chart, $216d2bdc6f281bf6$var$map.get(chart));\n        $216d2bdc6f281bf6$var$map.delete(chart);\n    },\n    beforeUpdate (chart, _args, options) {\n        const title = $216d2bdc6f281bf6$var$map.get(chart);\n        $216d2bdc6f281bf6$export$1ecca0613f5e56d2.configure(chart, title, options);\n        title.options = options;\n    },\n    defaults: {\n        align: \"center\",\n        display: false,\n        font: {\n            weight: \"normal\"\n        },\n        fullSize: true,\n        padding: 0,\n        position: \"top\",\n        text: \"\",\n        weight: 1500\n    },\n    defaultRoutes: {\n        color: \"color\"\n    },\n    descriptors: {\n        _scriptable: true,\n        _indexable: false\n    }\n};\nconst $216d2bdc6f281bf6$var$positioners = {\n    average (items) {\n        if (!items.length) return false;\n        let i, len;\n        let xSet = new Set();\n        let y = 0;\n        let count = 0;\n        for(i = 0, len = items.length; i < len; ++i){\n            const el = items[i].element;\n            if (el && el.hasValue()) {\n                const pos = el.tooltipPosition();\n                xSet.add(pos.x);\n                y += pos.y;\n                ++count;\n            }\n        }\n        if (count === 0 || xSet.size === 0) return false;\n        const xAverage = [\n            ...xSet\n        ].reduce((a, b)=>a + b) / xSet.size;\n        return {\n            x: xAverage,\n            y: y / count\n        };\n    },\n    nearest (items, eventPosition) {\n        if (!items.length) return false;\n        let x = eventPosition.x;\n        let y = eventPosition.y;\n        let minDistance = Number.POSITIVE_INFINITY;\n        let i, len, nearestElement;\n        for(i = 0, len = items.length; i < len; ++i){\n            const el = items[i].element;\n            if (el && el.hasValue()) {\n                const center = el.getCenterPoint();\n                const d = (0, $c7mKY.aE)(eventPosition, center);\n                if (d < minDistance) {\n                    minDistance = d;\n                    nearestElement = el;\n                }\n            }\n        }\n        if (nearestElement) {\n            const tp = nearestElement.tooltipPosition();\n            x = tp.x;\n            y = tp.y;\n        }\n        return {\n            x: x,\n            y: y\n        };\n    }\n};\nfunction $216d2bdc6f281bf6$var$pushOrConcat(base, toPush) {\n    if (toPush) {\n        if ((0, $c7mKY.b)(toPush)) Array.prototype.push.apply(base, toPush);\n        else base.push(toPush);\n    }\n    return base;\n}\nfunction $216d2bdc6f281bf6$var$splitNewlines(str) {\n    if ((typeof str === \"string\" || str instanceof String) && str.indexOf(\"\\n\") > -1) return str.split(\"\\n\");\n    return str;\n}\nfunction $216d2bdc6f281bf6$var$createTooltipItem(chart, item) {\n    const { element: element, datasetIndex: datasetIndex, index: index } = item;\n    const controller = chart.getDatasetMeta(datasetIndex).controller;\n    const { label: label, value: value } = controller.getLabelAndValue(index);\n    return {\n        chart: chart,\n        label: label,\n        parsed: controller.getParsed(index),\n        raw: chart.data.datasets[datasetIndex].data[index],\n        formattedValue: value,\n        dataset: controller.getDataset(),\n        dataIndex: index,\n        datasetIndex: datasetIndex,\n        element: element\n    };\n}\nfunction $216d2bdc6f281bf6$var$getTooltipSize(tooltip, options) {\n    const ctx = tooltip.chart.ctx;\n    const { body: body, footer: footer, title: title } = tooltip;\n    const { boxWidth: boxWidth, boxHeight: boxHeight } = options;\n    const bodyFont = (0, $c7mKY.a0)(options.bodyFont);\n    const titleFont = (0, $c7mKY.a0)(options.titleFont);\n    const footerFont = (0, $c7mKY.a0)(options.footerFont);\n    const titleLineCount = title.length;\n    const footerLineCount = footer.length;\n    const bodyLineItemCount = body.length;\n    const padding = (0, $c7mKY.E)(options.padding);\n    let height = padding.height;\n    let width = 0;\n    let combinedBodyLength = body.reduce((count, bodyItem)=>count + bodyItem.before.length + bodyItem.lines.length + bodyItem.after.length, 0);\n    combinedBodyLength += tooltip.beforeBody.length + tooltip.afterBody.length;\n    if (titleLineCount) height += titleLineCount * titleFont.lineHeight + (titleLineCount - 1) * options.titleSpacing + options.titleMarginBottom;\n    if (combinedBodyLength) {\n        const bodyLineHeight = options.displayColors ? Math.max(boxHeight, bodyFont.lineHeight) : bodyFont.lineHeight;\n        height += bodyLineItemCount * bodyLineHeight + (combinedBodyLength - bodyLineItemCount) * bodyFont.lineHeight + (combinedBodyLength - 1) * options.bodySpacing;\n    }\n    if (footerLineCount) height += options.footerMarginTop + footerLineCount * footerFont.lineHeight + (footerLineCount - 1) * options.footerSpacing;\n    let widthPadding = 0;\n    const maxLineWidth = function(line) {\n        width = Math.max(width, ctx.measureText(line).width + widthPadding);\n    };\n    ctx.save();\n    ctx.font = titleFont.string;\n    (0, $c7mKY.F)(tooltip.title, maxLineWidth);\n    ctx.font = bodyFont.string;\n    (0, $c7mKY.F)(tooltip.beforeBody.concat(tooltip.afterBody), maxLineWidth);\n    widthPadding = options.displayColors ? boxWidth + 2 + options.boxPadding : 0;\n    (0, $c7mKY.F)(body, (bodyItem)=>{\n        (0, $c7mKY.F)(bodyItem.before, maxLineWidth);\n        (0, $c7mKY.F)(bodyItem.lines, maxLineWidth);\n        (0, $c7mKY.F)(bodyItem.after, maxLineWidth);\n    });\n    widthPadding = 0;\n    ctx.font = footerFont.string;\n    (0, $c7mKY.F)(tooltip.footer, maxLineWidth);\n    ctx.restore();\n    width += padding.width;\n    return {\n        width: width,\n        height: height\n    };\n}\nfunction $216d2bdc6f281bf6$var$determineYAlign(chart, size) {\n    const { y: y, height: height } = size;\n    if (y < height / 2) return \"top\";\n    else if (y > chart.height - height / 2) return \"bottom\";\n    return \"center\";\n}\nfunction $216d2bdc6f281bf6$var$doesNotFitWithAlign(xAlign, chart, options, size) {\n    const { x: x, width: width } = size;\n    const caret = options.caretSize + options.caretPadding;\n    if (xAlign === \"left\" && x + width + caret > chart.width) return true;\n    if (xAlign === \"right\" && x - width - caret < 0) return true;\n}\nfunction $216d2bdc6f281bf6$var$determineXAlign(chart, options, size, yAlign) {\n    const { x: x, width: width } = size;\n    const { width: chartWidth, chartArea: { left: left, right: right } } = chart;\n    let xAlign = \"center\";\n    if (yAlign === \"center\") xAlign = x <= (left + right) / 2 ? \"left\" : \"right\";\n    else if (x <= width / 2) xAlign = \"left\";\n    else if (x >= chartWidth - width / 2) xAlign = \"right\";\n    if ($216d2bdc6f281bf6$var$doesNotFitWithAlign(xAlign, chart, options, size)) xAlign = \"center\";\n    return xAlign;\n}\nfunction $216d2bdc6f281bf6$var$determineAlignment(chart, options, size) {\n    const yAlign = size.yAlign || options.yAlign || $216d2bdc6f281bf6$var$determineYAlign(chart, size);\n    return {\n        xAlign: size.xAlign || options.xAlign || $216d2bdc6f281bf6$var$determineXAlign(chart, options, size, yAlign),\n        yAlign: yAlign\n    };\n}\nfunction $216d2bdc6f281bf6$var$alignX(size, xAlign) {\n    let { x: x, width: width } = size;\n    if (xAlign === \"right\") x -= width;\n    else if (xAlign === \"center\") x -= width / 2;\n    return x;\n}\nfunction $216d2bdc6f281bf6$var$alignY(size, yAlign, paddingAndSize) {\n    let { y: y, height: height } = size;\n    if (yAlign === \"top\") y += paddingAndSize;\n    else if (yAlign === \"bottom\") y -= height + paddingAndSize;\n    else y -= height / 2;\n    return y;\n}\nfunction $216d2bdc6f281bf6$var$getBackgroundPoint(options, size, alignment, chart) {\n    const { caretSize: caretSize, caretPadding: caretPadding, cornerRadius: cornerRadius } = options;\n    const { xAlign: xAlign, yAlign: yAlign } = alignment;\n    const paddingAndSize = caretSize + caretPadding;\n    const { topLeft: topLeft, topRight: topRight, bottomLeft: bottomLeft, bottomRight: bottomRight } = (0, $c7mKY.aw)(cornerRadius);\n    let x = $216d2bdc6f281bf6$var$alignX(size, xAlign);\n    const y = $216d2bdc6f281bf6$var$alignY(size, yAlign, paddingAndSize);\n    if (yAlign === \"center\") {\n        if (xAlign === \"left\") x += paddingAndSize;\n        else if (xAlign === \"right\") x -= paddingAndSize;\n    } else if (xAlign === \"left\") x -= Math.max(topLeft, bottomLeft) + caretSize;\n    else if (xAlign === \"right\") x += Math.max(topRight, bottomRight) + caretSize;\n    return {\n        x: (0, $c7mKY.S)(x, 0, chart.width - size.width),\n        y: (0, $c7mKY.S)(y, 0, chart.height - size.height)\n    };\n}\nfunction $216d2bdc6f281bf6$var$getAlignedX(tooltip, align, options) {\n    const padding = (0, $c7mKY.E)(options.padding);\n    return align === \"center\" ? tooltip.x + tooltip.width / 2 : align === \"right\" ? tooltip.x + tooltip.width - padding.right : tooltip.x + padding.left;\n}\nfunction $216d2bdc6f281bf6$var$getBeforeAfterBodyLines(callback) {\n    return $216d2bdc6f281bf6$var$pushOrConcat([], $216d2bdc6f281bf6$var$splitNewlines(callback));\n}\nfunction $216d2bdc6f281bf6$var$createTooltipContext(parent, tooltip, tooltipItems) {\n    return (0, $c7mKY.j)(parent, {\n        tooltip: tooltip,\n        tooltipItems: tooltipItems,\n        type: \"tooltip\"\n    });\n}\nfunction $216d2bdc6f281bf6$var$overrideCallbacks(callbacks, context) {\n    const override = context && context.dataset && context.dataset.tooltip && context.dataset.tooltip.callbacks;\n    return override ? callbacks.override(override) : callbacks;\n}\nconst $216d2bdc6f281bf6$var$defaultCallbacks = {\n    beforeTitle: (0, $c7mKY.aF),\n    title (tooltipItems) {\n        if (tooltipItems.length > 0) {\n            const item = tooltipItems[0];\n            const labels = item.chart.data.labels;\n            const labelCount = labels ? labels.length : 0;\n            if (this && this.options && this.options.mode === \"dataset\") return item.dataset.label || \"\";\n            else if (item.label) return item.label;\n            else if (labelCount > 0 && item.dataIndex < labelCount) return labels[item.dataIndex];\n        }\n        return \"\";\n    },\n    afterTitle: (0, $c7mKY.aF),\n    beforeBody: (0, $c7mKY.aF),\n    beforeLabel: (0, $c7mKY.aF),\n    label (tooltipItem) {\n        if (this && this.options && this.options.mode === \"dataset\") return tooltipItem.label + \": \" + tooltipItem.formattedValue || tooltipItem.formattedValue;\n        let label = tooltipItem.dataset.label || \"\";\n        if (label) label += \": \";\n        const value = tooltipItem.formattedValue;\n        if (!(0, $c7mKY.k)(value)) label += value;\n        return label;\n    },\n    labelColor (tooltipItem) {\n        const meta = tooltipItem.chart.getDatasetMeta(tooltipItem.datasetIndex);\n        const options = meta.controller.getStyle(tooltipItem.dataIndex);\n        return {\n            borderColor: options.borderColor,\n            backgroundColor: options.backgroundColor,\n            borderWidth: options.borderWidth,\n            borderDash: options.borderDash,\n            borderDashOffset: options.borderDashOffset,\n            borderRadius: 0\n        };\n    },\n    labelTextColor () {\n        return this.options.bodyColor;\n    },\n    labelPointStyle (tooltipItem) {\n        const meta = tooltipItem.chart.getDatasetMeta(tooltipItem.datasetIndex);\n        const options = meta.controller.getStyle(tooltipItem.dataIndex);\n        return {\n            pointStyle: options.pointStyle,\n            rotation: options.rotation\n        };\n    },\n    afterLabel: (0, $c7mKY.aF),\n    afterBody: (0, $c7mKY.aF),\n    beforeFooter: (0, $c7mKY.aF),\n    footer: (0, $c7mKY.aF),\n    afterFooter: (0, $c7mKY.aF)\n};\nfunction $216d2bdc6f281bf6$var$invokeCallbackWithFallback(callbacks, name, ctx, arg) {\n    const result = callbacks[name].call(ctx, arg);\n    if (typeof result === \"undefined\") return $216d2bdc6f281bf6$var$defaultCallbacks[name].call(ctx, arg);\n    return result;\n}\nclass $216d2bdc6f281bf6$var$Tooltip extends $216d2bdc6f281bf6$export$db77ccec0bb4ccac {\n    static positioners = $216d2bdc6f281bf6$var$positioners;\n    constructor(config){\n        super();\n        this.opacity = 0;\n        this._active = [];\n        this._eventPosition = undefined;\n        this._size = undefined;\n        this._cachedAnimations = undefined;\n        this._tooltipItems = [];\n        this.$animations = undefined;\n        this.$context = undefined;\n        this.chart = config.chart;\n        this.options = config.options;\n        this.dataPoints = undefined;\n        this.title = undefined;\n        this.beforeBody = undefined;\n        this.body = undefined;\n        this.afterBody = undefined;\n        this.footer = undefined;\n        this.xAlign = undefined;\n        this.yAlign = undefined;\n        this.x = undefined;\n        this.y = undefined;\n        this.height = undefined;\n        this.width = undefined;\n        this.caretX = undefined;\n        this.caretY = undefined;\n        this.labelColors = undefined;\n        this.labelPointStyles = undefined;\n        this.labelTextColors = undefined;\n    }\n    initialize(options) {\n        this.options = options;\n        this._cachedAnimations = undefined;\n        this.$context = undefined;\n    }\n    _resolveAnimations() {\n        const cached = this._cachedAnimations;\n        if (cached) return cached;\n        const chart = this.chart;\n        const options = this.options.setContext(this.getContext());\n        const opts = options.enabled && chart.options.animation && options.animations;\n        const animations = new $216d2bdc6f281bf6$export$8ab227dac26677d(this.chart, opts);\n        if (opts._cacheable) this._cachedAnimations = Object.freeze(animations);\n        return animations;\n    }\n    getContext() {\n        return this.$context || (this.$context = $216d2bdc6f281bf6$var$createTooltipContext(this.chart.getContext(), this, this._tooltipItems));\n    }\n    getTitle(context, options) {\n        const { callbacks: callbacks } = options;\n        const beforeTitle = $216d2bdc6f281bf6$var$invokeCallbackWithFallback(callbacks, \"beforeTitle\", this, context);\n        const title = $216d2bdc6f281bf6$var$invokeCallbackWithFallback(callbacks, \"title\", this, context);\n        const afterTitle = $216d2bdc6f281bf6$var$invokeCallbackWithFallback(callbacks, \"afterTitle\", this, context);\n        let lines = [];\n        lines = $216d2bdc6f281bf6$var$pushOrConcat(lines, $216d2bdc6f281bf6$var$splitNewlines(beforeTitle));\n        lines = $216d2bdc6f281bf6$var$pushOrConcat(lines, $216d2bdc6f281bf6$var$splitNewlines(title));\n        lines = $216d2bdc6f281bf6$var$pushOrConcat(lines, $216d2bdc6f281bf6$var$splitNewlines(afterTitle));\n        return lines;\n    }\n    getBeforeBody(tooltipItems, options) {\n        return $216d2bdc6f281bf6$var$getBeforeAfterBodyLines($216d2bdc6f281bf6$var$invokeCallbackWithFallback(options.callbacks, \"beforeBody\", this, tooltipItems));\n    }\n    getBody(tooltipItems, options) {\n        const { callbacks: callbacks } = options;\n        const bodyItems = [];\n        (0, $c7mKY.F)(tooltipItems, (context)=>{\n            const bodyItem = {\n                before: [],\n                lines: [],\n                after: []\n            };\n            const scoped = $216d2bdc6f281bf6$var$overrideCallbacks(callbacks, context);\n            $216d2bdc6f281bf6$var$pushOrConcat(bodyItem.before, $216d2bdc6f281bf6$var$splitNewlines($216d2bdc6f281bf6$var$invokeCallbackWithFallback(scoped, \"beforeLabel\", this, context)));\n            $216d2bdc6f281bf6$var$pushOrConcat(bodyItem.lines, $216d2bdc6f281bf6$var$invokeCallbackWithFallback(scoped, \"label\", this, context));\n            $216d2bdc6f281bf6$var$pushOrConcat(bodyItem.after, $216d2bdc6f281bf6$var$splitNewlines($216d2bdc6f281bf6$var$invokeCallbackWithFallback(scoped, \"afterLabel\", this, context)));\n            bodyItems.push(bodyItem);\n        });\n        return bodyItems;\n    }\n    getAfterBody(tooltipItems, options) {\n        return $216d2bdc6f281bf6$var$getBeforeAfterBodyLines($216d2bdc6f281bf6$var$invokeCallbackWithFallback(options.callbacks, \"afterBody\", this, tooltipItems));\n    }\n    getFooter(tooltipItems, options) {\n        const { callbacks: callbacks } = options;\n        const beforeFooter = $216d2bdc6f281bf6$var$invokeCallbackWithFallback(callbacks, \"beforeFooter\", this, tooltipItems);\n        const footer = $216d2bdc6f281bf6$var$invokeCallbackWithFallback(callbacks, \"footer\", this, tooltipItems);\n        const afterFooter = $216d2bdc6f281bf6$var$invokeCallbackWithFallback(callbacks, \"afterFooter\", this, tooltipItems);\n        let lines = [];\n        lines = $216d2bdc6f281bf6$var$pushOrConcat(lines, $216d2bdc6f281bf6$var$splitNewlines(beforeFooter));\n        lines = $216d2bdc6f281bf6$var$pushOrConcat(lines, $216d2bdc6f281bf6$var$splitNewlines(footer));\n        lines = $216d2bdc6f281bf6$var$pushOrConcat(lines, $216d2bdc6f281bf6$var$splitNewlines(afterFooter));\n        return lines;\n    }\n    _createItems(options) {\n        const active = this._active;\n        const data = this.chart.data;\n        const labelColors = [];\n        const labelPointStyles = [];\n        const labelTextColors = [];\n        let tooltipItems = [];\n        let i, len;\n        for(i = 0, len = active.length; i < len; ++i)tooltipItems.push($216d2bdc6f281bf6$var$createTooltipItem(this.chart, active[i]));\n        if (options.filter) tooltipItems = tooltipItems.filter((element, index, array)=>options.filter(element, index, array, data));\n        if (options.itemSort) tooltipItems = tooltipItems.sort((a, b)=>options.itemSort(a, b, data));\n        (0, $c7mKY.F)(tooltipItems, (context)=>{\n            const scoped = $216d2bdc6f281bf6$var$overrideCallbacks(options.callbacks, context);\n            labelColors.push($216d2bdc6f281bf6$var$invokeCallbackWithFallback(scoped, \"labelColor\", this, context));\n            labelPointStyles.push($216d2bdc6f281bf6$var$invokeCallbackWithFallback(scoped, \"labelPointStyle\", this, context));\n            labelTextColors.push($216d2bdc6f281bf6$var$invokeCallbackWithFallback(scoped, \"labelTextColor\", this, context));\n        });\n        this.labelColors = labelColors;\n        this.labelPointStyles = labelPointStyles;\n        this.labelTextColors = labelTextColors;\n        this.dataPoints = tooltipItems;\n        return tooltipItems;\n    }\n    update(changed, replay) {\n        const options = this.options.setContext(this.getContext());\n        const active = this._active;\n        let properties;\n        let tooltipItems = [];\n        if (!active.length) {\n            if (this.opacity !== 0) properties = {\n                opacity: 0\n            };\n        } else {\n            const position = $216d2bdc6f281bf6$var$positioners[options.position].call(this, active, this._eventPosition);\n            tooltipItems = this._createItems(options);\n            this.title = this.getTitle(tooltipItems, options);\n            this.beforeBody = this.getBeforeBody(tooltipItems, options);\n            this.body = this.getBody(tooltipItems, options);\n            this.afterBody = this.getAfterBody(tooltipItems, options);\n            this.footer = this.getFooter(tooltipItems, options);\n            const size = this._size = $216d2bdc6f281bf6$var$getTooltipSize(this, options);\n            const positionAndSize = Object.assign({}, position, size);\n            const alignment = $216d2bdc6f281bf6$var$determineAlignment(this.chart, options, positionAndSize);\n            const backgroundPoint = $216d2bdc6f281bf6$var$getBackgroundPoint(options, positionAndSize, alignment, this.chart);\n            this.xAlign = alignment.xAlign;\n            this.yAlign = alignment.yAlign;\n            properties = {\n                opacity: 1,\n                x: backgroundPoint.x,\n                y: backgroundPoint.y,\n                width: size.width,\n                height: size.height,\n                caretX: position.x,\n                caretY: position.y\n            };\n        }\n        this._tooltipItems = tooltipItems;\n        this.$context = undefined;\n        if (properties) this._resolveAnimations().update(this, properties);\n        if (changed && options.external) options.external.call(this, {\n            chart: this.chart,\n            tooltip: this,\n            replay: replay\n        });\n    }\n    drawCaret(tooltipPoint, ctx, size, options) {\n        const caretPosition = this.getCaretPosition(tooltipPoint, size, options);\n        ctx.lineTo(caretPosition.x1, caretPosition.y1);\n        ctx.lineTo(caretPosition.x2, caretPosition.y2);\n        ctx.lineTo(caretPosition.x3, caretPosition.y3);\n    }\n    getCaretPosition(tooltipPoint, size, options) {\n        const { xAlign: xAlign, yAlign: yAlign } = this;\n        const { caretSize: caretSize, cornerRadius: cornerRadius } = options;\n        const { topLeft: topLeft, topRight: topRight, bottomLeft: bottomLeft, bottomRight: bottomRight } = (0, $c7mKY.aw)(cornerRadius);\n        const { x: ptX, y: ptY } = tooltipPoint;\n        const { width: width, height: height } = size;\n        let x1, x2, x3, y1, y2, y3;\n        if (yAlign === \"center\") {\n            y2 = ptY + height / 2;\n            if (xAlign === \"left\") {\n                x1 = ptX;\n                x2 = x1 - caretSize;\n                y1 = y2 + caretSize;\n                y3 = y2 - caretSize;\n            } else {\n                x1 = ptX + width;\n                x2 = x1 + caretSize;\n                y1 = y2 - caretSize;\n                y3 = y2 + caretSize;\n            }\n            x3 = x1;\n        } else {\n            if (xAlign === \"left\") x2 = ptX + Math.max(topLeft, bottomLeft) + caretSize;\n            else if (xAlign === \"right\") x2 = ptX + width - Math.max(topRight, bottomRight) - caretSize;\n            else x2 = this.caretX;\n            if (yAlign === \"top\") {\n                y1 = ptY;\n                y2 = y1 - caretSize;\n                x1 = x2 - caretSize;\n                x3 = x2 + caretSize;\n            } else {\n                y1 = ptY + height;\n                y2 = y1 + caretSize;\n                x1 = x2 + caretSize;\n                x3 = x2 - caretSize;\n            }\n            y3 = y1;\n        }\n        return {\n            x1: x1,\n            x2: x2,\n            x3: x3,\n            y1: y1,\n            y2: y2,\n            y3: y3\n        };\n    }\n    drawTitle(pt, ctx, options) {\n        const title = this.title;\n        const length = title.length;\n        let titleFont, titleSpacing, i;\n        if (length) {\n            const rtlHelper = (0, $c7mKY.az)(options.rtl, this.x, this.width);\n            pt.x = $216d2bdc6f281bf6$var$getAlignedX(this, options.titleAlign, options);\n            ctx.textAlign = rtlHelper.textAlign(options.titleAlign);\n            ctx.textBaseline = \"middle\";\n            titleFont = (0, $c7mKY.a0)(options.titleFont);\n            titleSpacing = options.titleSpacing;\n            ctx.fillStyle = options.titleColor;\n            ctx.font = titleFont.string;\n            for(i = 0; i < length; ++i){\n                ctx.fillText(title[i], rtlHelper.x(pt.x), pt.y + titleFont.lineHeight / 2);\n                pt.y += titleFont.lineHeight + titleSpacing;\n                if (i + 1 === length) pt.y += options.titleMarginBottom - titleSpacing;\n            }\n        }\n    }\n    _drawColorBox(ctx, pt, i, rtlHelper, options) {\n        const labelColor = this.labelColors[i];\n        const labelPointStyle = this.labelPointStyles[i];\n        const { boxHeight: boxHeight, boxWidth: boxWidth } = options;\n        const bodyFont = (0, $c7mKY.a0)(options.bodyFont);\n        const colorX = $216d2bdc6f281bf6$var$getAlignedX(this, \"left\", options);\n        const rtlColorX = rtlHelper.x(colorX);\n        const yOffSet = boxHeight < bodyFont.lineHeight ? (bodyFont.lineHeight - boxHeight) / 2 : 0;\n        const colorY = pt.y + yOffSet;\n        if (options.usePointStyle) {\n            const drawOptions = {\n                radius: Math.min(boxWidth, boxHeight) / 2,\n                pointStyle: labelPointStyle.pointStyle,\n                rotation: labelPointStyle.rotation,\n                borderWidth: 1\n            };\n            const centerX = rtlHelper.leftForLtr(rtlColorX, boxWidth) + boxWidth / 2;\n            const centerY = colorY + boxHeight / 2;\n            ctx.strokeStyle = options.multiKeyBackground;\n            ctx.fillStyle = options.multiKeyBackground;\n            (0, $c7mKY.at)(ctx, drawOptions, centerX, centerY);\n            ctx.strokeStyle = labelColor.borderColor;\n            ctx.fillStyle = labelColor.backgroundColor;\n            (0, $c7mKY.at)(ctx, drawOptions, centerX, centerY);\n        } else {\n            ctx.lineWidth = (0, $c7mKY.i)(labelColor.borderWidth) ? Math.max(...Object.values(labelColor.borderWidth)) : labelColor.borderWidth || 1;\n            ctx.strokeStyle = labelColor.borderColor;\n            ctx.setLineDash(labelColor.borderDash || []);\n            ctx.lineDashOffset = labelColor.borderDashOffset || 0;\n            const outerX = rtlHelper.leftForLtr(rtlColorX, boxWidth);\n            const innerX = rtlHelper.leftForLtr(rtlHelper.xPlus(rtlColorX, 1), boxWidth - 2);\n            const borderRadius = (0, $c7mKY.aw)(labelColor.borderRadius);\n            if (Object.values(borderRadius).some((v)=>v !== 0)) {\n                ctx.beginPath();\n                ctx.fillStyle = options.multiKeyBackground;\n                (0, $c7mKY.au)(ctx, {\n                    x: outerX,\n                    y: colorY,\n                    w: boxWidth,\n                    h: boxHeight,\n                    radius: borderRadius\n                });\n                ctx.fill();\n                ctx.stroke();\n                ctx.fillStyle = labelColor.backgroundColor;\n                ctx.beginPath();\n                (0, $c7mKY.au)(ctx, {\n                    x: innerX,\n                    y: colorY + 1,\n                    w: boxWidth - 2,\n                    h: boxHeight - 2,\n                    radius: borderRadius\n                });\n                ctx.fill();\n            } else {\n                ctx.fillStyle = options.multiKeyBackground;\n                ctx.fillRect(outerX, colorY, boxWidth, boxHeight);\n                ctx.strokeRect(outerX, colorY, boxWidth, boxHeight);\n                ctx.fillStyle = labelColor.backgroundColor;\n                ctx.fillRect(innerX, colorY + 1, boxWidth - 2, boxHeight - 2);\n            }\n        }\n        ctx.fillStyle = this.labelTextColors[i];\n    }\n    drawBody(pt, ctx, options) {\n        const { body: body } = this;\n        const { bodySpacing: bodySpacing, bodyAlign: bodyAlign, displayColors: displayColors, boxHeight: boxHeight, boxWidth: boxWidth, boxPadding: boxPadding } = options;\n        const bodyFont = (0, $c7mKY.a0)(options.bodyFont);\n        let bodyLineHeight = bodyFont.lineHeight;\n        let xLinePadding = 0;\n        const rtlHelper = (0, $c7mKY.az)(options.rtl, this.x, this.width);\n        const fillLineOfText = function(line) {\n            ctx.fillText(line, rtlHelper.x(pt.x + xLinePadding), pt.y + bodyLineHeight / 2);\n            pt.y += bodyLineHeight + bodySpacing;\n        };\n        const bodyAlignForCalculation = rtlHelper.textAlign(bodyAlign);\n        let bodyItem, textColor, lines, i, j, ilen, jlen;\n        ctx.textAlign = bodyAlign;\n        ctx.textBaseline = \"middle\";\n        ctx.font = bodyFont.string;\n        pt.x = $216d2bdc6f281bf6$var$getAlignedX(this, bodyAlignForCalculation, options);\n        ctx.fillStyle = options.bodyColor;\n        (0, $c7mKY.F)(this.beforeBody, fillLineOfText);\n        xLinePadding = displayColors && bodyAlignForCalculation !== \"right\" ? bodyAlign === \"center\" ? boxWidth / 2 + boxPadding : boxWidth + 2 + boxPadding : 0;\n        for(i = 0, ilen = body.length; i < ilen; ++i){\n            bodyItem = body[i];\n            textColor = this.labelTextColors[i];\n            ctx.fillStyle = textColor;\n            (0, $c7mKY.F)(bodyItem.before, fillLineOfText);\n            lines = bodyItem.lines;\n            if (displayColors && lines.length) {\n                this._drawColorBox(ctx, pt, i, rtlHelper, options);\n                bodyLineHeight = Math.max(bodyFont.lineHeight, boxHeight);\n            }\n            for(j = 0, jlen = lines.length; j < jlen; ++j){\n                fillLineOfText(lines[j]);\n                bodyLineHeight = bodyFont.lineHeight;\n            }\n            (0, $c7mKY.F)(bodyItem.after, fillLineOfText);\n        }\n        xLinePadding = 0;\n        bodyLineHeight = bodyFont.lineHeight;\n        (0, $c7mKY.F)(this.afterBody, fillLineOfText);\n        pt.y -= bodySpacing;\n    }\n    drawFooter(pt, ctx, options) {\n        const footer = this.footer;\n        const length = footer.length;\n        let footerFont, i;\n        if (length) {\n            const rtlHelper = (0, $c7mKY.az)(options.rtl, this.x, this.width);\n            pt.x = $216d2bdc6f281bf6$var$getAlignedX(this, options.footerAlign, options);\n            pt.y += options.footerMarginTop;\n            ctx.textAlign = rtlHelper.textAlign(options.footerAlign);\n            ctx.textBaseline = \"middle\";\n            footerFont = (0, $c7mKY.a0)(options.footerFont);\n            ctx.fillStyle = options.footerColor;\n            ctx.font = footerFont.string;\n            for(i = 0; i < length; ++i){\n                ctx.fillText(footer[i], rtlHelper.x(pt.x), pt.y + footerFont.lineHeight / 2);\n                pt.y += footerFont.lineHeight + options.footerSpacing;\n            }\n        }\n    }\n    drawBackground(pt, ctx, tooltipSize, options) {\n        const { xAlign: xAlign, yAlign: yAlign } = this;\n        const { x: x, y: y } = pt;\n        const { width: width, height: height } = tooltipSize;\n        const { topLeft: topLeft, topRight: topRight, bottomLeft: bottomLeft, bottomRight: bottomRight } = (0, $c7mKY.aw)(options.cornerRadius);\n        ctx.fillStyle = options.backgroundColor;\n        ctx.strokeStyle = options.borderColor;\n        ctx.lineWidth = options.borderWidth;\n        ctx.beginPath();\n        ctx.moveTo(x + topLeft, y);\n        if (yAlign === \"top\") this.drawCaret(pt, ctx, tooltipSize, options);\n        ctx.lineTo(x + width - topRight, y);\n        ctx.quadraticCurveTo(x + width, y, x + width, y + topRight);\n        if (yAlign === \"center\" && xAlign === \"right\") this.drawCaret(pt, ctx, tooltipSize, options);\n        ctx.lineTo(x + width, y + height - bottomRight);\n        ctx.quadraticCurveTo(x + width, y + height, x + width - bottomRight, y + height);\n        if (yAlign === \"bottom\") this.drawCaret(pt, ctx, tooltipSize, options);\n        ctx.lineTo(x + bottomLeft, y + height);\n        ctx.quadraticCurveTo(x, y + height, x, y + height - bottomLeft);\n        if (yAlign === \"center\" && xAlign === \"left\") this.drawCaret(pt, ctx, tooltipSize, options);\n        ctx.lineTo(x, y + topLeft);\n        ctx.quadraticCurveTo(x, y, x + topLeft, y);\n        ctx.closePath();\n        ctx.fill();\n        if (options.borderWidth > 0) ctx.stroke();\n    }\n    _updateAnimationTarget(options) {\n        const chart = this.chart;\n        const anims = this.$animations;\n        const animX = anims && anims.x;\n        const animY = anims && anims.y;\n        if (animX || animY) {\n            const position = $216d2bdc6f281bf6$var$positioners[options.position].call(this, this._active, this._eventPosition);\n            if (!position) return;\n            const size = this._size = $216d2bdc6f281bf6$var$getTooltipSize(this, options);\n            const positionAndSize = Object.assign({}, position, this._size);\n            const alignment = $216d2bdc6f281bf6$var$determineAlignment(chart, options, positionAndSize);\n            const point = $216d2bdc6f281bf6$var$getBackgroundPoint(options, positionAndSize, alignment, chart);\n            if (animX._to !== point.x || animY._to !== point.y) {\n                this.xAlign = alignment.xAlign;\n                this.yAlign = alignment.yAlign;\n                this.width = size.width;\n                this.height = size.height;\n                this.caretX = position.x;\n                this.caretY = position.y;\n                this._resolveAnimations().update(this, point);\n            }\n        }\n    }\n    _willRender() {\n        return !!this.opacity;\n    }\n    draw(ctx) {\n        const options = this.options.setContext(this.getContext());\n        let opacity = this.opacity;\n        if (!opacity) return;\n        this._updateAnimationTarget(options);\n        const tooltipSize = {\n            width: this.width,\n            height: this.height\n        };\n        const pt = {\n            x: this.x,\n            y: this.y\n        };\n        opacity = Math.abs(opacity) < 1e-3 ? 0 : opacity;\n        const padding = (0, $c7mKY.E)(options.padding);\n        const hasTooltipContent = this.title.length || this.beforeBody.length || this.body.length || this.afterBody.length || this.footer.length;\n        if (options.enabled && hasTooltipContent) {\n            ctx.save();\n            ctx.globalAlpha = opacity;\n            this.drawBackground(pt, ctx, tooltipSize, options);\n            (0, $c7mKY.aA)(ctx, options.textDirection);\n            pt.y += padding.top;\n            this.drawTitle(pt, ctx, options);\n            this.drawBody(pt, ctx, options);\n            this.drawFooter(pt, ctx, options);\n            (0, $c7mKY.aC)(ctx, options.textDirection);\n            ctx.restore();\n        }\n    }\n    getActiveElements() {\n        return this._active || [];\n    }\n    setActiveElements(activeElements, eventPosition) {\n        const lastActive = this._active;\n        const active = activeElements.map(({ datasetIndex: datasetIndex, index: index })=>{\n            const meta = this.chart.getDatasetMeta(datasetIndex);\n            if (!meta) throw new Error(\"Cannot find a dataset at index \" + datasetIndex);\n            return {\n                datasetIndex: datasetIndex,\n                element: meta.data[index],\n                index: index\n            };\n        });\n        const changed = !(0, $c7mKY.ah)(lastActive, active);\n        const positionChanged = this._positionChanged(active, eventPosition);\n        if (changed || positionChanged) {\n            this._active = active;\n            this._eventPosition = eventPosition;\n            this._ignoreReplayEvents = true;\n            this.update(true);\n        }\n    }\n    handleEvent(e, replay, inChartArea = true) {\n        if (replay && this._ignoreReplayEvents) return false;\n        this._ignoreReplayEvents = false;\n        const options = this.options;\n        const lastActive = this._active || [];\n        const active = this._getActiveElements(e, lastActive, replay, inChartArea);\n        const positionChanged = this._positionChanged(active, e);\n        const changed = replay || !(0, $c7mKY.ah)(active, lastActive) || positionChanged;\n        if (changed) {\n            this._active = active;\n            if (options.enabled || options.external) {\n                this._eventPosition = {\n                    x: e.x,\n                    y: e.y\n                };\n                this.update(true, replay);\n            }\n        }\n        return changed;\n    }\n    _getActiveElements(e, lastActive, replay, inChartArea) {\n        const options = this.options;\n        if (e.type === \"mouseout\") return [];\n        if (!inChartArea) return lastActive.filter((i)=>this.chart.data.datasets[i.datasetIndex] && this.chart.getDatasetMeta(i.datasetIndex).controller.getParsed(i.index) !== undefined);\n        const active = this.chart.getElementsAtEventForMode(e, options.mode, options, replay);\n        if (options.reverse) active.reverse();\n        return active;\n    }\n    _positionChanged(active, e) {\n        const { caretX: caretX, caretY: caretY, options: options } = this;\n        const position = $216d2bdc6f281bf6$var$positioners[options.position].call(this, active, e);\n        return position !== false && (caretX !== position.x || caretY !== position.y);\n    }\n}\nvar $216d2bdc6f281bf6$export$28c660c63b792dea = {\n    id: \"tooltip\",\n    _element: $216d2bdc6f281bf6$var$Tooltip,\n    positioners: $216d2bdc6f281bf6$var$positioners,\n    afterInit (chart, _args, options) {\n        if (options) chart.tooltip = new $216d2bdc6f281bf6$var$Tooltip({\n            chart: chart,\n            options: options\n        });\n    },\n    beforeUpdate (chart, _args, options) {\n        if (chart.tooltip) chart.tooltip.initialize(options);\n    },\n    reset (chart, _args, options) {\n        if (chart.tooltip) chart.tooltip.initialize(options);\n    },\n    afterDraw (chart) {\n        const tooltip = chart.tooltip;\n        if (tooltip && tooltip._willRender()) {\n            const args = {\n                tooltip: tooltip\n            };\n            if (chart.notifyPlugins(\"beforeTooltipDraw\", {\n                ...args,\n                cancelable: true\n            }) === false) return;\n            tooltip.draw(chart.ctx);\n            chart.notifyPlugins(\"afterTooltipDraw\", args);\n        }\n    },\n    afterEvent (chart, args) {\n        if (chart.tooltip) {\n            const useFinalPosition = args.replay;\n            if (chart.tooltip.handleEvent(args.event, useFinalPosition, args.inChartArea)) args.changed = true;\n        }\n    },\n    defaults: {\n        enabled: true,\n        external: null,\n        position: \"average\",\n        backgroundColor: \"rgba(0,0,0,0.8)\",\n        titleColor: \"#fff\",\n        titleFont: {\n            weight: \"bold\"\n        },\n        titleSpacing: 2,\n        titleMarginBottom: 6,\n        titleAlign: \"left\",\n        bodyColor: \"#fff\",\n        bodySpacing: 2,\n        bodyFont: {},\n        bodyAlign: \"left\",\n        footerColor: \"#fff\",\n        footerSpacing: 2,\n        footerMarginTop: 6,\n        footerFont: {\n            weight: \"bold\"\n        },\n        footerAlign: \"left\",\n        padding: 6,\n        caretPadding: 2,\n        caretSize: 5,\n        cornerRadius: 6,\n        boxHeight: (ctx, opts)=>opts.bodyFont.size,\n        boxWidth: (ctx, opts)=>opts.bodyFont.size,\n        multiKeyBackground: \"#fff\",\n        displayColors: true,\n        boxPadding: 0,\n        borderColor: \"rgba(0,0,0,0)\",\n        borderWidth: 0,\n        animation: {\n            duration: 400,\n            easing: \"easeOutQuart\"\n        },\n        animations: {\n            numbers: {\n                type: \"number\",\n                properties: [\n                    \"x\",\n                    \"y\",\n                    \"width\",\n                    \"height\",\n                    \"caretX\",\n                    \"caretY\"\n                ]\n            },\n            opacity: {\n                easing: \"linear\",\n                duration: 200\n            }\n        },\n        callbacks: $216d2bdc6f281bf6$var$defaultCallbacks\n    },\n    defaultRoutes: {\n        bodyFont: \"font\",\n        footerFont: \"font\",\n        titleFont: \"font\"\n    },\n    descriptors: {\n        _scriptable: (name)=>name !== \"filter\" && name !== \"itemSort\" && name !== \"external\",\n        _indexable: false,\n        callbacks: {\n            _scriptable: false,\n            _indexable: false\n        },\n        animation: {\n            _fallback: false\n        },\n        animations: {\n            _fallback: \"animation\"\n        }\n    },\n    additionalOptionScopes: [\n        \"interaction\"\n    ]\n};\nvar $216d2bdc6f281bf6$export$8b3ca321c77fdea6 = /*#__PURE__*/ Object.freeze({\n    __proto__: null,\n    Colors: $216d2bdc6f281bf6$export$c537fa0d021d010b,\n    Decimation: $216d2bdc6f281bf6$export$be17f937e9aa7533,\n    Filler: $216d2bdc6f281bf6$export$d19ba4d812bed757,\n    Legend: $216d2bdc6f281bf6$export$ed247974535929c7,\n    SubTitle: $216d2bdc6f281bf6$export$d5c56664638992a4,\n    Title: $216d2bdc6f281bf6$export$f99233281efd08a0,\n    Tooltip: $216d2bdc6f281bf6$export$28c660c63b792dea\n});\nconst $216d2bdc6f281bf6$var$addIfString = (labels, raw, index, addedLabels)=>{\n    if (typeof raw === \"string\") {\n        index = labels.push(raw) - 1;\n        addedLabels.unshift({\n            index: index,\n            label: raw\n        });\n    } else if (isNaN(raw)) index = null;\n    return index;\n};\nfunction $216d2bdc6f281bf6$var$findOrAddLabel(labels, raw, index, addedLabels) {\n    const first = labels.indexOf(raw);\n    if (first === -1) return $216d2bdc6f281bf6$var$addIfString(labels, raw, index, addedLabels);\n    const last = labels.lastIndexOf(raw);\n    return first !== last ? index : first;\n}\nconst $216d2bdc6f281bf6$var$validIndex = (index, max)=>index === null ? null : (0, $c7mKY.S)(Math.round(index), 0, max);\nfunction $216d2bdc6f281bf6$var$_getLabelForValue(value) {\n    const labels = this.getLabels();\n    if (value >= 0 && value < labels.length) return labels[value];\n    return value;\n}\nclass $216d2bdc6f281bf6$export$29e663ba4d09fe7 extends $216d2bdc6f281bf6$export$d60cfc58d3c358b6 {\n    static id = \"category\";\n    static defaults = {\n        ticks: {\n            callback: $216d2bdc6f281bf6$var$_getLabelForValue\n        }\n    };\n    constructor(cfg){\n        super(cfg);\n        this._startValue = undefined;\n        this._valueRange = 0;\n        this._addedLabels = [];\n    }\n    init(scaleOptions) {\n        const added = this._addedLabels;\n        if (added.length) {\n            const labels = this.getLabels();\n            for (const { index: index, label: label } of added)if (labels[index] === label) labels.splice(index, 1);\n            this._addedLabels = [];\n        }\n        super.init(scaleOptions);\n    }\n    parse(raw, index) {\n        if ((0, $c7mKY.k)(raw)) return null;\n        const labels = this.getLabels();\n        index = isFinite(index) && labels[index] === raw ? index : $216d2bdc6f281bf6$var$findOrAddLabel(labels, raw, (0, $c7mKY.v)(index, raw), this._addedLabels);\n        return $216d2bdc6f281bf6$var$validIndex(index, labels.length - 1);\n    }\n    determineDataLimits() {\n        const { minDefined: minDefined, maxDefined: maxDefined } = this.getUserBounds();\n        let { min: min, max: max } = this.getMinMax(true);\n        if (this.options.bounds === \"ticks\") {\n            if (!minDefined) min = 0;\n            if (!maxDefined) max = this.getLabels().length - 1;\n        }\n        this.min = min;\n        this.max = max;\n    }\n    buildTicks() {\n        const min = this.min;\n        const max = this.max;\n        const offset = this.options.offset;\n        const ticks = [];\n        let labels = this.getLabels();\n        labels = min === 0 && max === labels.length - 1 ? labels : labels.slice(min, max + 1);\n        this._valueRange = Math.max(labels.length - (offset ? 0 : 1), 1);\n        this._startValue = this.min - (offset ? 0.5 : 0);\n        for(let value = min; value <= max; value++)ticks.push({\n            value: value\n        });\n        return ticks;\n    }\n    getLabelForValue(value) {\n        return $216d2bdc6f281bf6$var$_getLabelForValue.call(this, value);\n    }\n    configure() {\n        super.configure();\n        if (!this.isHorizontal()) this._reversePixels = !this._reversePixels;\n    }\n    getPixelForValue(value) {\n        if (typeof value !== \"number\") value = this.parse(value);\n        return value === null ? NaN : this.getPixelForDecimal((value - this._startValue) / this._valueRange);\n    }\n    getPixelForTick(index) {\n        const ticks = this.ticks;\n        if (index < 0 || index > ticks.length - 1) return null;\n        return this.getPixelForValue(ticks[index].value);\n    }\n    getValueForPixel(pixel) {\n        return Math.round(this._startValue + this.getDecimalForPixel(pixel) * this._valueRange);\n    }\n    getBasePixel() {\n        return this.bottom;\n    }\n}\nfunction $216d2bdc6f281bf6$var$generateTicks$1(generationOptions, dataRange) {\n    const ticks = [];\n    const MIN_SPACING = 1e-14;\n    const { bounds: bounds, step: step, min: min, max: max, precision: precision, count: count, maxTicks: maxTicks, maxDigits: maxDigits, includeBounds: includeBounds } = generationOptions;\n    const unit = step || 1;\n    const maxSpaces = maxTicks - 1;\n    const { min: rmin, max: rmax } = dataRange;\n    const minDefined = !(0, $c7mKY.k)(min);\n    const maxDefined = !(0, $c7mKY.k)(max);\n    const countDefined = !(0, $c7mKY.k)(count);\n    const minSpacing = (rmax - rmin) / (maxDigits + 1);\n    let spacing = (0, $c7mKY.aH)((rmax - rmin) / maxSpaces / unit) * unit;\n    let factor, niceMin, niceMax, numSpaces;\n    if (spacing < MIN_SPACING && !minDefined && !maxDefined) return [\n        {\n            value: rmin\n        },\n        {\n            value: rmax\n        }\n    ];\n    numSpaces = Math.ceil(rmax / spacing) - Math.floor(rmin / spacing);\n    if (numSpaces > maxSpaces) spacing = (0, $c7mKY.aH)(numSpaces * spacing / maxSpaces / unit) * unit;\n    if (!(0, $c7mKY.k)(precision)) {\n        factor = Math.pow(10, precision);\n        spacing = Math.ceil(spacing * factor) / factor;\n    }\n    if (bounds === \"ticks\") {\n        niceMin = Math.floor(rmin / spacing) * spacing;\n        niceMax = Math.ceil(rmax / spacing) * spacing;\n    } else {\n        niceMin = rmin;\n        niceMax = rmax;\n    }\n    if (minDefined && maxDefined && step && (0, $c7mKY.aI)((max - min) / step, spacing / 1000)) {\n        numSpaces = Math.round(Math.min((max - min) / spacing, maxTicks));\n        spacing = (max - min) / numSpaces;\n        niceMin = min;\n        niceMax = max;\n    } else if (countDefined) {\n        niceMin = minDefined ? min : niceMin;\n        niceMax = maxDefined ? max : niceMax;\n        numSpaces = count - 1;\n        spacing = (niceMax - niceMin) / numSpaces;\n    } else {\n        numSpaces = (niceMax - niceMin) / spacing;\n        if ((0, $c7mKY.aJ)(numSpaces, Math.round(numSpaces), spacing / 1000)) numSpaces = Math.round(numSpaces);\n        else numSpaces = Math.ceil(numSpaces);\n    }\n    const decimalPlaces = Math.max((0, $c7mKY.aK)(spacing), (0, $c7mKY.aK)(niceMin));\n    factor = Math.pow(10, (0, $c7mKY.k)(precision) ? decimalPlaces : precision);\n    niceMin = Math.round(niceMin * factor) / factor;\n    niceMax = Math.round(niceMax * factor) / factor;\n    let j = 0;\n    if (minDefined) {\n        if (includeBounds && niceMin !== min) {\n            ticks.push({\n                value: min\n            });\n            if (niceMin < min) j++;\n            if ((0, $c7mKY.aJ)(Math.round((niceMin + j * spacing) * factor) / factor, min, $216d2bdc6f281bf6$var$relativeLabelSize(min, minSpacing, generationOptions))) j++;\n        } else if (niceMin < min) j++;\n    }\n    for(; j < numSpaces; ++j){\n        const tickValue = Math.round((niceMin + j * spacing) * factor) / factor;\n        if (maxDefined && tickValue > max) break;\n        ticks.push({\n            value: tickValue\n        });\n    }\n    if (maxDefined && includeBounds && niceMax !== max) {\n        if (ticks.length && (0, $c7mKY.aJ)(ticks[ticks.length - 1].value, max, $216d2bdc6f281bf6$var$relativeLabelSize(max, minSpacing, generationOptions))) ticks[ticks.length - 1].value = max;\n        else ticks.push({\n            value: max\n        });\n    } else if (!maxDefined || niceMax === max) ticks.push({\n        value: niceMax\n    });\n    return ticks;\n}\nfunction $216d2bdc6f281bf6$var$relativeLabelSize(value, minSpacing, { horizontal: horizontal, minRotation: minRotation }) {\n    const rad = (0, $c7mKY.t)(minRotation);\n    const ratio = (horizontal ? Math.sin(rad) : Math.cos(rad)) || 0.001;\n    const length = 0.75 * minSpacing * (\"\" + value).length;\n    return Math.min(minSpacing / ratio, length);\n}\nclass $216d2bdc6f281bf6$var$LinearScaleBase extends $216d2bdc6f281bf6$export$d60cfc58d3c358b6 {\n    constructor(cfg){\n        super(cfg);\n        this.start = undefined;\n        this.end = undefined;\n        this._startValue = undefined;\n        this._endValue = undefined;\n        this._valueRange = 0;\n    }\n    parse(raw, index) {\n        if ((0, $c7mKY.k)(raw)) return null;\n        if ((typeof raw === \"number\" || raw instanceof Number) && !isFinite(+raw)) return null;\n        return +raw;\n    }\n    handleTickRangeOptions() {\n        const { beginAtZero: beginAtZero } = this.options;\n        const { minDefined: minDefined, maxDefined: maxDefined } = this.getUserBounds();\n        let { min: min, max: max } = this;\n        const setMin = (v)=>min = minDefined ? min : v;\n        const setMax = (v)=>max = maxDefined ? max : v;\n        if (beginAtZero) {\n            const minSign = (0, $c7mKY.s)(min);\n            const maxSign = (0, $c7mKY.s)(max);\n            if (minSign < 0 && maxSign < 0) setMax(0);\n            else if (minSign > 0 && maxSign > 0) setMin(0);\n        }\n        if (min === max) {\n            let offset = max === 0 ? 1 : Math.abs(max * 0.05);\n            setMax(max + offset);\n            if (!beginAtZero) setMin(min - offset);\n        }\n        this.min = min;\n        this.max = max;\n    }\n    getTickLimit() {\n        const tickOpts = this.options.ticks;\n        let { maxTicksLimit: maxTicksLimit, stepSize: stepSize } = tickOpts;\n        let maxTicks;\n        if (stepSize) {\n            maxTicks = Math.ceil(this.max / stepSize) - Math.floor(this.min / stepSize) + 1;\n            if (maxTicks > 1000) {\n                console.warn(`scales.${this.id}.ticks.stepSize: ${stepSize} would result generating up to ${maxTicks} ticks. Limiting to 1000.`);\n                maxTicks = 1000;\n            }\n        } else {\n            maxTicks = this.computeTickLimit();\n            maxTicksLimit = maxTicksLimit || 11;\n        }\n        if (maxTicksLimit) maxTicks = Math.min(maxTicksLimit, maxTicks);\n        return maxTicks;\n    }\n    computeTickLimit() {\n        return Number.POSITIVE_INFINITY;\n    }\n    buildTicks() {\n        const opts = this.options;\n        const tickOpts = opts.ticks;\n        let maxTicks = this.getTickLimit();\n        maxTicks = Math.max(2, maxTicks);\n        const numericGeneratorOptions = {\n            maxTicks: maxTicks,\n            bounds: opts.bounds,\n            min: opts.min,\n            max: opts.max,\n            precision: tickOpts.precision,\n            step: tickOpts.stepSize,\n            count: tickOpts.count,\n            maxDigits: this._maxDigits(),\n            horizontal: this.isHorizontal(),\n            minRotation: tickOpts.minRotation || 0,\n            includeBounds: tickOpts.includeBounds !== false\n        };\n        const dataRange = this._range || this;\n        const ticks = $216d2bdc6f281bf6$var$generateTicks$1(numericGeneratorOptions, dataRange);\n        if (opts.bounds === \"ticks\") (0, $c7mKY.aG)(ticks, this, \"value\");\n        if (opts.reverse) {\n            ticks.reverse();\n            this.start = this.max;\n            this.end = this.min;\n        } else {\n            this.start = this.min;\n            this.end = this.max;\n        }\n        return ticks;\n    }\n    configure() {\n        const ticks = this.ticks;\n        let start = this.min;\n        let end = this.max;\n        super.configure();\n        if (this.options.offset && ticks.length) {\n            const offset = (end - start) / Math.max(ticks.length - 1, 1) / 2;\n            start -= offset;\n            end += offset;\n        }\n        this._startValue = start;\n        this._endValue = end;\n        this._valueRange = end - start;\n    }\n    getLabelForValue(value) {\n        return (0, $c7mKY.o)(value, this.chart.options.locale, this.options.ticks.format);\n    }\n}\nclass $216d2bdc6f281bf6$export$e7f4e5e8656f0b93 extends $216d2bdc6f281bf6$var$LinearScaleBase {\n    static id = \"linear\";\n    static defaults = {\n        ticks: {\n            callback: (0, $c7mKY.aL).formatters.numeric\n        }\n    };\n    determineDataLimits() {\n        const { min: min, max: max } = this.getMinMax(true);\n        this.min = (0, $c7mKY.g)(min) ? min : 0;\n        this.max = (0, $c7mKY.g)(max) ? max : 1;\n        this.handleTickRangeOptions();\n    }\n    computeTickLimit() {\n        const horizontal = this.isHorizontal();\n        const length = horizontal ? this.width : this.height;\n        const minRotation = (0, $c7mKY.t)(this.options.ticks.minRotation);\n        const ratio = (horizontal ? Math.sin(minRotation) : Math.cos(minRotation)) || 0.001;\n        const tickFont = this._resolveTickFontOptions(0);\n        return Math.ceil(length / Math.min(40, tickFont.lineHeight / ratio));\n    }\n    getPixelForValue(value) {\n        return value === null ? NaN : this.getPixelForDecimal((value - this._startValue) / this._valueRange);\n    }\n    getValueForPixel(pixel) {\n        return this._startValue + this.getDecimalForPixel(pixel) * this._valueRange;\n    }\n}\nconst $216d2bdc6f281bf6$var$log10Floor = (v)=>Math.floor((0, $c7mKY.aM)(v));\nconst $216d2bdc6f281bf6$var$changeExponent = (v, m)=>Math.pow(10, $216d2bdc6f281bf6$var$log10Floor(v) + m);\nfunction $216d2bdc6f281bf6$var$isMajor(tickVal) {\n    const remain = tickVal / Math.pow(10, $216d2bdc6f281bf6$var$log10Floor(tickVal));\n    return remain === 1;\n}\nfunction $216d2bdc6f281bf6$var$steps(min, max, rangeExp) {\n    const rangeStep = Math.pow(10, rangeExp);\n    const start = Math.floor(min / rangeStep);\n    const end = Math.ceil(max / rangeStep);\n    return end - start;\n}\nfunction $216d2bdc6f281bf6$var$startExp(min, max) {\n    const range = max - min;\n    let rangeExp = $216d2bdc6f281bf6$var$log10Floor(range);\n    while($216d2bdc6f281bf6$var$steps(min, max, rangeExp) > 10)rangeExp++;\n    while($216d2bdc6f281bf6$var$steps(min, max, rangeExp) < 10)rangeExp--;\n    return Math.min(rangeExp, $216d2bdc6f281bf6$var$log10Floor(min));\n}\nfunction $216d2bdc6f281bf6$var$generateTicks(generationOptions, { min: min, max: max }) {\n    min = (0, $c7mKY.O)(generationOptions.min, min);\n    const ticks = [];\n    const minExp = $216d2bdc6f281bf6$var$log10Floor(min);\n    let exp = $216d2bdc6f281bf6$var$startExp(min, max);\n    let precision = exp < 0 ? Math.pow(10, Math.abs(exp)) : 1;\n    const stepSize = Math.pow(10, exp);\n    const base = minExp > exp ? Math.pow(10, minExp) : 0;\n    const start = Math.round((min - base) * precision) / precision;\n    const offset = Math.floor((min - base) / stepSize / 10) * stepSize * 10;\n    let significand = Math.floor((start - offset) / Math.pow(10, exp));\n    let value = (0, $c7mKY.O)(generationOptions.min, Math.round((base + offset + significand * Math.pow(10, exp)) * precision) / precision);\n    while(value < max){\n        ticks.push({\n            value: value,\n            major: $216d2bdc6f281bf6$var$isMajor(value),\n            significand: significand\n        });\n        if (significand >= 10) significand = significand < 15 ? 15 : 20;\n        else significand++;\n        if (significand >= 20) {\n            exp++;\n            significand = 2;\n            precision = exp >= 0 ? 1 : precision;\n        }\n        value = Math.round((base + offset + significand * Math.pow(10, exp)) * precision) / precision;\n    }\n    const lastTick = (0, $c7mKY.O)(generationOptions.max, value);\n    ticks.push({\n        value: lastTick,\n        major: $216d2bdc6f281bf6$var$isMajor(lastTick),\n        significand: significand\n    });\n    return ticks;\n}\nclass $216d2bdc6f281bf6$export$85295eaf7cb3ac3e extends $216d2bdc6f281bf6$export$d60cfc58d3c358b6 {\n    static id = \"logarithmic\";\n    static defaults = {\n        ticks: {\n            callback: (0, $c7mKY.aL).formatters.logarithmic,\n            major: {\n                enabled: true\n            }\n        }\n    };\n    constructor(cfg){\n        super(cfg);\n        this.start = undefined;\n        this.end = undefined;\n        this._startValue = undefined;\n        this._valueRange = 0;\n    }\n    parse(raw, index) {\n        const value = $216d2bdc6f281bf6$var$LinearScaleBase.prototype.parse.apply(this, [\n            raw,\n            index\n        ]);\n        if (value === 0) {\n            this._zero = true;\n            return undefined;\n        }\n        return (0, $c7mKY.g)(value) && value > 0 ? value : null;\n    }\n    determineDataLimits() {\n        const { min: min, max: max } = this.getMinMax(true);\n        this.min = (0, $c7mKY.g)(min) ? Math.max(0, min) : null;\n        this.max = (0, $c7mKY.g)(max) ? Math.max(0, max) : null;\n        if (this.options.beginAtZero) this._zero = true;\n        if (this._zero && this.min !== this._suggestedMin && !(0, $c7mKY.g)(this._userMin)) this.min = min === $216d2bdc6f281bf6$var$changeExponent(this.min, 0) ? $216d2bdc6f281bf6$var$changeExponent(this.min, -1) : $216d2bdc6f281bf6$var$changeExponent(this.min, 0);\n        this.handleTickRangeOptions();\n    }\n    handleTickRangeOptions() {\n        const { minDefined: minDefined, maxDefined: maxDefined } = this.getUserBounds();\n        let min = this.min;\n        let max = this.max;\n        const setMin = (v)=>min = minDefined ? min : v;\n        const setMax = (v)=>max = maxDefined ? max : v;\n        if (min === max) {\n            if (min <= 0) {\n                setMin(1);\n                setMax(10);\n            } else {\n                setMin($216d2bdc6f281bf6$var$changeExponent(min, -1));\n                setMax($216d2bdc6f281bf6$var$changeExponent(max, 1));\n            }\n        }\n        if (min <= 0) setMin($216d2bdc6f281bf6$var$changeExponent(max, -1));\n        if (max <= 0) setMax($216d2bdc6f281bf6$var$changeExponent(min, 1));\n        this.min = min;\n        this.max = max;\n    }\n    buildTicks() {\n        const opts = this.options;\n        const generationOptions = {\n            min: this._userMin,\n            max: this._userMax\n        };\n        const ticks = $216d2bdc6f281bf6$var$generateTicks(generationOptions, this);\n        if (opts.bounds === \"ticks\") (0, $c7mKY.aG)(ticks, this, \"value\");\n        if (opts.reverse) {\n            ticks.reverse();\n            this.start = this.max;\n            this.end = this.min;\n        } else {\n            this.start = this.min;\n            this.end = this.max;\n        }\n        return ticks;\n    }\n    getLabelForValue(value) {\n        return value === undefined ? \"0\" : (0, $c7mKY.o)(value, this.chart.options.locale, this.options.ticks.format);\n    }\n    configure() {\n        const start = this.min;\n        super.configure();\n        this._startValue = (0, $c7mKY.aM)(start);\n        this._valueRange = (0, $c7mKY.aM)(this.max) - (0, $c7mKY.aM)(start);\n    }\n    getPixelForValue(value) {\n        if (value === undefined || value === 0) value = this.min;\n        if (value === null || isNaN(value)) return NaN;\n        return this.getPixelForDecimal(value === this.min ? 0 : ((0, $c7mKY.aM)(value) - this._startValue) / this._valueRange);\n    }\n    getValueForPixel(pixel) {\n        const decimal = this.getDecimalForPixel(pixel);\n        return Math.pow(10, this._startValue + decimal * this._valueRange);\n    }\n}\nfunction $216d2bdc6f281bf6$var$getTickBackdropHeight(opts) {\n    const tickOpts = opts.ticks;\n    if (tickOpts.display && opts.display) {\n        const padding = (0, $c7mKY.E)(tickOpts.backdropPadding);\n        return (0, $c7mKY.v)(tickOpts.font && tickOpts.font.size, (0, $c7mKY.d).font.size) + padding.height;\n    }\n    return 0;\n}\nfunction $216d2bdc6f281bf6$var$measureLabelSize(ctx, font, label) {\n    label = (0, $c7mKY.b)(label) ? label : [\n        label\n    ];\n    return {\n        w: (0, $c7mKY.aN)(ctx, font.string, label),\n        h: label.length * font.lineHeight\n    };\n}\nfunction $216d2bdc6f281bf6$var$determineLimits(angle, pos, size, min, max) {\n    if (angle === min || angle === max) return {\n        start: pos - size / 2,\n        end: pos + size / 2\n    };\n    else if (angle < min || angle > max) return {\n        start: pos - size,\n        end: pos\n    };\n    return {\n        start: pos,\n        end: pos + size\n    };\n}\nfunction $216d2bdc6f281bf6$var$fitWithPointLabels(scale) {\n    const orig = {\n        l: scale.left + scale._padding.left,\n        r: scale.right - scale._padding.right,\n        t: scale.top + scale._padding.top,\n        b: scale.bottom - scale._padding.bottom\n    };\n    const limits = Object.assign({}, orig);\n    const labelSizes = [];\n    const padding = [];\n    const valueCount = scale._pointLabels.length;\n    const pointLabelOpts = scale.options.pointLabels;\n    const additionalAngle = pointLabelOpts.centerPointLabels ? (0, $c7mKY.P) / valueCount : 0;\n    for(let i = 0; i < valueCount; i++){\n        const opts = pointLabelOpts.setContext(scale.getPointLabelContext(i));\n        padding[i] = opts.padding;\n        const pointPosition = scale.getPointPosition(i, scale.drawingArea + padding[i], additionalAngle);\n        const plFont = (0, $c7mKY.a0)(opts.font);\n        const textSize = $216d2bdc6f281bf6$var$measureLabelSize(scale.ctx, plFont, scale._pointLabels[i]);\n        labelSizes[i] = textSize;\n        const angleRadians = (0, $c7mKY.ay)(scale.getIndexAngle(i) + additionalAngle);\n        const angle = Math.round((0, $c7mKY.U)(angleRadians));\n        const hLimits = $216d2bdc6f281bf6$var$determineLimits(angle, pointPosition.x, textSize.w, 0, 180);\n        const vLimits = $216d2bdc6f281bf6$var$determineLimits(angle, pointPosition.y, textSize.h, 90, 270);\n        $216d2bdc6f281bf6$var$updateLimits(limits, orig, angleRadians, hLimits, vLimits);\n    }\n    scale.setCenterPoint(orig.l - limits.l, limits.r - orig.r, orig.t - limits.t, limits.b - orig.b);\n    scale._pointLabelItems = $216d2bdc6f281bf6$var$buildPointLabelItems(scale, labelSizes, padding);\n}\nfunction $216d2bdc6f281bf6$var$updateLimits(limits, orig, angle, hLimits, vLimits) {\n    const sin = Math.abs(Math.sin(angle));\n    const cos = Math.abs(Math.cos(angle));\n    let x = 0;\n    let y = 0;\n    if (hLimits.start < orig.l) {\n        x = (orig.l - hLimits.start) / sin;\n        limits.l = Math.min(limits.l, orig.l - x);\n    } else if (hLimits.end > orig.r) {\n        x = (hLimits.end - orig.r) / sin;\n        limits.r = Math.max(limits.r, orig.r + x);\n    }\n    if (vLimits.start < orig.t) {\n        y = (orig.t - vLimits.start) / cos;\n        limits.t = Math.min(limits.t, orig.t - y);\n    } else if (vLimits.end > orig.b) {\n        y = (vLimits.end - orig.b) / cos;\n        limits.b = Math.max(limits.b, orig.b + y);\n    }\n}\nfunction $216d2bdc6f281bf6$var$createPointLabelItem(scale, index, itemOpts) {\n    const outerDistance = scale.drawingArea;\n    const { extra: extra, additionalAngle: additionalAngle, padding: padding, size: size } = itemOpts;\n    const pointLabelPosition = scale.getPointPosition(index, outerDistance + extra + padding, additionalAngle);\n    const angle = Math.round((0, $c7mKY.U)((0, $c7mKY.ay)(pointLabelPosition.angle + (0, $c7mKY.H))));\n    const y = $216d2bdc6f281bf6$var$yForAngle(pointLabelPosition.y, size.h, angle);\n    const textAlign = $216d2bdc6f281bf6$var$getTextAlignForAngle(angle);\n    const left = $216d2bdc6f281bf6$var$leftForTextAlign(pointLabelPosition.x, size.w, textAlign);\n    return {\n        visible: true,\n        x: pointLabelPosition.x,\n        y: y,\n        textAlign: textAlign,\n        left: left,\n        top: y,\n        right: left + size.w,\n        bottom: y + size.h\n    };\n}\nfunction $216d2bdc6f281bf6$var$isNotOverlapped(item, area) {\n    if (!area) return true;\n    const { left: left, top: top, right: right, bottom: bottom } = item;\n    const apexesInArea = (0, $c7mKY.C)({\n        x: left,\n        y: top\n    }, area) || (0, $c7mKY.C)({\n        x: left,\n        y: bottom\n    }, area) || (0, $c7mKY.C)({\n        x: right,\n        y: top\n    }, area) || (0, $c7mKY.C)({\n        x: right,\n        y: bottom\n    }, area);\n    return !apexesInArea;\n}\nfunction $216d2bdc6f281bf6$var$buildPointLabelItems(scale, labelSizes, padding) {\n    const items = [];\n    const valueCount = scale._pointLabels.length;\n    const opts = scale.options;\n    const { centerPointLabels: centerPointLabels, display: display } = opts.pointLabels;\n    const itemOpts = {\n        extra: $216d2bdc6f281bf6$var$getTickBackdropHeight(opts) / 2,\n        additionalAngle: centerPointLabels ? (0, $c7mKY.P) / valueCount : 0\n    };\n    let area;\n    for(let i = 0; i < valueCount; i++){\n        itemOpts.padding = padding[i];\n        itemOpts.size = labelSizes[i];\n        const item = $216d2bdc6f281bf6$var$createPointLabelItem(scale, i, itemOpts);\n        items.push(item);\n        if (display === \"auto\") {\n            item.visible = $216d2bdc6f281bf6$var$isNotOverlapped(item, area);\n            if (item.visible) area = item;\n        }\n    }\n    return items;\n}\nfunction $216d2bdc6f281bf6$var$getTextAlignForAngle(angle) {\n    if (angle === 0 || angle === 180) return \"center\";\n    else if (angle < 180) return \"left\";\n    return \"right\";\n}\nfunction $216d2bdc6f281bf6$var$leftForTextAlign(x, w, align) {\n    if (align === \"right\") x -= w;\n    else if (align === \"center\") x -= w / 2;\n    return x;\n}\nfunction $216d2bdc6f281bf6$var$yForAngle(y, h, angle) {\n    if (angle === 90 || angle === 270) y -= h / 2;\n    else if (angle > 270 || angle < 90) y -= h;\n    return y;\n}\nfunction $216d2bdc6f281bf6$var$drawPointLabelBox(ctx, opts, item) {\n    const { left: left, top: top, right: right, bottom: bottom } = item;\n    const { backdropColor: backdropColor } = opts;\n    if (!(0, $c7mKY.k)(backdropColor)) {\n        const borderRadius = (0, $c7mKY.aw)(opts.borderRadius);\n        const padding = (0, $c7mKY.E)(opts.backdropPadding);\n        ctx.fillStyle = backdropColor;\n        const backdropLeft = left - padding.left;\n        const backdropTop = top - padding.top;\n        const backdropWidth = right - left + padding.width;\n        const backdropHeight = bottom - top + padding.height;\n        if (Object.values(borderRadius).some((v)=>v !== 0)) {\n            ctx.beginPath();\n            (0, $c7mKY.au)(ctx, {\n                x: backdropLeft,\n                y: backdropTop,\n                w: backdropWidth,\n                h: backdropHeight,\n                radius: borderRadius\n            });\n            ctx.fill();\n        } else ctx.fillRect(backdropLeft, backdropTop, backdropWidth, backdropHeight);\n    }\n}\nfunction $216d2bdc6f281bf6$var$drawPointLabels(scale, labelCount) {\n    const { ctx: ctx, options: { pointLabels: pointLabels } } = scale;\n    for(let i = labelCount - 1; i >= 0; i--){\n        const item = scale._pointLabelItems[i];\n        if (!item.visible) continue;\n        const optsAtIndex = pointLabels.setContext(scale.getPointLabelContext(i));\n        $216d2bdc6f281bf6$var$drawPointLabelBox(ctx, optsAtIndex, item);\n        const plFont = (0, $c7mKY.a0)(optsAtIndex.font);\n        const { x: x, y: y, textAlign: textAlign } = item;\n        (0, $c7mKY.Z)(ctx, scale._pointLabels[i], x, y + plFont.lineHeight / 2, plFont, {\n            color: optsAtIndex.color,\n            textAlign: textAlign,\n            textBaseline: \"middle\"\n        });\n    }\n}\nfunction $216d2bdc6f281bf6$var$pathRadiusLine(scale, radius, circular, labelCount) {\n    const { ctx: ctx } = scale;\n    if (circular) ctx.arc(scale.xCenter, scale.yCenter, radius, 0, (0, $c7mKY.T));\n    else {\n        let pointPosition = scale.getPointPosition(0, radius);\n        ctx.moveTo(pointPosition.x, pointPosition.y);\n        for(let i = 1; i < labelCount; i++){\n            pointPosition = scale.getPointPosition(i, radius);\n            ctx.lineTo(pointPosition.x, pointPosition.y);\n        }\n    }\n}\nfunction $216d2bdc6f281bf6$var$drawRadiusLine(scale, gridLineOpts, radius, labelCount, borderOpts) {\n    const ctx = scale.ctx;\n    const circular = gridLineOpts.circular;\n    const { color: color, lineWidth: lineWidth } = gridLineOpts;\n    if (!circular && !labelCount || !color || !lineWidth || radius < 0) return;\n    ctx.save();\n    ctx.strokeStyle = color;\n    ctx.lineWidth = lineWidth;\n    ctx.setLineDash(borderOpts.dash || []);\n    ctx.lineDashOffset = borderOpts.dashOffset;\n    ctx.beginPath();\n    $216d2bdc6f281bf6$var$pathRadiusLine(scale, radius, circular, labelCount);\n    ctx.closePath();\n    ctx.stroke();\n    ctx.restore();\n}\nfunction $216d2bdc6f281bf6$var$createPointLabelContext(parent, index, label) {\n    return (0, $c7mKY.j)(parent, {\n        label: label,\n        index: index,\n        type: \"pointLabel\"\n    });\n}\nclass $216d2bdc6f281bf6$export$cfafc36d95386d38 extends $216d2bdc6f281bf6$var$LinearScaleBase {\n    static id = \"radialLinear\";\n    static defaults = {\n        display: true,\n        animate: true,\n        position: \"chartArea\",\n        angleLines: {\n            display: true,\n            lineWidth: 1,\n            borderDash: [],\n            borderDashOffset: 0.0\n        },\n        grid: {\n            circular: false\n        },\n        startAngle: 0,\n        ticks: {\n            showLabelBackdrop: true,\n            callback: (0, $c7mKY.aL).formatters.numeric\n        },\n        pointLabels: {\n            backdropColor: undefined,\n            backdropPadding: 2,\n            display: true,\n            font: {\n                size: 10\n            },\n            callback (label) {\n                return label;\n            },\n            padding: 5,\n            centerPointLabels: false\n        }\n    };\n    static defaultRoutes = {\n        \"angleLines.color\": \"borderColor\",\n        \"pointLabels.color\": \"color\",\n        \"ticks.color\": \"color\"\n    };\n    static descriptors = {\n        angleLines: {\n            _fallback: \"grid\"\n        }\n    };\n    constructor(cfg){\n        super(cfg);\n        this.xCenter = undefined;\n        this.yCenter = undefined;\n        this.drawingArea = undefined;\n        this._pointLabels = [];\n        this._pointLabelItems = [];\n    }\n    setDimensions() {\n        const padding = this._padding = (0, $c7mKY.E)($216d2bdc6f281bf6$var$getTickBackdropHeight(this.options) / 2);\n        const w = this.width = this.maxWidth - padding.width;\n        const h = this.height = this.maxHeight - padding.height;\n        this.xCenter = Math.floor(this.left + w / 2 + padding.left);\n        this.yCenter = Math.floor(this.top + h / 2 + padding.top);\n        this.drawingArea = Math.floor(Math.min(w, h) / 2);\n    }\n    determineDataLimits() {\n        const { min: min, max: max } = this.getMinMax(false);\n        this.min = (0, $c7mKY.g)(min) && !isNaN(min) ? min : 0;\n        this.max = (0, $c7mKY.g)(max) && !isNaN(max) ? max : 0;\n        this.handleTickRangeOptions();\n    }\n    computeTickLimit() {\n        return Math.ceil(this.drawingArea / $216d2bdc6f281bf6$var$getTickBackdropHeight(this.options));\n    }\n    generateTickLabels(ticks) {\n        $216d2bdc6f281bf6$var$LinearScaleBase.prototype.generateTickLabels.call(this, ticks);\n        this._pointLabels = this.getLabels().map((value, index)=>{\n            const label = (0, $c7mKY.Q)(this.options.pointLabels.callback, [\n                value,\n                index\n            ], this);\n            return label || label === 0 ? label : \"\";\n        }).filter((v, i)=>this.chart.getDataVisibility(i));\n    }\n    fit() {\n        const opts = this.options;\n        if (opts.display && opts.pointLabels.display) $216d2bdc6f281bf6$var$fitWithPointLabels(this);\n        else this.setCenterPoint(0, 0, 0, 0);\n    }\n    setCenterPoint(leftMovement, rightMovement, topMovement, bottomMovement) {\n        this.xCenter += Math.floor((leftMovement - rightMovement) / 2);\n        this.yCenter += Math.floor((topMovement - bottomMovement) / 2);\n        this.drawingArea -= Math.min(this.drawingArea / 2, Math.max(leftMovement, rightMovement, topMovement, bottomMovement));\n    }\n    getIndexAngle(index) {\n        const angleMultiplier = (0, $c7mKY.T) / (this._pointLabels.length || 1);\n        const startAngle = this.options.startAngle || 0;\n        return (0, $c7mKY.ay)(index * angleMultiplier + (0, $c7mKY.t)(startAngle));\n    }\n    getDistanceFromCenterForValue(value) {\n        if ((0, $c7mKY.k)(value)) return NaN;\n        const scalingFactor = this.drawingArea / (this.max - this.min);\n        if (this.options.reverse) return (this.max - value) * scalingFactor;\n        return (value - this.min) * scalingFactor;\n    }\n    getValueForDistanceFromCenter(distance) {\n        if ((0, $c7mKY.k)(distance)) return NaN;\n        const scaledDistance = distance / (this.drawingArea / (this.max - this.min));\n        return this.options.reverse ? this.max - scaledDistance : this.min + scaledDistance;\n    }\n    getPointLabelContext(index) {\n        const pointLabels = this._pointLabels || [];\n        if (index >= 0 && index < pointLabels.length) {\n            const pointLabel = pointLabels[index];\n            return $216d2bdc6f281bf6$var$createPointLabelContext(this.getContext(), index, pointLabel);\n        }\n    }\n    getPointPosition(index, distanceFromCenter, additionalAngle = 0) {\n        const angle = this.getIndexAngle(index) - (0, $c7mKY.H) + additionalAngle;\n        return {\n            x: Math.cos(angle) * distanceFromCenter + this.xCenter,\n            y: Math.sin(angle) * distanceFromCenter + this.yCenter,\n            angle: angle\n        };\n    }\n    getPointPositionForValue(index, value) {\n        return this.getPointPosition(index, this.getDistanceFromCenterForValue(value));\n    }\n    getBasePosition(index) {\n        return this.getPointPositionForValue(index || 0, this.getBaseValue());\n    }\n    getPointLabelPosition(index) {\n        const { left: left, top: top, right: right, bottom: bottom } = this._pointLabelItems[index];\n        return {\n            left: left,\n            top: top,\n            right: right,\n            bottom: bottom\n        };\n    }\n    drawBackground() {\n        const { backgroundColor: backgroundColor, grid: { circular: circular } } = this.options;\n        if (backgroundColor) {\n            const ctx = this.ctx;\n            ctx.save();\n            ctx.beginPath();\n            $216d2bdc6f281bf6$var$pathRadiusLine(this, this.getDistanceFromCenterForValue(this._endValue), circular, this._pointLabels.length);\n            ctx.closePath();\n            ctx.fillStyle = backgroundColor;\n            ctx.fill();\n            ctx.restore();\n        }\n    }\n    drawGrid() {\n        const ctx = this.ctx;\n        const opts = this.options;\n        const { angleLines: angleLines, grid: grid, border: border } = opts;\n        const labelCount = this._pointLabels.length;\n        let i, offset, position;\n        if (opts.pointLabels.display) $216d2bdc6f281bf6$var$drawPointLabels(this, labelCount);\n        if (grid.display) this.ticks.forEach((tick, index)=>{\n            if (index !== 0 || index === 0 && this.min < 0) {\n                offset = this.getDistanceFromCenterForValue(tick.value);\n                const context = this.getContext(index);\n                const optsAtIndex = grid.setContext(context);\n                const optsAtIndexBorder = border.setContext(context);\n                $216d2bdc6f281bf6$var$drawRadiusLine(this, optsAtIndex, offset, labelCount, optsAtIndexBorder);\n            }\n        });\n        if (angleLines.display) {\n            ctx.save();\n            for(i = labelCount - 1; i >= 0; i--){\n                const optsAtIndex = angleLines.setContext(this.getPointLabelContext(i));\n                const { color: color, lineWidth: lineWidth } = optsAtIndex;\n                if (!lineWidth || !color) continue;\n                ctx.lineWidth = lineWidth;\n                ctx.strokeStyle = color;\n                ctx.setLineDash(optsAtIndex.borderDash);\n                ctx.lineDashOffset = optsAtIndex.borderDashOffset;\n                offset = this.getDistanceFromCenterForValue(opts.reverse ? this.min : this.max);\n                position = this.getPointPosition(i, offset);\n                ctx.beginPath();\n                ctx.moveTo(this.xCenter, this.yCenter);\n                ctx.lineTo(position.x, position.y);\n                ctx.stroke();\n            }\n            ctx.restore();\n        }\n    }\n    drawBorder() {}\n    drawLabels() {\n        const ctx = this.ctx;\n        const opts = this.options;\n        const tickOpts = opts.ticks;\n        if (!tickOpts.display) return;\n        const startAngle = this.getIndexAngle(0);\n        let offset, width;\n        ctx.save();\n        ctx.translate(this.xCenter, this.yCenter);\n        ctx.rotate(startAngle);\n        ctx.textAlign = \"center\";\n        ctx.textBaseline = \"middle\";\n        this.ticks.forEach((tick, index)=>{\n            if (index === 0 && this.min >= 0 && !opts.reverse) return;\n            const optsAtIndex = tickOpts.setContext(this.getContext(index));\n            const tickFont = (0, $c7mKY.a0)(optsAtIndex.font);\n            offset = this.getDistanceFromCenterForValue(this.ticks[index].value);\n            if (optsAtIndex.showLabelBackdrop) {\n                ctx.font = tickFont.string;\n                width = ctx.measureText(tick.label).width;\n                ctx.fillStyle = optsAtIndex.backdropColor;\n                const padding = (0, $c7mKY.E)(optsAtIndex.backdropPadding);\n                ctx.fillRect(-width / 2 - padding.left, -offset - tickFont.size / 2 - padding.top, width + padding.width, tickFont.size + padding.height);\n            }\n            (0, $c7mKY.Z)(ctx, tick.label, 0, -offset, tickFont, {\n                color: optsAtIndex.color,\n                strokeColor: optsAtIndex.textStrokeColor,\n                strokeWidth: optsAtIndex.textStrokeWidth\n            });\n        });\n        ctx.restore();\n    }\n    drawTitle() {}\n}\nconst $216d2bdc6f281bf6$var$INTERVALS = {\n    millisecond: {\n        common: true,\n        size: 1,\n        steps: 1000\n    },\n    second: {\n        common: true,\n        size: 1000,\n        steps: 60\n    },\n    minute: {\n        common: true,\n        size: 60000,\n        steps: 60\n    },\n    hour: {\n        common: true,\n        size: 3600000,\n        steps: 24\n    },\n    day: {\n        common: true,\n        size: 86400000,\n        steps: 30\n    },\n    week: {\n        common: false,\n        size: 604800000,\n        steps: 4\n    },\n    month: {\n        common: true,\n        size: 2.628e9,\n        steps: 12\n    },\n    quarter: {\n        common: false,\n        size: 7.884e9,\n        steps: 4\n    },\n    year: {\n        common: true,\n        size: 3.154e10\n    }\n};\nconst $216d2bdc6f281bf6$var$UNITS = /* #__PURE__ */ Object.keys($216d2bdc6f281bf6$var$INTERVALS);\nfunction $216d2bdc6f281bf6$var$sorter(a, b) {\n    return a - b;\n}\nfunction $216d2bdc6f281bf6$var$parse(scale, input) {\n    if ((0, $c7mKY.k)(input)) return null;\n    const adapter = scale._adapter;\n    const { parser: parser, round: round, isoWeekday: isoWeekday } = scale._parseOpts;\n    let value = input;\n    if (typeof parser === \"function\") value = parser(value);\n    if (!(0, $c7mKY.g)(value)) value = typeof parser === \"string\" ? adapter.parse(value, parser) : adapter.parse(value);\n    if (value === null) return null;\n    if (round) value = round === \"week\" && ((0, $c7mKY.x)(isoWeekday) || isoWeekday === true) ? adapter.startOf(value, \"isoWeek\", isoWeekday) : adapter.startOf(value, round);\n    return +value;\n}\nfunction $216d2bdc6f281bf6$var$determineUnitForAutoTicks(minUnit, min, max, capacity) {\n    const ilen = $216d2bdc6f281bf6$var$UNITS.length;\n    for(let i = $216d2bdc6f281bf6$var$UNITS.indexOf(minUnit); i < ilen - 1; ++i){\n        const interval = $216d2bdc6f281bf6$var$INTERVALS[$216d2bdc6f281bf6$var$UNITS[i]];\n        const factor = interval.steps ? interval.steps : Number.MAX_SAFE_INTEGER;\n        if (interval.common && Math.ceil((max - min) / (factor * interval.size)) <= capacity) return $216d2bdc6f281bf6$var$UNITS[i];\n    }\n    return $216d2bdc6f281bf6$var$UNITS[ilen - 1];\n}\nfunction $216d2bdc6f281bf6$var$determineUnitForFormatting(scale, numTicks, minUnit, min, max) {\n    for(let i = $216d2bdc6f281bf6$var$UNITS.length - 1; i >= $216d2bdc6f281bf6$var$UNITS.indexOf(minUnit); i--){\n        const unit = $216d2bdc6f281bf6$var$UNITS[i];\n        if ($216d2bdc6f281bf6$var$INTERVALS[unit].common && scale._adapter.diff(max, min, unit) >= numTicks - 1) return unit;\n    }\n    return $216d2bdc6f281bf6$var$UNITS[minUnit ? $216d2bdc6f281bf6$var$UNITS.indexOf(minUnit) : 0];\n}\nfunction $216d2bdc6f281bf6$var$determineMajorUnit(unit) {\n    for(let i = $216d2bdc6f281bf6$var$UNITS.indexOf(unit) + 1, ilen = $216d2bdc6f281bf6$var$UNITS.length; i < ilen; ++i){\n        if ($216d2bdc6f281bf6$var$INTERVALS[$216d2bdc6f281bf6$var$UNITS[i]].common) return $216d2bdc6f281bf6$var$UNITS[i];\n    }\n}\nfunction $216d2bdc6f281bf6$var$addTick(ticks, time, timestamps) {\n    if (!timestamps) ticks[time] = true;\n    else if (timestamps.length) {\n        const { lo: lo, hi: hi } = (0, $c7mKY.aP)(timestamps, time);\n        const timestamp = timestamps[lo] >= time ? timestamps[lo] : timestamps[hi];\n        ticks[timestamp] = true;\n    }\n}\nfunction $216d2bdc6f281bf6$var$setMajorTicks(scale, ticks, map, majorUnit) {\n    const adapter = scale._adapter;\n    const first = +adapter.startOf(ticks[0].value, majorUnit);\n    const last = ticks[ticks.length - 1].value;\n    let major, index;\n    for(major = first; major <= last; major = +adapter.add(major, 1, majorUnit)){\n        index = map[major];\n        if (index >= 0) ticks[index].major = true;\n    }\n    return ticks;\n}\nfunction $216d2bdc6f281bf6$var$ticksFromTimestamps(scale, values, majorUnit) {\n    const ticks = [];\n    const map = {};\n    const ilen = values.length;\n    let i, value;\n    for(i = 0; i < ilen; ++i){\n        value = values[i];\n        map[value] = i;\n        ticks.push({\n            value: value,\n            major: false\n        });\n    }\n    return ilen === 0 || !majorUnit ? ticks : $216d2bdc6f281bf6$var$setMajorTicks(scale, ticks, map, majorUnit);\n}\nclass $216d2bdc6f281bf6$export$a894c72689ff3ec extends $216d2bdc6f281bf6$export$d60cfc58d3c358b6 {\n    static id = \"time\";\n    static defaults = {\n        bounds: \"data\",\n        adapters: {},\n        time: {\n            parser: false,\n            unit: false,\n            round: false,\n            isoWeekday: false,\n            minUnit: \"millisecond\",\n            displayFormats: {}\n        },\n        ticks: {\n            source: \"auto\",\n            callback: false,\n            major: {\n                enabled: false\n            }\n        }\n    };\n    constructor(props){\n        super(props);\n        this._cache = {\n            data: [],\n            labels: [],\n            all: []\n        };\n        this._unit = \"day\";\n        this._majorUnit = undefined;\n        this._offsets = {};\n        this._normalized = false;\n        this._parseOpts = undefined;\n    }\n    init(scaleOpts, opts = {}) {\n        const time = scaleOpts.time || (scaleOpts.time = {});\n        const adapter = this._adapter = new $216d2bdc6f281bf6$export$f32766ea09ec8bc4._date(scaleOpts.adapters.date);\n        adapter.init(opts);\n        (0, $c7mKY.ab)(time.displayFormats, adapter.formats());\n        this._parseOpts = {\n            parser: time.parser,\n            round: time.round,\n            isoWeekday: time.isoWeekday\n        };\n        super.init(scaleOpts);\n        this._normalized = opts.normalized;\n    }\n    parse(raw, index) {\n        if (raw === undefined) return null;\n        return $216d2bdc6f281bf6$var$parse(this, raw);\n    }\n    beforeLayout() {\n        super.beforeLayout();\n        this._cache = {\n            data: [],\n            labels: [],\n            all: []\n        };\n    }\n    determineDataLimits() {\n        const options = this.options;\n        const adapter = this._adapter;\n        const unit = options.time.unit || \"day\";\n        let { min: min, max: max, minDefined: minDefined, maxDefined: maxDefined } = this.getUserBounds();\n        function _applyBounds(bounds) {\n            if (!minDefined && !isNaN(bounds.min)) min = Math.min(min, bounds.min);\n            if (!maxDefined && !isNaN(bounds.max)) max = Math.max(max, bounds.max);\n        }\n        if (!minDefined || !maxDefined) {\n            _applyBounds(this._getLabelBounds());\n            if (options.bounds !== \"ticks\" || options.ticks.source !== \"labels\") _applyBounds(this.getMinMax(false));\n        }\n        min = (0, $c7mKY.g)(min) && !isNaN(min) ? min : +adapter.startOf(Date.now(), unit);\n        max = (0, $c7mKY.g)(max) && !isNaN(max) ? max : +adapter.endOf(Date.now(), unit) + 1;\n        this.min = Math.min(min, max - 1);\n        this.max = Math.max(min + 1, max);\n    }\n    _getLabelBounds() {\n        const arr = this.getLabelTimestamps();\n        let min = Number.POSITIVE_INFINITY;\n        let max = Number.NEGATIVE_INFINITY;\n        if (arr.length) {\n            min = arr[0];\n            max = arr[arr.length - 1];\n        }\n        return {\n            min: min,\n            max: max\n        };\n    }\n    buildTicks() {\n        const options = this.options;\n        const timeOpts = options.time;\n        const tickOpts = options.ticks;\n        const timestamps = tickOpts.source === \"labels\" ? this.getLabelTimestamps() : this._generate();\n        if (options.bounds === \"ticks\" && timestamps.length) {\n            this.min = this._userMin || timestamps[0];\n            this.max = this._userMax || timestamps[timestamps.length - 1];\n        }\n        const min = this.min;\n        const max = this.max;\n        const ticks = (0, $c7mKY.aO)(timestamps, min, max);\n        this._unit = timeOpts.unit || (tickOpts.autoSkip ? $216d2bdc6f281bf6$var$determineUnitForAutoTicks(timeOpts.minUnit, this.min, this.max, this._getLabelCapacity(min)) : $216d2bdc6f281bf6$var$determineUnitForFormatting(this, ticks.length, timeOpts.minUnit, this.min, this.max));\n        this._majorUnit = !tickOpts.major.enabled || this._unit === \"year\" ? undefined : $216d2bdc6f281bf6$var$determineMajorUnit(this._unit);\n        this.initOffsets(timestamps);\n        if (options.reverse) ticks.reverse();\n        return $216d2bdc6f281bf6$var$ticksFromTimestamps(this, ticks, this._majorUnit);\n    }\n    afterAutoSkip() {\n        if (this.options.offsetAfterAutoskip) this.initOffsets(this.ticks.map((tick)=>+tick.value));\n    }\n    initOffsets(timestamps = []) {\n        let start = 0;\n        let end = 0;\n        let first, last;\n        if (this.options.offset && timestamps.length) {\n            first = this.getDecimalForValue(timestamps[0]);\n            if (timestamps.length === 1) start = 1 - first;\n            else start = (this.getDecimalForValue(timestamps[1]) - first) / 2;\n            last = this.getDecimalForValue(timestamps[timestamps.length - 1]);\n            if (timestamps.length === 1) end = last;\n            else end = (last - this.getDecimalForValue(timestamps[timestamps.length - 2])) / 2;\n        }\n        const limit = timestamps.length < 3 ? 0.5 : 0.25;\n        start = (0, $c7mKY.S)(start, 0, limit);\n        end = (0, $c7mKY.S)(end, 0, limit);\n        this._offsets = {\n            start: start,\n            end: end,\n            factor: 1 / (start + 1 + end)\n        };\n    }\n    _generate() {\n        const adapter = this._adapter;\n        const min = this.min;\n        const max = this.max;\n        const options = this.options;\n        const timeOpts = options.time;\n        const minor = timeOpts.unit || $216d2bdc6f281bf6$var$determineUnitForAutoTicks(timeOpts.minUnit, min, max, this._getLabelCapacity(min));\n        const stepSize = (0, $c7mKY.v)(options.ticks.stepSize, 1);\n        const weekday = minor === \"week\" ? timeOpts.isoWeekday : false;\n        const hasWeekday = (0, $c7mKY.x)(weekday) || weekday === true;\n        const ticks = {};\n        let first = min;\n        let time, count;\n        if (hasWeekday) first = +adapter.startOf(first, \"isoWeek\", weekday);\n        first = +adapter.startOf(first, hasWeekday ? \"day\" : minor);\n        if (adapter.diff(max, min, minor) > 100000 * stepSize) throw new Error(min + \" and \" + max + \" are too far apart with stepSize of \" + stepSize + \" \" + minor);\n        const timestamps = options.ticks.source === \"data\" && this.getDataTimestamps();\n        for(time = first, count = 0; time < max; time = +adapter.add(time, stepSize, minor), count++)$216d2bdc6f281bf6$var$addTick(ticks, time, timestamps);\n        if (time === max || options.bounds === \"ticks\" || count === 1) $216d2bdc6f281bf6$var$addTick(ticks, time, timestamps);\n        return Object.keys(ticks).sort($216d2bdc6f281bf6$var$sorter).map((x)=>+x);\n    }\n    getLabelForValue(value) {\n        const adapter = this._adapter;\n        const timeOpts = this.options.time;\n        if (timeOpts.tooltipFormat) return adapter.format(value, timeOpts.tooltipFormat);\n        return adapter.format(value, timeOpts.displayFormats.datetime);\n    }\n    format(value, format) {\n        const options = this.options;\n        const formats = options.time.displayFormats;\n        const unit = this._unit;\n        const fmt = format || formats[unit];\n        return this._adapter.format(value, fmt);\n    }\n    _tickFormatFunction(time, index, ticks, format) {\n        const options = this.options;\n        const formatter = options.ticks.callback;\n        if (formatter) return (0, $c7mKY.Q)(formatter, [\n            time,\n            index,\n            ticks\n        ], this);\n        const formats = options.time.displayFormats;\n        const unit = this._unit;\n        const majorUnit = this._majorUnit;\n        const minorFormat = unit && formats[unit];\n        const majorFormat = majorUnit && formats[majorUnit];\n        const tick = ticks[index];\n        const major = majorUnit && majorFormat && tick && tick.major;\n        return this._adapter.format(time, format || (major ? majorFormat : minorFormat));\n    }\n    generateTickLabels(ticks) {\n        let i, ilen, tick;\n        for(i = 0, ilen = ticks.length; i < ilen; ++i){\n            tick = ticks[i];\n            tick.label = this._tickFormatFunction(tick.value, i, ticks);\n        }\n    }\n    getDecimalForValue(value) {\n        return value === null ? NaN : (value - this.min) / (this.max - this.min);\n    }\n    getPixelForValue(value) {\n        const offsets = this._offsets;\n        const pos = this.getDecimalForValue(value);\n        return this.getPixelForDecimal((offsets.start + pos) * offsets.factor);\n    }\n    getValueForPixel(pixel) {\n        const offsets = this._offsets;\n        const pos = this.getDecimalForPixel(pixel) / offsets.factor - offsets.end;\n        return this.min + pos * (this.max - this.min);\n    }\n    _getLabelSize(label) {\n        const ticksOpts = this.options.ticks;\n        const tickLabelWidth = this.ctx.measureText(label).width;\n        const angle = (0, $c7mKY.t)(this.isHorizontal() ? ticksOpts.maxRotation : ticksOpts.minRotation);\n        const cosRotation = Math.cos(angle);\n        const sinRotation = Math.sin(angle);\n        const tickFontSize = this._resolveTickFontOptions(0).size;\n        return {\n            w: tickLabelWidth * cosRotation + tickFontSize * sinRotation,\n            h: tickLabelWidth * sinRotation + tickFontSize * cosRotation\n        };\n    }\n    _getLabelCapacity(exampleTime) {\n        const timeOpts = this.options.time;\n        const displayFormats = timeOpts.displayFormats;\n        const format = displayFormats[timeOpts.unit] || displayFormats.millisecond;\n        const exampleLabel = this._tickFormatFunction(exampleTime, 0, $216d2bdc6f281bf6$var$ticksFromTimestamps(this, [\n            exampleTime\n        ], this._majorUnit), format);\n        const size = this._getLabelSize(exampleLabel);\n        const capacity = Math.floor(this.isHorizontal() ? this.width / size.w : this.height / size.h) - 1;\n        return capacity > 0 ? capacity : 1;\n    }\n    getDataTimestamps() {\n        let timestamps = this._cache.data || [];\n        let i, ilen;\n        if (timestamps.length) return timestamps;\n        const metas = this.getMatchingVisibleMetas();\n        if (this._normalized && metas.length) return this._cache.data = metas[0].controller.getAllParsedValues(this);\n        for(i = 0, ilen = metas.length; i < ilen; ++i)timestamps = timestamps.concat(metas[i].controller.getAllParsedValues(this));\n        return this._cache.data = this.normalize(timestamps);\n    }\n    getLabelTimestamps() {\n        const timestamps = this._cache.labels || [];\n        let i, ilen;\n        if (timestamps.length) return timestamps;\n        const labels = this.getLabels();\n        for(i = 0, ilen = labels.length; i < ilen; ++i)timestamps.push($216d2bdc6f281bf6$var$parse(this, labels[i]));\n        return this._cache.labels = this._normalized ? timestamps : this.normalize(timestamps);\n    }\n    normalize(values) {\n        return (0, $c7mKY._)(values.sort($216d2bdc6f281bf6$var$sorter));\n    }\n}\nfunction $216d2bdc6f281bf6$var$interpolate(table, val, reverse) {\n    let lo = 0;\n    let hi = table.length - 1;\n    let prevSource, nextSource, prevTarget, nextTarget;\n    if (reverse) {\n        if (val >= table[lo].pos && val <= table[hi].pos) ({ lo: lo, hi: hi } = (0, $c7mKY.B)(table, \"pos\", val));\n        ({ pos: prevSource, time: prevTarget } = table[lo]);\n        ({ pos: nextSource, time: nextTarget } = table[hi]);\n    } else {\n        if (val >= table[lo].time && val <= table[hi].time) ({ lo: lo, hi: hi } = (0, $c7mKY.B)(table, \"time\", val));\n        ({ time: prevSource, pos: prevTarget } = table[lo]);\n        ({ time: nextSource, pos: nextTarget } = table[hi]);\n    }\n    const span = nextSource - prevSource;\n    return span ? prevTarget + (nextTarget - prevTarget) * (val - prevSource) / span : prevTarget;\n}\nclass $216d2bdc6f281bf6$export$85df64a8eb6dc986 extends $216d2bdc6f281bf6$export$a894c72689ff3ec {\n    static id = \"timeseries\";\n    static defaults = $216d2bdc6f281bf6$export$a894c72689ff3ec.defaults;\n    constructor(props){\n        super(props);\n        this._table = [];\n        this._minPos = undefined;\n        this._tableRange = undefined;\n    }\n    initOffsets() {\n        const timestamps = this._getTimestampsForTable();\n        const table = this._table = this.buildLookupTable(timestamps);\n        this._minPos = $216d2bdc6f281bf6$var$interpolate(table, this.min);\n        this._tableRange = $216d2bdc6f281bf6$var$interpolate(table, this.max) - this._minPos;\n        super.initOffsets(timestamps);\n    }\n    buildLookupTable(timestamps) {\n        const { min: min, max: max } = this;\n        const items = [];\n        const table = [];\n        let i, ilen, prev, curr, next;\n        for(i = 0, ilen = timestamps.length; i < ilen; ++i){\n            curr = timestamps[i];\n            if (curr >= min && curr <= max) items.push(curr);\n        }\n        if (items.length < 2) return [\n            {\n                time: min,\n                pos: 0\n            },\n            {\n                time: max,\n                pos: 1\n            }\n        ];\n        for(i = 0, ilen = items.length; i < ilen; ++i){\n            next = items[i + 1];\n            prev = items[i - 1];\n            curr = items[i];\n            if (Math.round((next + prev) / 2) !== curr) table.push({\n                time: curr,\n                pos: i / (ilen - 1)\n            });\n        }\n        return table;\n    }\n    _generate() {\n        const min = this.min;\n        const max = this.max;\n        let timestamps = super.getDataTimestamps();\n        if (!timestamps.includes(min) || !timestamps.length) timestamps.splice(0, 0, min);\n        if (!timestamps.includes(max) || timestamps.length === 1) timestamps.push(max);\n        return timestamps.sort((a, b)=>a - b);\n    }\n    _getTimestampsForTable() {\n        let timestamps = this._cache.all || [];\n        if (timestamps.length) return timestamps;\n        const data = this.getDataTimestamps();\n        const label = this.getLabelTimestamps();\n        if (data.length && label.length) timestamps = this.normalize(data.concat(label));\n        else timestamps = data.length ? data : label;\n        timestamps = this._cache.all = timestamps;\n        return timestamps;\n    }\n    getDecimalForValue(value) {\n        return ($216d2bdc6f281bf6$var$interpolate(this._table, value) - this._minPos) / this._tableRange;\n    }\n    getValueForPixel(pixel) {\n        const offsets = this._offsets;\n        const decimal = this.getDecimalForPixel(pixel) / offsets.factor - offsets.end;\n        return $216d2bdc6f281bf6$var$interpolate(this._table, decimal * this._tableRange + this._minPos, true);\n    }\n}\nvar $216d2bdc6f281bf6$export$bcac1c16f1530ec2 = /*#__PURE__*/ Object.freeze({\n    __proto__: null,\n    CategoryScale: $216d2bdc6f281bf6$export$29e663ba4d09fe7,\n    LinearScale: $216d2bdc6f281bf6$export$e7f4e5e8656f0b93,\n    LogarithmicScale: $216d2bdc6f281bf6$export$85295eaf7cb3ac3e,\n    RadialLinearScale: $216d2bdc6f281bf6$export$cfafc36d95386d38,\n    TimeScale: $216d2bdc6f281bf6$export$a894c72689ff3ec,\n    TimeSeriesScale: $216d2bdc6f281bf6$export$85df64a8eb6dc986\n});\nconst $216d2bdc6f281bf6$export$e8959e79e3af550f = [\n    $216d2bdc6f281bf6$export$a6506504f799c5d5,\n    $216d2bdc6f281bf6$export$7a5d735b2ab6389d,\n    $216d2bdc6f281bf6$export$8b3ca321c77fdea6,\n    $216d2bdc6f281bf6$export$bcac1c16f1530ec2\n];\n\n});\nparcelRegister(\"c7mKY\", function(module, exports) {\n\n$parcel$export(module.exports, \"aF\", () => $8d27ca75da600b9c$export$cf2f7c5792f80b46);\n$parcel$export(module.exports, \"ac\", () => $8d27ca75da600b9c$export$2219238a014317b0);\n$parcel$export(module.exports, \"k\", () => $8d27ca75da600b9c$export$342063e11d6c3cad);\n$parcel$export(module.exports, \"b\", () => $8d27ca75da600b9c$export$8b22cf2602fb60ce);\n$parcel$export(module.exports, \"i\", () => $8d27ca75da600b9c$export$23f2a1d2818174ef);\n$parcel$export(module.exports, \"g\", () => $8d27ca75da600b9c$export$39b482c5e57630a8);\n$parcel$export(module.exports, \"O\", () => $8d27ca75da600b9c$export$c4ce752e73470fba);\n$parcel$export(module.exports, \"v\", () => $8d27ca75da600b9c$export$90a7f3efeed30595);\n$parcel$export(module.exports, \"m\", () => $8d27ca75da600b9c$export$953cecd6e717a553);\n$parcel$export(module.exports, \"n\", () => $8d27ca75da600b9c$export$7ccc53e8f1e7dfc5);\n$parcel$export(module.exports, \"Q\", () => $8d27ca75da600b9c$export$3722cfe417b6ed86);\n$parcel$export(module.exports, \"F\", () => $8d27ca75da600b9c$export$d66501df72047452);\n$parcel$export(module.exports, \"ah\", () => $8d27ca75da600b9c$export$995eb9fca571757);\n$parcel$export(module.exports, \"a4\", () => $8d27ca75da600b9c$export$efca4cbe5dd06740);\n$parcel$export(module.exports, \"ab\", () => $8d27ca75da600b9c$export$555508cbc6add439);\n$parcel$export(module.exports, \"f\", () => $8d27ca75da600b9c$export$2d1720544b23b823);\n$parcel$export(module.exports, \"a5\", () => $8d27ca75da600b9c$export$a8550f7dbe79f93a);\n$parcel$export(module.exports, \"h\", () => $8d27ca75da600b9c$export$dda1d9f60106f0e9);\n$parcel$export(module.exports, \"a7\", () => $8d27ca75da600b9c$export$a93c5207d687da10);\n$parcel$export(module.exports, \"ag\", () => $8d27ca75da600b9c$export$ee7c8ad385a60b7b);\n$parcel$export(module.exports, \"ai\", () => $8d27ca75da600b9c$export$f38c853ae54ed474);\n$parcel$export(module.exports, \"P\", () => $8d27ca75da600b9c$export$56c0d5a1e737357d);\n$parcel$export(module.exports, \"T\", () => $8d27ca75da600b9c$export$971d5caa766a69d7);\n$parcel$export(module.exports, \"b3\", () => $8d27ca75da600b9c$export$53c86fa97d611818);\n$parcel$export(module.exports, \"H\", () => $8d27ca75da600b9c$export$7f8ddf7c7c20b3cd);\n$parcel$export(module.exports, \"b4\", () => $8d27ca75da600b9c$export$39c1cc7c062529d4);\n$parcel$export(module.exports, \"b5\", () => $8d27ca75da600b9c$export$7a0bdf7d4a91ea88);\n$parcel$export(module.exports, \"aM\", () => $8d27ca75da600b9c$export$9f4f30ee63539e24);\n$parcel$export(module.exports, \"s\", () => $8d27ca75da600b9c$export$2408f22a0fab9ae5);\n$parcel$export(module.exports, \"aJ\", () => $8d27ca75da600b9c$export$a05254e7c3aeba6e);\n$parcel$export(module.exports, \"aH\", () => $8d27ca75da600b9c$export$a33b77bbdbb8366c);\n$parcel$export(module.exports, \"N\", () => $8d27ca75da600b9c$export$a07804094c3ecf2d);\n$parcel$export(module.exports, \"x\", () => $8d27ca75da600b9c$export$d141bba7fdc215a3);\n$parcel$export(module.exports, \"aI\", () => $8d27ca75da600b9c$export$b9a6b53f9be3734);\n$parcel$export(module.exports, \"aG\", () => $8d27ca75da600b9c$export$53a70dd1ebbae346);\n$parcel$export(module.exports, \"t\", () => $8d27ca75da600b9c$export$625550452a3fa3ec);\n$parcel$export(module.exports, \"U\", () => $8d27ca75da600b9c$export$3a6d5c9ae78a2c08);\n$parcel$export(module.exports, \"aK\", () => $8d27ca75da600b9c$export$23ebac1979863676);\n$parcel$export(module.exports, \"D\", () => $8d27ca75da600b9c$export$96f57966bedc81b4);\n$parcel$export(module.exports, \"aE\", () => $8d27ca75da600b9c$export$158acd800e1ef08b);\n$parcel$export(module.exports, \"ay\", () => $8d27ca75da600b9c$export$28f7fcd39efa255);\n$parcel$export(module.exports, \"p\", () => $8d27ca75da600b9c$export$ffb5f4729a158638);\n$parcel$export(module.exports, \"S\", () => $8d27ca75da600b9c$export$25ce5a424b770e84);\n$parcel$export(module.exports, \"W\", () => $8d27ca75da600b9c$export$71cec2538cb2c617);\n$parcel$export(module.exports, \"aj\", () => $8d27ca75da600b9c$export$3b513254972cfc9c);\n$parcel$export(module.exports, \"aP\", () => $8d27ca75da600b9c$export$2ed0fc6709e59212);\n$parcel$export(module.exports, \"B\", () => $8d27ca75da600b9c$export$ef35774e6d314e91);\n$parcel$export(module.exports, \"A\", () => $8d27ca75da600b9c$export$ebd11618f299a286);\n$parcel$export(module.exports, \"aO\", () => $8d27ca75da600b9c$export$c03999cb2f36933f);\n$parcel$export(module.exports, \"l\", () => $8d27ca75da600b9c$export$882b5998b3b9117c);\n$parcel$export(module.exports, \"u\", () => $8d27ca75da600b9c$export$3b14a55fb2447963);\n$parcel$export(module.exports, \"_\", () => $8d27ca75da600b9c$export$71511d61b312f219);\n$parcel$export(module.exports, \"r\", () => $8d27ca75da600b9c$export$43caf9889c228507);\n$parcel$export(module.exports, \"L\", () => $8d27ca75da600b9c$export$61196ced6d74a310);\n$parcel$export(module.exports, \"ad\", () => $8d27ca75da600b9c$export$4c3d22f3d993c33f);\n$parcel$export(module.exports, \"a1\", () => $8d27ca75da600b9c$export$3c2fa207a37baaea);\n$parcel$export(module.exports, \"a2\", () => $8d27ca75da600b9c$export$ce26c07117d59d6a);\n$parcel$export(module.exports, \"aB\", () => $8d27ca75da600b9c$export$9d398bebfec1c039);\n$parcel$export(module.exports, \"q\", () => $8d27ca75da600b9c$export$9e5f44173e64f162);\n$parcel$export(module.exports, \"w\", () => $8d27ca75da600b9c$export$efccba1c4a2ef57b);\n$parcel$export(module.exports, \"e\", () => $8d27ca75da600b9c$export$f1e1789686576879);\n$parcel$export(module.exports, \"c\", () => $8d27ca75da600b9c$export$db3b6bfb95261072);\n$parcel$export(module.exports, \"o\", () => $8d27ca75da600b9c$export$ae1af26003f05816);\n$parcel$export(module.exports, \"aL\", () => $8d27ca75da600b9c$export$91477dc880baac21);\n$parcel$export(module.exports, \"a3\", () => $8d27ca75da600b9c$export$6559d589eb85fbb6);\n$parcel$export(module.exports, \"a6\", () => $8d27ca75da600b9c$export$2e2af4578d910ddf);\n$parcel$export(module.exports, \"d\", () => $8d27ca75da600b9c$export$4368d992c4eafac0);\n$parcel$export(module.exports, \"V\", () => $8d27ca75da600b9c$export$e7c866399fa523f5);\n$parcel$export(module.exports, \"aN\", () => $8d27ca75da600b9c$export$faec65b429be379);\n$parcel$export(module.exports, \"X\", () => $8d27ca75da600b9c$export$78acf4525d8a74c4);\n$parcel$export(module.exports, \"af\", () => $8d27ca75da600b9c$export$c9170ad7d4cd7e57);\n$parcel$export(module.exports, \"at\", () => $8d27ca75da600b9c$export$493d36ec626b6698);\n$parcel$export(module.exports, \"aD\", () => $8d27ca75da600b9c$export$24baa2b76016ce0e);\n$parcel$export(module.exports, \"C\", () => $8d27ca75da600b9c$export$e7094788287c5e9b);\n$parcel$export(module.exports, \"Y\", () => $8d27ca75da600b9c$export$8743009a87fcb00f);\n$parcel$export(module.exports, \"$\", () => $8d27ca75da600b9c$export$3d8c2f653ac9d0b9);\n$parcel$export(module.exports, \"ar\", () => $8d27ca75da600b9c$export$d24c54395ce0c509);\n$parcel$export(module.exports, \"as\", () => $8d27ca75da600b9c$export$6554612db691658e);\n$parcel$export(module.exports, \"Z\", () => $8d27ca75da600b9c$export$dc98b0b04f4c7758);\n$parcel$export(module.exports, \"au\", () => $8d27ca75da600b9c$export$1fbe638ecf81657e);\n$parcel$export(module.exports, \"ak\", () => $8d27ca75da600b9c$export$21579262ef46735b);\n$parcel$export(module.exports, \"av\", () => $8d27ca75da600b9c$export$d66dc83d8cfc8dd);\n$parcel$export(module.exports, \"aw\", () => $8d27ca75da600b9c$export$92108d983e8ee699);\n$parcel$export(module.exports, \"E\", () => $8d27ca75da600b9c$export$a9c23c6ac3fc3eca);\n$parcel$export(module.exports, \"a0\", () => $8d27ca75da600b9c$export$34aec0b863436764);\n$parcel$export(module.exports, \"a\", () => $8d27ca75da600b9c$export$407448d2b89b1813);\n$parcel$export(module.exports, \"R\", () => $8d27ca75da600b9c$export$db202ddc8be9136);\n$parcel$export(module.exports, \"j\", () => $8d27ca75da600b9c$export$35e795649ee09318);\n$parcel$export(module.exports, \"a9\", () => $8d27ca75da600b9c$export$a9c996f45e5784d0);\n$parcel$export(module.exports, \"a8\", () => $8d27ca75da600b9c$export$c3950d9923825c02);\n$parcel$export(module.exports, \"aa\", () => $8d27ca75da600b9c$export$7910e0436ed8d1de);\n$parcel$export(module.exports, \"y\", () => $8d27ca75da600b9c$export$4a5767248b18ef41);\n$parcel$export(module.exports, \"al\", () => $8d27ca75da600b9c$export$ab83b03e4111b1d0);\n$parcel$export(module.exports, \"M\", () => $8d27ca75da600b9c$export$3a1a48c8f6ef640e);\n$parcel$export(module.exports, \"I\", () => $8d27ca75da600b9c$export$9bb611d729802a56);\n$parcel$export(module.exports, \"z\", () => $8d27ca75da600b9c$export$df995fae86a55f06);\n$parcel$export(module.exports, \"G\", () => $8d27ca75da600b9c$export$2329c99376c9d0a4);\n$parcel$export(module.exports, \"ae\", () => $8d27ca75da600b9c$export$f787f51d84a910ad);\n$parcel$export(module.exports, \"K\", () => $8d27ca75da600b9c$export$3466f893ebf79586);\n$parcel$export(module.exports, \"J\", () => $8d27ca75da600b9c$export$b4171a6734a65d42);\n$parcel$export(module.exports, \"aq\", () => $8d27ca75da600b9c$export$8a5498727ef6be21);\n$parcel$export(module.exports, \"ao\", () => $8d27ca75da600b9c$export$7a38258bbe170828);\n$parcel$export(module.exports, \"ap\", () => $8d27ca75da600b9c$export$2f6ca3d3b1f80bf5);\n$parcel$export(module.exports, \"az\", () => $8d27ca75da600b9c$export$3d12bd131bb975d1);\n$parcel$export(module.exports, \"aA\", () => $8d27ca75da600b9c$export$91c6e00c14e7e6fd);\n$parcel$export(module.exports, \"aC\", () => $8d27ca75da600b9c$export$890c4ad488842ce7);\n$parcel$export(module.exports, \"ax\", () => $8d27ca75da600b9c$export$9fa96a7d116ea3ce);\n$parcel$export(module.exports, \"an\", () => $8d27ca75da600b9c$export$306ddfe3a8403e2);\n$parcel$export(module.exports, \"am\", () => $8d27ca75da600b9c$export$1a82df3d29112e01);\n/*!\n * Chart.js v4.4.5\n * https://www.chartjs.org\n * (c) 2024 Chart.js Contributors\n * Released under the MIT License\n */ \nvar $bFoGN = parcelRequire(\"bFoGN\");\n/**\n * @namespace Chart.helpers\n */ /**\n * An empty function that can be used, for example, for optional callback.\n */ function $8d27ca75da600b9c$export$cf2f7c5792f80b46() {\n/* noop */ }\n/**\n * Returns a unique id, sequentially generated from a global variable.\n */ const $8d27ca75da600b9c$export$2219238a014317b0 = (()=>{\n    let id = 0;\n    return ()=>id++;\n})();\n/**\n * Returns true if `value` is neither null nor undefined, else returns false.\n * @param value - The value to test.\n * @since 2.7.0\n */ function $8d27ca75da600b9c$export$342063e11d6c3cad(value) {\n    return value === null || typeof value === \"undefined\";\n}\n/**\n * Returns true if `value` is an array (including typed arrays), else returns false.\n * @param value - The value to test.\n * @function\n */ function $8d27ca75da600b9c$export$8b22cf2602fb60ce(value) {\n    if (Array.isArray && Array.isArray(value)) return true;\n    const type = Object.prototype.toString.call(value);\n    if (type.slice(0, 7) === \"[object\" && type.slice(-6) === \"Array]\") return true;\n    return false;\n}\n/**\n * Returns true if `value` is an object (excluding null), else returns false.\n * @param value - The value to test.\n * @since 2.7.0\n */ function $8d27ca75da600b9c$export$23f2a1d2818174ef(value) {\n    return value !== null && Object.prototype.toString.call(value) === \"[object Object]\";\n}\n/**\n * Returns true if `value` is a finite number, else returns false\n * @param value  - The value to test.\n */ function $8d27ca75da600b9c$export$39b482c5e57630a8(value) {\n    return (typeof value === \"number\" || value instanceof Number) && isFinite(+value);\n}\n/**\n * Returns `value` if finite, else returns `defaultValue`.\n * @param value - The value to return if defined.\n * @param defaultValue - The value to return if `value` is not finite.\n */ function $8d27ca75da600b9c$export$c4ce752e73470fba(value, defaultValue) {\n    return $8d27ca75da600b9c$export$39b482c5e57630a8(value) ? value : defaultValue;\n}\n/**\n * Returns `value` if defined, else returns `defaultValue`.\n * @param value - The value to return if defined.\n * @param defaultValue - The value to return if `value` is undefined.\n */ function $8d27ca75da600b9c$export$90a7f3efeed30595(value, defaultValue) {\n    return typeof value === \"undefined\" ? defaultValue : value;\n}\nconst $8d27ca75da600b9c$export$953cecd6e717a553 = (value, dimension)=>typeof value === \"string\" && value.endsWith(\"%\") ? parseFloat(value) / 100 : +value / dimension;\nconst $8d27ca75da600b9c$export$7ccc53e8f1e7dfc5 = (value, dimension)=>typeof value === \"string\" && value.endsWith(\"%\") ? parseFloat(value) / 100 * dimension : +value;\n/**\n * Calls `fn` with the given `args` in the scope defined by `thisArg` and returns the\n * value returned by `fn`. If `fn` is not a function, this method returns undefined.\n * @param fn - The function to call.\n * @param args - The arguments with which `fn` should be called.\n * @param [thisArg] - The value of `this` provided for the call to `fn`.\n */ function $8d27ca75da600b9c$export$3722cfe417b6ed86(fn, args, thisArg) {\n    if (fn && typeof fn.call === \"function\") return fn.apply(thisArg, args);\n}\nfunction $8d27ca75da600b9c$export$d66501df72047452(loopable, fn, thisArg, reverse) {\n    let i, len, keys;\n    if ($8d27ca75da600b9c$export$8b22cf2602fb60ce(loopable)) {\n        len = loopable.length;\n        if (reverse) for(i = len - 1; i >= 0; i--)fn.call(thisArg, loopable[i], i);\n        else for(i = 0; i < len; i++)fn.call(thisArg, loopable[i], i);\n    } else if ($8d27ca75da600b9c$export$23f2a1d2818174ef(loopable)) {\n        keys = Object.keys(loopable);\n        len = keys.length;\n        for(i = 0; i < len; i++)fn.call(thisArg, loopable[keys[i]], keys[i]);\n    }\n}\n/**\n * Returns true if the `a0` and `a1` arrays have the same content, else returns false.\n * @param a0 - The array to compare\n * @param a1 - The array to compare\n * @private\n */ function $8d27ca75da600b9c$export$995eb9fca571757(a0, a1) {\n    let i, ilen, v0, v1;\n    if (!a0 || !a1 || a0.length !== a1.length) return false;\n    for(i = 0, ilen = a0.length; i < ilen; ++i){\n        v0 = a0[i];\n        v1 = a1[i];\n        if (v0.datasetIndex !== v1.datasetIndex || v0.index !== v1.index) return false;\n    }\n    return true;\n}\n/**\n * Returns a deep copy of `source` without keeping references on objects and arrays.\n * @param source - The value to clone.\n */ function $8d27ca75da600b9c$export$d377dcb2b61d6c4e(source) {\n    if ($8d27ca75da600b9c$export$8b22cf2602fb60ce(source)) return source.map($8d27ca75da600b9c$export$d377dcb2b61d6c4e);\n    if ($8d27ca75da600b9c$export$23f2a1d2818174ef(source)) {\n        const target = Object.create(null);\n        const keys = Object.keys(source);\n        const klen = keys.length;\n        let k = 0;\n        for(; k < klen; ++k)target[keys[k]] = $8d27ca75da600b9c$export$d377dcb2b61d6c4e(source[keys[k]]);\n        return target;\n    }\n    return source;\n}\nfunction $8d27ca75da600b9c$var$isValidKey(key) {\n    return [\n        \"__proto__\",\n        \"prototype\",\n        \"constructor\"\n    ].indexOf(key) === -1;\n}\n/**\n * The default merger when Chart.helpers.merge is called without merger option.\n * Note(SB): also used by mergeConfig and mergeScaleConfig as fallback.\n * @private\n */ function $8d27ca75da600b9c$export$667d3bf0c5f83305(key, target, source, options) {\n    if (!$8d27ca75da600b9c$var$isValidKey(key)) return;\n    const tval = target[key];\n    const sval = source[key];\n    if ($8d27ca75da600b9c$export$23f2a1d2818174ef(tval) && $8d27ca75da600b9c$export$23f2a1d2818174ef(sval)) // eslint-disable-next-line @typescript-eslint/no-use-before-define\n    $8d27ca75da600b9c$export$efca4cbe5dd06740(tval, sval, options);\n    else target[key] = $8d27ca75da600b9c$export$d377dcb2b61d6c4e(sval);\n}\nfunction $8d27ca75da600b9c$export$efca4cbe5dd06740(target, source, options) {\n    const sources = $8d27ca75da600b9c$export$8b22cf2602fb60ce(source) ? source : [\n        source\n    ];\n    const ilen = sources.length;\n    if (!$8d27ca75da600b9c$export$23f2a1d2818174ef(target)) return target;\n    options = options || {};\n    const merger = options.merger || $8d27ca75da600b9c$export$667d3bf0c5f83305;\n    let current;\n    for(let i = 0; i < ilen; ++i){\n        current = sources[i];\n        if (!$8d27ca75da600b9c$export$23f2a1d2818174ef(current)) continue;\n        const keys = Object.keys(current);\n        for(let k = 0, klen = keys.length; k < klen; ++k)merger(keys[k], target, current, options);\n    }\n    return target;\n}\nfunction $8d27ca75da600b9c$export$555508cbc6add439(target, source) {\n    // eslint-disable-next-line @typescript-eslint/no-use-before-define\n    return $8d27ca75da600b9c$export$efca4cbe5dd06740(target, source, {\n        merger: $8d27ca75da600b9c$export$317a3d46287192d8\n    });\n}\n/**\n * Merges source[key] in target[key] only if target[key] is undefined.\n * @private\n */ function $8d27ca75da600b9c$export$317a3d46287192d8(key, target, source) {\n    if (!$8d27ca75da600b9c$var$isValidKey(key)) return;\n    const tval = target[key];\n    const sval = source[key];\n    if ($8d27ca75da600b9c$export$23f2a1d2818174ef(tval) && $8d27ca75da600b9c$export$23f2a1d2818174ef(sval)) $8d27ca75da600b9c$export$555508cbc6add439(tval, sval);\n    else if (!Object.prototype.hasOwnProperty.call(target, key)) target[key] = $8d27ca75da600b9c$export$d377dcb2b61d6c4e(sval);\n}\n/**\n * @private\n */ function $8d27ca75da600b9c$export$1ee57be6f6687d2c(scope, value, previous, current) {\n    if (value !== undefined) console.warn(scope + ': \"' + previous + '\" is deprecated. Please use \"' + current + '\" instead');\n}\n// resolveObjectKey resolver cache\nconst $8d27ca75da600b9c$var$keyResolvers = {\n    // Chart.helpers.core resolveObjectKey should resolve empty key to root object\n    \"\": (v)=>v,\n    // default resolvers\n    x: (o)=>o.x,\n    y: (o)=>o.y\n};\n/**\n * @private\n */ function $8d27ca75da600b9c$export$9d0e2d13d04f7070(key) {\n    const parts = key.split(\".\");\n    const keys = [];\n    let tmp = \"\";\n    for (const part of parts){\n        tmp += part;\n        if (tmp.endsWith(\"\\\\\")) tmp = tmp.slice(0, -1) + \".\";\n        else {\n            keys.push(tmp);\n            tmp = \"\";\n        }\n    }\n    return keys;\n}\nfunction $8d27ca75da600b9c$var$_getKeyResolver(key) {\n    const keys = $8d27ca75da600b9c$export$9d0e2d13d04f7070(key);\n    return (obj)=>{\n        for (const k of keys){\n            if (k === \"\") break;\n            obj = obj && obj[k];\n        }\n        return obj;\n    };\n}\nfunction $8d27ca75da600b9c$export$2d1720544b23b823(obj, key) {\n    const resolver = $8d27ca75da600b9c$var$keyResolvers[key] || ($8d27ca75da600b9c$var$keyResolvers[key] = $8d27ca75da600b9c$var$_getKeyResolver(key));\n    return resolver(obj);\n}\n/**\n * @private\n */ function $8d27ca75da600b9c$export$a8550f7dbe79f93a(str) {\n    return str.charAt(0).toUpperCase() + str.slice(1);\n}\nconst $8d27ca75da600b9c$export$dda1d9f60106f0e9 = (value)=>typeof value !== \"undefined\";\nconst $8d27ca75da600b9c$export$a93c5207d687da10 = (value)=>typeof value === \"function\";\n// Adapted from https://stackoverflow.com/questions/31128855/comparing-ecma6-sets-for-equality#31129384\nconst $8d27ca75da600b9c$export$ee7c8ad385a60b7b = (a, b)=>{\n    if (a.size !== b.size) return false;\n    for (const item of a){\n        if (!b.has(item)) return false;\n    }\n    return true;\n};\n/**\n * @param e - The event\n * @private\n */ function $8d27ca75da600b9c$export$f38c853ae54ed474(e) {\n    return e.type === \"mouseup\" || e.type === \"click\" || e.type === \"contextmenu\";\n}\n/**\n * @alias Chart.helpers.math\n * @namespace\n */ const $8d27ca75da600b9c$export$56c0d5a1e737357d = Math.PI;\nconst $8d27ca75da600b9c$export$971d5caa766a69d7 = 2 * $8d27ca75da600b9c$export$56c0d5a1e737357d;\nconst $8d27ca75da600b9c$export$d29e374196577086 = $8d27ca75da600b9c$export$971d5caa766a69d7 + $8d27ca75da600b9c$export$56c0d5a1e737357d;\nconst $8d27ca75da600b9c$export$2ec5befb9e6c97d4 = Number.POSITIVE_INFINITY;\nconst $8d27ca75da600b9c$export$53c86fa97d611818 = $8d27ca75da600b9c$export$56c0d5a1e737357d / 180;\nconst $8d27ca75da600b9c$export$7f8ddf7c7c20b3cd = $8d27ca75da600b9c$export$56c0d5a1e737357d / 2;\nconst $8d27ca75da600b9c$export$39c1cc7c062529d4 = $8d27ca75da600b9c$export$56c0d5a1e737357d / 4;\nconst $8d27ca75da600b9c$export$7a0bdf7d4a91ea88 = $8d27ca75da600b9c$export$56c0d5a1e737357d * 2 / 3;\nconst $8d27ca75da600b9c$export$9f4f30ee63539e24 = Math.log10;\nconst $8d27ca75da600b9c$export$2408f22a0fab9ae5 = Math.sign;\nfunction $8d27ca75da600b9c$export$a05254e7c3aeba6e(x, y, epsilon) {\n    return Math.abs(x - y) < epsilon;\n}\n/**\n * Implementation of the nice number algorithm used in determining where axis labels will go\n */ function $8d27ca75da600b9c$export$a33b77bbdbb8366c(range) {\n    const roundedRange = Math.round(range);\n    range = $8d27ca75da600b9c$export$a05254e7c3aeba6e(range, roundedRange, range / 1000) ? roundedRange : range;\n    const niceRange = Math.pow(10, Math.floor($8d27ca75da600b9c$export$9f4f30ee63539e24(range)));\n    const fraction = range / niceRange;\n    const niceFraction = fraction <= 1 ? 1 : fraction <= 2 ? 2 : fraction <= 5 ? 5 : 10;\n    return niceFraction * niceRange;\n}\n/**\n * Returns an array of factors sorted from 1 to sqrt(value)\n * @private\n */ function $8d27ca75da600b9c$export$a07804094c3ecf2d(value) {\n    const result = [];\n    const sqrt = Math.sqrt(value);\n    let i;\n    for(i = 1; i < sqrt; i++)if (value % i === 0) {\n        result.push(i);\n        result.push(value / i);\n    }\n    if (sqrt === (sqrt | 0)) result.push(sqrt);\n    result.sort((a, b)=>a - b).pop();\n    return result;\n}\nfunction $8d27ca75da600b9c$export$d141bba7fdc215a3(n) {\n    return !isNaN(parseFloat(n)) && isFinite(n);\n}\nfunction $8d27ca75da600b9c$export$b9a6b53f9be3734(x, epsilon) {\n    const rounded = Math.round(x);\n    return rounded - epsilon <= x && rounded + epsilon >= x;\n}\n/**\n * @private\n */ function $8d27ca75da600b9c$export$53a70dd1ebbae346(array, target, property) {\n    let i, ilen, value;\n    for(i = 0, ilen = array.length; i < ilen; i++){\n        value = array[i][property];\n        if (!isNaN(value)) {\n            target.min = Math.min(target.min, value);\n            target.max = Math.max(target.max, value);\n        }\n    }\n}\nfunction $8d27ca75da600b9c$export$625550452a3fa3ec(degrees) {\n    return degrees * ($8d27ca75da600b9c$export$56c0d5a1e737357d / 180);\n}\nfunction $8d27ca75da600b9c$export$3a6d5c9ae78a2c08(radians) {\n    return radians * (180 / $8d27ca75da600b9c$export$56c0d5a1e737357d);\n}\n/**\n * Returns the number of decimal places\n * i.e. the number of digits after the decimal point, of the value of this Number.\n * @param x - A number.\n * @returns The number of decimal places.\n * @private\n */ function $8d27ca75da600b9c$export$23ebac1979863676(x) {\n    if (!$8d27ca75da600b9c$export$39b482c5e57630a8(x)) return;\n    let e = 1;\n    let p = 0;\n    while(Math.round(x * e) / e !== x){\n        e *= 10;\n        p++;\n    }\n    return p;\n}\n// Gets the angle from vertical upright to the point about a centre.\nfunction $8d27ca75da600b9c$export$96f57966bedc81b4(centrePoint, anglePoint) {\n    const distanceFromXCenter = anglePoint.x - centrePoint.x;\n    const distanceFromYCenter = anglePoint.y - centrePoint.y;\n    const radialDistanceFromCenter = Math.sqrt(distanceFromXCenter * distanceFromXCenter + distanceFromYCenter * distanceFromYCenter);\n    let angle = Math.atan2(distanceFromYCenter, distanceFromXCenter);\n    if (angle < -0.5 * $8d27ca75da600b9c$export$56c0d5a1e737357d) angle += $8d27ca75da600b9c$export$971d5caa766a69d7; // make sure the returned angle is in the range of (-PI/2, 3PI/2]\n    return {\n        angle: angle,\n        distance: radialDistanceFromCenter\n    };\n}\nfunction $8d27ca75da600b9c$export$158acd800e1ef08b(pt1, pt2) {\n    return Math.sqrt(Math.pow(pt2.x - pt1.x, 2) + Math.pow(pt2.y - pt1.y, 2));\n}\n/**\n * Shortest distance between angles, in either direction.\n * @private\n */ function $8d27ca75da600b9c$export$c18d01048907ea92(a, b) {\n    return (a - b + $8d27ca75da600b9c$export$d29e374196577086) % $8d27ca75da600b9c$export$971d5caa766a69d7 - $8d27ca75da600b9c$export$56c0d5a1e737357d;\n}\n/**\n * Normalize angle to be between 0 and 2*PI\n * @private\n */ function $8d27ca75da600b9c$export$28f7fcd39efa255(a) {\n    return (a % $8d27ca75da600b9c$export$971d5caa766a69d7 + $8d27ca75da600b9c$export$971d5caa766a69d7) % $8d27ca75da600b9c$export$971d5caa766a69d7;\n}\n/**\n * @private\n */ function $8d27ca75da600b9c$export$ffb5f4729a158638(angle, start, end, sameAngleIsFullCircle) {\n    const a = $8d27ca75da600b9c$export$28f7fcd39efa255(angle);\n    const s = $8d27ca75da600b9c$export$28f7fcd39efa255(start);\n    const e = $8d27ca75da600b9c$export$28f7fcd39efa255(end);\n    const angleToStart = $8d27ca75da600b9c$export$28f7fcd39efa255(s - a);\n    const angleToEnd = $8d27ca75da600b9c$export$28f7fcd39efa255(e - a);\n    const startToAngle = $8d27ca75da600b9c$export$28f7fcd39efa255(a - s);\n    const endToAngle = $8d27ca75da600b9c$export$28f7fcd39efa255(a - e);\n    return a === s || a === e || sameAngleIsFullCircle && s === e || angleToStart > angleToEnd && startToAngle < endToAngle;\n}\n/**\n * Limit `value` between `min` and `max`\n * @param value\n * @param min\n * @param max\n * @private\n */ function $8d27ca75da600b9c$export$25ce5a424b770e84(value, min, max) {\n    return Math.max(min, Math.min(max, value));\n}\n/**\n * @param {number} value\n * @private\n */ function $8d27ca75da600b9c$export$71cec2538cb2c617(value) {\n    return $8d27ca75da600b9c$export$25ce5a424b770e84(value, -32768, 32767);\n}\n/**\n * @param value\n * @param start\n * @param end\n * @param [epsilon]\n * @private\n */ function $8d27ca75da600b9c$export$3b513254972cfc9c(value, start, end, epsilon = 1e-6) {\n    return value >= Math.min(start, end) - epsilon && value <= Math.max(start, end) + epsilon;\n}\nfunction $8d27ca75da600b9c$export$2ed0fc6709e59212(table, value, cmp) {\n    cmp = cmp || ((index)=>table[index] < value);\n    let hi = table.length - 1;\n    let lo = 0;\n    let mid;\n    while(hi - lo > 1){\n        mid = lo + hi >> 1;\n        if (cmp(mid)) lo = mid;\n        else hi = mid;\n    }\n    return {\n        lo: lo,\n        hi: hi\n    };\n}\n/**\n * Binary search\n * @param table - the table search. must be sorted!\n * @param key - property name for the value in each entry\n * @param value - value to find\n * @param last - lookup last index\n * @private\n */ const $8d27ca75da600b9c$export$ef35774e6d314e91 = (table, key, value, last)=>$8d27ca75da600b9c$export$2ed0fc6709e59212(table, value, last ? (index)=>{\n        const ti = table[index][key];\n        return ti < value || ti === value && table[index + 1][key] === value;\n    } : (index)=>table[index][key] < value);\n/**\n * Reverse binary search\n * @param table - the table search. must be sorted!\n * @param key - property name for the value in each entry\n * @param value - value to find\n * @private\n */ const $8d27ca75da600b9c$export$ebd11618f299a286 = (table, key, value)=>$8d27ca75da600b9c$export$2ed0fc6709e59212(table, value, (index)=>table[index][key] >= value);\n/**\n * Return subset of `values` between `min` and `max` inclusive.\n * Values are assumed to be in sorted order.\n * @param values - sorted array of values\n * @param min - min value\n * @param max - max value\n */ function $8d27ca75da600b9c$export$c03999cb2f36933f(values, min, max) {\n    let start = 0;\n    let end = values.length;\n    while(start < end && values[start] < min)start++;\n    while(end > start && values[end - 1] > max)end--;\n    return start > 0 || end < values.length ? values.slice(start, end) : values;\n}\nconst $8d27ca75da600b9c$var$arrayEvents = [\n    \"push\",\n    \"pop\",\n    \"shift\",\n    \"splice\",\n    \"unshift\"\n];\nfunction $8d27ca75da600b9c$export$882b5998b3b9117c(array, listener) {\n    if (array._chartjs) {\n        array._chartjs.listeners.push(listener);\n        return;\n    }\n    Object.defineProperty(array, \"_chartjs\", {\n        configurable: true,\n        enumerable: false,\n        value: {\n            listeners: [\n                listener\n            ]\n        }\n    });\n    $8d27ca75da600b9c$var$arrayEvents.forEach((key)=>{\n        const method = \"_onData\" + $8d27ca75da600b9c$export$a8550f7dbe79f93a(key);\n        const base = array[key];\n        Object.defineProperty(array, key, {\n            configurable: true,\n            enumerable: false,\n            value (...args) {\n                const res = base.apply(this, args);\n                array._chartjs.listeners.forEach((object)=>{\n                    if (typeof object[method] === \"function\") object[method](...args);\n                });\n                return res;\n            }\n        });\n    });\n}\nfunction $8d27ca75da600b9c$export$3b14a55fb2447963(array, listener) {\n    const stub = array._chartjs;\n    if (!stub) return;\n    const listeners = stub.listeners;\n    const index = listeners.indexOf(listener);\n    if (index !== -1) listeners.splice(index, 1);\n    if (listeners.length > 0) return;\n    $8d27ca75da600b9c$var$arrayEvents.forEach((key)=>{\n        delete array[key];\n    });\n    delete array._chartjs;\n}\n/**\n * @param items\n */ function $8d27ca75da600b9c$export$71511d61b312f219(items) {\n    const set = new Set(items);\n    if (set.size === items.length) return items;\n    return Array.from(set);\n}\nfunction $8d27ca75da600b9c$export$fef3dfd9bad05307(pixelSize, fontStyle, fontFamily) {\n    return fontStyle + \" \" + pixelSize + \"px \" + fontFamily;\n}\n/**\n* Request animation polyfill\n*/ const $8d27ca75da600b9c$export$43caf9889c228507 = function() {\n    if (typeof window === \"undefined\") return function(callback) {\n        return callback();\n    };\n    return window.requestAnimationFrame;\n}();\n/**\n * Throttles calling `fn` once per animation frame\n * Latest arguments are used on the actual call\n */ function $8d27ca75da600b9c$export$61196ced6d74a310(fn, thisArg) {\n    let argsToUse = [];\n    let ticking = false;\n    return function(...args) {\n        // Save the args for use later\n        argsToUse = args;\n        if (!ticking) {\n            ticking = true;\n            $8d27ca75da600b9c$export$43caf9889c228507.call(window, ()=>{\n                ticking = false;\n                fn.apply(thisArg, argsToUse);\n            });\n        }\n    };\n}\n/**\n * Debounces calling `fn` for `delay` ms\n */ function $8d27ca75da600b9c$export$4c3d22f3d993c33f(fn, delay) {\n    let timeout;\n    return function(...args) {\n        if (delay) {\n            clearTimeout(timeout);\n            timeout = setTimeout(fn, delay, args);\n        } else fn.apply(this, args);\n        return delay;\n    };\n}\n/**\n * Converts 'start' to 'left', 'end' to 'right' and others to 'center'\n * @private\n */ const $8d27ca75da600b9c$export$3c2fa207a37baaea = (align)=>align === \"start\" ? \"left\" : align === \"end\" ? \"right\" : \"center\";\n/**\n * Returns `start`, `end` or `(start + end) / 2` depending on `align`. Defaults to `center`\n * @private\n */ const $8d27ca75da600b9c$export$ce26c07117d59d6a = (align, start, end)=>align === \"start\" ? start : align === \"end\" ? end : (start + end) / 2;\n/**\n * Returns `left`, `right` or `(left + right) / 2` depending on `align`. Defaults to `left`\n * @private\n */ const $8d27ca75da600b9c$export$9d398bebfec1c039 = (align, left, right, rtl)=>{\n    const check = rtl ? \"left\" : \"right\";\n    return align === check ? right : align === \"center\" ? (left + right) / 2 : left;\n};\n/**\n * Return start and count of visible points.\n * @private\n */ function $8d27ca75da600b9c$export$9e5f44173e64f162(meta, points, animationsDisabled) {\n    const pointCount = points.length;\n    let start = 0;\n    let count = pointCount;\n    if (meta._sorted) {\n        const { iScale: iScale, _parsed: _parsed } = meta;\n        const axis = iScale.axis;\n        const { min: min, max: max, minDefined: minDefined, maxDefined: maxDefined } = iScale.getUserBounds();\n        if (minDefined) start = $8d27ca75da600b9c$export$25ce5a424b770e84(Math.min($8d27ca75da600b9c$export$ef35774e6d314e91(_parsed, axis, min).lo, animationsDisabled ? pointCount : $8d27ca75da600b9c$export$ef35774e6d314e91(points, axis, iScale.getPixelForValue(min)).lo), 0, pointCount - 1);\n        if (maxDefined) count = $8d27ca75da600b9c$export$25ce5a424b770e84(Math.max($8d27ca75da600b9c$export$ef35774e6d314e91(_parsed, iScale.axis, max, true).hi + 1, animationsDisabled ? 0 : $8d27ca75da600b9c$export$ef35774e6d314e91(points, axis, iScale.getPixelForValue(max), true).hi + 1), start, pointCount) - start;\n        else count = pointCount - start;\n    }\n    return {\n        start: start,\n        count: count\n    };\n}\n/**\n * Checks if the scale ranges have changed.\n * @param {object} meta - dataset meta.\n * @returns {boolean}\n * @private\n */ function $8d27ca75da600b9c$export$efccba1c4a2ef57b(meta) {\n    const { xScale: xScale, yScale: yScale, _scaleRanges: _scaleRanges } = meta;\n    const newRanges = {\n        xmin: xScale.min,\n        xmax: xScale.max,\n        ymin: yScale.min,\n        ymax: yScale.max\n    };\n    if (!_scaleRanges) {\n        meta._scaleRanges = newRanges;\n        return true;\n    }\n    const changed = _scaleRanges.xmin !== xScale.min || _scaleRanges.xmax !== xScale.max || _scaleRanges.ymin !== yScale.min || _scaleRanges.ymax !== yScale.max;\n    Object.assign(_scaleRanges, newRanges);\n    return changed;\n}\nconst $8d27ca75da600b9c$var$atEdge = (t)=>t === 0 || t === 1;\nconst $8d27ca75da600b9c$var$elasticIn = (t, s, p)=>-(Math.pow(2, 10 * (t -= 1)) * Math.sin((t - s) * $8d27ca75da600b9c$export$971d5caa766a69d7 / p));\nconst $8d27ca75da600b9c$var$elasticOut = (t, s, p)=>Math.pow(2, -10 * t) * Math.sin((t - s) * $8d27ca75da600b9c$export$971d5caa766a69d7 / p) + 1;\n/**\n * Easing functions adapted from Robert Penner's easing equations.\n * @namespace Chart.helpers.easing.effects\n * @see http://www.robertpenner.com/easing/\n */ const $8d27ca75da600b9c$export$f1e1789686576879 = {\n    linear: (t)=>t,\n    easeInQuad: (t)=>t * t,\n    easeOutQuad: (t)=>-t * (t - 2),\n    easeInOutQuad: (t)=>(t /= 0.5) < 1 ? 0.5 * t * t : -0.5 * (--t * (t - 2) - 1),\n    easeInCubic: (t)=>t * t * t,\n    easeOutCubic: (t)=>(t -= 1) * t * t + 1,\n    easeInOutCubic: (t)=>(t /= 0.5) < 1 ? 0.5 * t * t * t : 0.5 * ((t -= 2) * t * t + 2),\n    easeInQuart: (t)=>t * t * t * t,\n    easeOutQuart: (t)=>-((t -= 1) * t * t * t - 1),\n    easeInOutQuart: (t)=>(t /= 0.5) < 1 ? 0.5 * t * t * t * t : -0.5 * ((t -= 2) * t * t * t - 2),\n    easeInQuint: (t)=>t * t * t * t * t,\n    easeOutQuint: (t)=>(t -= 1) * t * t * t * t + 1,\n    easeInOutQuint: (t)=>(t /= 0.5) < 1 ? 0.5 * t * t * t * t * t : 0.5 * ((t -= 2) * t * t * t * t + 2),\n    easeInSine: (t)=>-Math.cos(t * $8d27ca75da600b9c$export$7f8ddf7c7c20b3cd) + 1,\n    easeOutSine: (t)=>Math.sin(t * $8d27ca75da600b9c$export$7f8ddf7c7c20b3cd),\n    easeInOutSine: (t)=>-0.5 * (Math.cos($8d27ca75da600b9c$export$56c0d5a1e737357d * t) - 1),\n    easeInExpo: (t)=>t === 0 ? 0 : Math.pow(2, 10 * (t - 1)),\n    easeOutExpo: (t)=>t === 1 ? 1 : -Math.pow(2, -10 * t) + 1,\n    easeInOutExpo: (t)=>$8d27ca75da600b9c$var$atEdge(t) ? t : t < 0.5 ? 0.5 * Math.pow(2, 10 * (t * 2 - 1)) : 0.5 * (-Math.pow(2, -10 * (t * 2 - 1)) + 2),\n    easeInCirc: (t)=>t >= 1 ? t : -(Math.sqrt(1 - t * t) - 1),\n    easeOutCirc: (t)=>Math.sqrt(1 - (t -= 1) * t),\n    easeInOutCirc: (t)=>(t /= 0.5) < 1 ? -0.5 * (Math.sqrt(1 - t * t) - 1) : 0.5 * (Math.sqrt(1 - (t -= 2) * t) + 1),\n    easeInElastic: (t)=>$8d27ca75da600b9c$var$atEdge(t) ? t : $8d27ca75da600b9c$var$elasticIn(t, 0.075, 0.3),\n    easeOutElastic: (t)=>$8d27ca75da600b9c$var$atEdge(t) ? t : $8d27ca75da600b9c$var$elasticOut(t, 0.075, 0.3),\n    easeInOutElastic (t) {\n        const s = 0.1125;\n        const p = 0.45;\n        return $8d27ca75da600b9c$var$atEdge(t) ? t : t < 0.5 ? 0.5 * $8d27ca75da600b9c$var$elasticIn(t * 2, s, p) : 0.5 + 0.5 * $8d27ca75da600b9c$var$elasticOut(t * 2 - 1, s, p);\n    },\n    easeInBack (t) {\n        const s = 1.70158;\n        return t * t * ((s + 1) * t - s);\n    },\n    easeOutBack (t) {\n        const s = 1.70158;\n        return (t -= 1) * t * ((s + 1) * t + s) + 1;\n    },\n    easeInOutBack (t) {\n        let s = 1.70158;\n        if ((t /= 0.5) < 1) return 0.5 * (t * t * (((s *= 1.525) + 1) * t - s));\n        return 0.5 * ((t -= 2) * t * (((s *= 1.525) + 1) * t + s) + 2);\n    },\n    easeInBounce: (t)=>1 - $8d27ca75da600b9c$export$f1e1789686576879.easeOutBounce(1 - t),\n    easeOutBounce (t) {\n        const m = 7.5625;\n        const d = 2.75;\n        if (t < 1 / d) return m * t * t;\n        if (t < 2 / d) return m * (t -= 1.5 / d) * t + 0.75;\n        if (t < 2.5 / d) return m * (t -= 2.25 / d) * t + 0.9375;\n        return m * (t -= 2.625 / d) * t + 0.984375;\n    },\n    easeInOutBounce: (t)=>t < 0.5 ? $8d27ca75da600b9c$export$f1e1789686576879.easeInBounce(t * 2) * 0.5 : $8d27ca75da600b9c$export$f1e1789686576879.easeOutBounce(t * 2 - 1) * 0.5 + 0.5\n};\nfunction $8d27ca75da600b9c$export$f96d196f7728bb5(value) {\n    if (value && typeof value === \"object\") {\n        const type = value.toString();\n        return type === \"[object CanvasPattern]\" || type === \"[object CanvasGradient]\";\n    }\n    return false;\n}\nfunction $8d27ca75da600b9c$export$db3b6bfb95261072(value) {\n    return $8d27ca75da600b9c$export$f96d196f7728bb5(value) ? value : new (0, $bFoGN.Color)(value);\n}\nfunction $8d27ca75da600b9c$export$738ab4df8bf92ae9(value) {\n    return $8d27ca75da600b9c$export$f96d196f7728bb5(value) ? value : new (0, $bFoGN.Color)(value).saturate(0.5).darken(0.1).hexString();\n}\nconst $8d27ca75da600b9c$var$numbers = [\n    \"x\",\n    \"y\",\n    \"borderWidth\",\n    \"radius\",\n    \"tension\"\n];\nconst $8d27ca75da600b9c$var$colors = [\n    \"color\",\n    \"borderColor\",\n    \"backgroundColor\"\n];\nfunction $8d27ca75da600b9c$var$applyAnimationsDefaults(defaults) {\n    defaults.set(\"animation\", {\n        delay: undefined,\n        duration: 1000,\n        easing: \"easeOutQuart\",\n        fn: undefined,\n        from: undefined,\n        loop: undefined,\n        to: undefined,\n        type: undefined\n    });\n    defaults.describe(\"animation\", {\n        _fallback: false,\n        _indexable: false,\n        _scriptable: (name)=>name !== \"onProgress\" && name !== \"onComplete\" && name !== \"fn\"\n    });\n    defaults.set(\"animations\", {\n        colors: {\n            type: \"color\",\n            properties: $8d27ca75da600b9c$var$colors\n        },\n        numbers: {\n            type: \"number\",\n            properties: $8d27ca75da600b9c$var$numbers\n        }\n    });\n    defaults.describe(\"animations\", {\n        _fallback: \"animation\"\n    });\n    defaults.set(\"transitions\", {\n        active: {\n            animation: {\n                duration: 400\n            }\n        },\n        resize: {\n            animation: {\n                duration: 0\n            }\n        },\n        show: {\n            animations: {\n                colors: {\n                    from: \"transparent\"\n                },\n                visible: {\n                    type: \"boolean\",\n                    duration: 0\n                }\n            }\n        },\n        hide: {\n            animations: {\n                colors: {\n                    to: \"transparent\"\n                },\n                visible: {\n                    type: \"boolean\",\n                    easing: \"linear\",\n                    fn: (v)=>v | 0\n                }\n            }\n        }\n    });\n}\nfunction $8d27ca75da600b9c$var$applyLayoutsDefaults(defaults) {\n    defaults.set(\"layout\", {\n        autoPadding: true,\n        padding: {\n            top: 0,\n            right: 0,\n            bottom: 0,\n            left: 0\n        }\n    });\n}\nconst $8d27ca75da600b9c$var$intlCache = new Map();\nfunction $8d27ca75da600b9c$var$getNumberFormat(locale, options) {\n    options = options || {};\n    const cacheKey = locale + JSON.stringify(options);\n    let formatter = $8d27ca75da600b9c$var$intlCache.get(cacheKey);\n    if (!formatter) {\n        formatter = new Intl.NumberFormat(locale, options);\n        $8d27ca75da600b9c$var$intlCache.set(cacheKey, formatter);\n    }\n    return formatter;\n}\nfunction $8d27ca75da600b9c$export$ae1af26003f05816(num, locale, options) {\n    return $8d27ca75da600b9c$var$getNumberFormat(locale, options).format(num);\n}\nconst $8d27ca75da600b9c$var$formatters = {\n    values (value) {\n        return $8d27ca75da600b9c$export$8b22cf2602fb60ce(value) ? value : \"\" + value;\n    },\n    numeric (tickValue, index, ticks) {\n        if (tickValue === 0) return \"0\";\n        const locale = this.chart.options.locale;\n        let notation;\n        let delta = tickValue;\n        if (ticks.length > 1) {\n            const maxTick = Math.max(Math.abs(ticks[0].value), Math.abs(ticks[ticks.length - 1].value));\n            if (maxTick < 1e-4 || maxTick > 1e+15) notation = \"scientific\";\n            delta = $8d27ca75da600b9c$var$calculateDelta(tickValue, ticks);\n        }\n        const logDelta = $8d27ca75da600b9c$export$9f4f30ee63539e24(Math.abs(delta));\n        const numDecimal = isNaN(logDelta) ? 1 : Math.max(Math.min(-1 * Math.floor(logDelta), 20), 0);\n        const options = {\n            notation: notation,\n            minimumFractionDigits: numDecimal,\n            maximumFractionDigits: numDecimal\n        };\n        Object.assign(options, this.options.ticks.format);\n        return $8d27ca75da600b9c$export$ae1af26003f05816(tickValue, locale, options);\n    },\n    logarithmic (tickValue, index, ticks) {\n        if (tickValue === 0) return \"0\";\n        const remain = ticks[index].significand || tickValue / Math.pow(10, Math.floor($8d27ca75da600b9c$export$9f4f30ee63539e24(tickValue)));\n        if ([\n            1,\n            2,\n            3,\n            5,\n            10,\n            15\n        ].includes(remain) || index > 0.8 * ticks.length) return $8d27ca75da600b9c$var$formatters.numeric.call(this, tickValue, index, ticks);\n        return \"\";\n    }\n};\nfunction $8d27ca75da600b9c$var$calculateDelta(tickValue, ticks) {\n    let delta = ticks.length > 3 ? ticks[2].value - ticks[1].value : ticks[1].value - ticks[0].value;\n    if (Math.abs(delta) >= 1 && tickValue !== Math.floor(tickValue)) delta = tickValue - Math.floor(tickValue);\n    return delta;\n}\nvar $8d27ca75da600b9c$export$91477dc880baac21 = {\n    formatters: $8d27ca75da600b9c$var$formatters\n};\nfunction $8d27ca75da600b9c$var$applyScaleDefaults(defaults) {\n    defaults.set(\"scale\", {\n        display: true,\n        offset: false,\n        reverse: false,\n        beginAtZero: false,\n        bounds: \"ticks\",\n        clip: true,\n        grace: 0,\n        grid: {\n            display: true,\n            lineWidth: 1,\n            drawOnChartArea: true,\n            drawTicks: true,\n            tickLength: 8,\n            tickWidth: (_ctx, options)=>options.lineWidth,\n            tickColor: (_ctx, options)=>options.color,\n            offset: false\n        },\n        border: {\n            display: true,\n            dash: [],\n            dashOffset: 0.0,\n            width: 1\n        },\n        title: {\n            display: false,\n            text: \"\",\n            padding: {\n                top: 4,\n                bottom: 4\n            }\n        },\n        ticks: {\n            minRotation: 0,\n            maxRotation: 50,\n            mirror: false,\n            textStrokeWidth: 0,\n            textStrokeColor: \"\",\n            padding: 3,\n            display: true,\n            autoSkip: true,\n            autoSkipPadding: 3,\n            labelOffset: 0,\n            callback: $8d27ca75da600b9c$export$91477dc880baac21.formatters.values,\n            minor: {},\n            major: {},\n            align: \"center\",\n            crossAlign: \"near\",\n            showLabelBackdrop: false,\n            backdropColor: \"rgba(255, 255, 255, 0.75)\",\n            backdropPadding: 2\n        }\n    });\n    defaults.route(\"scale.ticks\", \"color\", \"\", \"color\");\n    defaults.route(\"scale.grid\", \"color\", \"\", \"borderColor\");\n    defaults.route(\"scale.border\", \"color\", \"\", \"borderColor\");\n    defaults.route(\"scale.title\", \"color\", \"\", \"color\");\n    defaults.describe(\"scale\", {\n        _fallback: false,\n        _scriptable: (name)=>!name.startsWith(\"before\") && !name.startsWith(\"after\") && name !== \"callback\" && name !== \"parser\",\n        _indexable: (name)=>name !== \"borderDash\" && name !== \"tickBorderDash\" && name !== \"dash\"\n    });\n    defaults.describe(\"scales\", {\n        _fallback: \"scale\"\n    });\n    defaults.describe(\"scale.ticks\", {\n        _scriptable: (name)=>name !== \"backdropPadding\" && name !== \"callback\",\n        _indexable: (name)=>name !== \"backdropPadding\"\n    });\n}\nconst $8d27ca75da600b9c$export$6559d589eb85fbb6 = Object.create(null);\nconst $8d27ca75da600b9c$export$2e2af4578d910ddf = Object.create(null);\nfunction $8d27ca75da600b9c$var$getScope$1(node, key) {\n    if (!key) return node;\n    const keys = key.split(\".\");\n    for(let i = 0, n = keys.length; i < n; ++i){\n        const k = keys[i];\n        node = node[k] || (node[k] = Object.create(null));\n    }\n    return node;\n}\nfunction $8d27ca75da600b9c$var$set(root, scope, values) {\n    if (typeof scope === \"string\") return $8d27ca75da600b9c$export$efca4cbe5dd06740($8d27ca75da600b9c$var$getScope$1(root, scope), values);\n    return $8d27ca75da600b9c$export$efca4cbe5dd06740($8d27ca75da600b9c$var$getScope$1(root, \"\"), scope);\n}\nclass $8d27ca75da600b9c$var$Defaults {\n    constructor(_descriptors, _appliers){\n        this.animation = undefined;\n        this.backgroundColor = \"rgba(0,0,0,0.1)\";\n        this.borderColor = \"rgba(0,0,0,0.1)\";\n        this.color = \"#666\";\n        this.datasets = {};\n        this.devicePixelRatio = (context)=>context.chart.platform.getDevicePixelRatio();\n        this.elements = {};\n        this.events = [\n            \"mousemove\",\n            \"mouseout\",\n            \"click\",\n            \"touchstart\",\n            \"touchmove\"\n        ];\n        this.font = {\n            family: \"'Helvetica Neue', 'Helvetica', 'Arial', sans-serif\",\n            size: 12,\n            style: \"normal\",\n            lineHeight: 1.2,\n            weight: null\n        };\n        this.hover = {};\n        this.hoverBackgroundColor = (ctx, options)=>$8d27ca75da600b9c$export$738ab4df8bf92ae9(options.backgroundColor);\n        this.hoverBorderColor = (ctx, options)=>$8d27ca75da600b9c$export$738ab4df8bf92ae9(options.borderColor);\n        this.hoverColor = (ctx, options)=>$8d27ca75da600b9c$export$738ab4df8bf92ae9(options.color);\n        this.indexAxis = \"x\";\n        this.interaction = {\n            mode: \"nearest\",\n            intersect: true,\n            includeInvisible: false\n        };\n        this.maintainAspectRatio = true;\n        this.onHover = null;\n        this.onClick = null;\n        this.parsing = true;\n        this.plugins = {};\n        this.responsive = true;\n        this.scale = undefined;\n        this.scales = {};\n        this.showLine = true;\n        this.drawActiveElementsOnTop = true;\n        this.describe(_descriptors);\n        this.apply(_appliers);\n    }\n    set(scope, values) {\n        return $8d27ca75da600b9c$var$set(this, scope, values);\n    }\n    get(scope) {\n        return $8d27ca75da600b9c$var$getScope$1(this, scope);\n    }\n    describe(scope, values) {\n        return $8d27ca75da600b9c$var$set($8d27ca75da600b9c$export$2e2af4578d910ddf, scope, values);\n    }\n    override(scope, values) {\n        return $8d27ca75da600b9c$var$set($8d27ca75da600b9c$export$6559d589eb85fbb6, scope, values);\n    }\n    route(scope, name, targetScope, targetName) {\n        const scopeObject = $8d27ca75da600b9c$var$getScope$1(this, scope);\n        const targetScopeObject = $8d27ca75da600b9c$var$getScope$1(this, targetScope);\n        const privateName = \"_\" + name;\n        Object.defineProperties(scopeObject, {\n            [privateName]: {\n                value: scopeObject[name],\n                writable: true\n            },\n            [name]: {\n                enumerable: true,\n                get () {\n                    const local = this[privateName];\n                    const target = targetScopeObject[targetName];\n                    if ($8d27ca75da600b9c$export$23f2a1d2818174ef(local)) return Object.assign({}, target, local);\n                    return $8d27ca75da600b9c$export$90a7f3efeed30595(local, target);\n                },\n                set (value) {\n                    this[privateName] = value;\n                }\n            }\n        });\n    }\n    apply(appliers) {\n        appliers.forEach((apply)=>apply(this));\n    }\n}\nvar $8d27ca75da600b9c$export$4368d992c4eafac0 = /* #__PURE__ */ new $8d27ca75da600b9c$var$Defaults({\n    _scriptable: (name)=>!name.startsWith(\"on\"),\n    _indexable: (name)=>name !== \"events\",\n    hover: {\n        _fallback: \"interaction\"\n    },\n    interaction: {\n        _scriptable: false,\n        _indexable: false\n    }\n}, [\n    $8d27ca75da600b9c$var$applyAnimationsDefaults,\n    $8d27ca75da600b9c$var$applyLayoutsDefaults,\n    $8d27ca75da600b9c$var$applyScaleDefaults\n]);\n/**\n * Converts the given font object into a CSS font string.\n * @param font - A font object.\n * @return The CSS font string. See https://developer.mozilla.org/en-US/docs/Web/CSS/font\n * @private\n */ function $8d27ca75da600b9c$export$1a8f5705751d8277(font) {\n    if (!font || $8d27ca75da600b9c$export$342063e11d6c3cad(font.size) || $8d27ca75da600b9c$export$342063e11d6c3cad(font.family)) return null;\n    return (font.style ? font.style + \" \" : \"\") + (font.weight ? font.weight + \" \" : \"\") + font.size + \"px \" + font.family;\n}\n/**\n * @private\n */ function $8d27ca75da600b9c$export$e7c866399fa523f5(ctx, data, gc, longest, string) {\n    let textWidth = data[string];\n    if (!textWidth) {\n        textWidth = data[string] = ctx.measureText(string).width;\n        gc.push(string);\n    }\n    if (textWidth > longest) longest = textWidth;\n    return longest;\n}\n/**\n * @private\n */ // eslint-disable-next-line complexity\nfunction $8d27ca75da600b9c$export$faec65b429be379(ctx, font, arrayOfThings, cache) {\n    cache = cache || {};\n    let data = cache.data = cache.data || {};\n    let gc = cache.garbageCollect = cache.garbageCollect || [];\n    if (cache.font !== font) {\n        data = cache.data = {};\n        gc = cache.garbageCollect = [];\n        cache.font = font;\n    }\n    ctx.save();\n    ctx.font = font;\n    let longest = 0;\n    const ilen = arrayOfThings.length;\n    let i, j, jlen, thing, nestedThing;\n    for(i = 0; i < ilen; i++){\n        thing = arrayOfThings[i];\n        // Undefined strings and arrays should not be measured\n        if (thing !== undefined && thing !== null && !$8d27ca75da600b9c$export$8b22cf2602fb60ce(thing)) longest = $8d27ca75da600b9c$export$e7c866399fa523f5(ctx, data, gc, longest, thing);\n        else if ($8d27ca75da600b9c$export$8b22cf2602fb60ce(thing)) // if it is an array lets measure each element\n        // to do maybe simplify this function a bit so we can do this more recursively?\n        for(j = 0, jlen = thing.length; j < jlen; j++){\n            nestedThing = thing[j];\n            // Undefined strings and arrays should not be measured\n            if (nestedThing !== undefined && nestedThing !== null && !$8d27ca75da600b9c$export$8b22cf2602fb60ce(nestedThing)) longest = $8d27ca75da600b9c$export$e7c866399fa523f5(ctx, data, gc, longest, nestedThing);\n        }\n    }\n    ctx.restore();\n    const gcLen = gc.length / 2;\n    if (gcLen > arrayOfThings.length) {\n        for(i = 0; i < gcLen; i++)delete data[gc[i]];\n        gc.splice(0, gcLen);\n    }\n    return longest;\n}\n/**\n * Returns the aligned pixel value to avoid anti-aliasing blur\n * @param chart - The chart instance.\n * @param pixel - A pixel value.\n * @param width - The width of the element.\n * @returns The aligned pixel value.\n * @private\n */ function $8d27ca75da600b9c$export$78acf4525d8a74c4(chart, pixel, width) {\n    const devicePixelRatio = chart.currentDevicePixelRatio;\n    const halfWidth = width !== 0 ? Math.max(width / 2, 0.5) : 0;\n    return Math.round((pixel - halfWidth) * devicePixelRatio) / devicePixelRatio + halfWidth;\n}\n/**\n * Clears the entire canvas.\n */ function $8d27ca75da600b9c$export$c9170ad7d4cd7e57(canvas, ctx) {\n    if (!ctx && !canvas) return;\n    ctx = ctx || canvas.getContext(\"2d\");\n    ctx.save();\n    // canvas.width and canvas.height do not consider the canvas transform,\n    // while clearRect does\n    ctx.resetTransform();\n    ctx.clearRect(0, 0, canvas.width, canvas.height);\n    ctx.restore();\n}\nfunction $8d27ca75da600b9c$export$493d36ec626b6698(ctx, options, x, y) {\n    // eslint-disable-next-line @typescript-eslint/no-use-before-define\n    $8d27ca75da600b9c$export$24baa2b76016ce0e(ctx, options, x, y, null);\n}\n// eslint-disable-next-line complexity\nfunction $8d27ca75da600b9c$export$24baa2b76016ce0e(ctx, options, x, y, w) {\n    let type, xOffset, yOffset, size, cornerRadius, width, xOffsetW, yOffsetW;\n    const style = options.pointStyle;\n    const rotation = options.rotation;\n    const radius = options.radius;\n    let rad = (rotation || 0) * $8d27ca75da600b9c$export$53c86fa97d611818;\n    if (style && typeof style === \"object\") {\n        type = style.toString();\n        if (type === \"[object HTMLImageElement]\" || type === \"[object HTMLCanvasElement]\") {\n            ctx.save();\n            ctx.translate(x, y);\n            ctx.rotate(rad);\n            ctx.drawImage(style, -style.width / 2, -style.height / 2, style.width, style.height);\n            ctx.restore();\n            return;\n        }\n    }\n    if (isNaN(radius) || radius <= 0) return;\n    ctx.beginPath();\n    switch(style){\n        // Default includes circle\n        default:\n            if (w) ctx.ellipse(x, y, w / 2, radius, 0, 0, $8d27ca75da600b9c$export$971d5caa766a69d7);\n            else ctx.arc(x, y, radius, 0, $8d27ca75da600b9c$export$971d5caa766a69d7);\n            ctx.closePath();\n            break;\n        case \"triangle\":\n            width = w ? w / 2 : radius;\n            ctx.moveTo(x + Math.sin(rad) * width, y - Math.cos(rad) * radius);\n            rad += $8d27ca75da600b9c$export$7a0bdf7d4a91ea88;\n            ctx.lineTo(x + Math.sin(rad) * width, y - Math.cos(rad) * radius);\n            rad += $8d27ca75da600b9c$export$7a0bdf7d4a91ea88;\n            ctx.lineTo(x + Math.sin(rad) * width, y - Math.cos(rad) * radius);\n            ctx.closePath();\n            break;\n        case \"rectRounded\":\n            // NOTE: the rounded rect implementation changed to use `arc` instead of\n            // `quadraticCurveTo` since it generates better results when rect is\n            // almost a circle. 0.516 (instead of 0.5) produces results with visually\n            // closer proportion to the previous impl and it is inscribed in the\n            // circle with `radius`. For more details, see the following PRs:\n            // https://github.com/chartjs/Chart.js/issues/5597\n            // https://github.com/chartjs/Chart.js/issues/5858\n            cornerRadius = radius * 0.516;\n            size = radius - cornerRadius;\n            xOffset = Math.cos(rad + $8d27ca75da600b9c$export$39c1cc7c062529d4) * size;\n            xOffsetW = Math.cos(rad + $8d27ca75da600b9c$export$39c1cc7c062529d4) * (w ? w / 2 - cornerRadius : size);\n            yOffset = Math.sin(rad + $8d27ca75da600b9c$export$39c1cc7c062529d4) * size;\n            yOffsetW = Math.sin(rad + $8d27ca75da600b9c$export$39c1cc7c062529d4) * (w ? w / 2 - cornerRadius : size);\n            ctx.arc(x - xOffsetW, y - yOffset, cornerRadius, rad - $8d27ca75da600b9c$export$56c0d5a1e737357d, rad - $8d27ca75da600b9c$export$7f8ddf7c7c20b3cd);\n            ctx.arc(x + yOffsetW, y - xOffset, cornerRadius, rad - $8d27ca75da600b9c$export$7f8ddf7c7c20b3cd, rad);\n            ctx.arc(x + xOffsetW, y + yOffset, cornerRadius, rad, rad + $8d27ca75da600b9c$export$7f8ddf7c7c20b3cd);\n            ctx.arc(x - yOffsetW, y + xOffset, cornerRadius, rad + $8d27ca75da600b9c$export$7f8ddf7c7c20b3cd, rad + $8d27ca75da600b9c$export$56c0d5a1e737357d);\n            ctx.closePath();\n            break;\n        case \"rect\":\n            if (!rotation) {\n                size = Math.SQRT1_2 * radius;\n                width = w ? w / 2 : size;\n                ctx.rect(x - width, y - size, 2 * width, 2 * size);\n                break;\n            }\n            rad += $8d27ca75da600b9c$export$39c1cc7c062529d4;\n        /* falls through */ case \"rectRot\":\n            xOffsetW = Math.cos(rad) * (w ? w / 2 : radius);\n            xOffset = Math.cos(rad) * radius;\n            yOffset = Math.sin(rad) * radius;\n            yOffsetW = Math.sin(rad) * (w ? w / 2 : radius);\n            ctx.moveTo(x - xOffsetW, y - yOffset);\n            ctx.lineTo(x + yOffsetW, y - xOffset);\n            ctx.lineTo(x + xOffsetW, y + yOffset);\n            ctx.lineTo(x - yOffsetW, y + xOffset);\n            ctx.closePath();\n            break;\n        case \"crossRot\":\n            rad += $8d27ca75da600b9c$export$39c1cc7c062529d4;\n        /* falls through */ case \"cross\":\n            xOffsetW = Math.cos(rad) * (w ? w / 2 : radius);\n            xOffset = Math.cos(rad) * radius;\n            yOffset = Math.sin(rad) * radius;\n            yOffsetW = Math.sin(rad) * (w ? w / 2 : radius);\n            ctx.moveTo(x - xOffsetW, y - yOffset);\n            ctx.lineTo(x + xOffsetW, y + yOffset);\n            ctx.moveTo(x + yOffsetW, y - xOffset);\n            ctx.lineTo(x - yOffsetW, y + xOffset);\n            break;\n        case \"star\":\n            xOffsetW = Math.cos(rad) * (w ? w / 2 : radius);\n            xOffset = Math.cos(rad) * radius;\n            yOffset = Math.sin(rad) * radius;\n            yOffsetW = Math.sin(rad) * (w ? w / 2 : radius);\n            ctx.moveTo(x - xOffsetW, y - yOffset);\n            ctx.lineTo(x + xOffsetW, y + yOffset);\n            ctx.moveTo(x + yOffsetW, y - xOffset);\n            ctx.lineTo(x - yOffsetW, y + xOffset);\n            rad += $8d27ca75da600b9c$export$39c1cc7c062529d4;\n            xOffsetW = Math.cos(rad) * (w ? w / 2 : radius);\n            xOffset = Math.cos(rad) * radius;\n            yOffset = Math.sin(rad) * radius;\n            yOffsetW = Math.sin(rad) * (w ? w / 2 : radius);\n            ctx.moveTo(x - xOffsetW, y - yOffset);\n            ctx.lineTo(x + xOffsetW, y + yOffset);\n            ctx.moveTo(x + yOffsetW, y - xOffset);\n            ctx.lineTo(x - yOffsetW, y + xOffset);\n            break;\n        case \"line\":\n            xOffset = w ? w / 2 : Math.cos(rad) * radius;\n            yOffset = Math.sin(rad) * radius;\n            ctx.moveTo(x - xOffset, y - yOffset);\n            ctx.lineTo(x + xOffset, y + yOffset);\n            break;\n        case \"dash\":\n            ctx.moveTo(x, y);\n            ctx.lineTo(x + Math.cos(rad) * (w ? w / 2 : radius), y + Math.sin(rad) * radius);\n            break;\n        case false:\n            ctx.closePath();\n            break;\n    }\n    ctx.fill();\n    if (options.borderWidth > 0) ctx.stroke();\n}\n/**\n * Returns true if the point is inside the rectangle\n * @param point - The point to test\n * @param area - The rectangle\n * @param margin - allowed margin\n * @private\n */ function $8d27ca75da600b9c$export$e7094788287c5e9b(point, area, margin) {\n    margin = margin || 0.5; // margin - default is to match rounded decimals\n    return !area || point && point.x > area.left - margin && point.x < area.right + margin && point.y > area.top - margin && point.y < area.bottom + margin;\n}\nfunction $8d27ca75da600b9c$export$8743009a87fcb00f(ctx, area) {\n    ctx.save();\n    ctx.beginPath();\n    ctx.rect(area.left, area.top, area.right - area.left, area.bottom - area.top);\n    ctx.clip();\n}\nfunction $8d27ca75da600b9c$export$3d8c2f653ac9d0b9(ctx) {\n    ctx.restore();\n}\n/**\n * @private\n */ function $8d27ca75da600b9c$export$d24c54395ce0c509(ctx, previous, target, flip, mode) {\n    if (!previous) return ctx.lineTo(target.x, target.y);\n    if (mode === \"middle\") {\n        const midpoint = (previous.x + target.x) / 2.0;\n        ctx.lineTo(midpoint, previous.y);\n        ctx.lineTo(midpoint, target.y);\n    } else if (mode === \"after\" !== !!flip) ctx.lineTo(previous.x, target.y);\n    else ctx.lineTo(target.x, previous.y);\n    ctx.lineTo(target.x, target.y);\n}\n/**\n * @private\n */ function $8d27ca75da600b9c$export$6554612db691658e(ctx, previous, target, flip) {\n    if (!previous) return ctx.lineTo(target.x, target.y);\n    ctx.bezierCurveTo(flip ? previous.cp1x : previous.cp2x, flip ? previous.cp1y : previous.cp2y, flip ? target.cp2x : target.cp1x, flip ? target.cp2y : target.cp1y, target.x, target.y);\n}\nfunction $8d27ca75da600b9c$var$setRenderOpts(ctx, opts) {\n    if (opts.translation) ctx.translate(opts.translation[0], opts.translation[1]);\n    if (!$8d27ca75da600b9c$export$342063e11d6c3cad(opts.rotation)) ctx.rotate(opts.rotation);\n    if (opts.color) ctx.fillStyle = opts.color;\n    if (opts.textAlign) ctx.textAlign = opts.textAlign;\n    if (opts.textBaseline) ctx.textBaseline = opts.textBaseline;\n}\nfunction $8d27ca75da600b9c$var$decorateText(ctx, x, y, line, opts) {\n    if (opts.strikethrough || opts.underline) {\n        /**\n     * Now that IE11 support has been dropped, we can use more\n     * of the TextMetrics object. The actual bounding boxes\n     * are unflagged in Chrome, Firefox, Edge, and Safari so they\n     * can be safely used.\n     * See https://developer.mozilla.org/en-US/docs/Web/API/TextMetrics#Browser_compatibility\n     */ const metrics = ctx.measureText(line);\n        const left = x - metrics.actualBoundingBoxLeft;\n        const right = x + metrics.actualBoundingBoxRight;\n        const top = y - metrics.actualBoundingBoxAscent;\n        const bottom = y + metrics.actualBoundingBoxDescent;\n        const yDecoration = opts.strikethrough ? (top + bottom) / 2 : bottom;\n        ctx.strokeStyle = ctx.fillStyle;\n        ctx.beginPath();\n        ctx.lineWidth = opts.decorationWidth || 2;\n        ctx.moveTo(left, yDecoration);\n        ctx.lineTo(right, yDecoration);\n        ctx.stroke();\n    }\n}\nfunction $8d27ca75da600b9c$var$drawBackdrop(ctx, opts) {\n    const oldColor = ctx.fillStyle;\n    ctx.fillStyle = opts.color;\n    ctx.fillRect(opts.left, opts.top, opts.width, opts.height);\n    ctx.fillStyle = oldColor;\n}\n/**\n * Render text onto the canvas\n */ function $8d27ca75da600b9c$export$dc98b0b04f4c7758(ctx, text, x, y, font, opts = {}) {\n    const lines = $8d27ca75da600b9c$export$8b22cf2602fb60ce(text) ? text : [\n        text\n    ];\n    const stroke = opts.strokeWidth > 0 && opts.strokeColor !== \"\";\n    let i, line;\n    ctx.save();\n    ctx.font = font.string;\n    $8d27ca75da600b9c$var$setRenderOpts(ctx, opts);\n    for(i = 0; i < lines.length; ++i){\n        line = lines[i];\n        if (opts.backdrop) $8d27ca75da600b9c$var$drawBackdrop(ctx, opts.backdrop);\n        if (stroke) {\n            if (opts.strokeColor) ctx.strokeStyle = opts.strokeColor;\n            if (!$8d27ca75da600b9c$export$342063e11d6c3cad(opts.strokeWidth)) ctx.lineWidth = opts.strokeWidth;\n            ctx.strokeText(line, x, y, opts.maxWidth);\n        }\n        ctx.fillText(line, x, y, opts.maxWidth);\n        $8d27ca75da600b9c$var$decorateText(ctx, x, y, line, opts);\n        y += Number(font.lineHeight);\n    }\n    ctx.restore();\n}\n/**\n * Add a path of a rectangle with rounded corners to the current sub-path\n * @param ctx - Context\n * @param rect - Bounding rect\n */ function $8d27ca75da600b9c$export$1fbe638ecf81657e(ctx, rect) {\n    const { x: x, y: y, w: w, h: h, radius: radius } = rect;\n    // top left arc\n    ctx.arc(x + radius.topLeft, y + radius.topLeft, radius.topLeft, 1.5 * $8d27ca75da600b9c$export$56c0d5a1e737357d, $8d27ca75da600b9c$export$56c0d5a1e737357d, true);\n    // line from top left to bottom left\n    ctx.lineTo(x, y + h - radius.bottomLeft);\n    // bottom left arc\n    ctx.arc(x + radius.bottomLeft, y + h - radius.bottomLeft, radius.bottomLeft, $8d27ca75da600b9c$export$56c0d5a1e737357d, $8d27ca75da600b9c$export$7f8ddf7c7c20b3cd, true);\n    // line from bottom left to bottom right\n    ctx.lineTo(x + w - radius.bottomRight, y + h);\n    // bottom right arc\n    ctx.arc(x + w - radius.bottomRight, y + h - radius.bottomRight, radius.bottomRight, $8d27ca75da600b9c$export$7f8ddf7c7c20b3cd, 0, true);\n    // line from bottom right to top right\n    ctx.lineTo(x + w, y + radius.topRight);\n    // top right arc\n    ctx.arc(x + w - radius.topRight, y + radius.topRight, radius.topRight, 0, -$8d27ca75da600b9c$export$7f8ddf7c7c20b3cd, true);\n    // line from top right to top left\n    ctx.lineTo(x + radius.topLeft, y);\n}\nconst $8d27ca75da600b9c$var$LINE_HEIGHT = /^(normal|(\\d+(?:\\.\\d+)?)(px|em|%)?)$/;\nconst $8d27ca75da600b9c$var$FONT_STYLE = /^(normal|italic|initial|inherit|unset|(oblique( -?[0-9]?[0-9]deg)?))$/;\n/**\n * @alias Chart.helpers.options\n * @namespace\n */ /**\n * Converts the given line height `value` in pixels for a specific font `size`.\n * @param value - The lineHeight to parse (eg. 1.6, '14px', '75%', '1.6em').\n * @param size - The font size (in pixels) used to resolve relative `value`.\n * @returns The effective line height in pixels (size * 1.2 if value is invalid).\n * @see https://developer.mozilla.org/en-US/docs/Web/CSS/line-height\n * @since 2.7.0\n */ function $8d27ca75da600b9c$export$8c78c7c36408ea29(value, size) {\n    const matches = (\"\" + value).match($8d27ca75da600b9c$var$LINE_HEIGHT);\n    if (!matches || matches[1] === \"normal\") return size * 1.2;\n    value = +matches[2];\n    switch(matches[3]){\n        case \"px\":\n            return value;\n        case \"%\":\n            value /= 100;\n            break;\n    }\n    return size * value;\n}\nconst $8d27ca75da600b9c$var$numberOrZero = (v)=>+v || 0;\nfunction $8d27ca75da600b9c$export$21579262ef46735b(value, props) {\n    const ret = {};\n    const objProps = $8d27ca75da600b9c$export$23f2a1d2818174ef(props);\n    const keys = objProps ? Object.keys(props) : props;\n    const read = $8d27ca75da600b9c$export$23f2a1d2818174ef(value) ? objProps ? (prop)=>$8d27ca75da600b9c$export$90a7f3efeed30595(value[prop], value[props[prop]]) : (prop)=>value[prop] : ()=>value;\n    for (const prop of keys)ret[prop] = $8d27ca75da600b9c$var$numberOrZero(read(prop));\n    return ret;\n}\n/**\n * Converts the given value into a TRBL object.\n * @param value - If a number, set the value to all TRBL component,\n *  else, if an object, use defined properties and sets undefined ones to 0.\n *  x / y are shorthands for same value for left/right and top/bottom.\n * @returns The padding values (top, right, bottom, left)\n * @since 3.0.0\n */ function $8d27ca75da600b9c$export$d66dc83d8cfc8dd(value) {\n    return $8d27ca75da600b9c$export$21579262ef46735b(value, {\n        top: \"y\",\n        right: \"x\",\n        bottom: \"y\",\n        left: \"x\"\n    });\n}\n/**\n * Converts the given value into a TRBL corners object (similar with css border-radius).\n * @param value - If a number, set the value to all TRBL corner components,\n *  else, if an object, use defined properties and sets undefined ones to 0.\n * @returns The TRBL corner values (topLeft, topRight, bottomLeft, bottomRight)\n * @since 3.0.0\n */ function $8d27ca75da600b9c$export$92108d983e8ee699(value) {\n    return $8d27ca75da600b9c$export$21579262ef46735b(value, [\n        \"topLeft\",\n        \"topRight\",\n        \"bottomLeft\",\n        \"bottomRight\"\n    ]);\n}\n/**\n * Converts the given value into a padding object with pre-computed width/height.\n * @param value - If a number, set the value to all TRBL component,\n *  else, if an object, use defined properties and sets undefined ones to 0.\n *  x / y are shorthands for same value for left/right and top/bottom.\n * @returns The padding values (top, right, bottom, left, width, height)\n * @since 2.7.0\n */ function $8d27ca75da600b9c$export$a9c23c6ac3fc3eca(value) {\n    const obj = $8d27ca75da600b9c$export$d66dc83d8cfc8dd(value);\n    obj.width = obj.left + obj.right;\n    obj.height = obj.top + obj.bottom;\n    return obj;\n}\n/**\n * Parses font options and returns the font object.\n * @param options - A object that contains font options to be parsed.\n * @param fallback - A object that contains fallback font options.\n * @return The font object.\n * @private\n */ function $8d27ca75da600b9c$export$34aec0b863436764(options, fallback) {\n    options = options || {};\n    fallback = fallback || $8d27ca75da600b9c$export$4368d992c4eafac0.font;\n    let size = $8d27ca75da600b9c$export$90a7f3efeed30595(options.size, fallback.size);\n    if (typeof size === \"string\") size = parseInt(size, 10);\n    let style = $8d27ca75da600b9c$export$90a7f3efeed30595(options.style, fallback.style);\n    if (style && !(\"\" + style).match($8d27ca75da600b9c$var$FONT_STYLE)) {\n        console.warn('Invalid font style specified: \"' + style + '\"');\n        style = undefined;\n    }\n    const font = {\n        family: $8d27ca75da600b9c$export$90a7f3efeed30595(options.family, fallback.family),\n        lineHeight: $8d27ca75da600b9c$export$8c78c7c36408ea29($8d27ca75da600b9c$export$90a7f3efeed30595(options.lineHeight, fallback.lineHeight), size),\n        size: size,\n        style: style,\n        weight: $8d27ca75da600b9c$export$90a7f3efeed30595(options.weight, fallback.weight),\n        string: \"\"\n    };\n    font.string = $8d27ca75da600b9c$export$1a8f5705751d8277(font);\n    return font;\n}\n/**\n * Evaluates the given `inputs` sequentially and returns the first defined value.\n * @param inputs - An array of values, falling back to the last value.\n * @param context - If defined and the current value is a function, the value\n * is called with `context` as first argument and the result becomes the new input.\n * @param index - If defined and the current value is an array, the value\n * at `index` become the new input.\n * @param info - object to return information about resolution in\n * @param info.cacheable - Will be set to `false` if option is not cacheable.\n * @since 2.7.0\n */ function $8d27ca75da600b9c$export$407448d2b89b1813(inputs, context, index, info) {\n    let cacheable = true;\n    let i, ilen, value;\n    for(i = 0, ilen = inputs.length; i < ilen; ++i){\n        value = inputs[i];\n        if (value === undefined) continue;\n        if (context !== undefined && typeof value === \"function\") {\n            value = value(context);\n            cacheable = false;\n        }\n        if (index !== undefined && $8d27ca75da600b9c$export$8b22cf2602fb60ce(value)) {\n            value = value[index % value.length];\n            cacheable = false;\n        }\n        if (value !== undefined) {\n            if (info && !cacheable) info.cacheable = false;\n            return value;\n        }\n    }\n}\n/**\n * @param minmax\n * @param grace\n * @param beginAtZero\n * @private\n */ function $8d27ca75da600b9c$export$db202ddc8be9136(minmax, grace, beginAtZero) {\n    const { min: min, max: max } = minmax;\n    const change = $8d27ca75da600b9c$export$7ccc53e8f1e7dfc5(grace, (max - min) / 2);\n    const keepZero = (value, add)=>beginAtZero && value === 0 ? 0 : value + add;\n    return {\n        min: keepZero(min, -Math.abs(change)),\n        max: keepZero(max, change)\n    };\n}\nfunction $8d27ca75da600b9c$export$35e795649ee09318(parentContext, context) {\n    return Object.assign(Object.create(parentContext), context);\n}\n/**\n * Creates a Proxy for resolving raw values for options.\n * @param scopes - The option scopes to look for values, in resolution order\n * @param prefixes - The prefixes for values, in resolution order.\n * @param rootScopes - The root option scopes\n * @param fallback - Parent scopes fallback\n * @param getTarget - callback for getting the target for changed values\n * @returns Proxy\n * @private\n */ function $8d27ca75da600b9c$export$a9c996f45e5784d0(scopes, prefixes = [\n    \"\"\n], rootScopes, fallback, getTarget = ()=>scopes[0]) {\n    const finalRootScopes = rootScopes || scopes;\n    if (typeof fallback === \"undefined\") fallback = $8d27ca75da600b9c$var$_resolve(\"_fallback\", scopes);\n    const cache = {\n        [Symbol.toStringTag]: \"Object\",\n        _cacheable: true,\n        _scopes: scopes,\n        _rootScopes: finalRootScopes,\n        _fallback: fallback,\n        _getTarget: getTarget,\n        override: (scope)=>$8d27ca75da600b9c$export$a9c996f45e5784d0([\n                scope,\n                ...scopes\n            ], prefixes, finalRootScopes, fallback)\n    };\n    return new Proxy(cache, {\n        /**\n     * A trap for the delete operator.\n     */ deleteProperty (target, prop) {\n            delete target[prop]; // remove from cache\n            delete target._keys; // remove cached keys\n            delete scopes[0][prop]; // remove from top level scope\n            return true;\n        },\n        /**\n     * A trap for getting property values.\n     */ get (target, prop) {\n            return $8d27ca75da600b9c$var$_cached(target, prop, ()=>$8d27ca75da600b9c$var$_resolveWithPrefixes(prop, prefixes, scopes, target));\n        },\n        /**\n     * A trap for Object.getOwnPropertyDescriptor.\n     * Also used by Object.hasOwnProperty.\n     */ getOwnPropertyDescriptor (target, prop) {\n            return Reflect.getOwnPropertyDescriptor(target._scopes[0], prop);\n        },\n        /**\n     * A trap for Object.getPrototypeOf.\n     */ getPrototypeOf () {\n            return Reflect.getPrototypeOf(scopes[0]);\n        },\n        /**\n     * A trap for the in operator.\n     */ has (target, prop) {\n            return $8d27ca75da600b9c$var$getKeysFromAllScopes(target).includes(prop);\n        },\n        /**\n     * A trap for Object.getOwnPropertyNames and Object.getOwnPropertySymbols.\n     */ ownKeys (target) {\n            return $8d27ca75da600b9c$var$getKeysFromAllScopes(target);\n        },\n        /**\n     * A trap for setting property values.\n     */ set (target, prop, value) {\n            const storage = target._storage || (target._storage = getTarget());\n            target[prop] = storage[prop] = value; // set to top level scope + cache\n            delete target._keys; // remove cached keys\n            return true;\n        }\n    });\n}\n/**\n * Returns an Proxy for resolving option values with context.\n * @param proxy - The Proxy returned by `_createResolver`\n * @param context - Context object for scriptable/indexable options\n * @param subProxy - The proxy provided for scriptable options\n * @param descriptorDefaults - Defaults for descriptors\n * @private\n */ function $8d27ca75da600b9c$export$c3950d9923825c02(proxy, context, subProxy, descriptorDefaults) {\n    const cache = {\n        _cacheable: false,\n        _proxy: proxy,\n        _context: context,\n        _subProxy: subProxy,\n        _stack: new Set(),\n        _descriptors: $8d27ca75da600b9c$export$7910e0436ed8d1de(proxy, descriptorDefaults),\n        setContext: (ctx)=>$8d27ca75da600b9c$export$c3950d9923825c02(proxy, ctx, subProxy, descriptorDefaults),\n        override: (scope)=>$8d27ca75da600b9c$export$c3950d9923825c02(proxy.override(scope), context, subProxy, descriptorDefaults)\n    };\n    return new Proxy(cache, {\n        /**\n     * A trap for the delete operator.\n     */ deleteProperty (target, prop) {\n            delete target[prop]; // remove from cache\n            delete proxy[prop]; // remove from proxy\n            return true;\n        },\n        /**\n     * A trap for getting property values.\n     */ get (target, prop, receiver) {\n            return $8d27ca75da600b9c$var$_cached(target, prop, ()=>$8d27ca75da600b9c$var$_resolveWithContext(target, prop, receiver));\n        },\n        /**\n     * A trap for Object.getOwnPropertyDescriptor.\n     * Also used by Object.hasOwnProperty.\n     */ getOwnPropertyDescriptor (target, prop) {\n            return target._descriptors.allKeys ? Reflect.has(proxy, prop) ? {\n                enumerable: true,\n                configurable: true\n            } : undefined : Reflect.getOwnPropertyDescriptor(proxy, prop);\n        },\n        /**\n     * A trap for Object.getPrototypeOf.\n     */ getPrototypeOf () {\n            return Reflect.getPrototypeOf(proxy);\n        },\n        /**\n     * A trap for the in operator.\n     */ has (target, prop) {\n            return Reflect.has(proxy, prop);\n        },\n        /**\n     * A trap for Object.getOwnPropertyNames and Object.getOwnPropertySymbols.\n     */ ownKeys () {\n            return Reflect.ownKeys(proxy);\n        },\n        /**\n     * A trap for setting property values.\n     */ set (target, prop, value) {\n            proxy[prop] = value; // set to proxy\n            delete target[prop]; // remove from cache\n            return true;\n        }\n    });\n}\n/**\n * @private\n */ function $8d27ca75da600b9c$export$7910e0436ed8d1de(proxy, defaults = {\n    scriptable: true,\n    indexable: true\n}) {\n    const { _scriptable: _scriptable = defaults.scriptable, _indexable: _indexable = defaults.indexable, _allKeys: _allKeys = defaults.allKeys } = proxy;\n    return {\n        allKeys: _allKeys,\n        scriptable: _scriptable,\n        indexable: _indexable,\n        isScriptable: $8d27ca75da600b9c$export$a93c5207d687da10(_scriptable) ? _scriptable : ()=>_scriptable,\n        isIndexable: $8d27ca75da600b9c$export$a93c5207d687da10(_indexable) ? _indexable : ()=>_indexable\n    };\n}\nconst $8d27ca75da600b9c$var$readKey = (prefix, name)=>prefix ? prefix + $8d27ca75da600b9c$export$a8550f7dbe79f93a(name) : name;\nconst $8d27ca75da600b9c$var$needsSubResolver = (prop, value)=>$8d27ca75da600b9c$export$23f2a1d2818174ef(value) && prop !== \"adapters\" && (Object.getPrototypeOf(value) === null || value.constructor === Object);\nfunction $8d27ca75da600b9c$var$_cached(target, prop, resolve) {\n    if (Object.prototype.hasOwnProperty.call(target, prop) || prop === \"constructor\") return target[prop];\n    const value = resolve();\n    // cache the resolved value\n    target[prop] = value;\n    return value;\n}\nfunction $8d27ca75da600b9c$var$_resolveWithContext(target, prop, receiver) {\n    const { _proxy: _proxy, _context: _context, _subProxy: _subProxy, _descriptors: descriptors } = target;\n    let value = _proxy[prop]; // resolve from proxy\n    // resolve with context\n    if ($8d27ca75da600b9c$export$a93c5207d687da10(value) && descriptors.isScriptable(prop)) value = $8d27ca75da600b9c$var$_resolveScriptable(prop, value, target, receiver);\n    if ($8d27ca75da600b9c$export$8b22cf2602fb60ce(value) && value.length) value = $8d27ca75da600b9c$var$_resolveArray(prop, value, target, descriptors.isIndexable);\n    if ($8d27ca75da600b9c$var$needsSubResolver(prop, value)) // if the resolved value is an object, create a sub resolver for it\n    value = $8d27ca75da600b9c$export$c3950d9923825c02(value, _context, _subProxy && _subProxy[prop], descriptors);\n    return value;\n}\nfunction $8d27ca75da600b9c$var$_resolveScriptable(prop, getValue, target, receiver) {\n    const { _proxy: _proxy, _context: _context, _subProxy: _subProxy, _stack: _stack } = target;\n    if (_stack.has(prop)) throw new Error(\"Recursion detected: \" + Array.from(_stack).join(\"->\") + \"->\" + prop);\n    _stack.add(prop);\n    let value = getValue(_context, _subProxy || receiver);\n    _stack.delete(prop);\n    if ($8d27ca75da600b9c$var$needsSubResolver(prop, value)) // When scriptable option returns an object, create a resolver on that.\n    value = $8d27ca75da600b9c$var$createSubResolver(_proxy._scopes, _proxy, prop, value);\n    return value;\n}\nfunction $8d27ca75da600b9c$var$_resolveArray(prop, value, target, isIndexable) {\n    const { _proxy: _proxy, _context: _context, _subProxy: _subProxy, _descriptors: descriptors } = target;\n    if (typeof _context.index !== \"undefined\" && isIndexable(prop)) return value[_context.index % value.length];\n    else if ($8d27ca75da600b9c$export$23f2a1d2818174ef(value[0])) {\n        // Array of objects, return array or resolvers\n        const arr = value;\n        const scopes = _proxy._scopes.filter((s)=>s !== arr);\n        value = [];\n        for (const item of arr){\n            const resolver = $8d27ca75da600b9c$var$createSubResolver(scopes, _proxy, prop, item);\n            value.push($8d27ca75da600b9c$export$c3950d9923825c02(resolver, _context, _subProxy && _subProxy[prop], descriptors));\n        }\n    }\n    return value;\n}\nfunction $8d27ca75da600b9c$var$resolveFallback(fallback, prop, value) {\n    return $8d27ca75da600b9c$export$a93c5207d687da10(fallback) ? fallback(prop, value) : fallback;\n}\nconst $8d27ca75da600b9c$var$getScope = (key, parent)=>key === true ? parent : typeof key === \"string\" ? $8d27ca75da600b9c$export$2d1720544b23b823(parent, key) : undefined;\nfunction $8d27ca75da600b9c$var$addScopes(set, parentScopes, key, parentFallback, value) {\n    for (const parent of parentScopes){\n        const scope = $8d27ca75da600b9c$var$getScope(key, parent);\n        if (scope) {\n            set.add(scope);\n            const fallback = $8d27ca75da600b9c$var$resolveFallback(scope._fallback, key, value);\n            if (typeof fallback !== \"undefined\" && fallback !== key && fallback !== parentFallback) // When we reach the descriptor that defines a new _fallback, return that.\n            // The fallback will resume to that new scope.\n            return fallback;\n        } else if (scope === false && typeof parentFallback !== \"undefined\" && key !== parentFallback) // Fallback to `false` results to `false`, when falling back to different key.\n        // For example `interaction` from `hover` or `plugins.tooltip` and `animation` from `animations`\n        return null;\n    }\n    return false;\n}\nfunction $8d27ca75da600b9c$var$createSubResolver(parentScopes, resolver, prop, value) {\n    const rootScopes = resolver._rootScopes;\n    const fallback = $8d27ca75da600b9c$var$resolveFallback(resolver._fallback, prop, value);\n    const allScopes = [\n        ...parentScopes,\n        ...rootScopes\n    ];\n    const set = new Set();\n    set.add(value);\n    let key = $8d27ca75da600b9c$var$addScopesFromKey(set, allScopes, prop, fallback || prop, value);\n    if (key === null) return false;\n    if (typeof fallback !== \"undefined\" && fallback !== prop) {\n        key = $8d27ca75da600b9c$var$addScopesFromKey(set, allScopes, fallback, key, value);\n        if (key === null) return false;\n    }\n    return $8d27ca75da600b9c$export$a9c996f45e5784d0(Array.from(set), [\n        \"\"\n    ], rootScopes, fallback, ()=>$8d27ca75da600b9c$var$subGetTarget(resolver, prop, value));\n}\nfunction $8d27ca75da600b9c$var$addScopesFromKey(set, allScopes, key, fallback, item) {\n    while(key)key = $8d27ca75da600b9c$var$addScopes(set, allScopes, key, fallback, item);\n    return key;\n}\nfunction $8d27ca75da600b9c$var$subGetTarget(resolver, prop, value) {\n    const parent = resolver._getTarget();\n    if (!(prop in parent)) parent[prop] = {};\n    const target = parent[prop];\n    if ($8d27ca75da600b9c$export$8b22cf2602fb60ce(target) && $8d27ca75da600b9c$export$23f2a1d2818174ef(value)) // For array of objects, the object is used to store updated values\n    return value;\n    return target || {};\n}\nfunction $8d27ca75da600b9c$var$_resolveWithPrefixes(prop, prefixes, scopes, proxy) {\n    let value;\n    for (const prefix of prefixes){\n        value = $8d27ca75da600b9c$var$_resolve($8d27ca75da600b9c$var$readKey(prefix, prop), scopes);\n        if (typeof value !== \"undefined\") return $8d27ca75da600b9c$var$needsSubResolver(prop, value) ? $8d27ca75da600b9c$var$createSubResolver(scopes, proxy, prop, value) : value;\n    }\n}\nfunction $8d27ca75da600b9c$var$_resolve(key, scopes) {\n    for (const scope of scopes){\n        if (!scope) continue;\n        const value = scope[key];\n        if (typeof value !== \"undefined\") return value;\n    }\n}\nfunction $8d27ca75da600b9c$var$getKeysFromAllScopes(target) {\n    let keys = target._keys;\n    if (!keys) keys = target._keys = $8d27ca75da600b9c$var$resolveKeysFromAllScopes(target._scopes);\n    return keys;\n}\nfunction $8d27ca75da600b9c$var$resolveKeysFromAllScopes(scopes) {\n    const set = new Set();\n    for (const scope of scopes)for (const key of Object.keys(scope).filter((k)=>!k.startsWith(\"_\")))set.add(key);\n    return Array.from(set);\n}\nfunction $8d27ca75da600b9c$export$4a5767248b18ef41(meta, data, start, count) {\n    const { iScale: iScale } = meta;\n    const { key: key = \"r\" } = this._parsing;\n    const parsed = new Array(count);\n    let i, ilen, index, item;\n    for(i = 0, ilen = count; i < ilen; ++i){\n        index = i + start;\n        item = data[index];\n        parsed[i] = {\n            r: iScale.parse($8d27ca75da600b9c$export$2d1720544b23b823(item, key), index)\n        };\n    }\n    return parsed;\n}\nconst $8d27ca75da600b9c$var$EPSILON = Number.EPSILON || 1e-14;\nconst $8d27ca75da600b9c$var$getPoint = (points, i)=>i < points.length && !points[i].skip && points[i];\nconst $8d27ca75da600b9c$var$getValueAxis = (indexAxis)=>indexAxis === \"x\" ? \"y\" : \"x\";\nfunction $8d27ca75da600b9c$export$e171bab687b50e0(firstPoint, middlePoint, afterPoint, t) {\n    // Props to Rob Spencer at scaled innovation for his post on splining between points\n    // http://scaledinnovation.com/analytics/splines/aboutSplines.html\n    // This function must also respect \"skipped\" points\n    const previous = firstPoint.skip ? middlePoint : firstPoint;\n    const current = middlePoint;\n    const next = afterPoint.skip ? middlePoint : afterPoint;\n    const d01 = $8d27ca75da600b9c$export$158acd800e1ef08b(current, previous);\n    const d12 = $8d27ca75da600b9c$export$158acd800e1ef08b(next, current);\n    let s01 = d01 / (d01 + d12);\n    let s12 = d12 / (d01 + d12);\n    // If all points are the same, s01 & s02 will be inf\n    s01 = isNaN(s01) ? 0 : s01;\n    s12 = isNaN(s12) ? 0 : s12;\n    const fa = t * s01; // scaling factor for triangle Ta\n    const fb = t * s12;\n    return {\n        previous: {\n            x: current.x - fa * (next.x - previous.x),\n            y: current.y - fa * (next.y - previous.y)\n        },\n        next: {\n            x: current.x + fb * (next.x - previous.x),\n            y: current.y + fb * (next.y - previous.y)\n        }\n    };\n}\n/**\n * Adjust tangents to ensure monotonic properties\n */ function $8d27ca75da600b9c$var$monotoneAdjust(points, deltaK, mK) {\n    const pointsLen = points.length;\n    let alphaK, betaK, tauK, squaredMagnitude, pointCurrent;\n    let pointAfter = $8d27ca75da600b9c$var$getPoint(points, 0);\n    for(let i = 0; i < pointsLen - 1; ++i){\n        pointCurrent = pointAfter;\n        pointAfter = $8d27ca75da600b9c$var$getPoint(points, i + 1);\n        if (!pointCurrent || !pointAfter) continue;\n        if ($8d27ca75da600b9c$export$a05254e7c3aeba6e(deltaK[i], 0, $8d27ca75da600b9c$var$EPSILON)) {\n            mK[i] = mK[i + 1] = 0;\n            continue;\n        }\n        alphaK = mK[i] / deltaK[i];\n        betaK = mK[i + 1] / deltaK[i];\n        squaredMagnitude = Math.pow(alphaK, 2) + Math.pow(betaK, 2);\n        if (squaredMagnitude <= 9) continue;\n        tauK = 3 / Math.sqrt(squaredMagnitude);\n        mK[i] = alphaK * tauK * deltaK[i];\n        mK[i + 1] = betaK * tauK * deltaK[i];\n    }\n}\nfunction $8d27ca75da600b9c$var$monotoneCompute(points, mK, indexAxis = \"x\") {\n    const valueAxis = $8d27ca75da600b9c$var$getValueAxis(indexAxis);\n    const pointsLen = points.length;\n    let delta, pointBefore, pointCurrent;\n    let pointAfter = $8d27ca75da600b9c$var$getPoint(points, 0);\n    for(let i = 0; i < pointsLen; ++i){\n        pointBefore = pointCurrent;\n        pointCurrent = pointAfter;\n        pointAfter = $8d27ca75da600b9c$var$getPoint(points, i + 1);\n        if (!pointCurrent) continue;\n        const iPixel = pointCurrent[indexAxis];\n        const vPixel = pointCurrent[valueAxis];\n        if (pointBefore) {\n            delta = (iPixel - pointBefore[indexAxis]) / 3;\n            pointCurrent[`cp1${indexAxis}`] = iPixel - delta;\n            pointCurrent[`cp1${valueAxis}`] = vPixel - delta * mK[i];\n        }\n        if (pointAfter) {\n            delta = (pointAfter[indexAxis] - iPixel) / 3;\n            pointCurrent[`cp2${indexAxis}`] = iPixel + delta;\n            pointCurrent[`cp2${valueAxis}`] = vPixel + delta * mK[i];\n        }\n    }\n}\n/**\n * This function calculates Bézier control points in a similar way than |splineCurve|,\n * but preserves monotonicity of the provided data and ensures no local extremums are added\n * between the dataset discrete points due to the interpolation.\n * See : https://en.wikipedia.org/wiki/Monotone_cubic_interpolation\n */ function $8d27ca75da600b9c$export$527e9aa3390079e9(points, indexAxis = \"x\") {\n    const valueAxis = $8d27ca75da600b9c$var$getValueAxis(indexAxis);\n    const pointsLen = points.length;\n    const deltaK = Array(pointsLen).fill(0);\n    const mK = Array(pointsLen);\n    // Calculate slopes (deltaK) and initialize tangents (mK)\n    let i, pointBefore, pointCurrent;\n    let pointAfter = $8d27ca75da600b9c$var$getPoint(points, 0);\n    for(i = 0; i < pointsLen; ++i){\n        pointBefore = pointCurrent;\n        pointCurrent = pointAfter;\n        pointAfter = $8d27ca75da600b9c$var$getPoint(points, i + 1);\n        if (!pointCurrent) continue;\n        if (pointAfter) {\n            const slopeDelta = pointAfter[indexAxis] - pointCurrent[indexAxis];\n            // In the case of two points that appear at the same x pixel, slopeDeltaX is 0\n            deltaK[i] = slopeDelta !== 0 ? (pointAfter[valueAxis] - pointCurrent[valueAxis]) / slopeDelta : 0;\n        }\n        mK[i] = !pointBefore ? deltaK[i] : !pointAfter ? deltaK[i - 1] : $8d27ca75da600b9c$export$2408f22a0fab9ae5(deltaK[i - 1]) !== $8d27ca75da600b9c$export$2408f22a0fab9ae5(deltaK[i]) ? 0 : (deltaK[i - 1] + deltaK[i]) / 2;\n    }\n    $8d27ca75da600b9c$var$monotoneAdjust(points, deltaK, mK);\n    $8d27ca75da600b9c$var$monotoneCompute(points, mK, indexAxis);\n}\nfunction $8d27ca75da600b9c$var$capControlPoint(pt, min, max) {\n    return Math.max(Math.min(pt, max), min);\n}\nfunction $8d27ca75da600b9c$var$capBezierPoints(points, area) {\n    let i, ilen, point, inArea, inAreaPrev;\n    let inAreaNext = $8d27ca75da600b9c$export$e7094788287c5e9b(points[0], area);\n    for(i = 0, ilen = points.length; i < ilen; ++i){\n        inAreaPrev = inArea;\n        inArea = inAreaNext;\n        inAreaNext = i < ilen - 1 && $8d27ca75da600b9c$export$e7094788287c5e9b(points[i + 1], area);\n        if (!inArea) continue;\n        point = points[i];\n        if (inAreaPrev) {\n            point.cp1x = $8d27ca75da600b9c$var$capControlPoint(point.cp1x, area.left, area.right);\n            point.cp1y = $8d27ca75da600b9c$var$capControlPoint(point.cp1y, area.top, area.bottom);\n        }\n        if (inAreaNext) {\n            point.cp2x = $8d27ca75da600b9c$var$capControlPoint(point.cp2x, area.left, area.right);\n            point.cp2y = $8d27ca75da600b9c$var$capControlPoint(point.cp2y, area.top, area.bottom);\n        }\n    }\n}\n/**\n * @private\n */ function $8d27ca75da600b9c$export$ab83b03e4111b1d0(points, options, area, loop, indexAxis) {\n    let i, ilen, point, controlPoints;\n    // Only consider points that are drawn in case the spanGaps option is used\n    if (options.spanGaps) points = points.filter((pt)=>!pt.skip);\n    if (options.cubicInterpolationMode === \"monotone\") $8d27ca75da600b9c$export$527e9aa3390079e9(points, indexAxis);\n    else {\n        let prev = loop ? points[points.length - 1] : points[0];\n        for(i = 0, ilen = points.length; i < ilen; ++i){\n            point = points[i];\n            controlPoints = $8d27ca75da600b9c$export$e171bab687b50e0(prev, point, points[Math.min(i + 1, ilen - (loop ? 0 : 1)) % ilen], options.tension);\n            point.cp1x = controlPoints.previous.x;\n            point.cp1y = controlPoints.previous.y;\n            point.cp2x = controlPoints.next.x;\n            point.cp2y = controlPoints.next.y;\n            prev = point;\n        }\n    }\n    if (options.capBezierPoints) $8d27ca75da600b9c$var$capBezierPoints(points, area);\n}\n/**\n * Note: typedefs are auto-exported, so use a made-up `dom` namespace where\n * necessary to avoid duplicates with `export * from './helpers`; see\n * https://github.com/microsoft/TypeScript/issues/46011\n * @typedef { import('../core/core.controller.js').default } dom.Chart\n * @typedef { import('../../types').ChartEvent } ChartEvent\n */ /**\n * @private\n */ function $8d27ca75da600b9c$export$3a1a48c8f6ef640e() {\n    return typeof window !== \"undefined\" && typeof document !== \"undefined\";\n}\n/**\n * @private\n */ function $8d27ca75da600b9c$export$9bb611d729802a56(domNode) {\n    let parent = domNode.parentNode;\n    if (parent && parent.toString() === \"[object ShadowRoot]\") parent = parent.host;\n    return parent;\n}\n/**\n * convert max-width/max-height values that may be percentages into a number\n * @private\n */ function $8d27ca75da600b9c$var$parseMaxStyle(styleValue, node, parentProperty) {\n    let valueInPixels;\n    if (typeof styleValue === \"string\") {\n        valueInPixels = parseInt(styleValue, 10);\n        if (styleValue.indexOf(\"%\") !== -1) // percentage * size in dimension\n        valueInPixels = valueInPixels / 100 * node.parentNode[parentProperty];\n    } else valueInPixels = styleValue;\n    return valueInPixels;\n}\nconst $8d27ca75da600b9c$var$getComputedStyle = (element)=>element.ownerDocument.defaultView.getComputedStyle(element, null);\nfunction $8d27ca75da600b9c$export$a17c37559e1db147(el, property) {\n    return $8d27ca75da600b9c$var$getComputedStyle(el).getPropertyValue(property);\n}\nconst $8d27ca75da600b9c$var$positions = [\n    \"top\",\n    \"right\",\n    \"bottom\",\n    \"left\"\n];\nfunction $8d27ca75da600b9c$var$getPositionedStyle(styles, style, suffix) {\n    const result = {};\n    suffix = suffix ? \"-\" + suffix : \"\";\n    for(let i = 0; i < 4; i++){\n        const pos = $8d27ca75da600b9c$var$positions[i];\n        result[pos] = parseFloat(styles[style + \"-\" + pos + suffix]) || 0;\n    }\n    result.width = result.left + result.right;\n    result.height = result.top + result.bottom;\n    return result;\n}\nconst $8d27ca75da600b9c$var$useOffsetPos = (x, y, target)=>(x > 0 || y > 0) && (!target || !target.shadowRoot);\n/**\n * @param e\n * @param canvas\n * @returns Canvas position\n */ function $8d27ca75da600b9c$var$getCanvasPosition(e, canvas) {\n    const touches = e.touches;\n    const source = touches && touches.length ? touches[0] : e;\n    const { offsetX: offsetX, offsetY: offsetY } = source;\n    let box = false;\n    let x, y;\n    if ($8d27ca75da600b9c$var$useOffsetPos(offsetX, offsetY, e.target)) {\n        x = offsetX;\n        y = offsetY;\n    } else {\n        const rect = canvas.getBoundingClientRect();\n        x = source.clientX - rect.left;\n        y = source.clientY - rect.top;\n        box = true;\n    }\n    return {\n        x: x,\n        y: y,\n        box: box\n    };\n}\n/**\n * Gets an event's x, y coordinates, relative to the chart area\n * @param event\n * @param chart\n * @returns x and y coordinates of the event\n */ function $8d27ca75da600b9c$export$df995fae86a55f06(event, chart) {\n    if (\"native\" in event) return event;\n    const { canvas: canvas, currentDevicePixelRatio: currentDevicePixelRatio } = chart;\n    const style = $8d27ca75da600b9c$var$getComputedStyle(canvas);\n    const borderBox = style.boxSizing === \"border-box\";\n    const paddings = $8d27ca75da600b9c$var$getPositionedStyle(style, \"padding\");\n    const borders = $8d27ca75da600b9c$var$getPositionedStyle(style, \"border\", \"width\");\n    const { x: x, y: y, box: box } = $8d27ca75da600b9c$var$getCanvasPosition(event, canvas);\n    const xOffset = paddings.left + (box && borders.left);\n    const yOffset = paddings.top + (box && borders.top);\n    let { width: width, height: height } = chart;\n    if (borderBox) {\n        width -= paddings.width + borders.width;\n        height -= paddings.height + borders.height;\n    }\n    return {\n        x: Math.round((x - xOffset) / width * canvas.width / currentDevicePixelRatio),\n        y: Math.round((y - yOffset) / height * canvas.height / currentDevicePixelRatio)\n    };\n}\nfunction $8d27ca75da600b9c$var$getContainerSize(canvas, width, height) {\n    let maxWidth, maxHeight;\n    if (width === undefined || height === undefined) {\n        const container = canvas && $8d27ca75da600b9c$export$9bb611d729802a56(canvas);\n        if (!container) {\n            width = canvas.clientWidth;\n            height = canvas.clientHeight;\n        } else {\n            const rect = container.getBoundingClientRect(); // this is the border box of the container\n            const containerStyle = $8d27ca75da600b9c$var$getComputedStyle(container);\n            const containerBorder = $8d27ca75da600b9c$var$getPositionedStyle(containerStyle, \"border\", \"width\");\n            const containerPadding = $8d27ca75da600b9c$var$getPositionedStyle(containerStyle, \"padding\");\n            width = rect.width - containerPadding.width - containerBorder.width;\n            height = rect.height - containerPadding.height - containerBorder.height;\n            maxWidth = $8d27ca75da600b9c$var$parseMaxStyle(containerStyle.maxWidth, container, \"clientWidth\");\n            maxHeight = $8d27ca75da600b9c$var$parseMaxStyle(containerStyle.maxHeight, container, \"clientHeight\");\n        }\n    }\n    return {\n        width: width,\n        height: height,\n        maxWidth: maxWidth || $8d27ca75da600b9c$export$2ec5befb9e6c97d4,\n        maxHeight: maxHeight || $8d27ca75da600b9c$export$2ec5befb9e6c97d4\n    };\n}\nconst $8d27ca75da600b9c$var$round1 = (v)=>Math.round(v * 10) / 10;\n// eslint-disable-next-line complexity\nfunction $8d27ca75da600b9c$export$2329c99376c9d0a4(canvas, bbWidth, bbHeight, aspectRatio) {\n    const style = $8d27ca75da600b9c$var$getComputedStyle(canvas);\n    const margins = $8d27ca75da600b9c$var$getPositionedStyle(style, \"margin\");\n    const maxWidth = $8d27ca75da600b9c$var$parseMaxStyle(style.maxWidth, canvas, \"clientWidth\") || $8d27ca75da600b9c$export$2ec5befb9e6c97d4;\n    const maxHeight = $8d27ca75da600b9c$var$parseMaxStyle(style.maxHeight, canvas, \"clientHeight\") || $8d27ca75da600b9c$export$2ec5befb9e6c97d4;\n    const containerSize = $8d27ca75da600b9c$var$getContainerSize(canvas, bbWidth, bbHeight);\n    let { width: width, height: height } = containerSize;\n    if (style.boxSizing === \"content-box\") {\n        const borders = $8d27ca75da600b9c$var$getPositionedStyle(style, \"border\", \"width\");\n        const paddings = $8d27ca75da600b9c$var$getPositionedStyle(style, \"padding\");\n        width -= paddings.width + borders.width;\n        height -= paddings.height + borders.height;\n    }\n    width = Math.max(0, width - margins.width);\n    height = Math.max(0, aspectRatio ? width / aspectRatio : height - margins.height);\n    width = $8d27ca75da600b9c$var$round1(Math.min(width, maxWidth, containerSize.maxWidth));\n    height = $8d27ca75da600b9c$var$round1(Math.min(height, maxHeight, containerSize.maxHeight));\n    if (width && !height) // https://github.com/chartjs/Chart.js/issues/4659\n    // If the canvas has width, but no height, default to aspectRatio of 2 (canvas default)\n    height = $8d27ca75da600b9c$var$round1(width / 2);\n    const maintainHeight = bbWidth !== undefined || bbHeight !== undefined;\n    if (maintainHeight && aspectRatio && containerSize.height && height > containerSize.height) {\n        height = containerSize.height;\n        width = $8d27ca75da600b9c$var$round1(Math.floor(height * aspectRatio));\n    }\n    return {\n        width: width,\n        height: height\n    };\n}\n/**\n * @param chart\n * @param forceRatio\n * @param forceStyle\n * @returns True if the canvas context size or transformation has changed.\n */ function $8d27ca75da600b9c$export$f787f51d84a910ad(chart, forceRatio, forceStyle) {\n    const pixelRatio = forceRatio || 1;\n    const deviceHeight = Math.floor(chart.height * pixelRatio);\n    const deviceWidth = Math.floor(chart.width * pixelRatio);\n    chart.height = Math.floor(chart.height);\n    chart.width = Math.floor(chart.width);\n    const canvas = chart.canvas;\n    // If no style has been set on the canvas, the render size is used as display size,\n    // making the chart visually bigger, so let's enforce it to the \"correct\" values.\n    // See https://github.com/chartjs/Chart.js/issues/3575\n    if (canvas.style && (forceStyle || !canvas.style.height && !canvas.style.width)) {\n        canvas.style.height = `${chart.height}px`;\n        canvas.style.width = `${chart.width}px`;\n    }\n    if (chart.currentDevicePixelRatio !== pixelRatio || canvas.height !== deviceHeight || canvas.width !== deviceWidth) {\n        chart.currentDevicePixelRatio = pixelRatio;\n        canvas.height = deviceHeight;\n        canvas.width = deviceWidth;\n        chart.ctx.setTransform(pixelRatio, 0, 0, pixelRatio, 0, 0);\n        return true;\n    }\n    return false;\n}\n/**\n * Detects support for options object argument in addEventListener.\n * https://developer.mozilla.org/en-US/docs/Web/API/EventTarget/addEventListener#Safely_detecting_option_support\n * @private\n */ const $8d27ca75da600b9c$export$3466f893ebf79586 = function() {\n    let passiveSupported = false;\n    try {\n        const options = {\n            get passive () {\n                passiveSupported = true;\n                return false;\n            }\n        };\n        if ($8d27ca75da600b9c$export$3a1a48c8f6ef640e()) {\n            window.addEventListener(\"test\", null, options);\n            window.removeEventListener(\"test\", null, options);\n        }\n    } catch (e) {\n    // continue regardless of error\n    }\n    return passiveSupported;\n}();\n/**\n * The \"used\" size is the final value of a dimension property after all calculations have\n * been performed. This method uses the computed style of `element` but returns undefined\n * if the computed style is not expressed in pixels. That can happen in some cases where\n * `element` has a size relative to its parent and this last one is not yet displayed,\n * for example because of `display: none` on a parent node.\n * @see https://developer.mozilla.org/en-US/docs/Web/CSS/used_value\n * @returns Size in pixels or undefined if unknown.\n */ function $8d27ca75da600b9c$export$b4171a6734a65d42(element, property) {\n    const value = $8d27ca75da600b9c$export$a17c37559e1db147(element, property);\n    const matches = value && value.match(/^(\\d+)(\\.\\d+)?px$/);\n    return matches ? +matches[1] : undefined;\n}\n/**\n * @private\n */ function $8d27ca75da600b9c$export$8a5498727ef6be21(p1, p2, t, mode) {\n    return {\n        x: p1.x + t * (p2.x - p1.x),\n        y: p1.y + t * (p2.y - p1.y)\n    };\n}\n/**\n * @private\n */ function $8d27ca75da600b9c$export$7a38258bbe170828(p1, p2, t, mode) {\n    return {\n        x: p1.x + t * (p2.x - p1.x),\n        y: mode === \"middle\" ? t < 0.5 ? p1.y : p2.y : mode === \"after\" ? t < 1 ? p1.y : p2.y : t > 0 ? p2.y : p1.y\n    };\n}\n/**\n * @private\n */ function $8d27ca75da600b9c$export$2f6ca3d3b1f80bf5(p1, p2, t, mode) {\n    const cp1 = {\n        x: p1.cp2x,\n        y: p1.cp2y\n    };\n    const cp2 = {\n        x: p2.cp1x,\n        y: p2.cp1y\n    };\n    const a = $8d27ca75da600b9c$export$8a5498727ef6be21(p1, cp1, t);\n    const b = $8d27ca75da600b9c$export$8a5498727ef6be21(cp1, cp2, t);\n    const c = $8d27ca75da600b9c$export$8a5498727ef6be21(cp2, p2, t);\n    const d = $8d27ca75da600b9c$export$8a5498727ef6be21(a, b, t);\n    const e = $8d27ca75da600b9c$export$8a5498727ef6be21(b, c, t);\n    return $8d27ca75da600b9c$export$8a5498727ef6be21(d, e, t);\n}\nconst $8d27ca75da600b9c$var$getRightToLeftAdapter = function(rectX, width) {\n    return {\n        x (x) {\n            return rectX + rectX + width - x;\n        },\n        setWidth (w) {\n            width = w;\n        },\n        textAlign (align) {\n            if (align === \"center\") return align;\n            return align === \"right\" ? \"left\" : \"right\";\n        },\n        xPlus (x, value) {\n            return x - value;\n        },\n        leftForLtr (x, itemWidth) {\n            return x - itemWidth;\n        }\n    };\n};\nconst $8d27ca75da600b9c$var$getLeftToRightAdapter = function() {\n    return {\n        x (x) {\n            return x;\n        },\n        setWidth (w) {},\n        textAlign (align) {\n            return align;\n        },\n        xPlus (x, value) {\n            return x + value;\n        },\n        leftForLtr (x, _itemWidth) {\n            return x;\n        }\n    };\n};\nfunction $8d27ca75da600b9c$export$3d12bd131bb975d1(rtl, rectX, width) {\n    return rtl ? $8d27ca75da600b9c$var$getRightToLeftAdapter(rectX, width) : $8d27ca75da600b9c$var$getLeftToRightAdapter();\n}\nfunction $8d27ca75da600b9c$export$91c6e00c14e7e6fd(ctx, direction) {\n    let style, original;\n    if (direction === \"ltr\" || direction === \"rtl\") {\n        style = ctx.canvas.style;\n        original = [\n            style.getPropertyValue(\"direction\"),\n            style.getPropertyPriority(\"direction\")\n        ];\n        style.setProperty(\"direction\", direction, \"important\");\n        ctx.prevTextDirection = original;\n    }\n}\nfunction $8d27ca75da600b9c$export$890c4ad488842ce7(ctx, original) {\n    if (original !== undefined) {\n        delete ctx.prevTextDirection;\n        ctx.canvas.style.setProperty(\"direction\", original[0], original[1]);\n    }\n}\nfunction $8d27ca75da600b9c$var$propertyFn(property) {\n    if (property === \"angle\") return {\n        between: $8d27ca75da600b9c$export$ffb5f4729a158638,\n        compare: $8d27ca75da600b9c$export$c18d01048907ea92,\n        normalize: $8d27ca75da600b9c$export$28f7fcd39efa255\n    };\n    return {\n        between: $8d27ca75da600b9c$export$3b513254972cfc9c,\n        compare: (a, b)=>a - b,\n        normalize: (x)=>x\n    };\n}\nfunction $8d27ca75da600b9c$var$normalizeSegment({ start: start, end: end, count: count, loop: loop, style: style }) {\n    return {\n        start: start % count,\n        end: end % count,\n        loop: loop && (end - start + 1) % count === 0,\n        style: style\n    };\n}\nfunction $8d27ca75da600b9c$var$getSegment(segment, points, bounds) {\n    const { property: property, start: startBound, end: endBound } = bounds;\n    const { between: between, normalize: normalize } = $8d27ca75da600b9c$var$propertyFn(property);\n    const count = points.length;\n    let { start: start, end: end, loop: loop } = segment;\n    let i, ilen;\n    if (loop) {\n        start += count;\n        end += count;\n        for(i = 0, ilen = count; i < ilen; ++i){\n            if (!between(normalize(points[start % count][property]), startBound, endBound)) break;\n            start--;\n            end--;\n        }\n        start %= count;\n        end %= count;\n    }\n    if (end < start) end += count;\n    return {\n        start: start,\n        end: end,\n        loop: loop,\n        style: segment.style\n    };\n}\nfunction $8d27ca75da600b9c$export$9fa96a7d116ea3ce(segment, points, bounds) {\n    if (!bounds) return [\n        segment\n    ];\n    const { property: property, start: startBound, end: endBound } = bounds;\n    const count = points.length;\n    const { compare: compare, between: between, normalize: normalize } = $8d27ca75da600b9c$var$propertyFn(property);\n    const { start: start, end: end, loop: loop, style: style } = $8d27ca75da600b9c$var$getSegment(segment, points, bounds);\n    const result = [];\n    let inside = false;\n    let subStart = null;\n    let value, point, prevValue;\n    const startIsBefore = ()=>between(startBound, prevValue, value) && compare(startBound, prevValue) !== 0;\n    const endIsBefore = ()=>compare(endBound, value) === 0 || between(endBound, prevValue, value);\n    const shouldStart = ()=>inside || startIsBefore();\n    const shouldStop = ()=>!inside || endIsBefore();\n    for(let i = start, prev = start; i <= end; ++i){\n        point = points[i % count];\n        if (point.skip) continue;\n        value = normalize(point[property]);\n        if (value === prevValue) continue;\n        inside = between(value, startBound, endBound);\n        if (subStart === null && shouldStart()) subStart = compare(value, startBound) === 0 ? i : prev;\n        if (subStart !== null && shouldStop()) {\n            result.push($8d27ca75da600b9c$var$normalizeSegment({\n                start: subStart,\n                end: i,\n                loop: loop,\n                count: count,\n                style: style\n            }));\n            subStart = null;\n        }\n        prev = i;\n        prevValue = value;\n    }\n    if (subStart !== null) result.push($8d27ca75da600b9c$var$normalizeSegment({\n        start: subStart,\n        end: end,\n        loop: loop,\n        count: count,\n        style: style\n    }));\n    return result;\n}\nfunction $8d27ca75da600b9c$export$306ddfe3a8403e2(line, bounds) {\n    const result = [];\n    const segments = line.segments;\n    for(let i = 0; i < segments.length; i++){\n        const sub = $8d27ca75da600b9c$export$9fa96a7d116ea3ce(segments[i], line.points, bounds);\n        if (sub.length) result.push(...sub);\n    }\n    return result;\n}\nfunction $8d27ca75da600b9c$var$findStartAndEnd(points, count, loop, spanGaps) {\n    let start = 0;\n    let end = count - 1;\n    if (loop && !spanGaps) while(start < count && !points[start].skip)start++;\n    while(start < count && points[start].skip)start++;\n    start %= count;\n    if (loop) end += start;\n    while(end > start && points[end % count].skip)end--;\n    end %= count;\n    return {\n        start: start,\n        end: end\n    };\n}\nfunction $8d27ca75da600b9c$var$solidSegments(points, start, max, loop) {\n    const count = points.length;\n    const result = [];\n    let last = start;\n    let prev = points[start];\n    let end;\n    for(end = start + 1; end <= max; ++end){\n        const cur = points[end % count];\n        if (cur.skip || cur.stop) {\n            if (!prev.skip) {\n                loop = false;\n                result.push({\n                    start: start % count,\n                    end: (end - 1) % count,\n                    loop: loop\n                });\n                start = last = cur.stop ? end : null;\n            }\n        } else {\n            last = end;\n            if (prev.skip) start = end;\n        }\n        prev = cur;\n    }\n    if (last !== null) result.push({\n        start: start % count,\n        end: last % count,\n        loop: loop\n    });\n    return result;\n}\nfunction $8d27ca75da600b9c$export$1a82df3d29112e01(line, segmentOptions) {\n    const points = line.points;\n    const spanGaps = line.options.spanGaps;\n    const count = points.length;\n    if (!count) return [];\n    const loop = !!line._loop;\n    const { start: start, end: end } = $8d27ca75da600b9c$var$findStartAndEnd(points, count, loop, spanGaps);\n    if (spanGaps === true) return $8d27ca75da600b9c$var$splitByStyles(line, [\n        {\n            start: start,\n            end: end,\n            loop: loop\n        }\n    ], points, segmentOptions);\n    const max = end < start ? end + count : end;\n    const completeLoop = !!line._fullLoop && start === 0 && end === count - 1;\n    return $8d27ca75da600b9c$var$splitByStyles(line, $8d27ca75da600b9c$var$solidSegments(points, start, max, completeLoop), points, segmentOptions);\n}\nfunction $8d27ca75da600b9c$var$splitByStyles(line, segments, points, segmentOptions) {\n    if (!segmentOptions || !segmentOptions.setContext || !points) return segments;\n    return $8d27ca75da600b9c$var$doSplitByStyles(line, segments, points, segmentOptions);\n}\nfunction $8d27ca75da600b9c$var$doSplitByStyles(line, segments, points, segmentOptions) {\n    const chartContext = line._chart.getContext();\n    const baseStyle = $8d27ca75da600b9c$var$readStyle(line.options);\n    const { _datasetIndex: datasetIndex, options: { spanGaps: spanGaps } } = line;\n    const count = points.length;\n    const result = [];\n    let prevStyle = baseStyle;\n    let start = segments[0].start;\n    let i = start;\n    function addStyle(s, e, l, st) {\n        const dir = spanGaps ? -1 : 1;\n        if (s === e) return;\n        s += count;\n        while(points[s % count].skip)s -= dir;\n        while(points[e % count].skip)e += dir;\n        if (s % count !== e % count) {\n            result.push({\n                start: s % count,\n                end: e % count,\n                loop: l,\n                style: st\n            });\n            prevStyle = st;\n            start = e % count;\n        }\n    }\n    for (const segment of segments){\n        start = spanGaps ? start : segment.start;\n        let prev = points[start % count];\n        let style;\n        for(i = start + 1; i <= segment.end; i++){\n            const pt = points[i % count];\n            style = $8d27ca75da600b9c$var$readStyle(segmentOptions.setContext($8d27ca75da600b9c$export$35e795649ee09318(chartContext, {\n                type: \"segment\",\n                p0: prev,\n                p1: pt,\n                p0DataIndex: (i - 1) % count,\n                p1DataIndex: i % count,\n                datasetIndex: datasetIndex\n            })));\n            if ($8d27ca75da600b9c$var$styleChanged(style, prevStyle)) addStyle(start, i - 1, segment.loop, prevStyle);\n            prev = pt;\n            prevStyle = style;\n        }\n        if (start < i - 1) addStyle(start, i - 1, segment.loop, prevStyle);\n    }\n    return result;\n}\nfunction $8d27ca75da600b9c$var$readStyle(options) {\n    return {\n        backgroundColor: options.backgroundColor,\n        borderCapStyle: options.borderCapStyle,\n        borderDash: options.borderDash,\n        borderDashOffset: options.borderDashOffset,\n        borderJoinStyle: options.borderJoinStyle,\n        borderWidth: options.borderWidth,\n        borderColor: options.borderColor\n    };\n}\nfunction $8d27ca75da600b9c$var$styleChanged(style, prevStyle) {\n    if (!prevStyle) return false;\n    const cache = [];\n    const replacer = function(key, value) {\n        if (!$8d27ca75da600b9c$export$f96d196f7728bb5(value)) return value;\n        if (!cache.includes(value)) cache.push(value);\n        return cache.indexOf(value);\n    };\n    return JSON.stringify(style, replacer) !== JSON.stringify(prevStyle, replacer);\n}\n\n});\nparcelRegister(\"bFoGN\", function(module, exports) {\n\n$parcel$export(module.exports, \"Color\", () => $87e6acd7396d97dc$export$892596cec99bc70e);\n/*!\n * @kurkle/color v0.3.2\n * https://github.com/kurkle/color#readme\n * (c) 2023 Jukka Kurkela\n * Released under the MIT License\n */ function $87e6acd7396d97dc$export$2077e0241d6afd3c(v) {\n    return v + 0.5 | 0;\n}\nconst $87e6acd7396d97dc$export$837ba5c449269406 = (v, l, h)=>Math.max(Math.min(v, h), l);\nfunction $87e6acd7396d97dc$export$bcc6e673dfa14d36(v) {\n    return $87e6acd7396d97dc$export$837ba5c449269406($87e6acd7396d97dc$export$2077e0241d6afd3c(v * 2.55), 0, 255);\n}\nfunction $87e6acd7396d97dc$export$869b26d4e1bbdb63(v) {\n    return $87e6acd7396d97dc$export$837ba5c449269406($87e6acd7396d97dc$export$2077e0241d6afd3c(v / 2.55), 0, 100);\n}\nfunction $87e6acd7396d97dc$export$ed9bd8dcaeba14f6(v) {\n    return $87e6acd7396d97dc$export$837ba5c449269406($87e6acd7396d97dc$export$2077e0241d6afd3c(v * 255), 0, 255);\n}\nfunction $87e6acd7396d97dc$export$dbf961a8d278dbef(v) {\n    return $87e6acd7396d97dc$export$837ba5c449269406($87e6acd7396d97dc$export$2077e0241d6afd3c(v / 2.55) / 100, 0, 1);\n}\nfunction $87e6acd7396d97dc$export$aa35ef1f24408ab9(v) {\n    return $87e6acd7396d97dc$export$837ba5c449269406($87e6acd7396d97dc$export$2077e0241d6afd3c(v * 100), 0, 100);\n}\nconst $87e6acd7396d97dc$var$map$1 = {\n    0: 0,\n    1: 1,\n    2: 2,\n    3: 3,\n    4: 4,\n    5: 5,\n    6: 6,\n    7: 7,\n    8: 8,\n    9: 9,\n    A: 10,\n    B: 11,\n    C: 12,\n    D: 13,\n    E: 14,\n    F: 15,\n    a: 10,\n    b: 11,\n    c: 12,\n    d: 13,\n    e: 14,\n    f: 15\n};\nconst $87e6acd7396d97dc$var$hex = [\n    ...\"0123456789ABCDEF\"\n];\nconst $87e6acd7396d97dc$var$h1 = (b)=>$87e6acd7396d97dc$var$hex[b & 0xF];\nconst $87e6acd7396d97dc$var$h2 = (b)=>$87e6acd7396d97dc$var$hex[(b & 0xF0) >> 4] + $87e6acd7396d97dc$var$hex[b & 0xF];\nconst $87e6acd7396d97dc$var$eq = (b)=>(b & 0xF0) >> 4 === (b & 0xF);\nconst $87e6acd7396d97dc$var$isShort = (v)=>$87e6acd7396d97dc$var$eq(v.r) && $87e6acd7396d97dc$var$eq(v.g) && $87e6acd7396d97dc$var$eq(v.b) && $87e6acd7396d97dc$var$eq(v.a);\nfunction $87e6acd7396d97dc$export$625a38b961e8b5e9(str) {\n    var len = str.length;\n    var ret;\n    if (str[0] === \"#\") {\n        if (len === 4 || len === 5) ret = {\n            r: 255 & $87e6acd7396d97dc$var$map$1[str[1]] * 17,\n            g: 255 & $87e6acd7396d97dc$var$map$1[str[2]] * 17,\n            b: 255 & $87e6acd7396d97dc$var$map$1[str[3]] * 17,\n            a: len === 5 ? $87e6acd7396d97dc$var$map$1[str[4]] * 17 : 255\n        };\n        else if (len === 7 || len === 9) ret = {\n            r: $87e6acd7396d97dc$var$map$1[str[1]] << 4 | $87e6acd7396d97dc$var$map$1[str[2]],\n            g: $87e6acd7396d97dc$var$map$1[str[3]] << 4 | $87e6acd7396d97dc$var$map$1[str[4]],\n            b: $87e6acd7396d97dc$var$map$1[str[5]] << 4 | $87e6acd7396d97dc$var$map$1[str[6]],\n            a: len === 9 ? $87e6acd7396d97dc$var$map$1[str[7]] << 4 | $87e6acd7396d97dc$var$map$1[str[8]] : 255\n        };\n    }\n    return ret;\n}\nconst $87e6acd7396d97dc$var$alpha = (a, f)=>a < 255 ? f(a) : \"\";\nfunction $87e6acd7396d97dc$export$1b06654353ef9f67(v) {\n    var f = $87e6acd7396d97dc$var$isShort(v) ? $87e6acd7396d97dc$var$h1 : $87e6acd7396d97dc$var$h2;\n    return v ? \"#\" + f(v.r) + f(v.g) + f(v.b) + $87e6acd7396d97dc$var$alpha(v.a, f) : undefined;\n}\nconst $87e6acd7396d97dc$var$HUE_RE = /^(hsla?|hwb|hsv)\\(\\s*([-+.e\\d]+)(?:deg)?[\\s,]+([-+.e\\d]+)%[\\s,]+([-+.e\\d]+)%(?:[\\s,]+([-+.e\\d]+)(%)?)?\\s*\\)$/;\nfunction $87e6acd7396d97dc$var$hsl2rgbn(h, s, l) {\n    const a = s * Math.min(l, 1 - l);\n    const f = (n, k = (n + h / 30) % 12)=>l - a * Math.max(Math.min(k - 3, 9 - k, 1), -1);\n    return [\n        f(0),\n        f(8),\n        f(4)\n    ];\n}\nfunction $87e6acd7396d97dc$var$hsv2rgbn(h, s, v) {\n    const f = (n, k = (n + h / 60) % 6)=>v - v * s * Math.max(Math.min(k, 4 - k, 1), 0);\n    return [\n        f(5),\n        f(3),\n        f(1)\n    ];\n}\nfunction $87e6acd7396d97dc$var$hwb2rgbn(h, w, b) {\n    const rgb = $87e6acd7396d97dc$var$hsl2rgbn(h, 1, 0.5);\n    let i;\n    if (w + b > 1) {\n        i = 1 / (w + b);\n        w *= i;\n        b *= i;\n    }\n    for(i = 0; i < 3; i++){\n        rgb[i] *= 1 - w - b;\n        rgb[i] += w;\n    }\n    return rgb;\n}\nfunction $87e6acd7396d97dc$var$hueValue(r, g, b, d, max) {\n    if (r === max) return (g - b) / d + (g < b ? 6 : 0);\n    if (g === max) return (b - r) / d + 2;\n    return (r - g) / d + 4;\n}\nfunction $87e6acd7396d97dc$export$b5ba70b240f8f7f(v) {\n    const range = 255;\n    const r = v.r / range;\n    const g = v.g / range;\n    const b = v.b / range;\n    const max = Math.max(r, g, b);\n    const min = Math.min(r, g, b);\n    const l = (max + min) / 2;\n    let h, s, d;\n    if (max !== min) {\n        d = max - min;\n        s = l > 0.5 ? d / (2 - max - min) : d / (max + min);\n        h = $87e6acd7396d97dc$var$hueValue(r, g, b, d, max);\n        h = h * 60 + 0.5;\n    }\n    return [\n        h | 0,\n        s || 0,\n        l\n    ];\n}\nfunction $87e6acd7396d97dc$var$calln(f, a, b, c) {\n    return (Array.isArray(a) ? f(a[0], a[1], a[2]) : f(a, b, c)).map($87e6acd7396d97dc$export$ed9bd8dcaeba14f6);\n}\nfunction $87e6acd7396d97dc$export$4c15bd42559b811d(h, s, l) {\n    return $87e6acd7396d97dc$var$calln($87e6acd7396d97dc$var$hsl2rgbn, h, s, l);\n}\nfunction $87e6acd7396d97dc$export$e2710022c70fc9ee(h, w, b) {\n    return $87e6acd7396d97dc$var$calln($87e6acd7396d97dc$var$hwb2rgbn, h, w, b);\n}\nfunction $87e6acd7396d97dc$export$b785a357c84e4a04(h, s, v) {\n    return $87e6acd7396d97dc$var$calln($87e6acd7396d97dc$var$hsv2rgbn, h, s, v);\n}\nfunction $87e6acd7396d97dc$var$hue(h) {\n    return (h % 360 + 360) % 360;\n}\nfunction $87e6acd7396d97dc$export$5e91288c399be4f9(str) {\n    const m = $87e6acd7396d97dc$var$HUE_RE.exec(str);\n    let a = 255;\n    let v;\n    if (!m) return;\n    if (m[5] !== v) a = m[6] ? $87e6acd7396d97dc$export$bcc6e673dfa14d36(+m[5]) : $87e6acd7396d97dc$export$ed9bd8dcaeba14f6(+m[5]);\n    const h = $87e6acd7396d97dc$var$hue(+m[2]);\n    const p1 = +m[3] / 100;\n    const p2 = +m[4] / 100;\n    if (m[1] === \"hwb\") v = $87e6acd7396d97dc$export$e2710022c70fc9ee(h, p1, p2);\n    else if (m[1] === \"hsv\") v = $87e6acd7396d97dc$export$b785a357c84e4a04(h, p1, p2);\n    else v = $87e6acd7396d97dc$export$4c15bd42559b811d(h, p1, p2);\n    return {\n        r: v[0],\n        g: v[1],\n        b: v[2],\n        a: a\n    };\n}\nfunction $87e6acd7396d97dc$export$bb628a54ab399bc9(v, deg) {\n    var h = $87e6acd7396d97dc$export$b5ba70b240f8f7f(v);\n    h[0] = $87e6acd7396d97dc$var$hue(h[0] + deg);\n    h = $87e6acd7396d97dc$export$4c15bd42559b811d(h);\n    v.r = h[0];\n    v.g = h[1];\n    v.b = h[2];\n}\nfunction $87e6acd7396d97dc$export$a197af1c58e6260c(v) {\n    if (!v) return;\n    const a = $87e6acd7396d97dc$export$b5ba70b240f8f7f(v);\n    const h = a[0];\n    const s = $87e6acd7396d97dc$export$aa35ef1f24408ab9(a[1]);\n    const l = $87e6acd7396d97dc$export$aa35ef1f24408ab9(a[2]);\n    return v.a < 255 ? `hsla(${h}, ${s}%, ${l}%, ${$87e6acd7396d97dc$export$dbf961a8d278dbef(v.a)})` : `hsl(${h}, ${s}%, ${l}%)`;\n}\nconst $87e6acd7396d97dc$var$map = {\n    x: \"dark\",\n    Z: \"light\",\n    Y: \"re\",\n    X: \"blu\",\n    W: \"gr\",\n    V: \"medium\",\n    U: \"slate\",\n    A: \"ee\",\n    T: \"ol\",\n    S: \"or\",\n    B: \"ra\",\n    C: \"lateg\",\n    D: \"ights\",\n    R: \"in\",\n    Q: \"turquois\",\n    E: \"hi\",\n    P: \"ro\",\n    O: \"al\",\n    N: \"le\",\n    M: \"de\",\n    L: \"yello\",\n    F: \"en\",\n    K: \"ch\",\n    G: \"arks\",\n    H: \"ea\",\n    I: \"ightg\",\n    J: \"wh\"\n};\nconst $87e6acd7396d97dc$var$names$1 = {\n    OiceXe: \"f0f8ff\",\n    antiquewEte: \"faebd7\",\n    aqua: \"ffff\",\n    aquamarRe: \"7fffd4\",\n    azuY: \"f0ffff\",\n    beige: \"f5f5dc\",\n    bisque: \"ffe4c4\",\n    black: \"0\",\n    blanKedOmond: \"ffebcd\",\n    Xe: \"ff\",\n    XeviTet: \"8a2be2\",\n    bPwn: \"a52a2a\",\n    burlywood: \"deb887\",\n    caMtXe: \"5f9ea0\",\n    KartYuse: \"7fff00\",\n    KocTate: \"d2691e\",\n    cSO: \"ff7f50\",\n    cSnflowerXe: \"6495ed\",\n    cSnsilk: \"fff8dc\",\n    crimson: \"dc143c\",\n    cyan: \"ffff\",\n    xXe: \"8b\",\n    xcyan: \"8b8b\",\n    xgTMnPd: \"b8860b\",\n    xWay: \"a9a9a9\",\n    xgYF: \"6400\",\n    xgYy: \"a9a9a9\",\n    xkhaki: \"bdb76b\",\n    xmagFta: \"8b008b\",\n    xTivegYF: \"556b2f\",\n    xSange: \"ff8c00\",\n    xScEd: \"9932cc\",\n    xYd: \"8b0000\",\n    xsOmon: \"e9967a\",\n    xsHgYF: \"8fbc8f\",\n    xUXe: \"483d8b\",\n    xUWay: \"2f4f4f\",\n    xUgYy: \"2f4f4f\",\n    xQe: \"ced1\",\n    xviTet: \"9400d3\",\n    dAppRk: \"ff1493\",\n    dApskyXe: \"bfff\",\n    dimWay: \"696969\",\n    dimgYy: \"696969\",\n    dodgerXe: \"1e90ff\",\n    fiYbrick: \"b22222\",\n    flSOwEte: \"fffaf0\",\n    foYstWAn: \"228b22\",\n    fuKsia: \"ff00ff\",\n    gaRsbSo: \"dcdcdc\",\n    ghostwEte: \"f8f8ff\",\n    gTd: \"ffd700\",\n    gTMnPd: \"daa520\",\n    Way: \"808080\",\n    gYF: \"8000\",\n    gYFLw: \"adff2f\",\n    gYy: \"808080\",\n    honeyMw: \"f0fff0\",\n    hotpRk: \"ff69b4\",\n    RdianYd: \"cd5c5c\",\n    Rdigo: \"4b0082\",\n    ivSy: \"fffff0\",\n    khaki: \"f0e68c\",\n    lavFMr: \"e6e6fa\",\n    lavFMrXsh: \"fff0f5\",\n    lawngYF: \"7cfc00\",\n    NmoncEffon: \"fffacd\",\n    ZXe: \"add8e6\",\n    ZcSO: \"f08080\",\n    Zcyan: \"e0ffff\",\n    ZgTMnPdLw: \"fafad2\",\n    ZWay: \"d3d3d3\",\n    ZgYF: \"90ee90\",\n    ZgYy: \"d3d3d3\",\n    ZpRk: \"ffb6c1\",\n    ZsOmon: \"ffa07a\",\n    ZsHgYF: \"20b2aa\",\n    ZskyXe: \"87cefa\",\n    ZUWay: \"778899\",\n    ZUgYy: \"778899\",\n    ZstAlXe: \"b0c4de\",\n    ZLw: \"ffffe0\",\n    lime: \"ff00\",\n    limegYF: \"32cd32\",\n    lRF: \"faf0e6\",\n    magFta: \"ff00ff\",\n    maPon: \"800000\",\n    VaquamarRe: \"66cdaa\",\n    VXe: \"cd\",\n    VScEd: \"ba55d3\",\n    VpurpN: \"9370db\",\n    VsHgYF: \"3cb371\",\n    VUXe: \"7b68ee\",\n    VsprRggYF: \"fa9a\",\n    VQe: \"48d1cc\",\n    VviTetYd: \"c71585\",\n    midnightXe: \"191970\",\n    mRtcYam: \"f5fffa\",\n    mistyPse: \"ffe4e1\",\n    moccasR: \"ffe4b5\",\n    navajowEte: \"ffdead\",\n    navy: \"80\",\n    Tdlace: \"fdf5e6\",\n    Tive: \"808000\",\n    TivedBb: \"6b8e23\",\n    Sange: \"ffa500\",\n    SangeYd: \"ff4500\",\n    ScEd: \"da70d6\",\n    pOegTMnPd: \"eee8aa\",\n    pOegYF: \"98fb98\",\n    pOeQe: \"afeeee\",\n    pOeviTetYd: \"db7093\",\n    papayawEp: \"ffefd5\",\n    pHKpuff: \"ffdab9\",\n    peru: \"cd853f\",\n    pRk: \"ffc0cb\",\n    plum: \"dda0dd\",\n    powMrXe: \"b0e0e6\",\n    purpN: \"800080\",\n    YbeccapurpN: \"663399\",\n    Yd: \"ff0000\",\n    Psybrown: \"bc8f8f\",\n    PyOXe: \"4169e1\",\n    saddNbPwn: \"8b4513\",\n    sOmon: \"fa8072\",\n    sandybPwn: \"f4a460\",\n    sHgYF: \"2e8b57\",\n    sHshell: \"fff5ee\",\n    siFna: \"a0522d\",\n    silver: \"c0c0c0\",\n    skyXe: \"87ceeb\",\n    UXe: \"6a5acd\",\n    UWay: \"708090\",\n    UgYy: \"708090\",\n    snow: \"fffafa\",\n    sprRggYF: \"ff7f\",\n    stAlXe: \"4682b4\",\n    tan: \"d2b48c\",\n    teO: \"8080\",\n    tEstN: \"d8bfd8\",\n    tomato: \"ff6347\",\n    Qe: \"40e0d0\",\n    viTet: \"ee82ee\",\n    JHt: \"f5deb3\",\n    wEte: \"ffffff\",\n    wEtesmoke: \"f5f5f5\",\n    Lw: \"ffff00\",\n    LwgYF: \"9acd32\"\n};\nfunction $87e6acd7396d97dc$var$unpack() {\n    const unpacked = {};\n    const keys = Object.keys($87e6acd7396d97dc$var$names$1);\n    const tkeys = Object.keys($87e6acd7396d97dc$var$map);\n    let i, j, k, ok, nk;\n    for(i = 0; i < keys.length; i++){\n        ok = nk = keys[i];\n        for(j = 0; j < tkeys.length; j++){\n            k = tkeys[j];\n            nk = nk.replace(k, $87e6acd7396d97dc$var$map[k]);\n        }\n        k = parseInt($87e6acd7396d97dc$var$names$1[ok], 16);\n        unpacked[nk] = [\n            k >> 16 & 0xFF,\n            k >> 8 & 0xFF,\n            k & 0xFF\n        ];\n    }\n    return unpacked;\n}\nlet $87e6acd7396d97dc$var$names;\nfunction $87e6acd7396d97dc$export$b2f06b640faad956(str) {\n    if (!$87e6acd7396d97dc$var$names) {\n        $87e6acd7396d97dc$var$names = $87e6acd7396d97dc$var$unpack();\n        $87e6acd7396d97dc$var$names.transparent = [\n            0,\n            0,\n            0,\n            0\n        ];\n    }\n    const a = $87e6acd7396d97dc$var$names[str.toLowerCase()];\n    return a && {\n        r: a[0],\n        g: a[1],\n        b: a[2],\n        a: a.length === 4 ? a[3] : 255\n    };\n}\nconst $87e6acd7396d97dc$var$RGB_RE = /^rgba?\\(\\s*([-+.\\d]+)(%)?[\\s,]+([-+.e\\d]+)(%)?[\\s,]+([-+.e\\d]+)(%)?(?:[\\s,/]+([-+.e\\d]+)(%)?)?\\s*\\)$/;\nfunction $87e6acd7396d97dc$export$91aedb20f296e541(str) {\n    const m = $87e6acd7396d97dc$var$RGB_RE.exec(str);\n    let a = 255;\n    let r, g, b;\n    if (!m) return;\n    if (m[7] !== r) {\n        const v = +m[7];\n        a = m[8] ? $87e6acd7396d97dc$export$bcc6e673dfa14d36(v) : $87e6acd7396d97dc$export$837ba5c449269406(v * 255, 0, 255);\n    }\n    r = +m[1];\n    g = +m[3];\n    b = +m[5];\n    r = 255 & (m[2] ? $87e6acd7396d97dc$export$bcc6e673dfa14d36(r) : $87e6acd7396d97dc$export$837ba5c449269406(r, 0, 255));\n    g = 255 & (m[4] ? $87e6acd7396d97dc$export$bcc6e673dfa14d36(g) : $87e6acd7396d97dc$export$837ba5c449269406(g, 0, 255));\n    b = 255 & (m[6] ? $87e6acd7396d97dc$export$bcc6e673dfa14d36(b) : $87e6acd7396d97dc$export$837ba5c449269406(b, 0, 255));\n    return {\n        r: r,\n        g: g,\n        b: b,\n        a: a\n    };\n}\nfunction $87e6acd7396d97dc$export$9595423f22cf925a(v) {\n    return v && (v.a < 255 ? `rgba(${v.r}, ${v.g}, ${v.b}, ${$87e6acd7396d97dc$export$dbf961a8d278dbef(v.a)})` : `rgb(${v.r}, ${v.g}, ${v.b})`);\n}\nconst $87e6acd7396d97dc$var$to = (v)=>v <= 0.0031308 ? v * 12.92 : Math.pow(v, 1.0 / 2.4) * 1.055 - 0.055;\nconst $87e6acd7396d97dc$var$from = (v)=>v <= 0.04045 ? v / 12.92 : Math.pow((v + 0.055) / 1.055, 2.4);\nfunction $87e6acd7396d97dc$var$interpolate(rgb1, rgb2, t) {\n    const r = $87e6acd7396d97dc$var$from($87e6acd7396d97dc$export$dbf961a8d278dbef(rgb1.r));\n    const g = $87e6acd7396d97dc$var$from($87e6acd7396d97dc$export$dbf961a8d278dbef(rgb1.g));\n    const b = $87e6acd7396d97dc$var$from($87e6acd7396d97dc$export$dbf961a8d278dbef(rgb1.b));\n    return {\n        r: $87e6acd7396d97dc$export$ed9bd8dcaeba14f6($87e6acd7396d97dc$var$to(r + t * ($87e6acd7396d97dc$var$from($87e6acd7396d97dc$export$dbf961a8d278dbef(rgb2.r)) - r))),\n        g: $87e6acd7396d97dc$export$ed9bd8dcaeba14f6($87e6acd7396d97dc$var$to(g + t * ($87e6acd7396d97dc$var$from($87e6acd7396d97dc$export$dbf961a8d278dbef(rgb2.g)) - g))),\n        b: $87e6acd7396d97dc$export$ed9bd8dcaeba14f6($87e6acd7396d97dc$var$to(b + t * ($87e6acd7396d97dc$var$from($87e6acd7396d97dc$export$dbf961a8d278dbef(rgb2.b)) - b))),\n        a: rgb1.a + t * (rgb2.a - rgb1.a)\n    };\n}\nfunction $87e6acd7396d97dc$var$modHSL(v, i, ratio) {\n    if (v) {\n        let tmp = $87e6acd7396d97dc$export$b5ba70b240f8f7f(v);\n        tmp[i] = Math.max(0, Math.min(tmp[i] + tmp[i] * ratio, i === 0 ? 360 : 1));\n        tmp = $87e6acd7396d97dc$export$4c15bd42559b811d(tmp);\n        v.r = tmp[0];\n        v.g = tmp[1];\n        v.b = tmp[2];\n    }\n}\nfunction $87e6acd7396d97dc$var$clone(v, proto) {\n    return v ? Object.assign(proto || {}, v) : v;\n}\nfunction $87e6acd7396d97dc$var$fromObject(input) {\n    var v = {\n        r: 0,\n        g: 0,\n        b: 0,\n        a: 255\n    };\n    if (Array.isArray(input)) {\n        if (input.length >= 3) {\n            v = {\n                r: input[0],\n                g: input[1],\n                b: input[2],\n                a: 255\n            };\n            if (input.length > 3) v.a = $87e6acd7396d97dc$export$ed9bd8dcaeba14f6(input[3]);\n        }\n    } else {\n        v = $87e6acd7396d97dc$var$clone(input, {\n            r: 0,\n            g: 0,\n            b: 0,\n            a: 1\n        });\n        v.a = $87e6acd7396d97dc$export$ed9bd8dcaeba14f6(v.a);\n    }\n    return v;\n}\nfunction $87e6acd7396d97dc$var$functionParse(str) {\n    if (str.charAt(0) === \"r\") return $87e6acd7396d97dc$export$91aedb20f296e541(str);\n    return $87e6acd7396d97dc$export$5e91288c399be4f9(str);\n}\nclass $87e6acd7396d97dc$export$892596cec99bc70e {\n    constructor(input){\n        if (input instanceof $87e6acd7396d97dc$export$892596cec99bc70e) return input;\n        const type = typeof input;\n        let v;\n        if (type === \"object\") v = $87e6acd7396d97dc$var$fromObject(input);\n        else if (type === \"string\") v = $87e6acd7396d97dc$export$625a38b961e8b5e9(input) || $87e6acd7396d97dc$export$b2f06b640faad956(input) || $87e6acd7396d97dc$var$functionParse(input);\n        this._rgb = v;\n        this._valid = !!v;\n    }\n    get valid() {\n        return this._valid;\n    }\n    get rgb() {\n        var v = $87e6acd7396d97dc$var$clone(this._rgb);\n        if (v) v.a = $87e6acd7396d97dc$export$dbf961a8d278dbef(v.a);\n        return v;\n    }\n    set rgb(obj) {\n        this._rgb = $87e6acd7396d97dc$var$fromObject(obj);\n    }\n    rgbString() {\n        return this._valid ? $87e6acd7396d97dc$export$9595423f22cf925a(this._rgb) : undefined;\n    }\n    hexString() {\n        return this._valid ? $87e6acd7396d97dc$export$1b06654353ef9f67(this._rgb) : undefined;\n    }\n    hslString() {\n        return this._valid ? $87e6acd7396d97dc$export$a197af1c58e6260c(this._rgb) : undefined;\n    }\n    mix(color, weight) {\n        if (color) {\n            const c1 = this.rgb;\n            const c2 = color.rgb;\n            let w2;\n            const p = weight === w2 ? 0.5 : weight;\n            const w = 2 * p - 1;\n            const a = c1.a - c2.a;\n            const w1 = ((w * a === -1 ? w : (w + a) / (1 + w * a)) + 1) / 2.0;\n            w2 = 1 - w1;\n            c1.r = 0xFF & w1 * c1.r + w2 * c2.r + 0.5;\n            c1.g = 0xFF & w1 * c1.g + w2 * c2.g + 0.5;\n            c1.b = 0xFF & w1 * c1.b + w2 * c2.b + 0.5;\n            c1.a = p * c1.a + (1 - p) * c2.a;\n            this.rgb = c1;\n        }\n        return this;\n    }\n    interpolate(color, t) {\n        if (color) this._rgb = $87e6acd7396d97dc$var$interpolate(this._rgb, color._rgb, t);\n        return this;\n    }\n    clone() {\n        return new $87e6acd7396d97dc$export$892596cec99bc70e(this.rgb);\n    }\n    alpha(a) {\n        this._rgb.a = $87e6acd7396d97dc$export$ed9bd8dcaeba14f6(a);\n        return this;\n    }\n    clearer(ratio) {\n        const rgb = this._rgb;\n        rgb.a *= 1 - ratio;\n        return this;\n    }\n    greyscale() {\n        const rgb = this._rgb;\n        const val = $87e6acd7396d97dc$export$2077e0241d6afd3c(rgb.r * 0.3 + rgb.g * 0.59 + rgb.b * 0.11);\n        rgb.r = rgb.g = rgb.b = val;\n        return this;\n    }\n    opaquer(ratio) {\n        const rgb = this._rgb;\n        rgb.a *= 1 + ratio;\n        return this;\n    }\n    negate() {\n        const v = this._rgb;\n        v.r = 255 - v.r;\n        v.g = 255 - v.g;\n        v.b = 255 - v.b;\n        return this;\n    }\n    lighten(ratio) {\n        $87e6acd7396d97dc$var$modHSL(this._rgb, 2, ratio);\n        return this;\n    }\n    darken(ratio) {\n        $87e6acd7396d97dc$var$modHSL(this._rgb, 2, -ratio);\n        return this;\n    }\n    saturate(ratio) {\n        $87e6acd7396d97dc$var$modHSL(this._rgb, 1, ratio);\n        return this;\n    }\n    desaturate(ratio) {\n        $87e6acd7396d97dc$var$modHSL(this._rgb, 1, -ratio);\n        return this;\n    }\n    rotate(deg) {\n        $87e6acd7396d97dc$export$bb628a54ab399bc9(this._rgb, deg);\n        return this;\n    }\n}\nfunction $87e6acd7396d97dc$export$2e2bcd8739ae039(input) {\n    return new $87e6acd7396d97dc$export$892596cec99bc70e(input);\n}\n\n});\n\n\n\n\nparcelRegister(\"5wcQa\", function(module, exports) {\n\n$parcel$export(module.exports, \"default\", () => $4049e6bf31df43d6$export$2e2bcd8739ae039);\n/*!\n* chartjs-plugin-annotation v3.1.0\n* https://www.chartjs.org/chartjs-plugin-annotation/index\n * (c) 2024 chartjs-plugin-annotation Contributors\n * Released under the MIT License\n */ \nvar $2RVy2 = parcelRequire(\"2RVy2\");\nvar $c7mKY = parcelRequire(\"c7mKY\");\nparcelRequire(\"6WGai\");\nvar $c7mKY = parcelRequire(\"c7mKY\");\n/**\n * @typedef { import(\"chart.js\").ChartEvent } ChartEvent\n * @typedef { import('../../types/element').AnnotationElement } AnnotationElement\n */ const $4049e6bf31df43d6$var$interaction = {\n    modes: {\n        /**\n     * Point mode returns all elements that hit test based on the event position\n     * @param {AnnotationElement[]} visibleElements - annotation elements which are visible\n     * @param {ChartEvent} event - the event we are find things at\n     * @return {AnnotationElement[]} - elements that are found\n     */ point (visibleElements, event) {\n            return $4049e6bf31df43d6$var$filterElements(visibleElements, event, {\n                intersect: true\n            });\n        },\n        /**\n     * Nearest mode returns the element closest to the event position\n     * @param {AnnotationElement[]} visibleElements - annotation elements which are visible\n     * @param {ChartEvent} event - the event we are find things at\n     * @param {Object} options - interaction options to use\n     * @return {AnnotationElement[]} - elements that are found (only 1 element)\n     */ nearest (visibleElements, event, options) {\n            return $4049e6bf31df43d6$var$getNearestItem(visibleElements, event, options);\n        },\n        /**\n     * x mode returns the elements that hit-test at the current x coordinate\n     * @param {AnnotationElement[]} visibleElements - annotation elements which are visible\n     * @param {ChartEvent} event - the event we are find things at\n     * @param {Object} options - interaction options to use\n     * @return {AnnotationElement[]} - elements that are found\n     */ x (visibleElements, event, options) {\n            return $4049e6bf31df43d6$var$filterElements(visibleElements, event, {\n                intersect: options.intersect,\n                axis: \"x\"\n            });\n        },\n        /**\n     * y mode returns the elements that hit-test at the current y coordinate\n     * @param {AnnotationElement[]} visibleElements - annotation elements which are visible\n     * @param {ChartEvent} event - the event we are find things at\n     * @param {Object} options - interaction options to use\n     * @return {AnnotationElement[]} - elements that are found\n     */ y (visibleElements, event, options) {\n            return $4049e6bf31df43d6$var$filterElements(visibleElements, event, {\n                intersect: options.intersect,\n                axis: \"y\"\n            });\n        }\n    }\n};\n/**\n * Returns all elements that hit test based on the event position\n * @param {AnnotationElement[]} visibleElements - annotation elements which are visible\n * @param {ChartEvent} event - the event we are find things at\n * @param {Object} options - interaction options to use\n * @return {AnnotationElement[]} - elements that are found\n */ function $4049e6bf31df43d6$var$getElements(visibleElements, event, options) {\n    const mode = $4049e6bf31df43d6$var$interaction.modes[options.mode] || $4049e6bf31df43d6$var$interaction.modes.nearest;\n    return mode(visibleElements, event, options);\n}\nfunction $4049e6bf31df43d6$var$inRangeByAxis(element, event, axis) {\n    if (axis !== \"x\" && axis !== \"y\") return element.inRange(event.x, event.y, \"x\", true) || element.inRange(event.x, event.y, \"y\", true);\n    return element.inRange(event.x, event.y, axis, true);\n}\nfunction $4049e6bf31df43d6$var$getPointByAxis(event, center, axis) {\n    if (axis === \"x\") return {\n        x: event.x,\n        y: center.y\n    };\n    else if (axis === \"y\") return {\n        x: center.x,\n        y: event.y\n    };\n    return center;\n}\nfunction $4049e6bf31df43d6$var$filterElements(visibleElements, event, options) {\n    return visibleElements.filter((element)=>options.intersect ? element.inRange(event.x, event.y) : $4049e6bf31df43d6$var$inRangeByAxis(element, event, options.axis));\n}\nfunction $4049e6bf31df43d6$var$getNearestItem(visibleElements, event, options) {\n    let minDistance = Number.POSITIVE_INFINITY;\n    return $4049e6bf31df43d6$var$filterElements(visibleElements, event, options).reduce((nearestItems, element)=>{\n        const center = element.getCenterPoint();\n        const evenPoint = $4049e6bf31df43d6$var$getPointByAxis(event, center, options.axis);\n        const distance = (0, $c7mKY.aE)(event, evenPoint);\n        if (distance < minDistance) {\n            nearestItems = [\n                element\n            ];\n            minDistance = distance;\n        } else if (distance === minDistance) // Can have multiple items at the same distance in which case we sort by size\n        nearestItems.push(element);\n        return nearestItems;\n    }, []).sort((a, b)=>a._index - b._index).slice(0, 1); // return only the top item;\n}\n/**\n * @typedef {import('chart.js').Point} Point\n */ /**\n * Rotate a `point` relative to `center` point by `angle`\n * @param {Point} point - the point to rotate\n * @param {Point} center - center point for rotation\n * @param {number} angle - angle for rotation, in radians\n * @returns {Point} rotated point\n */ function $4049e6bf31df43d6$var$rotated(point, center, angle) {\n    const cos = Math.cos(angle);\n    const sin = Math.sin(angle);\n    const cx = center.x;\n    const cy = center.y;\n    return {\n        x: cx + cos * (point.x - cx) - sin * (point.y - cy),\n        y: cy + sin * (point.x - cx) + cos * (point.y - cy)\n    };\n}\nconst $4049e6bf31df43d6$var$isOlderPart = (act, req)=>req > act || act.length > req.length && act.slice(0, req.length) === req;\n/**\n * @typedef { import('chart.js').Point } Point\n * @typedef { import('chart.js').InteractionAxis } InteractionAxis\n * @typedef { import('../../types/element').AnnotationElement } AnnotationElement\n */ const $4049e6bf31df43d6$var$EPSILON = 0.001;\nconst $4049e6bf31df43d6$var$clamp = (x, from, to)=>Math.min(to, Math.max(from, x));\n/**\n * @param {{value: number, start: number, end: number}} limit\n * @param {number} hitSize\n * @returns {boolean}\n */ const $4049e6bf31df43d6$var$inLimit = (limit, hitSize)=>limit.value >= limit.start - hitSize && limit.value <= limit.end + hitSize;\n/**\n * @param {Object} obj\n * @param {number} from\n * @param {number} to\n * @returns {Object}\n */ function $4049e6bf31df43d6$var$clampAll(obj, from, to) {\n    for (const key of Object.keys(obj))obj[key] = $4049e6bf31df43d6$var$clamp(obj[key], from, to);\n    return obj;\n}\n/**\n * @param {Point} point\n * @param {Point} center\n * @param {number} radius\n * @param {number} hitSize\n * @returns {boolean}\n */ function $4049e6bf31df43d6$var$inPointRange(point, center, radius, hitSize) {\n    if (!point || !center || radius <= 0) return false;\n    return Math.pow(point.x - center.x, 2) + Math.pow(point.y - center.y, 2) <= Math.pow(radius + hitSize, 2);\n}\n/**\n * @param {Point} point\n * @param {{x: number, y: number, x2: number, y2: number}} rect\n * @param {InteractionAxis} axis\n * @param {{borderWidth: number, hitTolerance: number}} hitsize\n * @returns {boolean}\n */ function $4049e6bf31df43d6$var$inBoxRange(point, { x: x, y: y, x2: x2, y2: y2 }, axis, { borderWidth: borderWidth, hitTolerance: hitTolerance }) {\n    const hitSize = (borderWidth + hitTolerance) / 2;\n    const inRangeX = point.x >= x - hitSize - $4049e6bf31df43d6$var$EPSILON && point.x <= x2 + hitSize + $4049e6bf31df43d6$var$EPSILON;\n    const inRangeY = point.y >= y - hitSize - $4049e6bf31df43d6$var$EPSILON && point.y <= y2 + hitSize + $4049e6bf31df43d6$var$EPSILON;\n    if (axis === \"x\") return inRangeX;\n    else if (axis === \"y\") return inRangeY;\n    return inRangeX && inRangeY;\n}\n/**\n * @param {Point} point\n * @param {rect: {x: number, y: number, x2: number, y2: number}, center: {x: number, y: number}} element\n * @param {InteractionAxis} axis\n * @param {{rotation: number, borderWidth: number, hitTolerance: number}}\n * @returns {boolean}\n */ function $4049e6bf31df43d6$var$inLabelRange(point, { rect: rect, center: center }, axis, { rotation: rotation, borderWidth: borderWidth, hitTolerance: hitTolerance }) {\n    const rotPoint = $4049e6bf31df43d6$var$rotated(point, center, (0, $c7mKY.t)(-rotation));\n    return $4049e6bf31df43d6$var$inBoxRange(rotPoint, rect, axis, {\n        borderWidth: borderWidth,\n        hitTolerance: hitTolerance\n    });\n}\n/**\n * @param {AnnotationElement} element\n * @param {boolean} useFinalPosition\n * @returns {Point}\n */ function $4049e6bf31df43d6$var$getElementCenterPoint(element, useFinalPosition) {\n    const { centerX: centerX, centerY: centerY } = element.getProps([\n        \"centerX\",\n        \"centerY\"\n    ], useFinalPosition);\n    return {\n        x: centerX,\n        y: centerY\n    };\n}\n/**\n * @param {string} pkg\n * @param {string} min\n * @param {string} ver\n * @param {boolean} [strict=true]\n * @returns {boolean}\n */ function $4049e6bf31df43d6$var$requireVersion(pkg, min, ver, strict = true) {\n    const parts = ver.split(\".\");\n    let i = 0;\n    for (const req of min.split(\".\")){\n        const act = parts[i++];\n        if (parseInt(req, 10) < parseInt(act, 10)) break;\n        if ($4049e6bf31df43d6$var$isOlderPart(act, req)) {\n            if (strict) throw new Error(`${pkg} v${ver} is not supported. v${min} or newer is required.`);\n            else return false;\n        }\n    }\n    return true;\n}\nconst $4049e6bf31df43d6$var$isPercentString = (s)=>typeof s === \"string\" && s.endsWith(\"%\");\nconst $4049e6bf31df43d6$var$toPercent = (s)=>parseFloat(s) / 100;\nconst $4049e6bf31df43d6$var$toPositivePercent = (s)=>$4049e6bf31df43d6$var$clamp($4049e6bf31df43d6$var$toPercent(s), 0, 1);\nconst $4049e6bf31df43d6$var$boxAppering = (x, y)=>({\n        x: x,\n        y: y,\n        x2: x,\n        y2: y,\n        width: 0,\n        height: 0\n    });\nconst $4049e6bf31df43d6$var$defaultInitAnimation = {\n    box: (properties)=>$4049e6bf31df43d6$var$boxAppering(properties.centerX, properties.centerY),\n    doughnutLabel: (properties)=>$4049e6bf31df43d6$var$boxAppering(properties.centerX, properties.centerY),\n    ellipse: (properties)=>({\n            centerX: properties.centerX,\n            centerY: properties.centerX,\n            radius: 0,\n            width: 0,\n            height: 0\n        }),\n    label: (properties)=>$4049e6bf31df43d6$var$boxAppering(properties.centerX, properties.centerY),\n    line: (properties)=>$4049e6bf31df43d6$var$boxAppering(properties.x, properties.y),\n    point: (properties)=>({\n            centerX: properties.centerX,\n            centerY: properties.centerY,\n            radius: 0,\n            width: 0,\n            height: 0\n        }),\n    polygon: (properties)=>$4049e6bf31df43d6$var$boxAppering(properties.centerX, properties.centerY)\n};\n/**\n * @typedef { import('chart.js').FontSpec } FontSpec\n * @typedef { import('chart.js').Point } Point\n * @typedef { import('chart.js').Padding } Padding\n * @typedef { import('../../types/element').AnnotationBoxModel } AnnotationBoxModel\n * @typedef { import('../../types/element').AnnotationElement } AnnotationElement\n * @typedef { import('../../types/options').AnnotationPointCoordinates } AnnotationPointCoordinates\n * @typedef { import('../../types/label').CoreLabelOptions } CoreLabelOptions\n * @typedef { import('../../types/label').LabelPositionObject } LabelPositionObject\n */ /**\n * @param {number} size\n * @param {number|string} position\n * @returns {number}\n */ function $4049e6bf31df43d6$var$getRelativePosition(size, position) {\n    if (position === \"start\") return 0;\n    if (position === \"end\") return size;\n    if ($4049e6bf31df43d6$var$isPercentString(position)) return $4049e6bf31df43d6$var$toPositivePercent(position) * size;\n    return size / 2;\n}\n/**\n * @param {number} size\n * @param {number|string} value\n * @param {boolean} [positivePercent=true]\n * @returns {number}\n */ function $4049e6bf31df43d6$var$getSize(size, value, positivePercent = true) {\n    if (typeof value === \"number\") return value;\n    else if ($4049e6bf31df43d6$var$isPercentString(value)) return (positivePercent ? $4049e6bf31df43d6$var$toPositivePercent(value) : $4049e6bf31df43d6$var$toPercent(value)) * size;\n    return size;\n}\n/**\n * @param {{x: number, width: number}} size\n * @param {CoreLabelOptions} options\n * @returns {number}\n */ function $4049e6bf31df43d6$var$calculateTextAlignment(size, options) {\n    const { x: x, width: width } = size;\n    const textAlign = options.textAlign;\n    if (textAlign === \"center\") return x + width / 2;\n    else if (textAlign === \"end\" || textAlign === \"right\") return x + width;\n    return x;\n}\n/**\n * @param {Point} point\n * @param {{height: number, width: number}} labelSize\n * @param {{borderWidth: number, position: {LabelPositionObject|string}, xAdjust: number, yAdjust: number}} options\n * @param {Padding|undefined} padding\n * @returns {{x: number, y: number, x2: number, y2: number, height: number, width: number, centerX: number, centerY: number}}\n */ function $4049e6bf31df43d6$var$measureLabelRectangle(point, labelSize, { borderWidth: borderWidth, position: position, xAdjust: xAdjust, yAdjust: yAdjust }, padding) {\n    const hasPadding = (0, $c7mKY.i)(padding);\n    const width = labelSize.width + (hasPadding ? padding.width : 0) + borderWidth;\n    const height = labelSize.height + (hasPadding ? padding.height : 0) + borderWidth;\n    const positionObj = $4049e6bf31df43d6$var$toPosition(position);\n    const x = $4049e6bf31df43d6$var$calculateLabelPosition$1(point.x, width, xAdjust, positionObj.x);\n    const y = $4049e6bf31df43d6$var$calculateLabelPosition$1(point.y, height, yAdjust, positionObj.y);\n    return {\n        x: x,\n        y: y,\n        x2: x + width,\n        y2: y + height,\n        width: width,\n        height: height,\n        centerX: x + width / 2,\n        centerY: y + height / 2\n    };\n}\n/**\n * @param {LabelPositionObject|string} value\n * @param {string|number} defaultValue\n * @returns {LabelPositionObject}\n */ function $4049e6bf31df43d6$var$toPosition(value, defaultValue = \"center\") {\n    if ((0, $c7mKY.i)(value)) return {\n        x: (0, $c7mKY.v)(value.x, defaultValue),\n        y: (0, $c7mKY.v)(value.y, defaultValue)\n    };\n    value = (0, $c7mKY.v)(value, defaultValue);\n    return {\n        x: value,\n        y: value\n    };\n}\n/**\n * @param {CoreLabelOptions} options\n * @param {number} fitRatio\n * @returns {boolean}\n */ const $4049e6bf31df43d6$var$shouldFit = (options, fitRatio)=>options && options.autoFit && fitRatio < 1;\n/**\n * @param {CoreLabelOptions} options\n * @param {number} fitRatio\n * @returns {FontSpec[]}\n */ function $4049e6bf31df43d6$var$toFonts(options, fitRatio) {\n    const optFont = options.font;\n    const fonts = (0, $c7mKY.b)(optFont) ? optFont : [\n        optFont\n    ];\n    if ($4049e6bf31df43d6$var$shouldFit(options, fitRatio)) return fonts.map(function(f) {\n        const font = (0, $c7mKY.a0)(f);\n        font.size = Math.floor(f.size * fitRatio);\n        font.lineHeight = f.lineHeight;\n        return (0, $c7mKY.a0)(font);\n    });\n    return fonts.map((f)=>(0, $c7mKY.a0)(f));\n}\n/**\n * @param {AnnotationPointCoordinates} options\n * @returns {boolean}\n */ function $4049e6bf31df43d6$var$isBoundToPoint(options) {\n    return options && ((0, $c7mKY.h)(options.xValue) || (0, $c7mKY.h)(options.yValue));\n}\nfunction $4049e6bf31df43d6$var$calculateLabelPosition$1(start, size, adjust = 0, position) {\n    return start - $4049e6bf31df43d6$var$getRelativePosition(size, position) + adjust;\n}\n/**\n * @param {Chart} chart\n * @param {AnnotationBoxModel} properties\n * @param {CoreAnnotationOptions} options\n * @returns {AnnotationElement}\n */ function $4049e6bf31df43d6$var$initAnimationProperties(chart, properties, options) {\n    const initAnim = options.init;\n    if (!initAnim) return;\n    else if (initAnim === true) return $4049e6bf31df43d6$var$applyDefault(properties, options);\n    return $4049e6bf31df43d6$var$execCallback(chart, properties, options);\n}\n/**\n * @param {Object} options\n * @param {Array} hooks\n * @param {Object} hooksContainer\n * @returns {boolean}\n */ function $4049e6bf31df43d6$var$loadHooks(options, hooks, hooksContainer) {\n    let activated = false;\n    hooks.forEach((hook)=>{\n        if ((0, $c7mKY.a7)(options[hook])) {\n            activated = true;\n            hooksContainer[hook] = options[hook];\n        } else if ((0, $c7mKY.h)(hooksContainer[hook])) delete hooksContainer[hook];\n    });\n    return activated;\n}\nfunction $4049e6bf31df43d6$var$applyDefault(properties, options) {\n    const type = options.type || \"line\";\n    return $4049e6bf31df43d6$var$defaultInitAnimation[type](properties);\n}\nfunction $4049e6bf31df43d6$var$execCallback(chart, properties, options) {\n    const result = (0, $c7mKY.Q)(options.init, [\n        {\n            chart: chart,\n            properties: properties,\n            options: options\n        }\n    ]);\n    if (result === true) return $4049e6bf31df43d6$var$applyDefault(properties, options);\n    else if ((0, $c7mKY.i)(result)) return result;\n}\nconst $4049e6bf31df43d6$var$widthCache = new Map();\nconst $4049e6bf31df43d6$var$notRadius = (radius)=>isNaN(radius) || radius <= 0;\nconst $4049e6bf31df43d6$var$fontsKey = (fonts)=>fonts.reduce(function(prev, item) {\n        prev += item.string;\n        return prev;\n    }, \"\");\n/**\n * @typedef { import('chart.js').Point } Point\n * @typedef { import('../../types/label').CoreLabelOptions } CoreLabelOptions\n * @typedef { import('../../types/options').PointAnnotationOptions } PointAnnotationOptions\n */ /**\n * Determine if content is an image or a canvas.\n * @param {*} content\n * @returns boolean|undefined\n * @todo move this function to chart.js helpers\n */ function $4049e6bf31df43d6$var$isImageOrCanvas(content) {\n    if (content && typeof content === \"object\") {\n        const type = content.toString();\n        return type === \"[object HTMLImageElement]\" || type === \"[object HTMLCanvasElement]\";\n    }\n}\n/**\n * Set the translation on the canvas if the rotation must be applied.\n * @param {CanvasRenderingContext2D} ctx - chart canvas context\n * @param {Point} point - the point of translation\n * @param {number} rotation - rotation (in degrees) to apply\n */ function $4049e6bf31df43d6$var$translate(ctx, { x: x, y: y }, rotation) {\n    if (rotation) {\n        ctx.translate(x, y);\n        ctx.rotate((0, $c7mKY.t)(rotation));\n        ctx.translate(-x, -y);\n    }\n}\n/**\n * @param {CanvasRenderingContext2D} ctx\n * @param {Object} options\n * @returns {boolean|undefined}\n */ function $4049e6bf31df43d6$var$setBorderStyle(ctx, options) {\n    if (options && options.borderWidth) {\n        ctx.lineCap = options.borderCapStyle || \"butt\";\n        ctx.setLineDash(options.borderDash);\n        ctx.lineDashOffset = options.borderDashOffset;\n        ctx.lineJoin = options.borderJoinStyle || \"miter\";\n        ctx.lineWidth = options.borderWidth;\n        ctx.strokeStyle = options.borderColor;\n        return true;\n    }\n}\n/**\n * @param {CanvasRenderingContext2D} ctx\n * @param {Object} options\n */ function $4049e6bf31df43d6$var$setShadowStyle(ctx, options) {\n    ctx.shadowColor = options.backgroundShadowColor;\n    ctx.shadowBlur = options.shadowBlur;\n    ctx.shadowOffsetX = options.shadowOffsetX;\n    ctx.shadowOffsetY = options.shadowOffsetY;\n}\n/**\n * @param {CanvasRenderingContext2D} ctx\n * @param {CoreLabelOptions} options\n * @returns {{width: number, height: number}}\n */ function $4049e6bf31df43d6$var$measureLabelSize(ctx, options) {\n    const content = options.content;\n    if ($4049e6bf31df43d6$var$isImageOrCanvas(content)) {\n        const size = {\n            width: $4049e6bf31df43d6$var$getSize(content.width, options.width),\n            height: $4049e6bf31df43d6$var$getSize(content.height, options.height)\n        };\n        return size;\n    }\n    const fonts = $4049e6bf31df43d6$var$toFonts(options);\n    const strokeWidth = options.textStrokeWidth;\n    const lines = (0, $c7mKY.b)(content) ? content : [\n        content\n    ];\n    const mapKey = lines.join() + $4049e6bf31df43d6$var$fontsKey(fonts) + strokeWidth + (ctx._measureText ? \"-spriting\" : \"\");\n    if (!$4049e6bf31df43d6$var$widthCache.has(mapKey)) $4049e6bf31df43d6$var$widthCache.set(mapKey, $4049e6bf31df43d6$var$calculateLabelSize(ctx, lines, fonts, strokeWidth));\n    return $4049e6bf31df43d6$var$widthCache.get(mapKey);\n}\n/**\n * @param {CanvasRenderingContext2D} ctx\n * @param {{x: number, y: number, width: number, height: number}} rect\n * @param {Object} options\n */ function $4049e6bf31df43d6$var$drawBox(ctx, rect, options) {\n    const { x: x, y: y, width: width, height: height } = rect;\n    ctx.save();\n    $4049e6bf31df43d6$var$setShadowStyle(ctx, options);\n    const stroke = $4049e6bf31df43d6$var$setBorderStyle(ctx, options);\n    ctx.fillStyle = options.backgroundColor;\n    ctx.beginPath();\n    (0, $c7mKY.au)(ctx, {\n        x: x,\n        y: y,\n        w: width,\n        h: height,\n        radius: $4049e6bf31df43d6$var$clampAll((0, $c7mKY.aw)(options.borderRadius), 0, Math.min(width, height) / 2)\n    });\n    ctx.closePath();\n    ctx.fill();\n    if (stroke) {\n        ctx.shadowColor = options.borderShadowColor;\n        ctx.stroke();\n    }\n    ctx.restore();\n}\n/**\n * @param {CanvasRenderingContext2D} ctx\n * @param {{x: number, y: number, width: number, height: number}} rect\n * @param {CoreLabelOptions} options\n * @param {number} fitRatio\n */ function $4049e6bf31df43d6$var$drawLabel(ctx, rect, options, fitRatio) {\n    const content = options.content;\n    if ($4049e6bf31df43d6$var$isImageOrCanvas(content)) {\n        ctx.save();\n        ctx.globalAlpha = $4049e6bf31df43d6$var$getOpacity(options.opacity, content.style.opacity);\n        ctx.drawImage(content, rect.x, rect.y, rect.width, rect.height);\n        ctx.restore();\n        return;\n    }\n    const labels = (0, $c7mKY.b)(content) ? content : [\n        content\n    ];\n    const fonts = $4049e6bf31df43d6$var$toFonts(options, fitRatio);\n    const optColor = options.color;\n    const colors = (0, $c7mKY.b)(optColor) ? optColor : [\n        optColor\n    ];\n    const x = $4049e6bf31df43d6$var$calculateTextAlignment(rect, options);\n    const y = rect.y + options.textStrokeWidth / 2;\n    ctx.save();\n    ctx.textBaseline = \"middle\";\n    ctx.textAlign = options.textAlign;\n    if ($4049e6bf31df43d6$var$setTextStrokeStyle(ctx, options)) $4049e6bf31df43d6$var$applyLabelDecoration(ctx, {\n        x: x,\n        y: y\n    }, labels, fonts);\n    $4049e6bf31df43d6$var$applyLabelContent(ctx, {\n        x: x,\n        y: y\n    }, labels, {\n        fonts: fonts,\n        colors: colors\n    });\n    ctx.restore();\n}\nfunction $4049e6bf31df43d6$var$setTextStrokeStyle(ctx, options) {\n    if (options.textStrokeWidth > 0) {\n        // https://stackoverflow.com/questions/13627111/drawing-text-with-an-outer-stroke-with-html5s-canvas\n        ctx.lineJoin = \"round\";\n        ctx.miterLimit = 2;\n        ctx.lineWidth = options.textStrokeWidth;\n        ctx.strokeStyle = options.textStrokeColor;\n        return true;\n    }\n}\n/**\n * @param {CanvasRenderingContext2D} ctx\n * @param {{radius: number, options: PointAnnotationOptions}} element\n * @param {number} x\n * @param {number} y\n */ function $4049e6bf31df43d6$var$drawPoint(ctx, element, x, y) {\n    const { radius: radius, options: options } = element;\n    const style = options.pointStyle;\n    const rotation = options.rotation;\n    let rad = (rotation || 0) * (0, $c7mKY.b3);\n    if ($4049e6bf31df43d6$var$isImageOrCanvas(style)) {\n        ctx.save();\n        ctx.translate(x, y);\n        ctx.rotate(rad);\n        ctx.drawImage(style, -style.width / 2, -style.height / 2, style.width, style.height);\n        ctx.restore();\n        return;\n    }\n    if ($4049e6bf31df43d6$var$notRadius(radius)) return;\n    $4049e6bf31df43d6$var$drawPointStyle(ctx, {\n        x: x,\n        y: y,\n        radius: radius,\n        rotation: rotation,\n        style: style,\n        rad: rad\n    });\n}\nfunction $4049e6bf31df43d6$var$drawPointStyle(ctx, { x: x, y: y, radius: radius, rotation: rotation, style: style, rad: rad }) {\n    let xOffset, yOffset, size, cornerRadius;\n    ctx.beginPath();\n    switch(style){\n        // Default includes circle\n        default:\n            ctx.arc(x, y, radius, 0, (0, $c7mKY.T));\n            ctx.closePath();\n            break;\n        case \"triangle\":\n            ctx.moveTo(x + Math.sin(rad) * radius, y - Math.cos(rad) * radius);\n            rad += (0, $c7mKY.b5);\n            ctx.lineTo(x + Math.sin(rad) * radius, y - Math.cos(rad) * radius);\n            rad += (0, $c7mKY.b5);\n            ctx.lineTo(x + Math.sin(rad) * radius, y - Math.cos(rad) * radius);\n            ctx.closePath();\n            break;\n        case \"rectRounded\":\n            // NOTE: the rounded rect implementation changed to use `arc` instead of\n            // `quadraticCurveTo` since it generates better results when rect is\n            // almost a circle. 0.516 (instead of 0.5) produces results with visually\n            // closer proportion to the previous impl and it is inscribed in the\n            // circle with `radius`. For more details, see the following PRs:\n            // https://github.com/chartjs/Chart.js/issues/5597\n            // https://github.com/chartjs/Chart.js/issues/5858\n            cornerRadius = radius * 0.516;\n            size = radius - cornerRadius;\n            xOffset = Math.cos(rad + (0, $c7mKY.b4)) * size;\n            yOffset = Math.sin(rad + (0, $c7mKY.b4)) * size;\n            ctx.arc(x - xOffset, y - yOffset, cornerRadius, rad - (0, $c7mKY.P), rad - (0, $c7mKY.H));\n            ctx.arc(x + yOffset, y - xOffset, cornerRadius, rad - (0, $c7mKY.H), rad);\n            ctx.arc(x + xOffset, y + yOffset, cornerRadius, rad, rad + (0, $c7mKY.H));\n            ctx.arc(x - yOffset, y + xOffset, cornerRadius, rad + (0, $c7mKY.H), rad + (0, $c7mKY.P));\n            ctx.closePath();\n            break;\n        case \"rect\":\n            if (!rotation) {\n                size = Math.SQRT1_2 * radius;\n                ctx.rect(x - size, y - size, 2 * size, 2 * size);\n                break;\n            }\n            rad += (0, $c7mKY.b4);\n        /* falls through */ case \"rectRot\":\n            xOffset = Math.cos(rad) * radius;\n            yOffset = Math.sin(rad) * radius;\n            ctx.moveTo(x - xOffset, y - yOffset);\n            ctx.lineTo(x + yOffset, y - xOffset);\n            ctx.lineTo(x + xOffset, y + yOffset);\n            ctx.lineTo(x - yOffset, y + xOffset);\n            ctx.closePath();\n            break;\n        case \"crossRot\":\n            rad += (0, $c7mKY.b4);\n        /* falls through */ case \"cross\":\n            xOffset = Math.cos(rad) * radius;\n            yOffset = Math.sin(rad) * radius;\n            ctx.moveTo(x - xOffset, y - yOffset);\n            ctx.lineTo(x + xOffset, y + yOffset);\n            ctx.moveTo(x + yOffset, y - xOffset);\n            ctx.lineTo(x - yOffset, y + xOffset);\n            break;\n        case \"star\":\n            xOffset = Math.cos(rad) * radius;\n            yOffset = Math.sin(rad) * radius;\n            ctx.moveTo(x - xOffset, y - yOffset);\n            ctx.lineTo(x + xOffset, y + yOffset);\n            ctx.moveTo(x + yOffset, y - xOffset);\n            ctx.lineTo(x - yOffset, y + xOffset);\n            rad += (0, $c7mKY.b4);\n            xOffset = Math.cos(rad) * radius;\n            yOffset = Math.sin(rad) * radius;\n            ctx.moveTo(x - xOffset, y - yOffset);\n            ctx.lineTo(x + xOffset, y + yOffset);\n            ctx.moveTo(x + yOffset, y - xOffset);\n            ctx.lineTo(x - yOffset, y + xOffset);\n            break;\n        case \"line\":\n            xOffset = Math.cos(rad) * radius;\n            yOffset = Math.sin(rad) * radius;\n            ctx.moveTo(x - xOffset, y - yOffset);\n            ctx.lineTo(x + xOffset, y + yOffset);\n            break;\n        case \"dash\":\n            ctx.moveTo(x, y);\n            ctx.lineTo(x + Math.cos(rad) * radius, y + Math.sin(rad) * radius);\n            break;\n    }\n    ctx.fill();\n}\nfunction $4049e6bf31df43d6$var$calculateLabelSize(ctx, lines, fonts, strokeWidth) {\n    ctx.save();\n    const count = lines.length;\n    let width = 0;\n    let height = strokeWidth;\n    for(let i = 0; i < count; i++){\n        const font = fonts[Math.min(i, fonts.length - 1)];\n        ctx.font = font.string;\n        const text = lines[i];\n        width = Math.max(width, ctx.measureText(text).width + strokeWidth);\n        height += font.lineHeight;\n    }\n    ctx.restore();\n    return {\n        width: width,\n        height: height\n    };\n}\nfunction $4049e6bf31df43d6$var$applyLabelDecoration(ctx, { x: x, y: y }, labels, fonts) {\n    ctx.beginPath();\n    let lhs = 0;\n    labels.forEach(function(l, i) {\n        const f = fonts[Math.min(i, fonts.length - 1)];\n        const lh = f.lineHeight;\n        ctx.font = f.string;\n        ctx.strokeText(l, x, y + lh / 2 + lhs);\n        lhs += lh;\n    });\n    ctx.stroke();\n}\nfunction $4049e6bf31df43d6$var$applyLabelContent(ctx, { x: x, y: y }, labels, { fonts: fonts, colors: colors }) {\n    let lhs = 0;\n    labels.forEach(function(l, i) {\n        const c = colors[Math.min(i, colors.length - 1)];\n        const f = fonts[Math.min(i, fonts.length - 1)];\n        const lh = f.lineHeight;\n        ctx.beginPath();\n        ctx.font = f.string;\n        ctx.fillStyle = c;\n        ctx.fillText(l, x, y + lh / 2 + lhs);\n        lhs += lh;\n        ctx.fill();\n    });\n}\nfunction $4049e6bf31df43d6$var$getOpacity(value, elementValue) {\n    const opacity = (0, $c7mKY.x)(value) ? value : elementValue;\n    return (0, $c7mKY.x)(opacity) ? $4049e6bf31df43d6$var$clamp(opacity, 0, 1) : 1;\n}\nconst $4049e6bf31df43d6$var$positions = [\n    \"left\",\n    \"bottom\",\n    \"top\",\n    \"right\"\n];\n/**\n * @typedef { import('../../types/element').AnnotationElement } AnnotationElement\n */ /**\n * Drawa the callout component for labels.\n * @param {CanvasRenderingContext2D} ctx - chart canvas context\n * @param {AnnotationElement} element - the label element\n */ function $4049e6bf31df43d6$var$drawCallout(ctx, element) {\n    const { pointX: pointX, pointY: pointY, options: options } = element;\n    const callout = options.callout;\n    const calloutPosition = callout && callout.display && $4049e6bf31df43d6$var$resolveCalloutPosition(element, callout);\n    if (!calloutPosition || $4049e6bf31df43d6$var$isPointInRange(element, callout, calloutPosition)) return;\n    ctx.save();\n    ctx.beginPath();\n    const stroke = $4049e6bf31df43d6$var$setBorderStyle(ctx, callout);\n    if (!stroke) return ctx.restore();\n    const { separatorStart: separatorStart, separatorEnd: separatorEnd } = $4049e6bf31df43d6$var$getCalloutSeparatorCoord(element, calloutPosition);\n    const { sideStart: sideStart, sideEnd: sideEnd } = $4049e6bf31df43d6$var$getCalloutSideCoord(element, calloutPosition, separatorStart);\n    if (callout.margin > 0 || options.borderWidth === 0) {\n        ctx.moveTo(separatorStart.x, separatorStart.y);\n        ctx.lineTo(separatorEnd.x, separatorEnd.y);\n    }\n    ctx.moveTo(sideStart.x, sideStart.y);\n    ctx.lineTo(sideEnd.x, sideEnd.y);\n    const rotatedPoint = $4049e6bf31df43d6$var$rotated({\n        x: pointX,\n        y: pointY\n    }, element.getCenterPoint(), (0, $c7mKY.t)(-element.rotation));\n    ctx.lineTo(rotatedPoint.x, rotatedPoint.y);\n    ctx.stroke();\n    ctx.restore();\n}\nfunction $4049e6bf31df43d6$var$getCalloutSeparatorCoord(element, position) {\n    const { x: x, y: y, x2: x2, y2: y2 } = element;\n    const adjust = $4049e6bf31df43d6$var$getCalloutSeparatorAdjust(element, position);\n    let separatorStart, separatorEnd;\n    if (position === \"left\" || position === \"right\") {\n        separatorStart = {\n            x: x + adjust,\n            y: y\n        };\n        separatorEnd = {\n            x: separatorStart.x,\n            y: y2\n        };\n    } else {\n        //  position 'top' or 'bottom'\n        separatorStart = {\n            x: x,\n            y: y + adjust\n        };\n        separatorEnd = {\n            x: x2,\n            y: separatorStart.y\n        };\n    }\n    return {\n        separatorStart: separatorStart,\n        separatorEnd: separatorEnd\n    };\n}\nfunction $4049e6bf31df43d6$var$getCalloutSeparatorAdjust(element, position) {\n    const { width: width, height: height, options: options } = element;\n    const adjust = options.callout.margin + options.borderWidth / 2;\n    if (position === \"right\") return width + adjust;\n    else if (position === \"bottom\") return height + adjust;\n    return -adjust;\n}\nfunction $4049e6bf31df43d6$var$getCalloutSideCoord(element, position, separatorStart) {\n    const { y: y, width: width, height: height, options: options } = element;\n    const start = options.callout.start;\n    const side = $4049e6bf31df43d6$var$getCalloutSideAdjust(position, options.callout);\n    let sideStart, sideEnd;\n    if (position === \"left\" || position === \"right\") {\n        sideStart = {\n            x: separatorStart.x,\n            y: y + $4049e6bf31df43d6$var$getSize(height, start)\n        };\n        sideEnd = {\n            x: sideStart.x + side,\n            y: sideStart.y\n        };\n    } else {\n        //  position 'top' or 'bottom'\n        sideStart = {\n            x: separatorStart.x + $4049e6bf31df43d6$var$getSize(width, start),\n            y: separatorStart.y\n        };\n        sideEnd = {\n            x: sideStart.x,\n            y: sideStart.y + side\n        };\n    }\n    return {\n        sideStart: sideStart,\n        sideEnd: sideEnd\n    };\n}\nfunction $4049e6bf31df43d6$var$getCalloutSideAdjust(position, options) {\n    const side = options.side;\n    if (position === \"left\" || position === \"top\") return -side;\n    return side;\n}\nfunction $4049e6bf31df43d6$var$resolveCalloutPosition(element, options) {\n    const position = options.position;\n    if ($4049e6bf31df43d6$var$positions.includes(position)) return position;\n    return $4049e6bf31df43d6$var$resolveCalloutAutoPosition(element, options);\n}\nfunction $4049e6bf31df43d6$var$resolveCalloutAutoPosition(element, options) {\n    const { x: x, y: y, x2: x2, y2: y2, width: width, height: height, pointX: pointX, pointY: pointY, centerX: centerX, centerY: centerY, rotation: rotation } = element;\n    const center = {\n        x: centerX,\n        y: centerY\n    };\n    const start = options.start;\n    const xAdjust = $4049e6bf31df43d6$var$getSize(width, start);\n    const yAdjust = $4049e6bf31df43d6$var$getSize(height, start);\n    const xPoints = [\n        x,\n        x + xAdjust,\n        x + xAdjust,\n        x2\n    ];\n    const yPoints = [\n        y + yAdjust,\n        y2,\n        y,\n        y2\n    ];\n    const result = [];\n    for(let index = 0; index < 4; index++){\n        const rotatedPoint = $4049e6bf31df43d6$var$rotated({\n            x: xPoints[index],\n            y: yPoints[index]\n        }, center, (0, $c7mKY.t)(rotation));\n        result.push({\n            position: $4049e6bf31df43d6$var$positions[index],\n            distance: (0, $c7mKY.aE)(rotatedPoint, {\n                x: pointX,\n                y: pointY\n            })\n        });\n    }\n    return result.sort((a, b)=>a.distance - b.distance)[0].position;\n}\nfunction $4049e6bf31df43d6$var$isPointInRange(element, callout, position) {\n    const { pointX: pointX, pointY: pointY } = element;\n    const margin = callout.margin;\n    let x = pointX;\n    let y = pointY;\n    if (position === \"left\") x += margin;\n    else if (position === \"right\") x -= margin;\n    else if (position === \"top\") y += margin;\n    else if (position === \"bottom\") y -= margin;\n    return element.inRange(x, y);\n}\nconst $4049e6bf31df43d6$var$limitedLineScale = {\n    xScaleID: {\n        min: \"xMin\",\n        max: \"xMax\",\n        start: \"left\",\n        end: \"right\",\n        startProp: \"x\",\n        endProp: \"x2\"\n    },\n    yScaleID: {\n        min: \"yMin\",\n        max: \"yMax\",\n        start: \"bottom\",\n        end: \"top\",\n        startProp: \"y\",\n        endProp: \"y2\"\n    }\n};\n/**\n * @typedef { import(\"chart.js\").Chart } Chart\n * @typedef { import(\"chart.js\").Scale } Scale\n * @typedef { import(\"chart.js\").Point } Point\n * @typedef { import('../../types/element').AnnotationBoxModel } AnnotationBoxModel\n * @typedef { import('../../types/options').CoreAnnotationOptions } CoreAnnotationOptions\n * @typedef { import('../../types/options').LineAnnotationOptions } LineAnnotationOptions\n * @typedef { import('../../types/options').PointAnnotationOptions } PointAnnotationOptions\n * @typedef { import('../../types/options').PolygonAnnotationOptions } PolygonAnnotationOptions\n */ /**\n * @param {Scale} scale\n * @param {number|string} value\n * @param {number} fallback\n * @returns {number}\n */ function $4049e6bf31df43d6$var$scaleValue(scale, value, fallback) {\n    value = typeof value === \"number\" ? value : scale.parse(value);\n    return (0, $c7mKY.g)(value) ? scale.getPixelForValue(value) : fallback;\n}\n/**\n * Search the scale defined in chartjs by the axis related to the annotation options key.\n * @param {{ [key: string]: Scale }} scales\n * @param {CoreAnnotationOptions} options\n * @param {string} key\n * @returns {string}\n */ function $4049e6bf31df43d6$var$retrieveScaleID(scales, options, key) {\n    const scaleID = options[key];\n    if (scaleID || key === \"scaleID\") return scaleID;\n    const axis = key.charAt(0);\n    const axes = Object.values(scales).filter((scale)=>scale.axis && scale.axis === axis);\n    if (axes.length) return axes[0].id;\n    return axis;\n}\n/**\n * @param {Scale} scale\n * @param {{min: number, max: number, start: number, end: number}} options\n * @returns {{start: number, end: number}|undefined}\n */ function $4049e6bf31df43d6$var$getDimensionByScale(scale, options) {\n    if (scale) {\n        const reverse = scale.options.reverse;\n        const start = $4049e6bf31df43d6$var$scaleValue(scale, options.min, reverse ? options.end : options.start);\n        const end = $4049e6bf31df43d6$var$scaleValue(scale, options.max, reverse ? options.start : options.end);\n        return {\n            start: start,\n            end: end\n        };\n    }\n}\n/**\n * @param {Chart} chart\n * @param {CoreAnnotationOptions} options\n * @returns {Point}\n */ function $4049e6bf31df43d6$var$getChartPoint(chart, options) {\n    const { chartArea: chartArea, scales: scales } = chart;\n    const xScale = scales[$4049e6bf31df43d6$var$retrieveScaleID(scales, options, \"xScaleID\")];\n    const yScale = scales[$4049e6bf31df43d6$var$retrieveScaleID(scales, options, \"yScaleID\")];\n    let x = chartArea.width / 2;\n    let y = chartArea.height / 2;\n    if (xScale) x = $4049e6bf31df43d6$var$scaleValue(xScale, options.xValue, xScale.left + xScale.width / 2);\n    if (yScale) y = $4049e6bf31df43d6$var$scaleValue(yScale, options.yValue, yScale.top + yScale.height / 2);\n    return {\n        x: x,\n        y: y\n    };\n}\n/**\n * @param {Chart} chart\n * @param {CoreAnnotationOptions} options\n * @returns {AnnotationBoxModel}\n */ function $4049e6bf31df43d6$var$resolveBoxProperties(chart, options) {\n    const scales = chart.scales;\n    const xScale = scales[$4049e6bf31df43d6$var$retrieveScaleID(scales, options, \"xScaleID\")];\n    const yScale = scales[$4049e6bf31df43d6$var$retrieveScaleID(scales, options, \"yScaleID\")];\n    if (!xScale && !yScale) return {};\n    let { left: x, right: x2 } = xScale || chart.chartArea;\n    let { top: y, bottom: y2 } = yScale || chart.chartArea;\n    const xDim = $4049e6bf31df43d6$var$getChartDimensionByScale(xScale, {\n        min: options.xMin,\n        max: options.xMax,\n        start: x,\n        end: x2\n    });\n    x = xDim.start;\n    x2 = xDim.end;\n    const yDim = $4049e6bf31df43d6$var$getChartDimensionByScale(yScale, {\n        min: options.yMin,\n        max: options.yMax,\n        start: y2,\n        end: y\n    });\n    y = yDim.start;\n    y2 = yDim.end;\n    return {\n        x: x,\n        y: y,\n        x2: x2,\n        y2: y2,\n        width: x2 - x,\n        height: y2 - y,\n        centerX: x + (x2 - x) / 2,\n        centerY: y + (y2 - y) / 2\n    };\n}\n/**\n * @param {Chart} chart\n * @param {PointAnnotationOptions|PolygonAnnotationOptions} options\n * @returns {AnnotationBoxModel}\n */ function $4049e6bf31df43d6$var$resolvePointProperties(chart, options) {\n    if (!$4049e6bf31df43d6$var$isBoundToPoint(options)) {\n        const box = $4049e6bf31df43d6$var$resolveBoxProperties(chart, options);\n        let radius = options.radius;\n        if (!radius || isNaN(radius)) {\n            radius = Math.min(box.width, box.height) / 2;\n            options.radius = radius;\n        }\n        const size = radius * 2;\n        const adjustCenterX = box.centerX + options.xAdjust;\n        const adjustCenterY = box.centerY + options.yAdjust;\n        return {\n            x: adjustCenterX - radius,\n            y: adjustCenterY - radius,\n            x2: adjustCenterX + radius,\n            y2: adjustCenterY + radius,\n            centerX: adjustCenterX,\n            centerY: adjustCenterY,\n            width: size,\n            height: size,\n            radius: radius\n        };\n    }\n    return $4049e6bf31df43d6$var$getChartCircle(chart, options);\n}\n/**\n * @param {Chart} chart\n * @param {LineAnnotationOptions} options\n * @returns {AnnotationBoxModel}\n */ function $4049e6bf31df43d6$var$resolveLineProperties(chart, options) {\n    const { scales: scales, chartArea: chartArea } = chart;\n    const scale = scales[options.scaleID];\n    const area = {\n        x: chartArea.left,\n        y: chartArea.top,\n        x2: chartArea.right,\n        y2: chartArea.bottom\n    };\n    if (scale) $4049e6bf31df43d6$var$resolveFullLineProperties(scale, area, options);\n    else $4049e6bf31df43d6$var$resolveLimitedLineProperties(scales, area, options);\n    return area;\n}\n/**\n * @param {Chart} chart\n * @param {CoreAnnotationOptions} options\n * @param {boolean} [centerBased=false]\n * @returns {AnnotationBoxModel}\n */ function $4049e6bf31df43d6$var$resolveBoxAndLabelProperties(chart, options) {\n    const properties = $4049e6bf31df43d6$var$resolveBoxProperties(chart, options);\n    properties.initProperties = $4049e6bf31df43d6$var$initAnimationProperties(chart, properties, options);\n    properties.elements = [\n        {\n            type: \"label\",\n            optionScope: \"label\",\n            properties: $4049e6bf31df43d6$var$resolveLabelElementProperties$1(chart, properties, options),\n            initProperties: properties.initProperties\n        }\n    ];\n    return properties;\n}\nfunction $4049e6bf31df43d6$var$getChartCircle(chart, options) {\n    const point = $4049e6bf31df43d6$var$getChartPoint(chart, options);\n    const size = options.radius * 2;\n    return {\n        x: point.x - options.radius + options.xAdjust,\n        y: point.y - options.radius + options.yAdjust,\n        x2: point.x + options.radius + options.xAdjust,\n        y2: point.y + options.radius + options.yAdjust,\n        centerX: point.x + options.xAdjust,\n        centerY: point.y + options.yAdjust,\n        radius: options.radius,\n        width: size,\n        height: size\n    };\n}\nfunction $4049e6bf31df43d6$var$getChartDimensionByScale(scale, options) {\n    const result = $4049e6bf31df43d6$var$getDimensionByScale(scale, options) || options;\n    return {\n        start: Math.min(result.start, result.end),\n        end: Math.max(result.start, result.end)\n    };\n}\nfunction $4049e6bf31df43d6$var$resolveFullLineProperties(scale, area, options) {\n    const min = $4049e6bf31df43d6$var$scaleValue(scale, options.value, NaN);\n    const max = $4049e6bf31df43d6$var$scaleValue(scale, options.endValue, min);\n    if (scale.isHorizontal()) {\n        area.x = min;\n        area.x2 = max;\n    } else {\n        area.y = min;\n        area.y2 = max;\n    }\n}\nfunction $4049e6bf31df43d6$var$resolveLimitedLineProperties(scales, area, options) {\n    for (const scaleId of Object.keys($4049e6bf31df43d6$var$limitedLineScale)){\n        const scale = scales[$4049e6bf31df43d6$var$retrieveScaleID(scales, options, scaleId)];\n        if (scale) {\n            const { min: min, max: max, start: start, end: end, startProp: startProp, endProp: endProp } = $4049e6bf31df43d6$var$limitedLineScale[scaleId];\n            const dim = $4049e6bf31df43d6$var$getDimensionByScale(scale, {\n                min: options[min],\n                max: options[max],\n                start: scale[start],\n                end: scale[end]\n            });\n            area[startProp] = dim.start;\n            area[endProp] = dim.end;\n        }\n    }\n}\nfunction $4049e6bf31df43d6$var$calculateX({ properties: properties, options: options }, labelSize, position, padding) {\n    const { x: start, x2: end, width: size } = properties;\n    return $4049e6bf31df43d6$var$calculatePosition({\n        start: start,\n        end: end,\n        size: size,\n        borderWidth: options.borderWidth\n    }, {\n        position: position.x,\n        padding: {\n            start: padding.left,\n            end: padding.right\n        },\n        adjust: options.label.xAdjust,\n        size: labelSize.width\n    });\n}\nfunction $4049e6bf31df43d6$var$calculateY({ properties: properties, options: options }, labelSize, position, padding) {\n    const { y: start, y2: end, height: size } = properties;\n    return $4049e6bf31df43d6$var$calculatePosition({\n        start: start,\n        end: end,\n        size: size,\n        borderWidth: options.borderWidth\n    }, {\n        position: position.y,\n        padding: {\n            start: padding.top,\n            end: padding.bottom\n        },\n        adjust: options.label.yAdjust,\n        size: labelSize.height\n    });\n}\nfunction $4049e6bf31df43d6$var$calculatePosition(boxOpts, labelOpts) {\n    const { start: start, end: end, borderWidth: borderWidth } = boxOpts;\n    const { position: position, padding: { start: padStart, end: padEnd }, adjust: adjust } = labelOpts;\n    const availableSize = end - borderWidth - start - padStart - padEnd - labelOpts.size;\n    return start + borderWidth / 2 + adjust + $4049e6bf31df43d6$var$getRelativePosition(availableSize, position);\n}\nfunction $4049e6bf31df43d6$var$resolveLabelElementProperties$1(chart, properties, options) {\n    const label = options.label;\n    label.backgroundColor = \"transparent\";\n    label.callout.display = false;\n    const position = $4049e6bf31df43d6$var$toPosition(label.position);\n    const padding = (0, $c7mKY.E)(label.padding);\n    const labelSize = $4049e6bf31df43d6$var$measureLabelSize(chart.ctx, label);\n    const x = $4049e6bf31df43d6$var$calculateX({\n        properties: properties,\n        options: options\n    }, labelSize, position, padding);\n    const y = $4049e6bf31df43d6$var$calculateY({\n        properties: properties,\n        options: options\n    }, labelSize, position, padding);\n    const width = labelSize.width + padding.width;\n    const height = labelSize.height + padding.height;\n    return {\n        x: x,\n        y: y,\n        x2: x + width,\n        y2: y + height,\n        width: width,\n        height: height,\n        centerX: x + width / 2,\n        centerY: y + height / 2,\n        rotation: label.rotation\n    };\n}\nconst $4049e6bf31df43d6$var$moveHooks = [\n    \"enter\",\n    \"leave\"\n];\n/**\n * @typedef { import(\"chart.js\").Chart } Chart\n * @typedef { import('../../types/options').AnnotationPluginOptions } AnnotationPluginOptions\n */ const $4049e6bf31df43d6$var$eventHooks = $4049e6bf31df43d6$var$moveHooks.concat(\"click\");\n/**\n * @param {Chart} chart\n * @param {Object} state\n * @param {AnnotationPluginOptions} options\n */ function $4049e6bf31df43d6$var$updateListeners(chart, state, options) {\n    state.listened = $4049e6bf31df43d6$var$loadHooks(options, $4049e6bf31df43d6$var$eventHooks, state.listeners);\n    state.moveListened = false;\n    $4049e6bf31df43d6$var$moveHooks.forEach((hook)=>{\n        if ((0, $c7mKY.a7)(options[hook])) state.moveListened = true;\n    });\n    if (!state.listened || !state.moveListened) state.annotations.forEach((scope)=>{\n        if (!state.listened && (0, $c7mKY.a7)(scope.click)) state.listened = true;\n        if (!state.moveListened) $4049e6bf31df43d6$var$moveHooks.forEach((hook)=>{\n            if ((0, $c7mKY.a7)(scope[hook])) {\n                state.listened = true;\n                state.moveListened = true;\n            }\n        });\n    });\n}\n/**\n * @param {Object} state\n * @param {ChartEvent} event\n * @param {AnnotationPluginOptions} options\n * @return {boolean|undefined}\n */ function $4049e6bf31df43d6$var$handleEvent(state, event, options) {\n    if (state.listened) switch(event.type){\n        case \"mousemove\":\n        case \"mouseout\":\n            return $4049e6bf31df43d6$var$handleMoveEvents(state, event, options);\n        case \"click\":\n            return $4049e6bf31df43d6$var$handleClickEvents(state, event, options);\n    }\n}\nfunction $4049e6bf31df43d6$var$handleMoveEvents(state, event, options) {\n    if (!state.moveListened) return;\n    let elements;\n    if (event.type === \"mousemove\") elements = $4049e6bf31df43d6$var$getElements(state.visibleElements, event, options.interaction);\n    else elements = [];\n    const previous = state.hovered;\n    state.hovered = elements;\n    const context = {\n        state: state,\n        event: event\n    };\n    let changed = $4049e6bf31df43d6$var$dispatchMoveEvents(context, \"leave\", previous, elements);\n    return $4049e6bf31df43d6$var$dispatchMoveEvents(context, \"enter\", elements, previous) || changed;\n}\nfunction $4049e6bf31df43d6$var$dispatchMoveEvents({ state: state, event: event }, hook, elements, checkElements) {\n    let changed;\n    for (const element of elements)if (checkElements.indexOf(element) < 0) changed = $4049e6bf31df43d6$var$dispatchEvent(element.options[hook] || state.listeners[hook], element, event) || changed;\n    return changed;\n}\nfunction $4049e6bf31df43d6$var$handleClickEvents(state, event, options) {\n    const listeners = state.listeners;\n    const elements = $4049e6bf31df43d6$var$getElements(state.visibleElements, event, options.interaction);\n    let changed;\n    for (const element of elements)changed = $4049e6bf31df43d6$var$dispatchEvent(element.options.click || listeners.click, element, event) || changed;\n    return changed;\n}\nfunction $4049e6bf31df43d6$var$dispatchEvent(handler, element, event) {\n    return (0, $c7mKY.Q)(handler, [\n        element.$context,\n        event\n    ]) === true;\n}\n/**\n * @typedef { import(\"chart.js\").Chart } Chart\n * @typedef { import('../../types/options').AnnotationPluginOptions } AnnotationPluginOptions\n * @typedef { import('../../types/element').AnnotationElement } AnnotationElement\n */ const $4049e6bf31df43d6$var$elementHooks = [\n    \"afterDraw\",\n    \"beforeDraw\"\n];\n/**\n * @param {Chart} chart\n * @param {Object} state\n * @param {AnnotationPluginOptions} options\n */ function $4049e6bf31df43d6$var$updateHooks(chart, state, options) {\n    const visibleElements = state.visibleElements;\n    state.hooked = $4049e6bf31df43d6$var$loadHooks(options, $4049e6bf31df43d6$var$elementHooks, state.hooks);\n    if (!state.hooked) visibleElements.forEach((scope)=>{\n        if (!state.hooked) $4049e6bf31df43d6$var$elementHooks.forEach((hook)=>{\n            if ((0, $c7mKY.a7)(scope.options[hook])) state.hooked = true;\n        });\n    });\n}\n/**\n * @param {Object} state\n * @param {AnnotationElement} element\n * @param {string} hook\n */ function $4049e6bf31df43d6$var$invokeHook(state, element, hook) {\n    if (state.hooked) {\n        const callbackHook = element.options[hook] || state.hooks[hook];\n        return (0, $c7mKY.Q)(callbackHook, [\n            element.$context\n        ]);\n    }\n}\n/**\n * @typedef { import(\"chart.js\").Chart } Chart\n * @typedef { import(\"chart.js\").Scale } Scale\n * @typedef { import('../../types/options').CoreAnnotationOptions } CoreAnnotationOptions\n */ /**\n * @param {Chart} chart\n * @param {Scale} scale\n * @param {CoreAnnotationOptions[]} annotations\n */ function $4049e6bf31df43d6$var$adjustScaleRange(chart, scale, annotations) {\n    const range = $4049e6bf31df43d6$var$getScaleLimits(chart.scales, scale, annotations);\n    let changed = $4049e6bf31df43d6$var$changeScaleLimit(scale, range, \"min\", \"suggestedMin\");\n    changed = $4049e6bf31df43d6$var$changeScaleLimit(scale, range, \"max\", \"suggestedMax\") || changed;\n    if (changed && (0, $c7mKY.a7)(scale.handleTickRangeOptions)) scale.handleTickRangeOptions();\n}\n/**\n * @param {CoreAnnotationOptions[]} annotations\n * @param {{ [key: string]: Scale }} scales\n */ function $4049e6bf31df43d6$var$verifyScaleOptions(annotations, scales) {\n    for (const annotation of annotations)$4049e6bf31df43d6$var$verifyScaleIDs(annotation, scales);\n}\nfunction $4049e6bf31df43d6$var$changeScaleLimit(scale, range, limit, suggestedLimit) {\n    if ((0, $c7mKY.g)(range[limit]) && !$4049e6bf31df43d6$var$scaleLimitDefined(scale.options, limit, suggestedLimit)) {\n        const changed = scale[limit] !== range[limit];\n        scale[limit] = range[limit];\n        return changed;\n    }\n}\nfunction $4049e6bf31df43d6$var$scaleLimitDefined(scaleOptions, limit, suggestedLimit) {\n    return (0, $c7mKY.h)(scaleOptions[limit]) || (0, $c7mKY.h)(scaleOptions[suggestedLimit]);\n}\nfunction $4049e6bf31df43d6$var$verifyScaleIDs(annotation, scales) {\n    for (const key of [\n        \"scaleID\",\n        \"xScaleID\",\n        \"yScaleID\"\n    ]){\n        const scaleID = $4049e6bf31df43d6$var$retrieveScaleID(scales, annotation, key);\n        if (scaleID && !scales[scaleID] && $4049e6bf31df43d6$var$verifyProperties(annotation, key)) console.warn(`No scale found with id '${scaleID}' for annotation '${annotation.id}'`);\n    }\n}\nfunction $4049e6bf31df43d6$var$verifyProperties(annotation, key) {\n    if (key === \"scaleID\") return true;\n    const axis = key.charAt(0);\n    for (const prop of [\n        \"Min\",\n        \"Max\",\n        \"Value\"\n    ]){\n        if ((0, $c7mKY.h)(annotation[axis + prop])) return true;\n    }\n    return false;\n}\nfunction $4049e6bf31df43d6$var$getScaleLimits(scales, scale, annotations) {\n    const axis = scale.axis;\n    const scaleID = scale.id;\n    const scaleIDOption = axis + \"ScaleID\";\n    const limits = {\n        min: (0, $c7mKY.v)(scale.min, Number.NEGATIVE_INFINITY),\n        max: (0, $c7mKY.v)(scale.max, Number.POSITIVE_INFINITY)\n    };\n    for (const annotation of annotations){\n        if (annotation.scaleID === scaleID) $4049e6bf31df43d6$var$updateLimits(annotation, scale, [\n            \"value\",\n            \"endValue\"\n        ], limits);\n        else if ($4049e6bf31df43d6$var$retrieveScaleID(scales, annotation, scaleIDOption) === scaleID) $4049e6bf31df43d6$var$updateLimits(annotation, scale, [\n            axis + \"Min\",\n            axis + \"Max\",\n            axis + \"Value\"\n        ], limits);\n    }\n    return limits;\n}\nfunction $4049e6bf31df43d6$var$updateLimits(annotation, scale, props, limits) {\n    for (const prop of props){\n        const raw = annotation[prop];\n        if ((0, $c7mKY.h)(raw)) {\n            const value = scale.parse(raw);\n            limits.min = Math.min(limits.min, value);\n            limits.max = Math.max(limits.max, value);\n        }\n    }\n}\nclass $4049e6bf31df43d6$var$BoxAnnotation extends (0, $2RVy2.Element) {\n    inRange(mouseX, mouseY, axis, useFinalPosition) {\n        const { x: x, y: y } = $4049e6bf31df43d6$var$rotated({\n            x: mouseX,\n            y: mouseY\n        }, this.getCenterPoint(useFinalPosition), (0, $c7mKY.t)(-this.options.rotation));\n        return $4049e6bf31df43d6$var$inBoxRange({\n            x: x,\n            y: y\n        }, this.getProps([\n            \"x\",\n            \"y\",\n            \"x2\",\n            \"y2\"\n        ], useFinalPosition), axis, this.options);\n    }\n    getCenterPoint(useFinalPosition) {\n        return $4049e6bf31df43d6$var$getElementCenterPoint(this, useFinalPosition);\n    }\n    draw(ctx) {\n        ctx.save();\n        $4049e6bf31df43d6$var$translate(ctx, this.getCenterPoint(), this.options.rotation);\n        $4049e6bf31df43d6$var$drawBox(ctx, this, this.options);\n        ctx.restore();\n    }\n    get label() {\n        return this.elements && this.elements[0];\n    }\n    resolveElementProperties(chart, options) {\n        return $4049e6bf31df43d6$var$resolveBoxAndLabelProperties(chart, options);\n    }\n}\n$4049e6bf31df43d6$var$BoxAnnotation.id = \"boxAnnotation\";\n$4049e6bf31df43d6$var$BoxAnnotation.defaults = {\n    adjustScaleRange: true,\n    backgroundShadowColor: \"transparent\",\n    borderCapStyle: \"butt\",\n    borderDash: [],\n    borderDashOffset: 0,\n    borderJoinStyle: \"miter\",\n    borderRadius: 0,\n    borderShadowColor: \"transparent\",\n    borderWidth: 1,\n    display: true,\n    init: undefined,\n    hitTolerance: 0,\n    label: {\n        backgroundColor: \"transparent\",\n        borderWidth: 0,\n        callout: {\n            display: false\n        },\n        color: \"black\",\n        content: null,\n        display: false,\n        drawTime: undefined,\n        font: {\n            family: undefined,\n            lineHeight: undefined,\n            size: undefined,\n            style: undefined,\n            weight: \"bold\"\n        },\n        height: undefined,\n        hitTolerance: undefined,\n        opacity: undefined,\n        padding: 6,\n        position: \"center\",\n        rotation: undefined,\n        textAlign: \"start\",\n        textStrokeColor: undefined,\n        textStrokeWidth: 0,\n        width: undefined,\n        xAdjust: 0,\n        yAdjust: 0,\n        z: undefined\n    },\n    rotation: 0,\n    shadowBlur: 0,\n    shadowOffsetX: 0,\n    shadowOffsetY: 0,\n    xMax: undefined,\n    xMin: undefined,\n    xScaleID: undefined,\n    yMax: undefined,\n    yMin: undefined,\n    yScaleID: undefined,\n    z: 0\n};\n$4049e6bf31df43d6$var$BoxAnnotation.defaultRoutes = {\n    borderColor: \"color\",\n    backgroundColor: \"color\"\n};\n$4049e6bf31df43d6$var$BoxAnnotation.descriptors = {\n    label: {\n        _fallback: true\n    }\n};\nclass $4049e6bf31df43d6$var$DoughnutLabelAnnotation extends (0, $2RVy2.Element) {\n    inRange(mouseX, mouseY, axis, useFinalPosition) {\n        return $4049e6bf31df43d6$var$inLabelRange({\n            x: mouseX,\n            y: mouseY\n        }, {\n            rect: this.getProps([\n                \"x\",\n                \"y\",\n                \"x2\",\n                \"y2\"\n            ], useFinalPosition),\n            center: this.getCenterPoint(useFinalPosition)\n        }, axis, {\n            rotation: this.rotation,\n            borderWidth: 0,\n            hitTolerance: this.options.hitTolerance\n        });\n    }\n    getCenterPoint(useFinalPosition) {\n        return $4049e6bf31df43d6$var$getElementCenterPoint(this, useFinalPosition);\n    }\n    draw(ctx) {\n        const options = this.options;\n        if (!options.display || !options.content) return;\n        $4049e6bf31df43d6$var$drawBackground(ctx, this);\n        ctx.save();\n        $4049e6bf31df43d6$var$translate(ctx, this.getCenterPoint(), this.rotation);\n        $4049e6bf31df43d6$var$drawLabel(ctx, this, options, this._fitRatio);\n        ctx.restore();\n    }\n    resolveElementProperties(chart, options) {\n        const meta = $4049e6bf31df43d6$var$getDatasetMeta(chart, options);\n        if (!meta) return {};\n        const { controllerMeta: controllerMeta, point: point, radius: radius } = $4049e6bf31df43d6$var$getControllerMeta(chart, options, meta);\n        let labelSize = $4049e6bf31df43d6$var$measureLabelSize(chart.ctx, options);\n        const _fitRatio = $4049e6bf31df43d6$var$getFitRatio(labelSize, radius);\n        if ($4049e6bf31df43d6$var$shouldFit(options, _fitRatio)) labelSize = {\n            width: labelSize.width * _fitRatio,\n            height: labelSize.height * _fitRatio\n        };\n        const { position: position, xAdjust: xAdjust, yAdjust: yAdjust } = options;\n        const boxSize = $4049e6bf31df43d6$var$measureLabelRectangle(point, labelSize, {\n            borderWidth: 0,\n            position: position,\n            xAdjust: xAdjust,\n            yAdjust: yAdjust\n        });\n        return {\n            initProperties: $4049e6bf31df43d6$var$initAnimationProperties(chart, boxSize, options),\n            ...boxSize,\n            ...controllerMeta,\n            rotation: options.rotation,\n            _fitRatio: _fitRatio\n        };\n    }\n}\n$4049e6bf31df43d6$var$DoughnutLabelAnnotation.id = \"doughnutLabelAnnotation\";\n$4049e6bf31df43d6$var$DoughnutLabelAnnotation.defaults = {\n    autoFit: true,\n    autoHide: true,\n    backgroundColor: \"transparent\",\n    backgroundShadowColor: \"transparent\",\n    borderColor: \"transparent\",\n    borderDash: [],\n    borderDashOffset: 0,\n    borderJoinStyle: \"miter\",\n    borderShadowColor: \"transparent\",\n    borderWidth: 0,\n    color: \"black\",\n    content: null,\n    display: true,\n    font: {\n        family: undefined,\n        lineHeight: undefined,\n        size: undefined,\n        style: undefined,\n        weight: undefined\n    },\n    height: undefined,\n    hitTolerance: 0,\n    init: undefined,\n    opacity: undefined,\n    position: \"center\",\n    rotation: 0,\n    shadowBlur: 0,\n    shadowOffsetX: 0,\n    shadowOffsetY: 0,\n    spacing: 1,\n    textAlign: \"center\",\n    textStrokeColor: undefined,\n    textStrokeWidth: 0,\n    width: undefined,\n    xAdjust: 0,\n    yAdjust: 0\n};\n$4049e6bf31df43d6$var$DoughnutLabelAnnotation.defaultRoutes = {};\nfunction $4049e6bf31df43d6$var$getDatasetMeta(chart, options) {\n    return chart.getSortedVisibleDatasetMetas().reduce(function(result, value) {\n        const controller = value.controller;\n        if (controller instanceof (0, $2RVy2.DoughnutController) && $4049e6bf31df43d6$var$isControllerVisible(chart, options, value.data) && (!result || controller.innerRadius < result.controller.innerRadius) && controller.options.circumference >= 90) return value;\n        return result;\n    }, undefined);\n}\nfunction $4049e6bf31df43d6$var$isControllerVisible(chart, options, elements) {\n    if (!options.autoHide) return true;\n    for(let i = 0; i < elements.length; i++){\n        if (!elements[i].hidden && chart.getDataVisibility(i)) return true;\n    }\n}\nfunction $4049e6bf31df43d6$var$getControllerMeta({ chartArea: chartArea }, options, meta) {\n    const { left: left, top: top, right: right, bottom: bottom } = chartArea;\n    const { innerRadius: innerRadius, offsetX: offsetX, offsetY: offsetY } = meta.controller;\n    const x = (left + right) / 2 + offsetX;\n    const y = (top + bottom) / 2 + offsetY;\n    const square = {\n        left: Math.max(x - innerRadius, left),\n        right: Math.min(x + innerRadius, right),\n        top: Math.max(y - innerRadius, top),\n        bottom: Math.min(y + innerRadius, bottom)\n    };\n    const point = {\n        x: (square.left + square.right) / 2,\n        y: (square.top + square.bottom) / 2\n    };\n    const space = options.spacing + options.borderWidth / 2;\n    const _radius = innerRadius - space;\n    const _counterclockwise = point.y > y;\n    const side = _counterclockwise ? top + space : bottom - space;\n    const angles = $4049e6bf31df43d6$var$getAngles(side, x, y, _radius);\n    const controllerMeta = {\n        _centerX: x,\n        _centerY: y,\n        _radius: _radius,\n        _counterclockwise: _counterclockwise,\n        ...angles\n    };\n    return {\n        controllerMeta: controllerMeta,\n        point: point,\n        radius: Math.min(innerRadius, Math.min(square.right - square.left, square.bottom - square.top) / 2)\n    };\n}\nfunction $4049e6bf31df43d6$var$getFitRatio({ width: width, height: height }, radius) {\n    const hypo = Math.sqrt(Math.pow(width, 2) + Math.pow(height, 2));\n    return radius * 2 / hypo;\n}\nfunction $4049e6bf31df43d6$var$getAngles(y, centerX, centerY, radius) {\n    const yk2 = Math.pow(centerY - y, 2);\n    const r2 = Math.pow(radius, 2);\n    const b = centerX * -2;\n    const c = Math.pow(centerX, 2) + yk2 - r2;\n    const delta = Math.pow(b, 2) - 4 * c;\n    if (delta <= 0) return {\n        _startAngle: 0,\n        _endAngle: (0, $c7mKY.T)\n    };\n    const start = (-b - Math.sqrt(delta)) / 2;\n    const end = (-b + Math.sqrt(delta)) / 2;\n    return {\n        _startAngle: (0, $c7mKY.D)({\n            x: centerX,\n            y: centerY\n        }, {\n            x: start,\n            y: y\n        }).angle,\n        _endAngle: (0, $c7mKY.D)({\n            x: centerX,\n            y: centerY\n        }, {\n            x: end,\n            y: y\n        }).angle\n    };\n}\nfunction $4049e6bf31df43d6$var$drawBackground(ctx, element) {\n    const { _centerX: _centerX, _centerY: _centerY, _radius: _radius, _startAngle: _startAngle, _endAngle: _endAngle, _counterclockwise: _counterclockwise, options: options } = element;\n    ctx.save();\n    const stroke = $4049e6bf31df43d6$var$setBorderStyle(ctx, options);\n    ctx.fillStyle = options.backgroundColor;\n    ctx.beginPath();\n    ctx.arc(_centerX, _centerY, _radius, _startAngle, _endAngle, _counterclockwise);\n    ctx.closePath();\n    ctx.fill();\n    if (stroke) ctx.stroke();\n    ctx.restore();\n}\nclass $4049e6bf31df43d6$var$LabelAnnotation extends (0, $2RVy2.Element) {\n    inRange(mouseX, mouseY, axis, useFinalPosition) {\n        return $4049e6bf31df43d6$var$inLabelRange({\n            x: mouseX,\n            y: mouseY\n        }, {\n            rect: this.getProps([\n                \"x\",\n                \"y\",\n                \"x2\",\n                \"y2\"\n            ], useFinalPosition),\n            center: this.getCenterPoint(useFinalPosition)\n        }, axis, {\n            rotation: this.rotation,\n            borderWidth: this.options.borderWidth,\n            hitTolerance: this.options.hitTolerance\n        });\n    }\n    getCenterPoint(useFinalPosition) {\n        return $4049e6bf31df43d6$var$getElementCenterPoint(this, useFinalPosition);\n    }\n    draw(ctx) {\n        const options = this.options;\n        const visible = !(0, $c7mKY.h)(this._visible) || this._visible;\n        if (!options.display || !options.content || !visible) return;\n        ctx.save();\n        $4049e6bf31df43d6$var$translate(ctx, this.getCenterPoint(), this.rotation);\n        $4049e6bf31df43d6$var$drawCallout(ctx, this);\n        $4049e6bf31df43d6$var$drawBox(ctx, this, options);\n        $4049e6bf31df43d6$var$drawLabel(ctx, $4049e6bf31df43d6$var$getLabelSize(this), options);\n        ctx.restore();\n    }\n    resolveElementProperties(chart, options) {\n        let point;\n        if (!$4049e6bf31df43d6$var$isBoundToPoint(options)) {\n            const { centerX: centerX, centerY: centerY } = $4049e6bf31df43d6$var$resolveBoxProperties(chart, options);\n            point = {\n                x: centerX,\n                y: centerY\n            };\n        } else point = $4049e6bf31df43d6$var$getChartPoint(chart, options);\n        const padding = (0, $c7mKY.E)(options.padding);\n        const labelSize = $4049e6bf31df43d6$var$measureLabelSize(chart.ctx, options);\n        const boxSize = $4049e6bf31df43d6$var$measureLabelRectangle(point, labelSize, options, padding);\n        return {\n            initProperties: $4049e6bf31df43d6$var$initAnimationProperties(chart, boxSize, options),\n            pointX: point.x,\n            pointY: point.y,\n            ...boxSize,\n            rotation: options.rotation\n        };\n    }\n}\n$4049e6bf31df43d6$var$LabelAnnotation.id = \"labelAnnotation\";\n$4049e6bf31df43d6$var$LabelAnnotation.defaults = {\n    adjustScaleRange: true,\n    backgroundColor: \"transparent\",\n    backgroundShadowColor: \"transparent\",\n    borderCapStyle: \"butt\",\n    borderDash: [],\n    borderDashOffset: 0,\n    borderJoinStyle: \"miter\",\n    borderRadius: 0,\n    borderShadowColor: \"transparent\",\n    borderWidth: 0,\n    callout: {\n        borderCapStyle: \"butt\",\n        borderColor: undefined,\n        borderDash: [],\n        borderDashOffset: 0,\n        borderJoinStyle: \"miter\",\n        borderWidth: 1,\n        display: false,\n        margin: 5,\n        position: \"auto\",\n        side: 5,\n        start: \"50%\"\n    },\n    color: \"black\",\n    content: null,\n    display: true,\n    font: {\n        family: undefined,\n        lineHeight: undefined,\n        size: undefined,\n        style: undefined,\n        weight: undefined\n    },\n    height: undefined,\n    hitTolerance: 0,\n    init: undefined,\n    opacity: undefined,\n    padding: 6,\n    position: \"center\",\n    rotation: 0,\n    shadowBlur: 0,\n    shadowOffsetX: 0,\n    shadowOffsetY: 0,\n    textAlign: \"center\",\n    textStrokeColor: undefined,\n    textStrokeWidth: 0,\n    width: undefined,\n    xAdjust: 0,\n    xMax: undefined,\n    xMin: undefined,\n    xScaleID: undefined,\n    xValue: undefined,\n    yAdjust: 0,\n    yMax: undefined,\n    yMin: undefined,\n    yScaleID: undefined,\n    yValue: undefined,\n    z: 0\n};\n$4049e6bf31df43d6$var$LabelAnnotation.defaultRoutes = {\n    borderColor: \"color\"\n};\nfunction $4049e6bf31df43d6$var$getLabelSize({ x: x, y: y, width: width, height: height, options: options }) {\n    const hBorderWidth = options.borderWidth / 2;\n    const padding = (0, $c7mKY.E)(options.padding);\n    return {\n        x: x + padding.left + hBorderWidth,\n        y: y + padding.top + hBorderWidth,\n        width: width - padding.left - padding.right - options.borderWidth,\n        height: height - padding.top - padding.bottom - options.borderWidth\n    };\n}\nconst $4049e6bf31df43d6$var$pointInLine = (p1, p2, t)=>({\n        x: p1.x + t * (p2.x - p1.x),\n        y: p1.y + t * (p2.y - p1.y)\n    });\nconst $4049e6bf31df43d6$var$interpolateX = (y, p1, p2)=>$4049e6bf31df43d6$var$pointInLine(p1, p2, Math.abs((y - p1.y) / (p2.y - p1.y))).x;\nconst $4049e6bf31df43d6$var$interpolateY = (x, p1, p2)=>$4049e6bf31df43d6$var$pointInLine(p1, p2, Math.abs((x - p1.x) / (p2.x - p1.x))).y;\nconst $4049e6bf31df43d6$var$sqr = (v)=>v * v;\nconst $4049e6bf31df43d6$var$rangeLimit = (mouseX, mouseY, { x: x, y: y, x2: x2, y2: y2 }, axis)=>axis === \"y\" ? {\n        start: Math.min(y, y2),\n        end: Math.max(y, y2),\n        value: mouseY\n    } : {\n        start: Math.min(x, x2),\n        end: Math.max(x, x2),\n        value: mouseX\n    };\n// http://www.independent-software.com/determining-coordinates-on-a-html-canvas-bezier-curve.html\nconst $4049e6bf31df43d6$var$coordInCurve = (start, cp, end, t)=>(1 - t) * (1 - t) * start + 2 * (1 - t) * t * cp + t * t * end;\nconst $4049e6bf31df43d6$var$pointInCurve = (start, cp, end, t)=>({\n        x: $4049e6bf31df43d6$var$coordInCurve(start.x, cp.x, end.x, t),\n        y: $4049e6bf31df43d6$var$coordInCurve(start.y, cp.y, end.y, t)\n    });\nconst $4049e6bf31df43d6$var$coordAngleInCurve = (start, cp, end, t)=>2 * (1 - t) * (cp - start) + 2 * t * (end - cp);\nconst $4049e6bf31df43d6$var$angleInCurve = (start, cp, end, t)=>-Math.atan2($4049e6bf31df43d6$var$coordAngleInCurve(start.x, cp.x, end.x, t), $4049e6bf31df43d6$var$coordAngleInCurve(start.y, cp.y, end.y, t)) + 0.5 * (0, $c7mKY.P);\nclass $4049e6bf31df43d6$var$LineAnnotation extends (0, $2RVy2.Element) {\n    inRange(mouseX, mouseY, axis, useFinalPosition) {\n        const hitSize = (this.options.borderWidth + this.options.hitTolerance) / 2;\n        if (axis !== \"x\" && axis !== \"y\") {\n            const point = {\n                mouseX: mouseX,\n                mouseY: mouseY\n            };\n            const { path: path, ctx: ctx } = this;\n            if (path) {\n                $4049e6bf31df43d6$var$setBorderStyle(ctx, this.options);\n                ctx.lineWidth += this.options.hitTolerance;\n                const { chart: chart } = this.$context;\n                const mx = mouseX * chart.currentDevicePixelRatio;\n                const my = mouseY * chart.currentDevicePixelRatio;\n                const result = ctx.isPointInStroke(path, mx, my) || $4049e6bf31df43d6$var$isOnLabel(this, point, useFinalPosition);\n                ctx.restore();\n                return result;\n            }\n            const epsilon = $4049e6bf31df43d6$var$sqr(hitSize);\n            return $4049e6bf31df43d6$var$intersects(this, point, epsilon, useFinalPosition) || $4049e6bf31df43d6$var$isOnLabel(this, point, useFinalPosition);\n        }\n        return $4049e6bf31df43d6$var$inAxisRange(this, {\n            mouseX: mouseX,\n            mouseY: mouseY\n        }, axis, {\n            hitSize: hitSize,\n            useFinalPosition: useFinalPosition\n        });\n    }\n    getCenterPoint(useFinalPosition) {\n        return $4049e6bf31df43d6$var$getElementCenterPoint(this, useFinalPosition);\n    }\n    draw(ctx) {\n        const { x: x, y: y, x2: x2, y2: y2, cp: cp, options: options } = this;\n        ctx.save();\n        if (!$4049e6bf31df43d6$var$setBorderStyle(ctx, options)) // no border width, then line is not drawn\n        return ctx.restore();\n        $4049e6bf31df43d6$var$setShadowStyle(ctx, options);\n        const length = Math.sqrt(Math.pow(x2 - x, 2) + Math.pow(y2 - y, 2));\n        if (options.curve && cp) {\n            $4049e6bf31df43d6$var$drawCurve(ctx, this, cp, length);\n            return ctx.restore();\n        }\n        const { startOpts: startOpts, endOpts: endOpts, startAdjust: startAdjust, endAdjust: endAdjust } = $4049e6bf31df43d6$var$getArrowHeads(this);\n        const angle = Math.atan2(y2 - y, x2 - x);\n        ctx.translate(x, y);\n        ctx.rotate(angle);\n        ctx.beginPath();\n        ctx.moveTo(0 + startAdjust, 0);\n        ctx.lineTo(length - endAdjust, 0);\n        ctx.shadowColor = options.borderShadowColor;\n        ctx.stroke();\n        $4049e6bf31df43d6$var$drawArrowHead(ctx, 0, startAdjust, startOpts);\n        $4049e6bf31df43d6$var$drawArrowHead(ctx, length, -endAdjust, endOpts);\n        ctx.restore();\n    }\n    get label() {\n        return this.elements && this.elements[0];\n    }\n    resolveElementProperties(chart, options) {\n        const area = $4049e6bf31df43d6$var$resolveLineProperties(chart, options);\n        const { x: x, y: y, x2: x2, y2: y2 } = area;\n        const inside = $4049e6bf31df43d6$var$isLineInArea(area, chart.chartArea);\n        const properties = inside ? $4049e6bf31df43d6$var$limitLineToArea({\n            x: x,\n            y: y\n        }, {\n            x: x2,\n            y: y2\n        }, chart.chartArea) : {\n            x: x,\n            y: y,\n            x2: x2,\n            y2: y2,\n            width: Math.abs(x2 - x),\n            height: Math.abs(y2 - y)\n        };\n        properties.centerX = (x2 + x) / 2;\n        properties.centerY = (y2 + y) / 2;\n        properties.initProperties = $4049e6bf31df43d6$var$initAnimationProperties(chart, properties, options);\n        if (options.curve) {\n            const p1 = {\n                x: properties.x,\n                y: properties.y\n            };\n            const p2 = {\n                x: properties.x2,\n                y: properties.y2\n            };\n            properties.cp = $4049e6bf31df43d6$var$getControlPoint(properties, options, (0, $c7mKY.aE)(p1, p2));\n        }\n        const labelProperties = $4049e6bf31df43d6$var$resolveLabelElementProperties(chart, properties, options.label);\n        // additonal prop to manage zoom/pan\n        labelProperties._visible = inside;\n        properties.elements = [\n            {\n                type: \"label\",\n                optionScope: \"label\",\n                properties: labelProperties,\n                initProperties: properties.initProperties\n            }\n        ];\n        return properties;\n    }\n}\n$4049e6bf31df43d6$var$LineAnnotation.id = \"lineAnnotation\";\nconst $4049e6bf31df43d6$var$arrowHeadsDefaults = {\n    backgroundColor: undefined,\n    backgroundShadowColor: undefined,\n    borderColor: undefined,\n    borderDash: undefined,\n    borderDashOffset: undefined,\n    borderShadowColor: undefined,\n    borderWidth: undefined,\n    display: undefined,\n    fill: undefined,\n    length: undefined,\n    shadowBlur: undefined,\n    shadowOffsetX: undefined,\n    shadowOffsetY: undefined,\n    width: undefined\n};\n$4049e6bf31df43d6$var$LineAnnotation.defaults = {\n    adjustScaleRange: true,\n    arrowHeads: {\n        display: false,\n        end: Object.assign({}, $4049e6bf31df43d6$var$arrowHeadsDefaults),\n        fill: false,\n        length: 12,\n        start: Object.assign({}, $4049e6bf31df43d6$var$arrowHeadsDefaults),\n        width: 6\n    },\n    borderDash: [],\n    borderDashOffset: 0,\n    borderShadowColor: \"transparent\",\n    borderWidth: 2,\n    curve: false,\n    controlPoint: {\n        y: \"-50%\"\n    },\n    display: true,\n    endValue: undefined,\n    init: undefined,\n    hitTolerance: 0,\n    label: {\n        backgroundColor: \"rgba(0,0,0,0.8)\",\n        backgroundShadowColor: \"transparent\",\n        borderCapStyle: \"butt\",\n        borderColor: \"black\",\n        borderDash: [],\n        borderDashOffset: 0,\n        borderJoinStyle: \"miter\",\n        borderRadius: 6,\n        borderShadowColor: \"transparent\",\n        borderWidth: 0,\n        callout: Object.assign({}, $4049e6bf31df43d6$var$LabelAnnotation.defaults.callout),\n        color: \"#fff\",\n        content: null,\n        display: false,\n        drawTime: undefined,\n        font: {\n            family: undefined,\n            lineHeight: undefined,\n            size: undefined,\n            style: undefined,\n            weight: \"bold\"\n        },\n        height: undefined,\n        hitTolerance: undefined,\n        opacity: undefined,\n        padding: 6,\n        position: \"center\",\n        rotation: 0,\n        shadowBlur: 0,\n        shadowOffsetX: 0,\n        shadowOffsetY: 0,\n        textAlign: \"center\",\n        textStrokeColor: undefined,\n        textStrokeWidth: 0,\n        width: undefined,\n        xAdjust: 0,\n        yAdjust: 0,\n        z: undefined\n    },\n    scaleID: undefined,\n    shadowBlur: 0,\n    shadowOffsetX: 0,\n    shadowOffsetY: 0,\n    value: undefined,\n    xMax: undefined,\n    xMin: undefined,\n    xScaleID: undefined,\n    yMax: undefined,\n    yMin: undefined,\n    yScaleID: undefined,\n    z: 0\n};\n$4049e6bf31df43d6$var$LineAnnotation.descriptors = {\n    arrowHeads: {\n        start: {\n            _fallback: true\n        },\n        end: {\n            _fallback: true\n        },\n        _fallback: true\n    }\n};\n$4049e6bf31df43d6$var$LineAnnotation.defaultRoutes = {\n    borderColor: \"color\"\n};\nfunction $4049e6bf31df43d6$var$inAxisRange(element, { mouseX: mouseX, mouseY: mouseY }, axis, { hitSize: hitSize, useFinalPosition: useFinalPosition }) {\n    const limit = $4049e6bf31df43d6$var$rangeLimit(mouseX, mouseY, element.getProps([\n        \"x\",\n        \"y\",\n        \"x2\",\n        \"y2\"\n    ], useFinalPosition), axis);\n    return $4049e6bf31df43d6$var$inLimit(limit, hitSize) || $4049e6bf31df43d6$var$isOnLabel(element, {\n        mouseX: mouseX,\n        mouseY: mouseY\n    }, useFinalPosition, axis);\n}\nfunction $4049e6bf31df43d6$var$isLineInArea({ x: x, y: y, x2: x2, y2: y2 }, { top: top, right: right, bottom: bottom, left: left }) {\n    return !(x < left && x2 < left || x > right && x2 > right || y < top && y2 < top || y > bottom && y2 > bottom);\n}\nfunction $4049e6bf31df43d6$var$limitPointToArea({ x: x, y: y }, p2, { top: top, right: right, bottom: bottom, left: left }) {\n    if (x < left) {\n        y = $4049e6bf31df43d6$var$interpolateY(left, {\n            x: x,\n            y: y\n        }, p2);\n        x = left;\n    }\n    if (x > right) {\n        y = $4049e6bf31df43d6$var$interpolateY(right, {\n            x: x,\n            y: y\n        }, p2);\n        x = right;\n    }\n    if (y < top) {\n        x = $4049e6bf31df43d6$var$interpolateX(top, {\n            x: x,\n            y: y\n        }, p2);\n        y = top;\n    }\n    if (y > bottom) {\n        x = $4049e6bf31df43d6$var$interpolateX(bottom, {\n            x: x,\n            y: y\n        }, p2);\n        y = bottom;\n    }\n    return {\n        x: x,\n        y: y\n    };\n}\nfunction $4049e6bf31df43d6$var$limitLineToArea(p1, p2, area) {\n    const { x: x, y: y } = $4049e6bf31df43d6$var$limitPointToArea(p1, p2, area);\n    const { x: x2, y: y2 } = $4049e6bf31df43d6$var$limitPointToArea(p2, p1, area);\n    return {\n        x: x,\n        y: y,\n        x2: x2,\n        y2: y2,\n        width: Math.abs(x2 - x),\n        height: Math.abs(y2 - y)\n    };\n}\nfunction $4049e6bf31df43d6$var$intersects(element, { mouseX: mouseX, mouseY: mouseY }, epsilon = $4049e6bf31df43d6$var$EPSILON, useFinalPosition) {\n    // Adapted from https://stackoverflow.com/a/6853926/25507\n    const { x: x1, y: y1, x2: x2, y2: y2 } = element.getProps([\n        \"x\",\n        \"y\",\n        \"x2\",\n        \"y2\"\n    ], useFinalPosition);\n    const dx = x2 - x1;\n    const dy = y2 - y1;\n    const lenSq = $4049e6bf31df43d6$var$sqr(dx) + $4049e6bf31df43d6$var$sqr(dy);\n    const t = lenSq === 0 ? -1 : ((mouseX - x1) * dx + (mouseY - y1) * dy) / lenSq;\n    let xx, yy;\n    if (t < 0) {\n        xx = x1;\n        yy = y1;\n    } else if (t > 1) {\n        xx = x2;\n        yy = y2;\n    } else {\n        xx = x1 + t * dx;\n        yy = y1 + t * dy;\n    }\n    return $4049e6bf31df43d6$var$sqr(mouseX - xx) + $4049e6bf31df43d6$var$sqr(mouseY - yy) <= epsilon;\n}\nfunction $4049e6bf31df43d6$var$isOnLabel(element, { mouseX: mouseX, mouseY: mouseY }, useFinalPosition, axis) {\n    const label = element.label;\n    return label.options.display && label.inRange(mouseX, mouseY, axis, useFinalPosition);\n}\nfunction $4049e6bf31df43d6$var$resolveLabelElementProperties(chart, properties, options) {\n    const borderWidth = options.borderWidth;\n    const padding = (0, $c7mKY.E)(options.padding);\n    const textSize = $4049e6bf31df43d6$var$measureLabelSize(chart.ctx, options);\n    const width = textSize.width + padding.width + borderWidth;\n    const height = textSize.height + padding.height + borderWidth;\n    return $4049e6bf31df43d6$var$calculateLabelPosition(properties, options, {\n        width: width,\n        height: height,\n        padding: padding\n    }, chart.chartArea);\n}\nfunction $4049e6bf31df43d6$var$calculateAutoRotation(properties) {\n    const { x: x, y: y, x2: x2, y2: y2 } = properties;\n    const rotation = Math.atan2(y2 - y, x2 - x);\n    // Flip the rotation if it goes > PI/2 or < -PI/2, so label stays upright\n    return rotation > (0, $c7mKY.P) / 2 ? rotation - (0, $c7mKY.P) : rotation < (0, $c7mKY.P) / -2 ? rotation + (0, $c7mKY.P) : rotation;\n}\nfunction $4049e6bf31df43d6$var$calculateLabelPosition(properties, label, sizes, chartArea) {\n    const { width: width, height: height, padding: padding } = sizes;\n    const { xAdjust: xAdjust, yAdjust: yAdjust } = label;\n    const p1 = {\n        x: properties.x,\n        y: properties.y\n    };\n    const p2 = {\n        x: properties.x2,\n        y: properties.y2\n    };\n    const rotation = label.rotation === \"auto\" ? $4049e6bf31df43d6$var$calculateAutoRotation(properties) : (0, $c7mKY.t)(label.rotation);\n    const size = $4049e6bf31df43d6$var$rotatedSize(width, height, rotation);\n    const t = $4049e6bf31df43d6$var$calculateT(properties, label, {\n        labelSize: size,\n        padding: padding\n    }, chartArea);\n    const pt = properties.cp ? $4049e6bf31df43d6$var$pointInCurve(p1, properties.cp, p2, t) : $4049e6bf31df43d6$var$pointInLine(p1, p2, t);\n    const xCoordinateSizes = {\n        size: size.w,\n        min: chartArea.left,\n        max: chartArea.right,\n        padding: padding.left\n    };\n    const yCoordinateSizes = {\n        size: size.h,\n        min: chartArea.top,\n        max: chartArea.bottom,\n        padding: padding.top\n    };\n    const centerX = $4049e6bf31df43d6$var$adjustLabelCoordinate(pt.x, xCoordinateSizes) + xAdjust;\n    const centerY = $4049e6bf31df43d6$var$adjustLabelCoordinate(pt.y, yCoordinateSizes) + yAdjust;\n    return {\n        x: centerX - width / 2,\n        y: centerY - height / 2,\n        x2: centerX + width / 2,\n        y2: centerY + height / 2,\n        centerX: centerX,\n        centerY: centerY,\n        pointX: pt.x,\n        pointY: pt.y,\n        width: width,\n        height: height,\n        rotation: (0, $c7mKY.U)(rotation)\n    };\n}\nfunction $4049e6bf31df43d6$var$rotatedSize(width, height, rotation) {\n    const cos = Math.cos(rotation);\n    const sin = Math.sin(rotation);\n    return {\n        w: Math.abs(width * cos) + Math.abs(height * sin),\n        h: Math.abs(width * sin) + Math.abs(height * cos)\n    };\n}\nfunction $4049e6bf31df43d6$var$calculateT(properties, label, sizes, chartArea) {\n    let t;\n    const space = $4049e6bf31df43d6$var$spaceAround(properties, chartArea);\n    if (label.position === \"start\") t = $4049e6bf31df43d6$var$calculateTAdjust({\n        w: properties.x2 - properties.x,\n        h: properties.y2 - properties.y\n    }, sizes, label, space);\n    else if (label.position === \"end\") t = 1 - $4049e6bf31df43d6$var$calculateTAdjust({\n        w: properties.x - properties.x2,\n        h: properties.y - properties.y2\n    }, sizes, label, space);\n    else t = $4049e6bf31df43d6$var$getRelativePosition(1, label.position);\n    return t;\n}\nfunction $4049e6bf31df43d6$var$calculateTAdjust(lineSize, sizes, label, space) {\n    const { labelSize: labelSize, padding: padding } = sizes;\n    const lineW = lineSize.w * space.dx;\n    const lineH = lineSize.h * space.dy;\n    const x = lineW > 0 && (labelSize.w / 2 + padding.left - space.x) / lineW;\n    const y = lineH > 0 && (labelSize.h / 2 + padding.top - space.y) / lineH;\n    return $4049e6bf31df43d6$var$clamp(Math.max(x, y), 0, 0.25);\n}\nfunction $4049e6bf31df43d6$var$spaceAround(properties, chartArea) {\n    const { x: x, x2: x2, y: y, y2: y2 } = properties;\n    const t = Math.min(y, y2) - chartArea.top;\n    const l = Math.min(x, x2) - chartArea.left;\n    const b = chartArea.bottom - Math.max(y, y2);\n    const r = chartArea.right - Math.max(x, x2);\n    return {\n        x: Math.min(l, r),\n        y: Math.min(t, b),\n        dx: l <= r ? 1 : -1,\n        dy: t <= b ? 1 : -1\n    };\n}\nfunction $4049e6bf31df43d6$var$adjustLabelCoordinate(coordinate, labelSizes) {\n    const { size: size, min: min, max: max, padding: padding } = labelSizes;\n    const halfSize = size / 2;\n    if (size > max - min) // if it does not fit, display as much as possible\n    return (max + min) / 2;\n    if (min >= coordinate - padding - halfSize) coordinate = min + padding + halfSize;\n    if (max <= coordinate + padding + halfSize) coordinate = max - padding - halfSize;\n    return coordinate;\n}\nfunction $4049e6bf31df43d6$var$getArrowHeads(line) {\n    const options = line.options;\n    const arrowStartOpts = options.arrowHeads && options.arrowHeads.start;\n    const arrowEndOpts = options.arrowHeads && options.arrowHeads.end;\n    return {\n        startOpts: arrowStartOpts,\n        endOpts: arrowEndOpts,\n        startAdjust: $4049e6bf31df43d6$var$getLineAdjust(line, arrowStartOpts),\n        endAdjust: $4049e6bf31df43d6$var$getLineAdjust(line, arrowEndOpts)\n    };\n}\nfunction $4049e6bf31df43d6$var$getLineAdjust(line, arrowOpts) {\n    if (!arrowOpts || !arrowOpts.display) return 0;\n    const { length: length, width: width } = arrowOpts;\n    const adjust = line.options.borderWidth / 2;\n    const p1 = {\n        x: length,\n        y: width + adjust\n    };\n    const p2 = {\n        x: 0,\n        y: adjust\n    };\n    return Math.abs($4049e6bf31df43d6$var$interpolateX(0, p1, p2));\n}\nfunction $4049e6bf31df43d6$var$drawArrowHead(ctx, offset, adjust, arrowOpts) {\n    if (!arrowOpts || !arrowOpts.display) return;\n    const { length: length, width: width, fill: fill, backgroundColor: backgroundColor, borderColor: borderColor } = arrowOpts;\n    const arrowOffsetX = Math.abs(offset - length) + adjust;\n    ctx.beginPath();\n    $4049e6bf31df43d6$var$setShadowStyle(ctx, arrowOpts);\n    $4049e6bf31df43d6$var$setBorderStyle(ctx, arrowOpts);\n    ctx.moveTo(arrowOffsetX, -width);\n    ctx.lineTo(offset + adjust, 0);\n    ctx.lineTo(arrowOffsetX, width);\n    if (fill === true) {\n        ctx.fillStyle = backgroundColor || borderColor;\n        ctx.closePath();\n        ctx.fill();\n        ctx.shadowColor = \"transparent\";\n    } else ctx.shadowColor = arrowOpts.borderShadowColor;\n    ctx.stroke();\n}\nfunction $4049e6bf31df43d6$var$getControlPoint(properties, options, distance) {\n    const { x: x, y: y, x2: x2, y2: y2, centerX: centerX, centerY: centerY } = properties;\n    const angle = Math.atan2(y2 - y, x2 - x);\n    const cp = $4049e6bf31df43d6$var$toPosition(options.controlPoint, 0);\n    const point = {\n        x: centerX + $4049e6bf31df43d6$var$getSize(distance, cp.x, false),\n        y: centerY + $4049e6bf31df43d6$var$getSize(distance, cp.y, false)\n    };\n    return $4049e6bf31df43d6$var$rotated(point, {\n        x: centerX,\n        y: centerY\n    }, angle);\n}\nfunction $4049e6bf31df43d6$var$drawArrowHeadOnCurve(ctx, { x: x, y: y }, { angle: angle, adjust: adjust }, arrowOpts) {\n    if (!arrowOpts || !arrowOpts.display) return;\n    ctx.save();\n    ctx.translate(x, y);\n    ctx.rotate(angle);\n    $4049e6bf31df43d6$var$drawArrowHead(ctx, 0, -adjust, arrowOpts);\n    ctx.restore();\n}\nfunction $4049e6bf31df43d6$var$drawCurve(ctx, element, cp, length) {\n    const { x: x, y: y, x2: x2, y2: y2, options: options } = element;\n    const { startOpts: startOpts, endOpts: endOpts, startAdjust: startAdjust, endAdjust: endAdjust } = $4049e6bf31df43d6$var$getArrowHeads(element);\n    const p1 = {\n        x: x,\n        y: y\n    };\n    const p2 = {\n        x: x2,\n        y: y2\n    };\n    const startAngle = $4049e6bf31df43d6$var$angleInCurve(p1, cp, p2, 0);\n    const endAngle = $4049e6bf31df43d6$var$angleInCurve(p1, cp, p2, 1) - (0, $c7mKY.P);\n    const ps = $4049e6bf31df43d6$var$pointInCurve(p1, cp, p2, startAdjust / length);\n    const pe = $4049e6bf31df43d6$var$pointInCurve(p1, cp, p2, 1 - endAdjust / length);\n    const path = new Path2D();\n    ctx.beginPath();\n    path.moveTo(ps.x, ps.y);\n    path.quadraticCurveTo(cp.x, cp.y, pe.x, pe.y);\n    ctx.shadowColor = options.borderShadowColor;\n    ctx.stroke(path);\n    element.path = path;\n    element.ctx = ctx;\n    $4049e6bf31df43d6$var$drawArrowHeadOnCurve(ctx, ps, {\n        angle: startAngle,\n        adjust: startAdjust\n    }, startOpts);\n    $4049e6bf31df43d6$var$drawArrowHeadOnCurve(ctx, pe, {\n        angle: endAngle,\n        adjust: endAdjust\n    }, endOpts);\n}\nclass $4049e6bf31df43d6$var$EllipseAnnotation extends (0, $2RVy2.Element) {\n    inRange(mouseX, mouseY, axis, useFinalPosition) {\n        const rotation = this.options.rotation;\n        const hitSize = (this.options.borderWidth + this.options.hitTolerance) / 2;\n        if (axis !== \"x\" && axis !== \"y\") return $4049e6bf31df43d6$var$pointInEllipse({\n            x: mouseX,\n            y: mouseY\n        }, this.getProps([\n            \"width\",\n            \"height\",\n            \"centerX\",\n            \"centerY\"\n        ], useFinalPosition), rotation, hitSize);\n        const { x: x, y: y, x2: x2, y2: y2 } = this.getProps([\n            \"x\",\n            \"y\",\n            \"x2\",\n            \"y2\"\n        ], useFinalPosition);\n        const limit = axis === \"y\" ? {\n            start: y,\n            end: y2\n        } : {\n            start: x,\n            end: x2\n        };\n        const rotatedPoint = $4049e6bf31df43d6$var$rotated({\n            x: mouseX,\n            y: mouseY\n        }, this.getCenterPoint(useFinalPosition), (0, $c7mKY.t)(-rotation));\n        return rotatedPoint[axis] >= limit.start - hitSize - $4049e6bf31df43d6$var$EPSILON && rotatedPoint[axis] <= limit.end + hitSize + $4049e6bf31df43d6$var$EPSILON;\n    }\n    getCenterPoint(useFinalPosition) {\n        return $4049e6bf31df43d6$var$getElementCenterPoint(this, useFinalPosition);\n    }\n    draw(ctx) {\n        const { width: width, height: height, centerX: centerX, centerY: centerY, options: options } = this;\n        ctx.save();\n        $4049e6bf31df43d6$var$translate(ctx, this.getCenterPoint(), options.rotation);\n        $4049e6bf31df43d6$var$setShadowStyle(ctx, this.options);\n        ctx.beginPath();\n        ctx.fillStyle = options.backgroundColor;\n        const stroke = $4049e6bf31df43d6$var$setBorderStyle(ctx, options);\n        ctx.ellipse(centerX, centerY, height / 2, width / 2, (0, $c7mKY.P) / 2, 0, 2 * (0, $c7mKY.P));\n        ctx.fill();\n        if (stroke) {\n            ctx.shadowColor = options.borderShadowColor;\n            ctx.stroke();\n        }\n        ctx.restore();\n    }\n    get label() {\n        return this.elements && this.elements[0];\n    }\n    resolveElementProperties(chart, options) {\n        return $4049e6bf31df43d6$var$resolveBoxAndLabelProperties(chart, options);\n    }\n}\n$4049e6bf31df43d6$var$EllipseAnnotation.id = \"ellipseAnnotation\";\n$4049e6bf31df43d6$var$EllipseAnnotation.defaults = {\n    adjustScaleRange: true,\n    backgroundShadowColor: \"transparent\",\n    borderDash: [],\n    borderDashOffset: 0,\n    borderShadowColor: \"transparent\",\n    borderWidth: 1,\n    display: true,\n    hitTolerance: 0,\n    init: undefined,\n    label: Object.assign({}, $4049e6bf31df43d6$var$BoxAnnotation.defaults.label),\n    rotation: 0,\n    shadowBlur: 0,\n    shadowOffsetX: 0,\n    shadowOffsetY: 0,\n    xMax: undefined,\n    xMin: undefined,\n    xScaleID: undefined,\n    yMax: undefined,\n    yMin: undefined,\n    yScaleID: undefined,\n    z: 0\n};\n$4049e6bf31df43d6$var$EllipseAnnotation.defaultRoutes = {\n    borderColor: \"color\",\n    backgroundColor: \"color\"\n};\n$4049e6bf31df43d6$var$EllipseAnnotation.descriptors = {\n    label: {\n        _fallback: true\n    }\n};\nfunction $4049e6bf31df43d6$var$pointInEllipse(p, ellipse, rotation, hitSize) {\n    const { width: width, height: height, centerX: centerX, centerY: centerY } = ellipse;\n    const xRadius = width / 2;\n    const yRadius = height / 2;\n    if (xRadius <= 0 || yRadius <= 0) return false;\n    // https://stackoverflow.com/questions/7946187/point-and-ellipse-rotated-position-test-algorithm\n    const angle = (0, $c7mKY.t)(rotation || 0);\n    const cosAngle = Math.cos(angle);\n    const sinAngle = Math.sin(angle);\n    const a = Math.pow(cosAngle * (p.x - centerX) + sinAngle * (p.y - centerY), 2);\n    const b = Math.pow(sinAngle * (p.x - centerX) - cosAngle * (p.y - centerY), 2);\n    return a / Math.pow(xRadius + hitSize, 2) + b / Math.pow(yRadius + hitSize, 2) <= 1.0001;\n}\nclass $4049e6bf31df43d6$var$PointAnnotation extends (0, $2RVy2.Element) {\n    inRange(mouseX, mouseY, axis, useFinalPosition) {\n        const { x: x, y: y, x2: x2, y2: y2, width: width } = this.getProps([\n            \"x\",\n            \"y\",\n            \"x2\",\n            \"y2\",\n            \"width\"\n        ], useFinalPosition);\n        const hitSize = (this.options.borderWidth + this.options.hitTolerance) / 2;\n        if (axis !== \"x\" && axis !== \"y\") return $4049e6bf31df43d6$var$inPointRange({\n            x: mouseX,\n            y: mouseY\n        }, this.getCenterPoint(useFinalPosition), width / 2, hitSize);\n        const limit = axis === \"y\" ? {\n            start: y,\n            end: y2,\n            value: mouseY\n        } : {\n            start: x,\n            end: x2,\n            value: mouseX\n        };\n        return $4049e6bf31df43d6$var$inLimit(limit, hitSize);\n    }\n    getCenterPoint(useFinalPosition) {\n        return $4049e6bf31df43d6$var$getElementCenterPoint(this, useFinalPosition);\n    }\n    draw(ctx) {\n        const options = this.options;\n        const borderWidth = options.borderWidth;\n        if (options.radius < 0.1) return;\n        ctx.save();\n        ctx.fillStyle = options.backgroundColor;\n        $4049e6bf31df43d6$var$setShadowStyle(ctx, options);\n        const stroke = $4049e6bf31df43d6$var$setBorderStyle(ctx, options);\n        $4049e6bf31df43d6$var$drawPoint(ctx, this, this.centerX, this.centerY);\n        if (stroke && !$4049e6bf31df43d6$var$isImageOrCanvas(options.pointStyle)) {\n            ctx.shadowColor = options.borderShadowColor;\n            ctx.stroke();\n        }\n        ctx.restore();\n        options.borderWidth = borderWidth;\n    }\n    resolveElementProperties(chart, options) {\n        const properties = $4049e6bf31df43d6$var$resolvePointProperties(chart, options);\n        properties.initProperties = $4049e6bf31df43d6$var$initAnimationProperties(chart, properties, options);\n        return properties;\n    }\n}\n$4049e6bf31df43d6$var$PointAnnotation.id = \"pointAnnotation\";\n$4049e6bf31df43d6$var$PointAnnotation.defaults = {\n    adjustScaleRange: true,\n    backgroundShadowColor: \"transparent\",\n    borderDash: [],\n    borderDashOffset: 0,\n    borderShadowColor: \"transparent\",\n    borderWidth: 1,\n    display: true,\n    hitTolerance: 0,\n    init: undefined,\n    pointStyle: \"circle\",\n    radius: 10,\n    rotation: 0,\n    shadowBlur: 0,\n    shadowOffsetX: 0,\n    shadowOffsetY: 0,\n    xAdjust: 0,\n    xMax: undefined,\n    xMin: undefined,\n    xScaleID: undefined,\n    xValue: undefined,\n    yAdjust: 0,\n    yMax: undefined,\n    yMin: undefined,\n    yScaleID: undefined,\n    yValue: undefined,\n    z: 0\n};\n$4049e6bf31df43d6$var$PointAnnotation.defaultRoutes = {\n    borderColor: \"color\",\n    backgroundColor: \"color\"\n};\nclass $4049e6bf31df43d6$var$PolygonAnnotation extends (0, $2RVy2.Element) {\n    inRange(mouseX, mouseY, axis, useFinalPosition) {\n        if (axis !== \"x\" && axis !== \"y\") return this.options.radius >= 0.1 && this.elements.length > 1 && $4049e6bf31df43d6$var$pointIsInPolygon(this.elements, mouseX, mouseY, useFinalPosition);\n        const rotatedPoint = $4049e6bf31df43d6$var$rotated({\n            x: mouseX,\n            y: mouseY\n        }, this.getCenterPoint(useFinalPosition), (0, $c7mKY.t)(-this.options.rotation));\n        const axisPoints = this.elements.map((point)=>axis === \"y\" ? point.bY : point.bX);\n        const start = Math.min(...axisPoints);\n        const end = Math.max(...axisPoints);\n        return rotatedPoint[axis] >= start && rotatedPoint[axis] <= end;\n    }\n    getCenterPoint(useFinalPosition) {\n        return $4049e6bf31df43d6$var$getElementCenterPoint(this, useFinalPosition);\n    }\n    draw(ctx) {\n        const { elements: elements, options: options } = this;\n        ctx.save();\n        ctx.beginPath();\n        ctx.fillStyle = options.backgroundColor;\n        $4049e6bf31df43d6$var$setShadowStyle(ctx, options);\n        const stroke = $4049e6bf31df43d6$var$setBorderStyle(ctx, options);\n        let first = true;\n        for (const el of elements)if (first) {\n            ctx.moveTo(el.x, el.y);\n            first = false;\n        } else ctx.lineTo(el.x, el.y);\n        ctx.closePath();\n        ctx.fill();\n        // If no border, don't draw it\n        if (stroke) {\n            ctx.shadowColor = options.borderShadowColor;\n            ctx.stroke();\n        }\n        ctx.restore();\n    }\n    resolveElementProperties(chart, options) {\n        const properties = $4049e6bf31df43d6$var$resolvePointProperties(chart, options);\n        const { sides: sides, rotation: rotation } = options;\n        const elements = [];\n        const angle = 2 * (0, $c7mKY.P) / sides;\n        let rad = rotation * (0, $c7mKY.b3);\n        for(let i = 0; i < sides; i++, rad += angle){\n            const elProps = $4049e6bf31df43d6$var$buildPointElement(properties, options, rad);\n            elProps.initProperties = $4049e6bf31df43d6$var$initAnimationProperties(chart, properties, options);\n            elements.push(elProps);\n        }\n        properties.elements = elements;\n        return properties;\n    }\n}\n$4049e6bf31df43d6$var$PolygonAnnotation.id = \"polygonAnnotation\";\n$4049e6bf31df43d6$var$PolygonAnnotation.defaults = {\n    adjustScaleRange: true,\n    backgroundShadowColor: \"transparent\",\n    borderCapStyle: \"butt\",\n    borderDash: [],\n    borderDashOffset: 0,\n    borderJoinStyle: \"miter\",\n    borderShadowColor: \"transparent\",\n    borderWidth: 1,\n    display: true,\n    hitTolerance: 0,\n    init: undefined,\n    point: {\n        radius: 0\n    },\n    radius: 10,\n    rotation: 0,\n    shadowBlur: 0,\n    shadowOffsetX: 0,\n    shadowOffsetY: 0,\n    sides: 3,\n    xAdjust: 0,\n    xMax: undefined,\n    xMin: undefined,\n    xScaleID: undefined,\n    xValue: undefined,\n    yAdjust: 0,\n    yMax: undefined,\n    yMin: undefined,\n    yScaleID: undefined,\n    yValue: undefined,\n    z: 0\n};\n$4049e6bf31df43d6$var$PolygonAnnotation.defaultRoutes = {\n    borderColor: \"color\",\n    backgroundColor: \"color\"\n};\nfunction $4049e6bf31df43d6$var$buildPointElement({ centerX: centerX, centerY: centerY }, { radius: radius, borderWidth: borderWidth, hitTolerance: hitTolerance }, rad) {\n    const hitSize = (borderWidth + hitTolerance) / 2;\n    const sin = Math.sin(rad);\n    const cos = Math.cos(rad);\n    const point = {\n        x: centerX + sin * radius,\n        y: centerY - cos * radius\n    };\n    return {\n        type: \"point\",\n        optionScope: \"point\",\n        properties: {\n            x: point.x,\n            y: point.y,\n            centerX: point.x,\n            centerY: point.y,\n            bX: centerX + sin * (radius + hitSize),\n            bY: centerY - cos * (radius + hitSize)\n        }\n    };\n}\nfunction $4049e6bf31df43d6$var$pointIsInPolygon(points, x, y, useFinalPosition) {\n    let isInside = false;\n    let A = points[points.length - 1].getProps([\n        \"bX\",\n        \"bY\"\n    ], useFinalPosition);\n    for (const point of points){\n        const B = point.getProps([\n            \"bX\",\n            \"bY\"\n        ], useFinalPosition);\n        if (B.bY > y !== A.bY > y && x < (A.bX - B.bX) * (y - B.bY) / (A.bY - B.bY) + B.bX) isInside = !isInside;\n        A = B;\n    }\n    return isInside;\n}\nconst $4049e6bf31df43d6$var$annotationTypes = {\n    box: $4049e6bf31df43d6$var$BoxAnnotation,\n    doughnutLabel: $4049e6bf31df43d6$var$DoughnutLabelAnnotation,\n    ellipse: $4049e6bf31df43d6$var$EllipseAnnotation,\n    label: $4049e6bf31df43d6$var$LabelAnnotation,\n    line: $4049e6bf31df43d6$var$LineAnnotation,\n    point: $4049e6bf31df43d6$var$PointAnnotation,\n    polygon: $4049e6bf31df43d6$var$PolygonAnnotation\n};\n/**\n * Register fallback for annotation elements\n * For example lineAnnotation options would be looked through:\n * - the annotation object (options.plugins.annotation.annotations[id])\n * - element options (options.elements.lineAnnotation)\n * - element defaults (defaults.elements.lineAnnotation)\n * - annotation plugin defaults (defaults.plugins.annotation, this is what we are registering here)\n */ Object.keys($4049e6bf31df43d6$var$annotationTypes).forEach((key)=>{\n    (0, $c7mKY.d).describe(`elements.${$4049e6bf31df43d6$var$annotationTypes[key].id}`, {\n        _fallback: \"plugins.annotation.common\"\n    });\n});\nconst $4049e6bf31df43d6$var$directUpdater = {\n    update: Object.assign\n};\nconst $4049e6bf31df43d6$var$hooks$1 = $4049e6bf31df43d6$var$eventHooks.concat($4049e6bf31df43d6$var$elementHooks);\nconst $4049e6bf31df43d6$var$resolve = (value, optDefs)=>(0, $c7mKY.i)(optDefs) ? $4049e6bf31df43d6$var$resolveObj(value, optDefs) : value;\n/**\n * @typedef { import(\"chart.js\").Chart } Chart\n * @typedef { import(\"chart.js\").UpdateMode } UpdateMode\n * @typedef { import('../../types/options').AnnotationPluginOptions } AnnotationPluginOptions\n */ /**\n * @param {string} prop\n * @returns {boolean}\n */ const $4049e6bf31df43d6$var$isIndexable = (prop)=>prop === \"color\" || prop === \"font\";\n/**\n * Resolve the annotation type, checking if is supported.\n * @param {string} [type=line] - annotation type\n * @returns {string} resolved annotation type\n */ function $4049e6bf31df43d6$var$resolveType(type = \"line\") {\n    if ($4049e6bf31df43d6$var$annotationTypes[type]) return type;\n    console.warn(`Unknown annotation type: '${type}', defaulting to 'line'`);\n    return \"line\";\n}\n/**\n * @param {Chart} chart\n * @param {Object} state\n * @param {AnnotationPluginOptions} options\n * @param {UpdateMode} mode\n */ function $4049e6bf31df43d6$var$updateElements(chart, state, options, mode) {\n    const animations = $4049e6bf31df43d6$var$resolveAnimations(chart, options.animations, mode);\n    const annotations = state.annotations;\n    const elements = $4049e6bf31df43d6$var$resyncElements(state.elements, annotations);\n    for(let i = 0; i < annotations.length; i++){\n        const annotationOptions = annotations[i];\n        const element = $4049e6bf31df43d6$var$getOrCreateElement(elements, i, annotationOptions.type);\n        const resolver = annotationOptions.setContext($4049e6bf31df43d6$var$getContext(chart, element, elements, annotationOptions));\n        const properties = element.resolveElementProperties(chart, resolver);\n        properties.skip = $4049e6bf31df43d6$var$toSkip(properties);\n        if (\"elements\" in properties) {\n            $4049e6bf31df43d6$var$updateSubElements(element, properties.elements, resolver, animations);\n            // Remove the sub-element definitions from properties, so the actual elements\n            // are not overwritten by their definitions\n            delete properties.elements;\n        }\n        if (!(0, $c7mKY.h)(element.x)) // If the element is newly created, assing the properties directly - to\n        // make them readily awailable to any scriptable options. If we do not do this,\n        // the properties retruned by `resolveElementProperties` are available only\n        // after options resolution.\n        Object.assign(element, properties);\n        Object.assign(element, properties.initProperties);\n        properties.options = $4049e6bf31df43d6$var$resolveAnnotationOptions(resolver);\n        animations.update(element, properties);\n    }\n}\nfunction $4049e6bf31df43d6$var$toSkip(properties) {\n    return isNaN(properties.x) || isNaN(properties.y);\n}\nfunction $4049e6bf31df43d6$var$resolveAnimations(chart, animOpts, mode) {\n    if (mode === \"reset\" || mode === \"none\" || mode === \"resize\") return $4049e6bf31df43d6$var$directUpdater;\n    return new (0, $2RVy2.Animations)(chart, animOpts);\n}\nfunction $4049e6bf31df43d6$var$updateSubElements(mainElement, elements, resolver, animations) {\n    const subElements = mainElement.elements || (mainElement.elements = []);\n    subElements.length = elements.length;\n    for(let i = 0; i < elements.length; i++){\n        const definition = elements[i];\n        const properties = definition.properties;\n        const subElement = $4049e6bf31df43d6$var$getOrCreateElement(subElements, i, definition.type, definition.initProperties);\n        const subResolver = resolver[definition.optionScope].override(definition);\n        properties.options = $4049e6bf31df43d6$var$resolveAnnotationOptions(subResolver);\n        animations.update(subElement, properties);\n    }\n}\nfunction $4049e6bf31df43d6$var$getOrCreateElement(elements, index, type, initProperties) {\n    const elementClass = $4049e6bf31df43d6$var$annotationTypes[$4049e6bf31df43d6$var$resolveType(type)];\n    let element = elements[index];\n    if (!element || !(element instanceof elementClass)) {\n        element = elements[index] = new elementClass();\n        Object.assign(element, initProperties);\n    }\n    return element;\n}\nfunction $4049e6bf31df43d6$var$resolveAnnotationOptions(resolver) {\n    const elementClass = $4049e6bf31df43d6$var$annotationTypes[$4049e6bf31df43d6$var$resolveType(resolver.type)];\n    const result = {};\n    result.id = resolver.id;\n    result.type = resolver.type;\n    result.drawTime = resolver.drawTime;\n    Object.assign(result, $4049e6bf31df43d6$var$resolveObj(resolver, elementClass.defaults), $4049e6bf31df43d6$var$resolveObj(resolver, elementClass.defaultRoutes));\n    for (const hook of $4049e6bf31df43d6$var$hooks$1)result[hook] = resolver[hook];\n    return result;\n}\nfunction $4049e6bf31df43d6$var$resolveObj(resolver, defs) {\n    const result = {};\n    for (const prop of Object.keys(defs)){\n        const optDefs = defs[prop];\n        const value = resolver[prop];\n        if ($4049e6bf31df43d6$var$isIndexable(prop) && (0, $c7mKY.b)(value)) result[prop] = value.map((item)=>$4049e6bf31df43d6$var$resolve(item, optDefs));\n        else result[prop] = $4049e6bf31df43d6$var$resolve(value, optDefs);\n    }\n    return result;\n}\nfunction $4049e6bf31df43d6$var$getContext(chart, element, elements, annotation) {\n    return element.$context || (element.$context = Object.assign(Object.create(chart.getContext()), {\n        element: element,\n        get elements () {\n            return elements.filter((el)=>el && el.options);\n        },\n        id: annotation.id,\n        type: \"annotation\"\n    }));\n}\nfunction $4049e6bf31df43d6$var$resyncElements(elements, annotations) {\n    const count = annotations.length;\n    const start = elements.length;\n    if (start < count) {\n        const add = count - start;\n        elements.splice(start, 0, ...new Array(add));\n    } else if (start > count) elements.splice(count, start - count);\n    return elements;\n}\nvar $4049e6bf31df43d6$var$version = \"3.1.0\";\nconst $4049e6bf31df43d6$var$chartStates = new Map();\nconst $4049e6bf31df43d6$var$isNotDoughnutLabel = (annotation)=>annotation.type !== \"doughnutLabel\";\nconst $4049e6bf31df43d6$var$hooks = $4049e6bf31df43d6$var$eventHooks.concat($4049e6bf31df43d6$var$elementHooks);\nvar $4049e6bf31df43d6$export$2e2bcd8739ae039 = {\n    id: \"annotation\",\n    version: $4049e6bf31df43d6$var$version,\n    beforeRegister () {\n        $4049e6bf31df43d6$var$requireVersion(\"chart.js\", \"4.0\", (0, $2RVy2.Chart).version);\n    },\n    afterRegister () {\n        (0, $2RVy2.Chart).register($4049e6bf31df43d6$var$annotationTypes);\n    },\n    afterUnregister () {\n        (0, $2RVy2.Chart).unregister($4049e6bf31df43d6$var$annotationTypes);\n    },\n    beforeInit (chart) {\n        $4049e6bf31df43d6$var$chartStates.set(chart, {\n            annotations: [],\n            elements: [],\n            visibleElements: [],\n            listeners: {},\n            listened: false,\n            moveListened: false,\n            hooks: {},\n            hooked: false,\n            hovered: []\n        });\n    },\n    beforeUpdate (chart, args, options) {\n        const state = $4049e6bf31df43d6$var$chartStates.get(chart);\n        const annotations = state.annotations = [];\n        let annotationOptions = options.annotations;\n        if ((0, $c7mKY.i)(annotationOptions)) Object.keys(annotationOptions).forEach((key)=>{\n            const value = annotationOptions[key];\n            if ((0, $c7mKY.i)(value)) {\n                value.id = key;\n                annotations.push(value);\n            }\n        });\n        else if ((0, $c7mKY.b)(annotationOptions)) annotations.push(...annotationOptions);\n        $4049e6bf31df43d6$var$verifyScaleOptions(annotations.filter($4049e6bf31df43d6$var$isNotDoughnutLabel), chart.scales);\n    },\n    afterDataLimits (chart, args) {\n        const state = $4049e6bf31df43d6$var$chartStates.get(chart);\n        $4049e6bf31df43d6$var$adjustScaleRange(chart, args.scale, state.annotations.filter($4049e6bf31df43d6$var$isNotDoughnutLabel).filter((a)=>a.display && a.adjustScaleRange));\n    },\n    afterUpdate (chart, args, options) {\n        const state = $4049e6bf31df43d6$var$chartStates.get(chart);\n        $4049e6bf31df43d6$var$updateListeners(chart, state, options);\n        $4049e6bf31df43d6$var$updateElements(chart, state, options, args.mode);\n        state.visibleElements = state.elements.filter((el)=>!el.skip && el.options.display);\n        $4049e6bf31df43d6$var$updateHooks(chart, state, options);\n    },\n    beforeDatasetsDraw (chart, _args, options) {\n        $4049e6bf31df43d6$var$draw(chart, \"beforeDatasetsDraw\", options.clip);\n    },\n    afterDatasetsDraw (chart, _args, options) {\n        $4049e6bf31df43d6$var$draw(chart, \"afterDatasetsDraw\", options.clip);\n    },\n    beforeDatasetDraw (chart, _args, options) {\n        $4049e6bf31df43d6$var$draw(chart, _args.index, options.clip);\n    },\n    beforeDraw (chart, _args, options) {\n        $4049e6bf31df43d6$var$draw(chart, \"beforeDraw\", options.clip);\n    },\n    afterDraw (chart, _args, options) {\n        $4049e6bf31df43d6$var$draw(chart, \"afterDraw\", options.clip);\n    },\n    beforeEvent (chart, args, options) {\n        const state = $4049e6bf31df43d6$var$chartStates.get(chart);\n        if ($4049e6bf31df43d6$var$handleEvent(state, args.event, options)) args.changed = true;\n    },\n    afterDestroy (chart) {\n        $4049e6bf31df43d6$var$chartStates.delete(chart);\n    },\n    getAnnotations (chart) {\n        const state = $4049e6bf31df43d6$var$chartStates.get(chart);\n        return state ? state.elements : [];\n    },\n    // only for testing\n    _getAnnotationElementsAtEventForMode (visibleElements, event, options) {\n        return $4049e6bf31df43d6$var$getElements(visibleElements, event, options);\n    },\n    defaults: {\n        animations: {\n            numbers: {\n                properties: [\n                    \"x\",\n                    \"y\",\n                    \"x2\",\n                    \"y2\",\n                    \"width\",\n                    \"height\",\n                    \"centerX\",\n                    \"centerY\",\n                    \"pointX\",\n                    \"pointY\",\n                    \"radius\"\n                ],\n                type: \"number\"\n            },\n            colors: {\n                properties: [\n                    \"backgroundColor\",\n                    \"borderColor\"\n                ],\n                type: \"color\"\n            }\n        },\n        clip: true,\n        interaction: {\n            mode: undefined,\n            axis: undefined,\n            intersect: undefined\n        },\n        common: {\n            drawTime: \"afterDatasetsDraw\",\n            init: false,\n            label: {}\n        }\n    },\n    descriptors: {\n        _indexable: false,\n        _scriptable: (prop)=>!$4049e6bf31df43d6$var$hooks.includes(prop) && prop !== \"init\",\n        annotations: {\n            _allKeys: false,\n            _fallback: (prop, opts)=>`elements.${$4049e6bf31df43d6$var$annotationTypes[$4049e6bf31df43d6$var$resolveType(opts.type)].id}`\n        },\n        interaction: {\n            _fallback: true\n        },\n        common: {\n            label: {\n                _indexable: $4049e6bf31df43d6$var$isIndexable,\n                _fallback: true\n            },\n            _indexable: $4049e6bf31df43d6$var$isIndexable\n        }\n    },\n    additionalOptionScopes: [\n        \"\"\n    ]\n};\nfunction $4049e6bf31df43d6$var$draw(chart, caller, clip) {\n    const { ctx: ctx, chartArea: chartArea } = chart;\n    const state = $4049e6bf31df43d6$var$chartStates.get(chart);\n    if (clip) (0, $c7mKY.Y)(ctx, chartArea);\n    const drawableElements = $4049e6bf31df43d6$var$getDrawableElements(state.visibleElements, caller).sort((a, b)=>a.element.options.z - b.element.options.z);\n    for (const item of drawableElements)$4049e6bf31df43d6$var$drawElement(ctx, chartArea, state, item);\n    if (clip) (0, $c7mKY.$)(ctx);\n}\nfunction $4049e6bf31df43d6$var$getDrawableElements(elements, caller) {\n    const drawableElements = [];\n    for (const el of elements){\n        if (el.options.drawTime === caller) drawableElements.push({\n            element: el,\n            main: true\n        });\n        if (el.elements && el.elements.length) {\n            for (const sub of el.elements)if (sub.options.display && sub.options.drawTime === caller) drawableElements.push({\n                element: sub\n            });\n        }\n    }\n    return drawableElements;\n}\nfunction $4049e6bf31df43d6$var$drawElement(ctx, chartArea, state, item) {\n    const el = item.element;\n    if (item.main) {\n        $4049e6bf31df43d6$var$invokeHook(state, el, \"beforeDraw\");\n        el.draw(ctx, chartArea);\n        $4049e6bf31df43d6$var$invokeHook(state, el, \"afterDraw\");\n    } else el.draw(ctx, chartArea);\n}\n\n});\nparcelRegister(\"6WGai\", function(module, exports) {\n\n$parcel$export(module.exports, \"addRoundedRectPath\", () => (parcelRequire(\"c7mKY\")).au);\n$parcel$export(module.exports, \"callback\", () => (parcelRequire(\"c7mKY\")).Q);\n$parcel$export(module.exports, \"clipArea\", () => (parcelRequire(\"c7mKY\")).Y);\n$parcel$export(module.exports, \"defined\", () => (parcelRequire(\"c7mKY\")).h);\n$parcel$export(module.exports, \"distanceBetweenPoints\", () => (parcelRequire(\"c7mKY\")).aE);\n$parcel$export(module.exports, \"getAngleFromPoint\", () => (parcelRequire(\"c7mKY\")).D);\n$parcel$export(module.exports, \"HALF_PI\", () => (parcelRequire(\"c7mKY\")).H);\n$parcel$export(module.exports, \"isArray\", () => (parcelRequire(\"c7mKY\")).b);\n$parcel$export(module.exports, \"isFinite\", () => (parcelRequire(\"c7mKY\")).g);\n$parcel$export(module.exports, \"isFunction\", () => (parcelRequire(\"c7mKY\")).a7);\n$parcel$export(module.exports, \"isNumber\", () => (parcelRequire(\"c7mKY\")).x);\n$parcel$export(module.exports, \"isObject\", () => (parcelRequire(\"c7mKY\")).i);\n$parcel$export(module.exports, \"PI\", () => (parcelRequire(\"c7mKY\")).P);\n$parcel$export(module.exports, \"QUARTER_PI\", () => (parcelRequire(\"c7mKY\")).b4);\n$parcel$export(module.exports, \"RAD_PER_DEG\", () => (parcelRequire(\"c7mKY\")).b3);\n$parcel$export(module.exports, \"TAU\", () => (parcelRequire(\"c7mKY\")).T);\n$parcel$export(module.exports, \"toDegrees\", () => (parcelRequire(\"c7mKY\")).U);\n$parcel$export(module.exports, \"toFont\", () => (parcelRequire(\"c7mKY\")).a0);\n$parcel$export(module.exports, \"toPadding\", () => (parcelRequire(\"c7mKY\")).E);\n$parcel$export(module.exports, \"toRadians\", () => (parcelRequire(\"c7mKY\")).t);\n$parcel$export(module.exports, \"toTRBLCorners\", () => (parcelRequire(\"c7mKY\")).aw);\n$parcel$export(module.exports, \"TWO_THIRDS_PI\", () => (parcelRequire(\"c7mKY\")).b5);\n$parcel$export(module.exports, \"unclipArea\", () => (parcelRequire(\"c7mKY\")).$);\n$parcel$export(module.exports, \"valueOrDefault\", () => (parcelRequire(\"c7mKY\")).v);\n\nvar $c7mKY = parcelRequire(\"c7mKY\");\n\n});\n\n\nparcelRegister(\"5pY61\", function(module, exports) {\n\nvar $7ybDy = parcelRequire(\"7ybDy\");\nmodule.exports = ($7ybDy.__esModule ? $7ybDy : {\n    default: $7ybDy\n}).default;\n\n});\nparcelRegister(\"7ybDy\", function(module, exports) {\n\"use strict\";\nObject.defineProperty(module.exports, \"__esModule\", {\n    value: true\n});\nObject.defineProperty(module.exports, \"default\", {\n    enumerable: true,\n    get: function() {\n        return $57f4bc3f97ccace5$var$_default;\n    }\n});\n\nconst $57f4bc3f97ccace5$var$_log = /*#__PURE__*/ $57f4bc3f97ccace5$var$_interop_require_default((parcelRequire(\"7pWKZ\")));\nfunction $57f4bc3f97ccace5$var$_interop_require_default(obj) {\n    return obj && obj.__esModule ? obj : {\n        default: obj\n    };\n}\nfunction $57f4bc3f97ccace5$var$warn({ version: version, from: from, to: to }) {\n    $57f4bc3f97ccace5$var$_log.default.warn(`${from}-color-renamed`, [\n        `As of Tailwind CSS ${version}, \\`${from}\\` has been renamed to \\`${to}\\`.`,\n        \"Update your configuration file to silence this warning.\"\n    ]);\n}\nconst $57f4bc3f97ccace5$var$_default = {\n    inherit: \"inherit\",\n    current: \"currentColor\",\n    transparent: \"transparent\",\n    black: \"#000\",\n    white: \"#fff\",\n    slate: {\n        50: \"#f8fafc\",\n        100: \"#f1f5f9\",\n        200: \"#e2e8f0\",\n        300: \"#cbd5e1\",\n        400: \"#94a3b8\",\n        500: \"#64748b\",\n        600: \"#475569\",\n        700: \"#334155\",\n        800: \"#1e293b\",\n        900: \"#0f172a\",\n        950: \"#020617\"\n    },\n    gray: {\n        50: \"#f9fafb\",\n        100: \"#f3f4f6\",\n        200: \"#e5e7eb\",\n        300: \"#d1d5db\",\n        400: \"#9ca3af\",\n        500: \"#6b7280\",\n        600: \"#4b5563\",\n        700: \"#374151\",\n        800: \"#1f2937\",\n        900: \"#111827\",\n        950: \"#030712\"\n    },\n    zinc: {\n        50: \"#fafafa\",\n        100: \"#f4f4f5\",\n        200: \"#e4e4e7\",\n        300: \"#d4d4d8\",\n        400: \"#a1a1aa\",\n        500: \"#71717a\",\n        600: \"#52525b\",\n        700: \"#3f3f46\",\n        800: \"#27272a\",\n        900: \"#18181b\",\n        950: \"#09090b\"\n    },\n    neutral: {\n        50: \"#fafafa\",\n        100: \"#f5f5f5\",\n        200: \"#e5e5e5\",\n        300: \"#d4d4d4\",\n        400: \"#a3a3a3\",\n        500: \"#737373\",\n        600: \"#525252\",\n        700: \"#404040\",\n        800: \"#262626\",\n        900: \"#171717\",\n        950: \"#0a0a0a\"\n    },\n    stone: {\n        50: \"#fafaf9\",\n        100: \"#f5f5f4\",\n        200: \"#e7e5e4\",\n        300: \"#d6d3d1\",\n        400: \"#a8a29e\",\n        500: \"#78716c\",\n        600: \"#57534e\",\n        700: \"#44403c\",\n        800: \"#292524\",\n        900: \"#1c1917\",\n        950: \"#0c0a09\"\n    },\n    red: {\n        50: \"#fef2f2\",\n        100: \"#fee2e2\",\n        200: \"#fecaca\",\n        300: \"#fca5a5\",\n        400: \"#f87171\",\n        500: \"#ef4444\",\n        600: \"#dc2626\",\n        700: \"#b91c1c\",\n        800: \"#991b1b\",\n        900: \"#7f1d1d\",\n        950: \"#450a0a\"\n    },\n    orange: {\n        50: \"#fff7ed\",\n        100: \"#ffedd5\",\n        200: \"#fed7aa\",\n        300: \"#fdba74\",\n        400: \"#fb923c\",\n        500: \"#f97316\",\n        600: \"#ea580c\",\n        700: \"#c2410c\",\n        800: \"#9a3412\",\n        900: \"#7c2d12\",\n        950: \"#431407\"\n    },\n    amber: {\n        50: \"#fffbeb\",\n        100: \"#fef3c7\",\n        200: \"#fde68a\",\n        300: \"#fcd34d\",\n        400: \"#fbbf24\",\n        500: \"#f59e0b\",\n        600: \"#d97706\",\n        700: \"#b45309\",\n        800: \"#92400e\",\n        900: \"#78350f\",\n        950: \"#451a03\"\n    },\n    yellow: {\n        50: \"#fefce8\",\n        100: \"#fef9c3\",\n        200: \"#fef08a\",\n        300: \"#fde047\",\n        400: \"#facc15\",\n        500: \"#eab308\",\n        600: \"#ca8a04\",\n        700: \"#a16207\",\n        800: \"#854d0e\",\n        900: \"#713f12\",\n        950: \"#422006\"\n    },\n    lime: {\n        50: \"#f7fee7\",\n        100: \"#ecfccb\",\n        200: \"#d9f99d\",\n        300: \"#bef264\",\n        400: \"#a3e635\",\n        500: \"#84cc16\",\n        600: \"#65a30d\",\n        700: \"#4d7c0f\",\n        800: \"#3f6212\",\n        900: \"#365314\",\n        950: \"#1a2e05\"\n    },\n    green: {\n        50: \"#f0fdf4\",\n        100: \"#dcfce7\",\n        200: \"#bbf7d0\",\n        300: \"#86efac\",\n        400: \"#4ade80\",\n        500: \"#22c55e\",\n        600: \"#16a34a\",\n        700: \"#15803d\",\n        800: \"#166534\",\n        900: \"#14532d\",\n        950: \"#052e16\"\n    },\n    emerald: {\n        50: \"#ecfdf5\",\n        100: \"#d1fae5\",\n        200: \"#a7f3d0\",\n        300: \"#6ee7b7\",\n        400: \"#34d399\",\n        500: \"#10b981\",\n        600: \"#059669\",\n        700: \"#047857\",\n        800: \"#065f46\",\n        900: \"#064e3b\",\n        950: \"#022c22\"\n    },\n    teal: {\n        50: \"#f0fdfa\",\n        100: \"#ccfbf1\",\n        200: \"#99f6e4\",\n        300: \"#5eead4\",\n        400: \"#2dd4bf\",\n        500: \"#14b8a6\",\n        600: \"#0d9488\",\n        700: \"#0f766e\",\n        800: \"#115e59\",\n        900: \"#134e4a\",\n        950: \"#042f2e\"\n    },\n    cyan: {\n        50: \"#ecfeff\",\n        100: \"#cffafe\",\n        200: \"#a5f3fc\",\n        300: \"#67e8f9\",\n        400: \"#22d3ee\",\n        500: \"#06b6d4\",\n        600: \"#0891b2\",\n        700: \"#0e7490\",\n        800: \"#155e75\",\n        900: \"#164e63\",\n        950: \"#083344\"\n    },\n    sky: {\n        50: \"#f0f9ff\",\n        100: \"#e0f2fe\",\n        200: \"#bae6fd\",\n        300: \"#7dd3fc\",\n        400: \"#38bdf8\",\n        500: \"#0ea5e9\",\n        600: \"#0284c7\",\n        700: \"#0369a1\",\n        800: \"#075985\",\n        900: \"#0c4a6e\",\n        950: \"#082f49\"\n    },\n    blue: {\n        50: \"#eff6ff\",\n        100: \"#dbeafe\",\n        200: \"#bfdbfe\",\n        300: \"#93c5fd\",\n        400: \"#60a5fa\",\n        500: \"#3b82f6\",\n        600: \"#2563eb\",\n        700: \"#1d4ed8\",\n        800: \"#1e40af\",\n        900: \"#1e3a8a\",\n        950: \"#172554\"\n    },\n    indigo: {\n        50: \"#eef2ff\",\n        100: \"#e0e7ff\",\n        200: \"#c7d2fe\",\n        300: \"#a5b4fc\",\n        400: \"#818cf8\",\n        500: \"#6366f1\",\n        600: \"#4f46e5\",\n        700: \"#4338ca\",\n        800: \"#3730a3\",\n        900: \"#312e81\",\n        950: \"#1e1b4b\"\n    },\n    violet: {\n        50: \"#f5f3ff\",\n        100: \"#ede9fe\",\n        200: \"#ddd6fe\",\n        300: \"#c4b5fd\",\n        400: \"#a78bfa\",\n        500: \"#8b5cf6\",\n        600: \"#7c3aed\",\n        700: \"#6d28d9\",\n        800: \"#5b21b6\",\n        900: \"#4c1d95\",\n        950: \"#2e1065\"\n    },\n    purple: {\n        50: \"#faf5ff\",\n        100: \"#f3e8ff\",\n        200: \"#e9d5ff\",\n        300: \"#d8b4fe\",\n        400: \"#c084fc\",\n        500: \"#a855f7\",\n        600: \"#9333ea\",\n        700: \"#7e22ce\",\n        800: \"#6b21a8\",\n        900: \"#581c87\",\n        950: \"#3b0764\"\n    },\n    fuchsia: {\n        50: \"#fdf4ff\",\n        100: \"#fae8ff\",\n        200: \"#f5d0fe\",\n        300: \"#f0abfc\",\n        400: \"#e879f9\",\n        500: \"#d946ef\",\n        600: \"#c026d3\",\n        700: \"#a21caf\",\n        800: \"#86198f\",\n        900: \"#701a75\",\n        950: \"#4a044e\"\n    },\n    pink: {\n        50: \"#fdf2f8\",\n        100: \"#fce7f3\",\n        200: \"#fbcfe8\",\n        300: \"#f9a8d4\",\n        400: \"#f472b6\",\n        500: \"#ec4899\",\n        600: \"#db2777\",\n        700: \"#be185d\",\n        800: \"#9d174d\",\n        900: \"#831843\",\n        950: \"#500724\"\n    },\n    rose: {\n        50: \"#fff1f2\",\n        100: \"#ffe4e6\",\n        200: \"#fecdd3\",\n        300: \"#fda4af\",\n        400: \"#fb7185\",\n        500: \"#f43f5e\",\n        600: \"#e11d48\",\n        700: \"#be123c\",\n        800: \"#9f1239\",\n        900: \"#881337\",\n        950: \"#4c0519\"\n    },\n    get lightBlue () {\n        $57f4bc3f97ccace5$var$warn({\n            version: \"v2.2\",\n            from: \"lightBlue\",\n            to: \"sky\"\n        });\n        return this.sky;\n    },\n    get warmGray () {\n        $57f4bc3f97ccace5$var$warn({\n            version: \"v3.0\",\n            from: \"warmGray\",\n            to: \"stone\"\n        });\n        return this.stone;\n    },\n    get trueGray () {\n        $57f4bc3f97ccace5$var$warn({\n            version: \"v3.0\",\n            from: \"trueGray\",\n            to: \"neutral\"\n        });\n        return this.neutral;\n    },\n    get coolGray () {\n        $57f4bc3f97ccace5$var$warn({\n            version: \"v3.0\",\n            from: \"coolGray\",\n            to: \"gray\"\n        });\n        return this.gray;\n    },\n    get blueGray () {\n        $57f4bc3f97ccace5$var$warn({\n            version: \"v3.0\",\n            from: \"blueGray\",\n            to: \"slate\"\n        });\n        return this.slate;\n    }\n};\n\n});\nparcelRegister(\"7pWKZ\", function(module, exports) {\n\nvar $hPtJY = parcelRequire(\"hPtJY\");\n\"use strict\";\nObject.defineProperty(module.exports, \"__esModule\", {\n    value: true\n});\nfunction $5668721651034315$var$_export(target, all) {\n    for(var name in all)Object.defineProperty(target, name, {\n        enumerable: true,\n        get: all[name]\n    });\n}\n$5668721651034315$var$_export(module.exports, {\n    dim: function() {\n        return $5668721651034315$var$dim;\n    },\n    default: function() {\n        return $5668721651034315$var$_default;\n    }\n});\n\nconst $5668721651034315$var$_picocolors = /*#__PURE__*/ $5668721651034315$var$_interop_require_default((parcelRequire(\"lrcwG\")));\nfunction $5668721651034315$var$_interop_require_default(obj) {\n    return obj && obj.__esModule ? obj : {\n        default: obj\n    };\n}\nlet $5668721651034315$var$alreadyShown = new Set();\nfunction $5668721651034315$var$log(type, messages, key) {\n    typeof $hPtJY !== \"undefined\" && undefined;\n    if (key && $5668721651034315$var$alreadyShown.has(key)) return;\n    if (key) $5668721651034315$var$alreadyShown.add(key);\n    console.warn(\"\");\n    messages.forEach((message)=>console.warn(type, \"-\", message));\n}\nfunction $5668721651034315$var$dim(input) {\n    return $5668721651034315$var$_picocolors.default.dim(input);\n}\nconst $5668721651034315$var$_default = {\n    info (key, messages) {\n        $5668721651034315$var$log($5668721651034315$var$_picocolors.default.bold($5668721651034315$var$_picocolors.default.cyan(\"info\")), ...Array.isArray(key) ? [\n            key\n        ] : [\n            messages,\n            key\n        ]);\n    },\n    warn (key, messages) {\n        $5668721651034315$var$log($5668721651034315$var$_picocolors.default.bold($5668721651034315$var$_picocolors.default.yellow(\"warn\")), ...Array.isArray(key) ? [\n            key\n        ] : [\n            messages,\n            key\n        ]);\n    },\n    risk (key, messages) {\n        $5668721651034315$var$log($5668721651034315$var$_picocolors.default.bold($5668721651034315$var$_picocolors.default.magenta(\"risk\")), ...Array.isArray(key) ? [\n            key\n        ] : [\n            messages,\n            key\n        ]);\n    }\n};\n\n});\nparcelRegister(\"hPtJY\", function(module, exports) {\n// shim for using process in browser\nvar $cfae44f0dfdf62c0$var$process = module.exports = {};\n// cached from whatever global is present so that test runners that stub it\n// don't break things.  But we need to wrap it in a try catch in case it is\n// wrapped in strict mode code which doesn't define any globals.  It's inside a\n// function because try/catches deoptimize in certain engines.\nvar $cfae44f0dfdf62c0$var$cachedSetTimeout;\nvar $cfae44f0dfdf62c0$var$cachedClearTimeout;\nfunction $cfae44f0dfdf62c0$var$defaultSetTimout() {\n    throw new Error(\"setTimeout has not been defined\");\n}\nfunction $cfae44f0dfdf62c0$var$defaultClearTimeout() {\n    throw new Error(\"clearTimeout has not been defined\");\n}\n(function() {\n    try {\n        if (typeof setTimeout === \"function\") $cfae44f0dfdf62c0$var$cachedSetTimeout = setTimeout;\n        else $cfae44f0dfdf62c0$var$cachedSetTimeout = $cfae44f0dfdf62c0$var$defaultSetTimout;\n    } catch (e) {\n        $cfae44f0dfdf62c0$var$cachedSetTimeout = $cfae44f0dfdf62c0$var$defaultSetTimout;\n    }\n    try {\n        if (typeof clearTimeout === \"function\") $cfae44f0dfdf62c0$var$cachedClearTimeout = clearTimeout;\n        else $cfae44f0dfdf62c0$var$cachedClearTimeout = $cfae44f0dfdf62c0$var$defaultClearTimeout;\n    } catch (e) {\n        $cfae44f0dfdf62c0$var$cachedClearTimeout = $cfae44f0dfdf62c0$var$defaultClearTimeout;\n    }\n})();\nfunction $cfae44f0dfdf62c0$var$runTimeout(fun) {\n    if ($cfae44f0dfdf62c0$var$cachedSetTimeout === setTimeout) //normal enviroments in sane situations\n    return setTimeout(fun, 0);\n    // if setTimeout wasn't available but was latter defined\n    if (($cfae44f0dfdf62c0$var$cachedSetTimeout === $cfae44f0dfdf62c0$var$defaultSetTimout || !$cfae44f0dfdf62c0$var$cachedSetTimeout) && setTimeout) {\n        $cfae44f0dfdf62c0$var$cachedSetTimeout = setTimeout;\n        return setTimeout(fun, 0);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return $cfae44f0dfdf62c0$var$cachedSetTimeout(fun, 0);\n    } catch (e) {\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally\n            return $cfae44f0dfdf62c0$var$cachedSetTimeout.call(null, fun, 0);\n        } catch (e) {\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error\n            return $cfae44f0dfdf62c0$var$cachedSetTimeout.call(this, fun, 0);\n        }\n    }\n}\nfunction $cfae44f0dfdf62c0$var$runClearTimeout(marker) {\n    if ($cfae44f0dfdf62c0$var$cachedClearTimeout === clearTimeout) //normal enviroments in sane situations\n    return clearTimeout(marker);\n    // if clearTimeout wasn't available but was latter defined\n    if (($cfae44f0dfdf62c0$var$cachedClearTimeout === $cfae44f0dfdf62c0$var$defaultClearTimeout || !$cfae44f0dfdf62c0$var$cachedClearTimeout) && clearTimeout) {\n        $cfae44f0dfdf62c0$var$cachedClearTimeout = clearTimeout;\n        return clearTimeout(marker);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return $cfae44f0dfdf62c0$var$cachedClearTimeout(marker);\n    } catch (e) {\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally\n            return $cfae44f0dfdf62c0$var$cachedClearTimeout.call(null, marker);\n        } catch (e) {\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.\n            // Some versions of I.E. have different rules for clearTimeout vs setTimeout\n            return $cfae44f0dfdf62c0$var$cachedClearTimeout.call(this, marker);\n        }\n    }\n}\nvar $cfae44f0dfdf62c0$var$queue = [];\nvar $cfae44f0dfdf62c0$var$draining = false;\nvar $cfae44f0dfdf62c0$var$currentQueue;\nvar $cfae44f0dfdf62c0$var$queueIndex = -1;\nfunction $cfae44f0dfdf62c0$var$cleanUpNextTick() {\n    if (!$cfae44f0dfdf62c0$var$draining || !$cfae44f0dfdf62c0$var$currentQueue) return;\n    $cfae44f0dfdf62c0$var$draining = false;\n    if ($cfae44f0dfdf62c0$var$currentQueue.length) $cfae44f0dfdf62c0$var$queue = $cfae44f0dfdf62c0$var$currentQueue.concat($cfae44f0dfdf62c0$var$queue);\n    else $cfae44f0dfdf62c0$var$queueIndex = -1;\n    if ($cfae44f0dfdf62c0$var$queue.length) $cfae44f0dfdf62c0$var$drainQueue();\n}\nfunction $cfae44f0dfdf62c0$var$drainQueue() {\n    if ($cfae44f0dfdf62c0$var$draining) return;\n    var timeout = $cfae44f0dfdf62c0$var$runTimeout($cfae44f0dfdf62c0$var$cleanUpNextTick);\n    $cfae44f0dfdf62c0$var$draining = true;\n    var len = $cfae44f0dfdf62c0$var$queue.length;\n    while(len){\n        $cfae44f0dfdf62c0$var$currentQueue = $cfae44f0dfdf62c0$var$queue;\n        $cfae44f0dfdf62c0$var$queue = [];\n        while(++$cfae44f0dfdf62c0$var$queueIndex < len)if ($cfae44f0dfdf62c0$var$currentQueue) $cfae44f0dfdf62c0$var$currentQueue[$cfae44f0dfdf62c0$var$queueIndex].run();\n        $cfae44f0dfdf62c0$var$queueIndex = -1;\n        len = $cfae44f0dfdf62c0$var$queue.length;\n    }\n    $cfae44f0dfdf62c0$var$currentQueue = null;\n    $cfae44f0dfdf62c0$var$draining = false;\n    $cfae44f0dfdf62c0$var$runClearTimeout(timeout);\n}\n$cfae44f0dfdf62c0$var$process.nextTick = function(fun) {\n    var args = new Array(arguments.length - 1);\n    if (arguments.length > 1) for(var i = 1; i < arguments.length; i++)args[i - 1] = arguments[i];\n    $cfae44f0dfdf62c0$var$queue.push(new $cfae44f0dfdf62c0$var$Item(fun, args));\n    if ($cfae44f0dfdf62c0$var$queue.length === 1 && !$cfae44f0dfdf62c0$var$draining) $cfae44f0dfdf62c0$var$runTimeout($cfae44f0dfdf62c0$var$drainQueue);\n};\n// v8 likes predictible objects\nfunction $cfae44f0dfdf62c0$var$Item(fun, array) {\n    this.fun = fun;\n    this.array = array;\n}\n$cfae44f0dfdf62c0$var$Item.prototype.run = function() {\n    this.fun.apply(null, this.array);\n};\n$cfae44f0dfdf62c0$var$process.title = \"browser\";\n$cfae44f0dfdf62c0$var$process.browser = true;\n$cfae44f0dfdf62c0$var$process.env = {};\n$cfae44f0dfdf62c0$var$process.argv = [];\n$cfae44f0dfdf62c0$var$process.version = \"\"; // empty string to avoid regexp issues\n$cfae44f0dfdf62c0$var$process.versions = {};\nfunction $cfae44f0dfdf62c0$var$noop() {}\n$cfae44f0dfdf62c0$var$process.on = $cfae44f0dfdf62c0$var$noop;\n$cfae44f0dfdf62c0$var$process.addListener = $cfae44f0dfdf62c0$var$noop;\n$cfae44f0dfdf62c0$var$process.once = $cfae44f0dfdf62c0$var$noop;\n$cfae44f0dfdf62c0$var$process.off = $cfae44f0dfdf62c0$var$noop;\n$cfae44f0dfdf62c0$var$process.removeListener = $cfae44f0dfdf62c0$var$noop;\n$cfae44f0dfdf62c0$var$process.removeAllListeners = $cfae44f0dfdf62c0$var$noop;\n$cfae44f0dfdf62c0$var$process.emit = $cfae44f0dfdf62c0$var$noop;\n$cfae44f0dfdf62c0$var$process.prependListener = $cfae44f0dfdf62c0$var$noop;\n$cfae44f0dfdf62c0$var$process.prependOnceListener = $cfae44f0dfdf62c0$var$noop;\n$cfae44f0dfdf62c0$var$process.listeners = function(name) {\n    return [];\n};\n$cfae44f0dfdf62c0$var$process.binding = function(name) {\n    throw new Error(\"process.binding is not supported\");\n};\n$cfae44f0dfdf62c0$var$process.cwd = function() {\n    return \"/\";\n};\n$cfae44f0dfdf62c0$var$process.chdir = function(dir) {\n    throw new Error(\"process.chdir is not supported\");\n};\n$cfae44f0dfdf62c0$var$process.umask = function() {\n    return 0;\n};\n\n});\n\nparcelRegister(\"lrcwG\", function(module, exports) {\nvar $f9b5d605f52d8009$var$x = String;\nvar $f9b5d605f52d8009$var$create = function() {\n    return {\n        isColorSupported: false,\n        reset: $f9b5d605f52d8009$var$x,\n        bold: $f9b5d605f52d8009$var$x,\n        dim: $f9b5d605f52d8009$var$x,\n        italic: $f9b5d605f52d8009$var$x,\n        underline: $f9b5d605f52d8009$var$x,\n        inverse: $f9b5d605f52d8009$var$x,\n        hidden: $f9b5d605f52d8009$var$x,\n        strikethrough: $f9b5d605f52d8009$var$x,\n        black: $f9b5d605f52d8009$var$x,\n        red: $f9b5d605f52d8009$var$x,\n        green: $f9b5d605f52d8009$var$x,\n        yellow: $f9b5d605f52d8009$var$x,\n        blue: $f9b5d605f52d8009$var$x,\n        magenta: $f9b5d605f52d8009$var$x,\n        cyan: $f9b5d605f52d8009$var$x,\n        white: $f9b5d605f52d8009$var$x,\n        gray: $f9b5d605f52d8009$var$x,\n        bgBlack: $f9b5d605f52d8009$var$x,\n        bgRed: $f9b5d605f52d8009$var$x,\n        bgGreen: $f9b5d605f52d8009$var$x,\n        bgYellow: $f9b5d605f52d8009$var$x,\n        bgBlue: $f9b5d605f52d8009$var$x,\n        bgMagenta: $f9b5d605f52d8009$var$x,\n        bgCyan: $f9b5d605f52d8009$var$x,\n        bgWhite: $f9b5d605f52d8009$var$x,\n        blackBright: $f9b5d605f52d8009$var$x,\n        redBright: $f9b5d605f52d8009$var$x,\n        greenBright: $f9b5d605f52d8009$var$x,\n        yellowBright: $f9b5d605f52d8009$var$x,\n        blueBright: $f9b5d605f52d8009$var$x,\n        magentaBright: $f9b5d605f52d8009$var$x,\n        cyanBright: $f9b5d605f52d8009$var$x,\n        whiteBright: $f9b5d605f52d8009$var$x,\n        bgBlackBright: $f9b5d605f52d8009$var$x,\n        bgRedBright: $f9b5d605f52d8009$var$x,\n        bgGreenBright: $f9b5d605f52d8009$var$x,\n        bgYellowBright: $f9b5d605f52d8009$var$x,\n        bgBlueBright: $f9b5d605f52d8009$var$x,\n        bgMagentaBright: $f9b5d605f52d8009$var$x,\n        bgCyanBright: $f9b5d605f52d8009$var$x,\n        bgWhiteBright: $f9b5d605f52d8009$var$x\n    };\n};\nmodule.exports = $f9b5d605f52d8009$var$create();\nmodule.exports.createColors = $f9b5d605f52d8009$var$create;\n\n});\n\n\n\n\nparcelRegister(\"4rPAP\", function(module, exports) {\nmodule.exports = JSON.parse('[{\"date\":\"2024-01-01\",\"value\":44220.78},{\"date\":\"2024-01-02\",\"value\":44972.8},{\"date\":\"2024-01-03\",\"value\":42862.44},{\"date\":\"2024-01-04\",\"value\":44193.29},{\"date\":\"2024-01-05\",\"value\":44186.59},{\"date\":\"2024-01-06\",\"value\":43992.44},{\"date\":\"2024-01-07\",\"value\":43950.28},{\"date\":\"2024-01-08\",\"value\":46995.1},{\"date\":\"2024-01-09\",\"value\":46124.08},{\"date\":\"2024-01-10\",\"value\":46666.11},{\"date\":\"2024-01-11\",\"value\":46342.66},{\"date\":\"2024-01-12\",\"value\":42773.03},{\"date\":\"2024-01-13\",\"value\":42839.33},{\"date\":\"2024-01-14\",\"value\":41697.33},{\"date\":\"2024-01-15\",\"value\":42490.16},{\"date\":\"2024-01-16\",\"value\":43130.45},{\"date\":\"2024-01-17\",\"value\":42739.49},{\"date\":\"2024-01-18\",\"value\":41293.5},{\"date\":\"2024-01-19\",\"value\":41624.07},{\"date\":\"2024-01-20\",\"value\":41666.67},{\"date\":\"2024-01-21\",\"value\":41554.05},{\"date\":\"2024-01-22\",\"value\":39524.27},{\"date\":\"2024-01-23\",\"value\":39878.3},{\"date\":\"2024-01-24\",\"value\":40077.78},{\"date\":\"2024-01-25\",\"value\":39941.66},{\"date\":\"2024-01-26\",\"value\":41814.8},{\"date\":\"2024-01-27\",\"value\":42126.55},{\"date\":\"2024-01-28\",\"value\":42034.59},{\"date\":\"2024-01-29\",\"value\":43306.18},{\"date\":\"2024-01-30\",\"value\":42942.78},{\"date\":\"2024-01-31\",\"value\":42548.08},{\"date\":\"2024-02-01\",\"value\":43078.81},{\"date\":\"2024-02-02\",\"value\":43181.66},{\"date\":\"2024-02-03\",\"value\":43010.67},{\"date\":\"2024-02-04\",\"value\":42568.55},{\"date\":\"2024-02-05\",\"value\":42657.67},{\"date\":\"2024-02-06\",\"value\":43095.79},{\"date\":\"2024-02-07\",\"value\":44343.61},{\"date\":\"2024-02-08\",\"value\":45305.2},{\"date\":\"2024-02-09\",\"value\":47160.41},{\"date\":\"2024-02-10\",\"value\":47767.06},{\"date\":\"2024-02-11\",\"value\":48316.3},{\"date\":\"2024-02-12\",\"value\":49941.81},{\"date\":\"2024-02-13\",\"value\":49725.36},{\"date\":\"2024-02-14\",\"value\":51858.59},{\"date\":\"2024-02-15\",\"value\":51934.29},{\"date\":\"2024-02-16\",\"value\":52162.64},{\"date\":\"2024-02-17\",\"value\":51666.22},{\"date\":\"2024-02-18\",\"value\":52153.63},{\"date\":\"2024-02-19\",\"value\":51787.05},{\"date\":\"2024-02-20\",\"value\":52277.52},{\"date\":\"2024-02-21\",\"value\":51851.67},{\"date\":\"2024-02-22\",\"value\":51258.7},{\"date\":\"2024-02-23\",\"value\":50747.05},{\"date\":\"2024-02-24\",\"value\":51570.65},{\"date\":\"2024-02-25\",\"value\":51731},{\"date\":\"2024-02-26\",\"value\":54533.48},{\"date\":\"2024-02-27\",\"value\":57077.07},{\"date\":\"2024-02-28\",\"value\":62518.9},{\"date\":\"2024-02-29\",\"value\":61179.03},{\"date\":\"2024-03-01\",\"value\":62436.72},{\"date\":\"2024-03-02\",\"value\":62045.78},{\"date\":\"2024-03-03\",\"value\":63154.49},{\"date\":\"2024-03-04\",\"value\":68360.14},{\"date\":\"2024-03-05\",\"value\":63800.78},{\"date\":\"2024-03-06\",\"value\":66122.28},{\"date\":\"2024-03-07\",\"value\":66938.21},{\"date\":\"2024-03-08\",\"value\":68289.16},{\"date\":\"2024-03-09\",\"value\":68480},{\"date\":\"2024-03-10\",\"value\":69032.12},{\"date\":\"2024-03-11\",\"value\":72110.98},{\"date\":\"2024-03-12\",\"value\":71475.93},{\"date\":\"2024-03-13\",\"value\":73135.04},{\"date\":\"2024-03-14\",\"value\":71364.58},{\"date\":\"2024-03-15\",\"value\":69506.88},{\"date\":\"2024-03-16\",\"value\":65254.22},{\"date\":\"2024-03-17\",\"value\":68343.64},{\"date\":\"2024-03-18\",\"value\":67613.04},{\"date\":\"2024-03-19\",\"value\":61906.27},{\"date\":\"2024-03-20\",\"value\":67858.8},{\"date\":\"2024-03-21\",\"value\":65484.7},{\"date\":\"2024-03-22\",\"value\":63814.56},{\"date\":\"2024-03-23\",\"value\":63998.86},{\"date\":\"2024-03-24\",\"value\":67204.93},{\"date\":\"2024-03-25\",\"value\":69890.28},{\"date\":\"2024-03-26\",\"value\":69992.4},{\"date\":\"2024-03-27\",\"value\":69435.96},{\"date\":\"2024-03-28\",\"value\":70801.18},{\"date\":\"2024-03-29\",\"value\":69903.75},{\"date\":\"2024-03-30\",\"value\":69626.87},{\"date\":\"2024-03-31\",\"value\":71288.9},{\"date\":\"2024-04-01\",\"value\":69681.82},{\"date\":\"2024-04-02\",\"value\":65464.14},{\"date\":\"2024-04-03\",\"value\":65987.92},{\"date\":\"2024-04-04\",\"value\":68525.23},{\"date\":\"2024-04-05\",\"value\":67856.51},{\"date\":\"2024-04-06\",\"value\":68919.89},{\"date\":\"2024-04-07\",\"value\":69350.34},{\"date\":\"2024-04-08\",\"value\":71622.53},{\"date\":\"2024-04-09\",\"value\":69117.01},{\"date\":\"2024-04-10\",\"value\":70634.04},{\"date\":\"2024-04-11\",\"value\":70020.73},{\"date\":\"2024-04-12\",\"value\":67148.61},{\"date\":\"2024-04-13\",\"value\":64024.77},{\"date\":\"2024-04-14\",\"value\":65777.05},{\"date\":\"2024-04-15\",\"value\":63452.18},{\"date\":\"2024-04-16\",\"value\":63814.94},{\"date\":\"2024-04-17\",\"value\":61279.36},{\"date\":\"2024-04-18\",\"value\":63513.85},{\"date\":\"2024-04-19\",\"value\":63848.37},{\"date\":\"2024-04-20\",\"value\":64968.87},{\"date\":\"2024-04-21\",\"value\":64952.92},{\"date\":\"2024-04-22\",\"value\":66859.17},{\"date\":\"2024-04-23\",\"value\":66414.16},{\"date\":\"2024-04-24\",\"value\":64255.78},{\"date\":\"2024-04-25\",\"value\":64484.44},{\"date\":\"2024-04-26\",\"value\":63742.39},{\"date\":\"2024-04-27\",\"value\":63422},{\"date\":\"2024-04-28\",\"value\":63108.94},{\"date\":\"2024-04-29\",\"value\":63844.85},{\"date\":\"2024-04-30\",\"value\":60622.1},{\"date\":\"2024-05-01\",\"value\":58265.59},{\"date\":\"2024-05-02\",\"value\":59071.89},{\"date\":\"2024-05-03\",\"value\":62913.03},{\"date\":\"2024-05-04\",\"value\":63902.88},{\"date\":\"2024-05-05\",\"value\":64023.45},{\"date\":\"2024-05-06\",\"value\":63162.24},{\"date\":\"2024-05-07\",\"value\":62315.76},{\"date\":\"2024-05-08\",\"value\":61169.53},{\"date\":\"2024-05-09\",\"value\":63073.57},{\"date\":\"2024-05-10\",\"value\":60787.47},{\"date\":\"2024-05-11\",\"value\":60814.63},{\"date\":\"2024-05-12\",\"value\":61453.02},{\"date\":\"2024-05-13\",\"value\":62932.37},{\"date\":\"2024-05-14\",\"value\":61539.84},{\"date\":\"2024-05-15\",\"value\":66244.69},{\"date\":\"2024-05-16\",\"value\":65252.18},{\"date\":\"2024-05-17\",\"value\":67046.33},{\"date\":\"2024-05-18\",\"value\":66923.87},{\"date\":\"2024-05-19\",\"value\":66261.62},{\"date\":\"2024-05-20\",\"value\":71432.17},{\"date\":\"2024-05-21\",\"value\":70142.84},{\"date\":\"2024-05-22\",\"value\":69109.93},{\"date\":\"2024-05-23\",\"value\":67940.45},{\"date\":\"2024-05-24\",\"value\":68547.8},{\"date\":\"2024-05-25\",\"value\":69289.67},{\"date\":\"2024-05-26\",\"value\":68473.72},{\"date\":\"2024-05-27\",\"value\":69368.72},{\"date\":\"2024-05-28\",\"value\":68321.98},{\"date\":\"2024-05-29\",\"value\":67569.45},{\"date\":\"2024-05-30\",\"value\":68338.58},{\"date\":\"2024-05-31\",\"value\":67472.41},{\"date\":\"2024-06-01\",\"value\":67719.29},{\"date\":\"2024-06-02\",\"value\":67735.52},{\"date\":\"2024-06-03\",\"value\":68791},{\"date\":\"2024-06-04\",\"value\":70542.32},{\"date\":\"2024-06-05\",\"value\":71121.11},{\"date\":\"2024-06-06\",\"value\":70773.64},{\"date\":\"2024-06-07\",\"value\":69324.53},{\"date\":\"2024-06-08\",\"value\":69304.05},{\"date\":\"2024-06-09\",\"value\":69637.87},{\"date\":\"2024-06-10\",\"value\":69497.73},{\"date\":\"2024-06-11\",\"value\":67316.53},{\"date\":\"2024-06-12\",\"value\":68248.6},{\"date\":\"2024-06-13\",\"value\":66738.85},{\"date\":\"2024-06-14\",\"value\":66004.39},{\"date\":\"2024-06-15\",\"value\":66192},{\"date\":\"2024-06-16\",\"value\":66628.75},{\"date\":\"2024-06-17\",\"value\":66481.81},{\"date\":\"2024-06-18\",\"value\":65152.8},{\"date\":\"2024-06-19\",\"value\":64943.79},{\"date\":\"2024-06-20\",\"value\":64840.88},{\"date\":\"2024-06-21\",\"value\":64120.28},{\"date\":\"2024-06-22\",\"value\":64235.01},{\"date\":\"2024-06-23\",\"value\":63171.43},{\"date\":\"2024-06-24\",\"value\":60263},{\"date\":\"2024-06-25\",\"value\":61789.71},{\"date\":\"2024-06-26\",\"value\":60816.68},{\"date\":\"2024-06-27\",\"value\":61615.39},{\"date\":\"2024-06-28\",\"value\":60313.35},{\"date\":\"2024-06-29\",\"value\":60885.67},{\"date\":\"2024-06-30\",\"value\":62668.26},{\"date\":\"2024-07-01\",\"value\":62830.13},{\"date\":\"2024-07-02\",\"value\":62040.22},{\"date\":\"2024-07-03\",\"value\":60145.01},{\"date\":\"2024-07-04\",\"value\":57042.14},{\"date\":\"2024-07-05\",\"value\":56639.43},{\"date\":\"2024-07-06\",\"value\":58244.75},{\"date\":\"2024-07-07\",\"value\":55854.09},{\"date\":\"2024-07-08\",\"value\":56699.43},{\"date\":\"2024-07-09\",\"value\":58047.86},{\"date\":\"2024-07-10\",\"value\":57712.59},{\"date\":\"2024-07-11\",\"value\":57340.77},{\"date\":\"2024-07-12\",\"value\":57909.03},{\"date\":\"2024-07-13\",\"value\":59224.58},{\"date\":\"2024-07-14\",\"value\":60808.42},{\"date\":\"2024-07-15\",\"value\":64757.16},{\"date\":\"2024-07-16\",\"value\":65088.99},{\"date\":\"2024-07-17\",\"value\":64085.81},{\"date\":\"2024-07-18\",\"value\":63982.86},{\"date\":\"2024-07-19\",\"value\":66707.61},{\"date\":\"2024-07-20\",\"value\":67163.83},{\"date\":\"2024-07-21\",\"value\":68181.28},{\"date\":\"2024-07-22\",\"value\":67558.22},{\"date\":\"2024-07-23\",\"value\":65939.24},{\"date\":\"2024-07-24\",\"value\":65366.4},{\"date\":\"2024-07-25\",\"value\":65795.42},{\"date\":\"2024-07-26\",\"value\":67924.08},{\"date\":\"2024-07-27\",\"value\":67899.41},{\"date\":\"2024-07-28\",\"value\":68244.3},{\"date\":\"2024-07-29\",\"value\":66771.45},{\"date\":\"2024-07-30\",\"value\":66169.68},{\"date\":\"2024-07-31\",\"value\":64609.62},{\"date\":\"2024-08-01\",\"value\":65288.18},{\"date\":\"2024-08-02\",\"value\":61418.06},{\"date\":\"2024-08-03\",\"value\":60674.93},{\"date\":\"2024-08-04\",\"value\":58130.95},{\"date\":\"2024-08-05\",\"value\":54029.12},{\"date\":\"2024-08-06\",\"value\":56048.08},{\"date\":\"2024-08-07\",\"value\":55148.1},{\"date\":\"2024-08-08\",\"value\":61705.58},{\"date\":\"2024-08-09\",\"value\":60862.13},{\"date\":\"2024-08-10\",\"value\":60935.02},{\"date\":\"2024-08-11\",\"value\":58722.49},{\"date\":\"2024-08-12\",\"value\":59358.78},{\"date\":\"2024-08-13\",\"value\":60603.19},{\"date\":\"2024-08-14\",\"value\":58690.62},{\"date\":\"2024-08-15\",\"value\":57543.61},{\"date\":\"2024-08-16\",\"value\":58888.99},{\"date\":\"2024-08-17\",\"value\":59497.49},{\"date\":\"2024-08-18\",\"value\":58437.9},{\"date\":\"2024-08-19\",\"value\":59452.67},{\"date\":\"2024-08-20\",\"value\":59017.59},{\"date\":\"2024-08-21\",\"value\":61163.28},{\"date\":\"2024-08-22\",\"value\":60383.29},{\"date\":\"2024-08-23\",\"value\":64086.72},{\"date\":\"2024-08-24\",\"value\":64179.63},{\"date\":\"2024-08-25\",\"value\":64251.93},{\"date\":\"2024-08-26\",\"value\":62840},{\"date\":\"2024-08-27\",\"value\":59439.64},{\"date\":\"2024-08-28\",\"value\":59045.88},{\"date\":\"2024-08-29\",\"value\":59364.47},{\"date\":\"2024-08-30\",\"value\":59112.77},{\"date\":\"2024-08-31\",\"value\":58968.37},{\"date\":\"2024-09-01\",\"value\":57299},{\"date\":\"2024-09-02\",\"value\":59139.83},{\"date\":\"2024-09-03\",\"value\":57468.84},{\"date\":\"2024-09-04\",\"value\":57971},{\"date\":\"2024-09-05\",\"value\":56156.82},{\"date\":\"2024-09-06\",\"value\":53950.01},{\"date\":\"2024-09-07\",\"value\":54156.33},{\"date\":\"2024-09-08\",\"value\":54881.11},{\"date\":\"2024-09-09\",\"value\":57053.9},{\"date\":\"2024-09-10\",\"value\":57645.59},{\"date\":\"2024-09-11\",\"value\":57352.79},{\"date\":\"2024-09-12\",\"value\":58137.54},{\"date\":\"2024-09-13\",\"value\":60543.35},{\"date\":\"2024-09-14\",\"value\":60012.35},{\"date\":\"2024-09-15\",\"value\":59122.33},{\"date\":\"2024-09-16\",\"value\":58208.75},{\"date\":\"2024-09-17\",\"value\":60312.6},{\"date\":\"2024-09-18\",\"value\":61769.18},{\"date\":\"2024-09-19\",\"value\":62960.14},{\"date\":\"2024-09-20\",\"value\":63210.69},{\"date\":\"2024-09-21\",\"value\":63362.74},{\"date\":\"2024-09-22\",\"value\":63577.66},{\"date\":\"2024-09-23\",\"value\":63338.87},{\"date\":\"2024-09-24\",\"value\":64272.93},{\"date\":\"2024-09-25\",\"value\":63130.89},{\"date\":\"2024-09-26\",\"value\":65177.21},{\"date\":\"2024-09-27\",\"value\":65789},{\"date\":\"2024-09-28\",\"value\":65858.99},{\"date\":\"2024-09-29\",\"value\":65600.01},{\"date\":\"2024-09-30\",\"value\":63301.25},{\"date\":\"2024-10-01\",\"value\":60790},{\"date\":\"2024-10-02\",\"value\":60631.37},{\"date\":\"2024-10-03\",\"value\":60744.99},{\"date\":\"2024-10-04\",\"value\":62090.71},{\"date\":\"2024-10-05\",\"value\":62051.29},{\"date\":\"2024-10-06\",\"value\":62810.86},{\"date\":\"2024-10-07\",\"value\":62200.28},{\"date\":\"2024-10-08\",\"value\":62122.02},{\"date\":\"2024-10-09\",\"value\":60578.28},{\"date\":\"2024-10-10\",\"value\":60279.53},{\"date\":\"2024-10-11\",\"value\":62518.75},{\"date\":\"2024-10-12\",\"value\":63187.47},{\"date\":\"2024-10-13\",\"value\":62845.3},{\"date\":\"2024-10-14\",\"value\":66065.65},{\"date\":\"2024-10-15\",\"value\":67056.6},{\"date\":\"2024-10-16\",\"value\":67608.44},{\"date\":\"2024-10-17\",\"value\":67402.33},{\"date\":\"2024-10-18\",\"value\":68426.11},{\"date\":\"2024-10-19\",\"value\":68363.73},{\"date\":\"2024-10-20\",\"value\":69014.86},{\"date\":\"2024-10-21\",\"value\":67346.15},{\"date\":\"2024-10-22\",\"value\":67380.08},{\"date\":\"2024-10-23\",\"value\":66601.11},{\"date\":\"2024-10-24\",\"value\":68156.84},{\"date\":\"2024-10-25\",\"value\":66564.51},{\"date\":\"2024-10-26\",\"value\":67012.56},{\"date\":\"2024-10-27\",\"value\":67943.19},{\"date\":\"2024-10-28\",\"value\":69924.5},{\"date\":\"2024-10-29\",\"value\":72724.35},{\"date\":\"2024-10-30\",\"value\":72322.91},{\"date\":\"2024-10-31\",\"value\":70197.83},{\"date\":\"2024-11-01\",\"value\":69467.29},{\"date\":\"2024-11-02\",\"value\":69358.94},{\"date\":\"2024-11-03\",\"value\":68738.18},{\"date\":\"2024-11-04\",\"value\":67807.48},{\"date\":\"2024-11-05\",\"value\":67569}]');\n\n});\n\nparcelRegister(\"23umq\", function(module, exports) {\nmodule.exports = JSON.parse('[{\"date\":\"2010-07-18\",\"value\":0.1},{\"date\":\"2010-07-19\",\"value\":0.1},{\"date\":\"2010-07-20\",\"value\":0.1},{\"date\":\"2010-07-21\",\"value\":0.1},{\"date\":\"2010-07-22\",\"value\":0.1},{\"date\":\"2010-07-23\",\"value\":0.1},{\"date\":\"2010-07-24\",\"value\":0.1},{\"date\":\"2010-07-25\",\"value\":0.1},{\"date\":\"2010-07-26\",\"value\":0.1},{\"date\":\"2010-07-27\",\"value\":0.1},{\"date\":\"2010-07-28\",\"value\":0.1},{\"date\":\"2010-07-29\",\"value\":0.1},{\"date\":\"2010-07-30\",\"value\":0.1},{\"date\":\"2010-07-31\",\"value\":0.1},{\"date\":\"2010-08-01\",\"value\":0.1},{\"date\":\"2010-08-02\",\"value\":0.1},{\"date\":\"2010-08-03\",\"value\":0.1},{\"date\":\"2010-08-04\",\"value\":0.1},{\"date\":\"2010-08-05\",\"value\":0.1},{\"date\":\"2010-08-06\",\"value\":0.1},{\"date\":\"2010-08-07\",\"value\":0.1},{\"date\":\"2010-08-08\",\"value\":0.1},{\"date\":\"2010-08-09\",\"value\":0.1},{\"date\":\"2010-08-10\",\"value\":0.1},{\"date\":\"2010-08-11\",\"value\":0.1},{\"date\":\"2010-08-12\",\"value\":0.1},{\"date\":\"2010-08-13\",\"value\":0.1},{\"date\":\"2010-08-14\",\"value\":0.1},{\"date\":\"2010-08-15\",\"value\":0.1},{\"date\":\"2010-08-16\",\"value\":0.1},{\"date\":\"2010-08-17\",\"value\":0.1},{\"date\":\"2010-08-18\",\"value\":0.1},{\"date\":\"2010-08-19\",\"value\":0.1},{\"date\":\"2010-08-20\",\"value\":0.1},{\"date\":\"2010-08-21\",\"value\":0.1},{\"date\":\"2010-08-22\",\"value\":0.1},{\"date\":\"2010-08-23\",\"value\":0.1},{\"date\":\"2010-08-24\",\"value\":0.1},{\"date\":\"2010-08-25\",\"value\":0.1},{\"date\":\"2010-08-26\",\"value\":0.1},{\"date\":\"2010-08-27\",\"value\":0.1},{\"date\":\"2010-08-28\",\"value\":0.1},{\"date\":\"2010-08-29\",\"value\":0.1},{\"date\":\"2010-08-30\",\"value\":0.1},{\"date\":\"2010-08-31\",\"value\":0.1},{\"date\":\"2010-09-01\",\"value\":0.1},{\"date\":\"2010-09-02\",\"value\":0.1},{\"date\":\"2010-09-03\",\"value\":0.1},{\"date\":\"2010-09-04\",\"value\":0.1},{\"date\":\"2010-09-05\",\"value\":0.1},{\"date\":\"2010-09-06\",\"value\":0.1},{\"date\":\"2010-09-07\",\"value\":0.1},{\"date\":\"2010-09-08\",\"value\":0.1},{\"date\":\"2010-09-09\",\"value\":0.1},{\"date\":\"2010-09-10\",\"value\":0.1},{\"date\":\"2010-09-11\",\"value\":0.1},{\"date\":\"2010-09-12\",\"value\":0.1},{\"date\":\"2010-09-13\",\"value\":0.1},{\"date\":\"2010-09-14\",\"value\":0.1},{\"date\":\"2010-09-15\",\"value\":0.1},{\"date\":\"2010-09-16\",\"value\":0.1},{\"date\":\"2010-09-17\",\"value\":0.1},{\"date\":\"2010-09-18\",\"value\":0.1},{\"date\":\"2010-09-19\",\"value\":0.1},{\"date\":\"2010-09-20\",\"value\":0.1},{\"date\":\"2010-09-21\",\"value\":0.1},{\"date\":\"2010-09-22\",\"value\":0.1},{\"date\":\"2010-09-23\",\"value\":0.1},{\"date\":\"2010-09-24\",\"value\":0.1},{\"date\":\"2010-09-25\",\"value\":0.1},{\"date\":\"2010-09-26\",\"value\":0.1},{\"date\":\"2010-09-27\",\"value\":0.1},{\"date\":\"2010-09-28\",\"value\":0.1},{\"date\":\"2010-09-29\",\"value\":0.1},{\"date\":\"2010-09-30\",\"value\":0.1},{\"date\":\"2010-10-01\",\"value\":0.1},{\"date\":\"2010-10-02\",\"value\":0.1},{\"date\":\"2010-10-03\",\"value\":0.1},{\"date\":\"2010-10-04\",\"value\":0.1},{\"date\":\"2010-10-05\",\"value\":0.1},{\"date\":\"2010-10-06\",\"value\":0.1},{\"date\":\"2010-10-07\",\"value\":0.1},{\"date\":\"2010-10-08\",\"value\":0.1},{\"date\":\"2010-10-09\",\"value\":0.1},{\"date\":\"2010-10-10\",\"value\":0.1},{\"date\":\"2010-10-11\",\"value\":0.1},{\"date\":\"2010-10-12\",\"value\":0.1},{\"date\":\"2010-10-13\",\"value\":0.1},{\"date\":\"2010-10-14\",\"value\":0.1},{\"date\":\"2010-10-15\",\"value\":0.1},{\"date\":\"2010-10-16\",\"value\":0.1},{\"date\":\"2010-10-17\",\"value\":0.1},{\"date\":\"2010-10-18\",\"value\":0.1},{\"date\":\"2010-10-19\",\"value\":0.1},{\"date\":\"2010-10-20\",\"value\":0.1},{\"date\":\"2010-10-21\",\"value\":0.1},{\"date\":\"2010-10-22\",\"value\":0.1},{\"date\":\"2010-10-23\",\"value\":0.1},{\"date\":\"2010-10-24\",\"value\":0.1},{\"date\":\"2010-10-25\",\"value\":0.1},{\"date\":\"2010-10-26\",\"value\":0.2},{\"date\":\"2010-10-27\",\"value\":0.2},{\"date\":\"2010-10-28\",\"value\":0.2},{\"date\":\"2010-10-29\",\"value\":0.2},{\"date\":\"2010-10-30\",\"value\":0.2},{\"date\":\"2010-10-31\",\"value\":0.2},{\"date\":\"2010-11-01\",\"value\":0.2},{\"date\":\"2010-11-02\",\"value\":0.2},{\"date\":\"2010-11-03\",\"value\":0.2},{\"date\":\"2010-11-04\",\"value\":0.2},{\"date\":\"2010-11-05\",\"value\":0.3},{\"date\":\"2010-11-06\",\"value\":0.4},{\"date\":\"2010-11-07\",\"value\":0.3},{\"date\":\"2010-11-08\",\"value\":0.2},{\"date\":\"2010-11-09\",\"value\":0.2},{\"date\":\"2010-11-10\",\"value\":0.2},{\"date\":\"2010-11-11\",\"value\":0.2},{\"date\":\"2010-11-12\",\"value\":0.3},{\"date\":\"2010-11-13\",\"value\":0.3},{\"date\":\"2010-11-14\",\"value\":0.3},{\"date\":\"2010-11-15\",\"value\":0.3},{\"date\":\"2010-11-16\",\"value\":0.2},{\"date\":\"2010-11-17\",\"value\":0.2},{\"date\":\"2010-11-18\",\"value\":0.3},{\"date\":\"2010-11-19\",\"value\":0.3},{\"date\":\"2010-11-20\",\"value\":0.3},{\"date\":\"2010-11-21\",\"value\":0.3},{\"date\":\"2010-11-22\",\"value\":0.3},{\"date\":\"2010-11-23\",\"value\":0.3},{\"date\":\"2010-11-24\",\"value\":0.3},{\"date\":\"2010-11-25\",\"value\":0.3},{\"date\":\"2010-11-26\",\"value\":0.3},{\"date\":\"2010-11-27\",\"value\":0.3},{\"date\":\"2010-11-28\",\"value\":0.3},{\"date\":\"2010-11-29\",\"value\":0.2},{\"date\":\"2010-11-30\",\"value\":0.2},{\"date\":\"2010-12-01\",\"value\":0.2},{\"date\":\"2010-12-02\",\"value\":0.3},{\"date\":\"2010-12-03\",\"value\":0.3},{\"date\":\"2010-12-04\",\"value\":0.2},{\"date\":\"2010-12-05\",\"value\":0.2},{\"date\":\"2010-12-06\",\"value\":0.2},{\"date\":\"2010-12-07\",\"value\":0.2},{\"date\":\"2010-12-08\",\"value\":0.2},{\"date\":\"2010-12-09\",\"value\":0.2},{\"date\":\"2010-12-10\",\"value\":0.2},{\"date\":\"2010-12-11\",\"value\":0.2},{\"date\":\"2010-12-12\",\"value\":0.2},{\"date\":\"2010-12-13\",\"value\":0.2},{\"date\":\"2010-12-14\",\"value\":0.2},{\"date\":\"2010-12-15\",\"value\":0.2},{\"date\":\"2010-12-16\",\"value\":0.3},{\"date\":\"2010-12-17\",\"value\":0.2},{\"date\":\"2010-12-18\",\"value\":0.2},{\"date\":\"2010-12-19\",\"value\":0.2},{\"date\":\"2010-12-20\",\"value\":0.3},{\"date\":\"2010-12-21\",\"value\":0.2},{\"date\":\"2010-12-22\",\"value\":0.3},{\"date\":\"2010-12-23\",\"value\":0.3},{\"date\":\"2010-12-24\",\"value\":0.2},{\"date\":\"2010-12-25\",\"value\":0.2},{\"date\":\"2010-12-26\",\"value\":0.3},{\"date\":\"2010-12-27\",\"value\":0.3},{\"date\":\"2010-12-28\",\"value\":0.3},{\"date\":\"2010-12-29\",\"value\":0.3},{\"date\":\"2010-12-30\",\"value\":0.3},{\"date\":\"2010-12-31\",\"value\":0.3},{\"date\":\"2011-01-01\",\"value\":0.3},{\"date\":\"2011-01-02\",\"value\":0.3},{\"date\":\"2011-01-03\",\"value\":0.3},{\"date\":\"2011-01-04\",\"value\":0.3},{\"date\":\"2011-01-05\",\"value\":0.3},{\"date\":\"2011-01-06\",\"value\":0.3},{\"date\":\"2011-01-07\",\"value\":0.3},{\"date\":\"2011-01-08\",\"value\":0.3},{\"date\":\"2011-01-09\",\"value\":0.3},{\"date\":\"2011-01-10\",\"value\":0.3},{\"date\":\"2011-01-11\",\"value\":0.3},{\"date\":\"2011-01-12\",\"value\":0.3},{\"date\":\"2011-01-13\",\"value\":0.3},{\"date\":\"2011-01-14\",\"value\":0.4},{\"date\":\"2011-01-15\",\"value\":0.4},{\"date\":\"2011-01-16\",\"value\":0.4},{\"date\":\"2011-01-17\",\"value\":0.3},{\"date\":\"2011-01-18\",\"value\":0.3},{\"date\":\"2011-01-19\",\"value\":0.3},{\"date\":\"2011-01-20\",\"value\":0.4},{\"date\":\"2011-01-21\",\"value\":0.4},{\"date\":\"2011-01-22\",\"value\":0.4},{\"date\":\"2011-01-23\",\"value\":0.4},{\"date\":\"2011-01-24\",\"value\":0.4},{\"date\":\"2011-01-25\",\"value\":0.4},{\"date\":\"2011-01-26\",\"value\":0.4},{\"date\":\"2011-01-27\",\"value\":0.4},{\"date\":\"2011-01-28\",\"value\":0.4},{\"date\":\"2011-01-29\",\"value\":0.4},{\"date\":\"2011-01-30\",\"value\":0.5},{\"date\":\"2011-01-31\",\"value\":0.5},{\"date\":\"2011-02-01\",\"value\":0.7},{\"date\":\"2011-02-02\",\"value\":0.7},{\"date\":\"2011-02-03\",\"value\":0.7},{\"date\":\"2011-02-04\",\"value\":0.8},{\"date\":\"2011-02-05\",\"value\":0.9},{\"date\":\"2011-02-06\",\"value\":0.9},{\"date\":\"2011-02-07\",\"value\":0.9},{\"date\":\"2011-02-08\",\"value\":0.9},{\"date\":\"2011-02-09\",\"value\":1.1},{\"date\":\"2011-02-10\",\"value\":1},{\"date\":\"2011-02-11\",\"value\":1.1},{\"date\":\"2011-02-12\",\"value\":1.1},{\"date\":\"2011-02-13\",\"value\":1},{\"date\":\"2011-02-14\",\"value\":1.1},{\"date\":\"2011-02-15\",\"value\":1},{\"date\":\"2011-02-16\",\"value\":1},{\"date\":\"2011-02-17\",\"value\":1},{\"date\":\"2011-02-18\",\"value\":0.9},{\"date\":\"2011-02-19\",\"value\":0.9},{\"date\":\"2011-02-20\",\"value\":0.9},{\"date\":\"2011-02-21\",\"value\":0.8},{\"date\":\"2011-02-22\",\"value\":0.9},{\"date\":\"2011-02-23\",\"value\":0.9},{\"date\":\"2011-02-24\",\"value\":1},{\"date\":\"2011-02-25\",\"value\":0.9},{\"date\":\"2011-02-26\",\"value\":1},{\"date\":\"2011-02-27\",\"value\":0.9},{\"date\":\"2011-02-28\",\"value\":0.9},{\"date\":\"2011-03-01\",\"value\":0.9},{\"date\":\"2011-03-02\",\"value\":0.9},{\"date\":\"2011-03-03\",\"value\":0.9},{\"date\":\"2011-03-04\",\"value\":0.9},{\"date\":\"2011-03-05\",\"value\":0.9},{\"date\":\"2011-03-06\",\"value\":0.9},{\"date\":\"2011-03-07\",\"value\":0.9},{\"date\":\"2011-03-08\",\"value\":0.9},{\"date\":\"2011-03-09\",\"value\":0.9},{\"date\":\"2011-03-10\",\"value\":0.9},{\"date\":\"2011-03-11\",\"value\":0.9},{\"date\":\"2011-03-12\",\"value\":0.9},{\"date\":\"2011-03-13\",\"value\":0.9},{\"date\":\"2011-03-14\",\"value\":0.9},{\"date\":\"2011-03-15\",\"value\":0.9},{\"date\":\"2011-03-16\",\"value\":0.9},{\"date\":\"2011-03-17\",\"value\":0.8},{\"date\":\"2011-03-18\",\"value\":0.8},{\"date\":\"2011-03-19\",\"value\":0.8},{\"date\":\"2011-03-20\",\"value\":0.7},{\"date\":\"2011-03-21\",\"value\":0.8},{\"date\":\"2011-03-22\",\"value\":0.8},{\"date\":\"2011-03-23\",\"value\":0.8},{\"date\":\"2011-03-24\",\"value\":0.9},{\"date\":\"2011-03-25\",\"value\":0.9},{\"date\":\"2011-03-26\",\"value\":0.9},{\"date\":\"2011-03-27\",\"value\":0.8},{\"date\":\"2011-03-28\",\"value\":0.8},{\"date\":\"2011-03-29\",\"value\":0.8},{\"date\":\"2011-03-30\",\"value\":0.8},{\"date\":\"2011-03-31\",\"value\":0.8},{\"date\":\"2011-04-01\",\"value\":0.8},{\"date\":\"2011-04-02\",\"value\":0.8},{\"date\":\"2011-04-03\",\"value\":0.8},{\"date\":\"2011-04-04\",\"value\":0.7},{\"date\":\"2011-04-05\",\"value\":0.7},{\"date\":\"2011-04-06\",\"value\":0.7},{\"date\":\"2011-04-07\",\"value\":0.8},{\"date\":\"2011-04-08\",\"value\":0.8},{\"date\":\"2011-04-09\",\"value\":0.7},{\"date\":\"2011-04-10\",\"value\":0.7},{\"date\":\"2011-04-11\",\"value\":0.8},{\"date\":\"2011-04-12\",\"value\":0.9},{\"date\":\"2011-04-13\",\"value\":0.9},{\"date\":\"2011-04-14\",\"value\":1},{\"date\":\"2011-04-15\",\"value\":1},{\"date\":\"2011-04-16\",\"value\":1},{\"date\":\"2011-04-17\",\"value\":1.1},{\"date\":\"2011-04-18\",\"value\":1.2},{\"date\":\"2011-04-19\",\"value\":1.2},{\"date\":\"2011-04-20\",\"value\":1.1},{\"date\":\"2011-04-21\",\"value\":1.2},{\"date\":\"2011-04-22\",\"value\":1.4},{\"date\":\"2011-04-23\",\"value\":1.7},{\"date\":\"2011-04-24\",\"value\":1.6},{\"date\":\"2011-04-25\",\"value\":1.6},{\"date\":\"2011-04-26\",\"value\":1.8},{\"date\":\"2011-04-27\",\"value\":1.9},{\"date\":\"2011-04-28\",\"value\":2.2},{\"date\":\"2011-04-29\",\"value\":2.9},{\"date\":\"2011-04-30\",\"value\":3.5},{\"date\":\"2011-05-01\",\"value\":3},{\"date\":\"2011-05-02\",\"value\":3.2},{\"date\":\"2011-05-03\",\"value\":3.4},{\"date\":\"2011-05-04\",\"value\":3.4},{\"date\":\"2011-05-05\",\"value\":3.3},{\"date\":\"2011-05-06\",\"value\":3.5},{\"date\":\"2011-05-07\",\"value\":3.6},{\"date\":\"2011-05-08\",\"value\":3.9},{\"date\":\"2011-05-09\",\"value\":3.8},{\"date\":\"2011-05-10\",\"value\":5.8},{\"date\":\"2011-05-11\",\"value\":5.5},{\"date\":\"2011-05-12\",\"value\":6.3},{\"date\":\"2011-05-13\",\"value\":8.2},{\"date\":\"2011-05-14\",\"value\":7.2},{\"date\":\"2011-05-15\",\"value\":7},{\"date\":\"2011-05-16\",\"value\":8},{\"date\":\"2011-05-17\",\"value\":7.2},{\"date\":\"2011-05-18\",\"value\":6.9},{\"date\":\"2011-05-19\",\"value\":6.8},{\"date\":\"2011-05-20\",\"value\":5.6},{\"date\":\"2011-05-21\",\"value\":6.1},{\"date\":\"2011-05-22\",\"value\":6.7},{\"date\":\"2011-05-23\",\"value\":7.2},{\"date\":\"2011-05-24\",\"value\":7.4},{\"date\":\"2011-05-25\",\"value\":8.4},{\"date\":\"2011-05-26\",\"value\":8.8},{\"date\":\"2011-05-27\",\"value\":8.5},{\"date\":\"2011-05-28\",\"value\":8.3},{\"date\":\"2011-05-29\",\"value\":8.4},{\"date\":\"2011-05-30\",\"value\":8.8},{\"date\":\"2011-05-31\",\"value\":8.7},{\"date\":\"2011-06-01\",\"value\":9.6},{\"date\":\"2011-06-02\",\"value\":10.6},{\"date\":\"2011-06-03\",\"value\":14.3},{\"date\":\"2011-06-04\",\"value\":18.9},{\"date\":\"2011-06-05\",\"value\":16.7},{\"date\":\"2011-06-06\",\"value\":18.5},{\"date\":\"2011-06-07\",\"value\":23.9},{\"date\":\"2011-06-08\",\"value\":29.6},{\"date\":\"2011-06-09\",\"value\":28.9},{\"date\":\"2011-06-10\",\"value\":24},{\"date\":\"2011-06-11\",\"value\":14.6},{\"date\":\"2011-06-12\",\"value\":18.5},{\"date\":\"2011-06-13\",\"value\":19.8},{\"date\":\"2011-06-14\",\"value\":19.3},{\"date\":\"2011-06-15\",\"value\":19.5},{\"date\":\"2011-06-16\",\"value\":17},{\"date\":\"2011-06-17\",\"value\":15.7},{\"date\":\"2011-06-18\",\"value\":16.9},{\"date\":\"2011-06-19\",\"value\":17.5},{\"date\":\"2011-06-20\",\"value\":17.5},{\"date\":\"2011-06-21\",\"value\":17.5},{\"date\":\"2011-06-22\",\"value\":17.5},{\"date\":\"2011-06-23\",\"value\":17.5},{\"date\":\"2011-06-24\",\"value\":17.5},{\"date\":\"2011-06-25\",\"value\":17.5},{\"date\":\"2011-06-26\",\"value\":16.5},{\"date\":\"2011-06-27\",\"value\":16.8},{\"date\":\"2011-06-28\",\"value\":17},{\"date\":\"2011-06-29\",\"value\":16.9},{\"date\":\"2011-06-30\",\"value\":16.1},{\"date\":\"2011-07-01\",\"value\":15.4},{\"date\":\"2011-07-02\",\"value\":15.4},{\"date\":\"2011-07-03\",\"value\":15.4},{\"date\":\"2011-07-04\",\"value\":13.9},{\"date\":\"2011-07-05\",\"value\":12.9},{\"date\":\"2011-07-06\",\"value\":14.8},{\"date\":\"2011-07-07\",\"value\":14.8},{\"date\":\"2011-07-08\",\"value\":14.3},{\"date\":\"2011-07-09\",\"value\":14.4},{\"date\":\"2011-07-10\",\"value\":14.9},{\"date\":\"2011-07-11\",\"value\":14.2},{\"date\":\"2011-07-12\",\"value\":14},{\"date\":\"2011-07-13\",\"value\":13.9},{\"date\":\"2011-07-14\",\"value\":14},{\"date\":\"2011-07-15\",\"value\":13.8},{\"date\":\"2011-07-16\",\"value\":13.7},{\"date\":\"2011-07-17\",\"value\":13.2},{\"date\":\"2011-07-18\",\"value\":13.5},{\"date\":\"2011-07-19\",\"value\":13.9},{\"date\":\"2011-07-20\",\"value\":13.7},{\"date\":\"2011-07-21\",\"value\":13.6},{\"date\":\"2011-07-22\",\"value\":13.7},{\"date\":\"2011-07-23\",\"value\":13.7},{\"date\":\"2011-07-24\",\"value\":14},{\"date\":\"2011-07-25\",\"value\":14.1},{\"date\":\"2011-07-26\",\"value\":13.9},{\"date\":\"2011-07-27\",\"value\":13.9},{\"date\":\"2011-07-28\",\"value\":13.5},{\"date\":\"2011-07-29\",\"value\":13.5},{\"date\":\"2011-07-30\",\"value\":13.5},{\"date\":\"2011-07-31\",\"value\":13.4},{\"date\":\"2011-08-01\",\"value\":13.1},{\"date\":\"2011-08-02\",\"value\":12.1},{\"date\":\"2011-08-03\",\"value\":9.3},{\"date\":\"2011-08-04\",\"value\":10.8},{\"date\":\"2011-08-05\",\"value\":9.8},{\"date\":\"2011-08-06\",\"value\":6.6},{\"date\":\"2011-08-07\",\"value\":7.9},{\"date\":\"2011-08-08\",\"value\":7.8},{\"date\":\"2011-08-09\",\"value\":10},{\"date\":\"2011-08-10\",\"value\":10},{\"date\":\"2011-08-11\",\"value\":9.5},{\"date\":\"2011-08-12\",\"value\":9.5},{\"date\":\"2011-08-13\",\"value\":10.1},{\"date\":\"2011-08-14\",\"value\":10.8},{\"date\":\"2011-08-15\",\"value\":11.1},{\"date\":\"2011-08-16\",\"value\":11},{\"date\":\"2011-08-17\",\"value\":10.9},{\"date\":\"2011-08-18\",\"value\":10.8},{\"date\":\"2011-08-19\",\"value\":11.6},{\"date\":\"2011-08-20\",\"value\":11.4},{\"date\":\"2011-08-21\",\"value\":11.3},{\"date\":\"2011-08-22\",\"value\":10.9},{\"date\":\"2011-08-23\",\"value\":10.9},{\"date\":\"2011-08-24\",\"value\":10.9},{\"date\":\"2011-08-25\",\"value\":9.7},{\"date\":\"2011-08-26\",\"value\":8.2},{\"date\":\"2011-08-27\",\"value\":8.6},{\"date\":\"2011-08-28\",\"value\":9.1},{\"date\":\"2011-08-29\",\"value\":9},{\"date\":\"2011-08-30\",\"value\":8.8},{\"date\":\"2011-08-31\",\"value\":8.2},{\"date\":\"2011-09-01\",\"value\":8.2},{\"date\":\"2011-09-02\",\"value\":8.6},{\"date\":\"2011-09-03\",\"value\":8.5},{\"date\":\"2011-09-04\",\"value\":8.2},{\"date\":\"2011-09-05\",\"value\":7.6},{\"date\":\"2011-09-06\",\"value\":6.9},{\"date\":\"2011-09-07\",\"value\":7.2},{\"date\":\"2011-09-08\",\"value\":6.5},{\"date\":\"2011-09-09\",\"value\":5},{\"date\":\"2011-09-10\",\"value\":4.8},{\"date\":\"2011-09-11\",\"value\":5.9},{\"date\":\"2011-09-12\",\"value\":6.1},{\"date\":\"2011-09-13\",\"value\":5.8},{\"date\":\"2011-09-14\",\"value\":5.6},{\"date\":\"2011-09-15\",\"value\":4.8},{\"date\":\"2011-09-16\",\"value\":4.8},{\"date\":\"2011-09-17\",\"value\":4.8},{\"date\":\"2011-09-18\",\"value\":5.2},{\"date\":\"2011-09-19\",\"value\":5.5},{\"date\":\"2011-09-20\",\"value\":6.1},{\"date\":\"2011-09-21\",\"value\":5.6},{\"date\":\"2011-09-22\",\"value\":5.4},{\"date\":\"2011-09-23\",\"value\":5.6},{\"date\":\"2011-09-24\",\"value\":5.5},{\"date\":\"2011-09-25\",\"value\":5.3},{\"date\":\"2011-09-26\",\"value\":4.9},{\"date\":\"2011-09-27\",\"value\":4.9},{\"date\":\"2011-09-28\",\"value\":4.8},{\"date\":\"2011-09-29\",\"value\":4.8},{\"date\":\"2011-09-30\",\"value\":5.1},{\"date\":\"2011-10-01\",\"value\":5},{\"date\":\"2011-10-02\",\"value\":5},{\"date\":\"2011-10-03\",\"value\":5},{\"date\":\"2011-10-04\",\"value\":5},{\"date\":\"2011-10-05\",\"value\":4.9},{\"date\":\"2011-10-06\",\"value\":4.7},{\"date\":\"2011-10-07\",\"value\":4.3},{\"date\":\"2011-10-08\",\"value\":4},{\"date\":\"2011-10-09\",\"value\":4.1},{\"date\":\"2011-10-10\",\"value\":4.1},{\"date\":\"2011-10-11\",\"value\":3.9},{\"date\":\"2011-10-12\",\"value\":4.2},{\"date\":\"2011-10-13\",\"value\":4.1},{\"date\":\"2011-10-14\",\"value\":4},{\"date\":\"2011-10-15\",\"value\":3.8},{\"date\":\"2011-10-16\",\"value\":3.6},{\"date\":\"2011-10-17\",\"value\":2.6},{\"date\":\"2011-10-18\",\"value\":2.4},{\"date\":\"2011-10-19\",\"value\":2.3},{\"date\":\"2011-10-20\",\"value\":2.3},{\"date\":\"2011-10-21\",\"value\":2.6},{\"date\":\"2011-10-22\",\"value\":3.2},{\"date\":\"2011-10-23\",\"value\":3.2},{\"date\":\"2011-10-24\",\"value\":2.5},{\"date\":\"2011-10-25\",\"value\":2.8},{\"date\":\"2011-10-26\",\"value\":2.8},{\"date\":\"2011-10-27\",\"value\":3},{\"date\":\"2011-10-28\",\"value\":3.2},{\"date\":\"2011-10-29\",\"value\":3.6},{\"date\":\"2011-10-30\",\"value\":3.3},{\"date\":\"2011-10-31\",\"value\":3.3},{\"date\":\"2011-11-01\",\"value\":3.2},{\"date\":\"2011-11-02\",\"value\":3.3},{\"date\":\"2011-11-03\",\"value\":3.2},{\"date\":\"2011-11-04\",\"value\":3.1},{\"date\":\"2011-11-05\",\"value\":3},{\"date\":\"2011-11-06\",\"value\":3},{\"date\":\"2011-11-07\",\"value\":3},{\"date\":\"2011-11-08\",\"value\":3},{\"date\":\"2011-11-09\",\"value\":3},{\"date\":\"2011-11-10\",\"value\":2.8},{\"date\":\"2011-11-11\",\"value\":3.1},{\"date\":\"2011-11-12\",\"value\":3},{\"date\":\"2011-11-13\",\"value\":3},{\"date\":\"2011-11-14\",\"value\":2.2},{\"date\":\"2011-11-15\",\"value\":2.3},{\"date\":\"2011-11-16\",\"value\":2.6},{\"date\":\"2011-11-17\",\"value\":2.3},{\"date\":\"2011-11-18\",\"value\":2},{\"date\":\"2011-11-19\",\"value\":2.2},{\"date\":\"2011-11-20\",\"value\":2.2},{\"date\":\"2011-11-21\",\"value\":2.3},{\"date\":\"2011-11-22\",\"value\":2.3},{\"date\":\"2011-11-23\",\"value\":2.3},{\"date\":\"2011-11-24\",\"value\":2.4},{\"date\":\"2011-11-25\",\"value\":2.5},{\"date\":\"2011-11-26\",\"value\":2.5},{\"date\":\"2011-11-27\",\"value\":2.5},{\"date\":\"2011-11-28\",\"value\":2.5},{\"date\":\"2011-11-29\",\"value\":2.8},{\"date\":\"2011-11-30\",\"value\":3},{\"date\":\"2011-12-01\",\"value\":3.1},{\"date\":\"2011-12-02\",\"value\":3.1},{\"date\":\"2011-12-03\",\"value\":2.8},{\"date\":\"2011-12-04\",\"value\":2.8},{\"date\":\"2011-12-05\",\"value\":2.9},{\"date\":\"2011-12-06\",\"value\":3},{\"date\":\"2011-12-07\",\"value\":3},{\"date\":\"2011-12-08\",\"value\":3},{\"date\":\"2011-12-09\",\"value\":3},{\"date\":\"2011-12-10\",\"value\":3},{\"date\":\"2011-12-11\",\"value\":3.3},{\"date\":\"2011-12-12\",\"value\":3.1},{\"date\":\"2011-12-13\",\"value\":3.3},{\"date\":\"2011-12-14\",\"value\":3.2},{\"date\":\"2011-12-15\",\"value\":3.2},{\"date\":\"2011-12-16\",\"value\":3.2},{\"date\":\"2011-12-17\",\"value\":3.2},{\"date\":\"2011-12-18\",\"value\":3.2},{\"date\":\"2011-12-19\",\"value\":3.5},{\"date\":\"2011-12-20\",\"value\":4},{\"date\":\"2011-12-21\",\"value\":3.9},{\"date\":\"2011-12-22\",\"value\":3.9},{\"date\":\"2011-12-23\",\"value\":4},{\"date\":\"2011-12-24\",\"value\":3.9},{\"date\":\"2011-12-25\",\"value\":4.2},{\"date\":\"2011-12-26\",\"value\":4},{\"date\":\"2011-12-27\",\"value\":4.1},{\"date\":\"2011-12-28\",\"value\":4.2},{\"date\":\"2011-12-29\",\"value\":4.2},{\"date\":\"2011-12-30\",\"value\":4.3},{\"date\":\"2011-12-31\",\"value\":4.7},{\"date\":\"2012-01-01\",\"value\":5.3},{\"date\":\"2012-01-02\",\"value\":5.2},{\"date\":\"2012-01-03\",\"value\":4.9},{\"date\":\"2012-01-04\",\"value\":5.6},{\"date\":\"2012-01-05\",\"value\":6.9},{\"date\":\"2012-01-06\",\"value\":6.7},{\"date\":\"2012-01-07\",\"value\":6.8},{\"date\":\"2012-01-08\",\"value\":7.1},{\"date\":\"2012-01-09\",\"value\":6.3},{\"date\":\"2012-01-10\",\"value\":6.4},{\"date\":\"2012-01-11\",\"value\":6.9},{\"date\":\"2012-01-12\",\"value\":6.8},{\"date\":\"2012-01-13\",\"value\":6.4},{\"date\":\"2012-01-14\",\"value\":6.8},{\"date\":\"2012-01-15\",\"value\":7},{\"date\":\"2012-01-16\",\"value\":6.7},{\"date\":\"2012-01-17\",\"value\":5.6},{\"date\":\"2012-01-18\",\"value\":5.9},{\"date\":\"2012-01-19\",\"value\":6.4},{\"date\":\"2012-01-20\",\"value\":6.5},{\"date\":\"2012-01-21\",\"value\":6.2},{\"date\":\"2012-01-22\",\"value\":6.3},{\"date\":\"2012-01-23\",\"value\":6.4},{\"date\":\"2012-01-24\",\"value\":6.3},{\"date\":\"2012-01-25\",\"value\":5.8},{\"date\":\"2012-01-26\",\"value\":5.3},{\"date\":\"2012-01-27\",\"value\":5.3},{\"date\":\"2012-01-28\",\"value\":5.6},{\"date\":\"2012-01-29\",\"value\":5.4},{\"date\":\"2012-01-30\",\"value\":5.5},{\"date\":\"2012-01-31\",\"value\":5.5},{\"date\":\"2012-02-01\",\"value\":6.1},{\"date\":\"2012-02-02\",\"value\":6.1},{\"date\":\"2012-02-03\",\"value\":6},{\"date\":\"2012-02-04\",\"value\":5.9},{\"date\":\"2012-02-05\",\"value\":5.7},{\"date\":\"2012-02-06\",\"value\":5.4},{\"date\":\"2012-02-07\",\"value\":5.7},{\"date\":\"2012-02-08\",\"value\":5.6},{\"date\":\"2012-02-09\",\"value\":5.8},{\"date\":\"2012-02-10\",\"value\":5.9},{\"date\":\"2012-02-11\",\"value\":5.6},{\"date\":\"2012-02-12\",\"value\":5.5},{\"date\":\"2012-02-13\",\"value\":5.3},{\"date\":\"2012-02-14\",\"value\":4.5},{\"date\":\"2012-02-15\",\"value\":4.3},{\"date\":\"2012-02-16\",\"value\":4.3},{\"date\":\"2012-02-17\",\"value\":4.4},{\"date\":\"2012-02-18\",\"value\":4.2},{\"date\":\"2012-02-19\",\"value\":4.4},{\"date\":\"2012-02-20\",\"value\":4.4},{\"date\":\"2012-02-21\",\"value\":4.3},{\"date\":\"2012-02-22\",\"value\":4.4},{\"date\":\"2012-02-23\",\"value\":5},{\"date\":\"2012-02-24\",\"value\":5},{\"date\":\"2012-02-25\",\"value\":4.8},{\"date\":\"2012-02-26\",\"value\":4.9},{\"date\":\"2012-02-27\",\"value\":5},{\"date\":\"2012-02-28\",\"value\":4.9},{\"date\":\"2012-02-29\",\"value\":4.9},{\"date\":\"2012-03-01\",\"value\":4.9},{\"date\":\"2012-03-02\",\"value\":4.7},{\"date\":\"2012-03-03\",\"value\":4.6},{\"date\":\"2012-03-04\",\"value\":4.8},{\"date\":\"2012-03-05\",\"value\":5},{\"date\":\"2012-03-06\",\"value\":5},{\"date\":\"2012-03-07\",\"value\":4.9},{\"date\":\"2012-03-08\",\"value\":4.9},{\"date\":\"2012-03-09\",\"value\":4.9},{\"date\":\"2012-03-10\",\"value\":4.8},{\"date\":\"2012-03-11\",\"value\":4.9},{\"date\":\"2012-03-12\",\"value\":4.9},{\"date\":\"2012-03-13\",\"value\":5.3},{\"date\":\"2012-03-14\",\"value\":5.4},{\"date\":\"2012-03-15\",\"value\":5.3},{\"date\":\"2012-03-16\",\"value\":5.3},{\"date\":\"2012-03-17\",\"value\":5.2},{\"date\":\"2012-03-18\",\"value\":5.3},{\"date\":\"2012-03-19\",\"value\":4.7},{\"date\":\"2012-03-20\",\"value\":4.8},{\"date\":\"2012-03-21\",\"value\":4.8},{\"date\":\"2012-03-22\",\"value\":4.7},{\"date\":\"2012-03-23\",\"value\":4.7},{\"date\":\"2012-03-24\",\"value\":4.7},{\"date\":\"2012-03-25\",\"value\":4.6},{\"date\":\"2012-03-26\",\"value\":4.6},{\"date\":\"2012-03-27\",\"value\":4.8},{\"date\":\"2012-03-28\",\"value\":4.8},{\"date\":\"2012-03-29\",\"value\":4.8},{\"date\":\"2012-03-30\",\"value\":4.9},{\"date\":\"2012-03-31\",\"value\":4.9},{\"date\":\"2012-04-01\",\"value\":4.8},{\"date\":\"2012-04-02\",\"value\":5},{\"date\":\"2012-04-03\",\"value\":4.9},{\"date\":\"2012-04-04\",\"value\":4.9},{\"date\":\"2012-04-05\",\"value\":4.9},{\"date\":\"2012-04-06\",\"value\":4.9},{\"date\":\"2012-04-07\",\"value\":4.7},{\"date\":\"2012-04-08\",\"value\":4.8},{\"date\":\"2012-04-09\",\"value\":4.9},{\"date\":\"2012-04-10\",\"value\":4.8},{\"date\":\"2012-04-11\",\"value\":4.9},{\"date\":\"2012-04-12\",\"value\":4.9},{\"date\":\"2012-04-13\",\"value\":4.9},{\"date\":\"2012-04-14\",\"value\":5},{\"date\":\"2012-04-15\",\"value\":5},{\"date\":\"2012-04-16\",\"value\":4.9},{\"date\":\"2012-04-17\",\"value\":5},{\"date\":\"2012-04-18\",\"value\":5.1},{\"date\":\"2012-04-19\",\"value\":5.1},{\"date\":\"2012-04-20\",\"value\":5.3},{\"date\":\"2012-04-21\",\"value\":5.3},{\"date\":\"2012-04-22\",\"value\":5.2},{\"date\":\"2012-04-23\",\"value\":5},{\"date\":\"2012-04-24\",\"value\":5.1},{\"date\":\"2012-04-25\",\"value\":5.1},{\"date\":\"2012-04-26\",\"value\":5.1},{\"date\":\"2012-04-27\",\"value\":5.1},{\"date\":\"2012-04-28\",\"value\":5},{\"date\":\"2012-04-29\",\"value\":4.9},{\"date\":\"2012-04-30\",\"value\":4.9},{\"date\":\"2012-05-01\",\"value\":5},{\"date\":\"2012-05-02\",\"value\":5.1},{\"date\":\"2012-05-03\",\"value\":5.1},{\"date\":\"2012-05-04\",\"value\":5.1},{\"date\":\"2012-05-05\",\"value\":5.1},{\"date\":\"2012-05-06\",\"value\":5.1},{\"date\":\"2012-05-07\",\"value\":5.1},{\"date\":\"2012-05-08\",\"value\":5.1},{\"date\":\"2012-05-09\",\"value\":5},{\"date\":\"2012-05-10\",\"value\":4.8},{\"date\":\"2012-05-11\",\"value\":5},{\"date\":\"2012-05-12\",\"value\":4.9},{\"date\":\"2012-05-13\",\"value\":4.9},{\"date\":\"2012-05-14\",\"value\":5},{\"date\":\"2012-05-15\",\"value\":5},{\"date\":\"2012-05-16\",\"value\":5.1},{\"date\":\"2012-05-17\",\"value\":5.1},{\"date\":\"2012-05-18\",\"value\":5.1},{\"date\":\"2012-05-19\",\"value\":5.1},{\"date\":\"2012-05-20\",\"value\":5.1},{\"date\":\"2012-05-21\",\"value\":5.1},{\"date\":\"2012-05-22\",\"value\":5.1},{\"date\":\"2012-05-23\",\"value\":5.1},{\"date\":\"2012-05-24\",\"value\":5.1},{\"date\":\"2012-05-25\",\"value\":5.2},{\"date\":\"2012-05-26\",\"value\":5.1},{\"date\":\"2012-05-27\",\"value\":5.1},{\"date\":\"2012-05-28\",\"value\":5.1},{\"date\":\"2012-05-29\",\"value\":5.2},{\"date\":\"2012-05-30\",\"value\":5.1},{\"date\":\"2012-05-31\",\"value\":5.2},{\"date\":\"2012-06-01\",\"value\":5.3},{\"date\":\"2012-06-02\",\"value\":5.3},{\"date\":\"2012-06-03\",\"value\":5.2},{\"date\":\"2012-06-04\",\"value\":5.3},{\"date\":\"2012-06-05\",\"value\":5.4},{\"date\":\"2012-06-06\",\"value\":5.5},{\"date\":\"2012-06-07\",\"value\":5.6},{\"date\":\"2012-06-08\",\"value\":5.6},{\"date\":\"2012-06-09\",\"value\":5.6},{\"date\":\"2012-06-10\",\"value\":5.5},{\"date\":\"2012-06-11\",\"value\":5.6},{\"date\":\"2012-06-12\",\"value\":5.7},{\"date\":\"2012-06-13\",\"value\":5.9},{\"date\":\"2012-06-14\",\"value\":5.9},{\"date\":\"2012-06-15\",\"value\":6.5},{\"date\":\"2012-06-16\",\"value\":6.4},{\"date\":\"2012-06-17\",\"value\":6.2},{\"date\":\"2012-06-18\",\"value\":6.3},{\"date\":\"2012-06-19\",\"value\":6.5},{\"date\":\"2012-06-20\",\"value\":6.7},{\"date\":\"2012-06-21\",\"value\":6.7},{\"date\":\"2012-06-22\",\"value\":6.6},{\"date\":\"2012-06-23\",\"value\":6.4},{\"date\":\"2012-06-24\",\"value\":6.3},{\"date\":\"2012-06-25\",\"value\":6.3},{\"date\":\"2012-06-26\",\"value\":6.4},{\"date\":\"2012-06-27\",\"value\":6.7},{\"date\":\"2012-06-28\",\"value\":6.6},{\"date\":\"2012-06-29\",\"value\":6.7},{\"date\":\"2012-06-30\",\"value\":6.7},{\"date\":\"2012-07-01\",\"value\":6.6},{\"date\":\"2012-07-02\",\"value\":6.8},{\"date\":\"2012-07-03\",\"value\":6.4},{\"date\":\"2012-07-04\",\"value\":6.5},{\"date\":\"2012-07-05\",\"value\":6.7},{\"date\":\"2012-07-06\",\"value\":6.7},{\"date\":\"2012-07-07\",\"value\":6.8},{\"date\":\"2012-07-08\",\"value\":6.8},{\"date\":\"2012-07-09\",\"value\":7},{\"date\":\"2012-07-10\",\"value\":7.2},{\"date\":\"2012-07-11\",\"value\":7.2},{\"date\":\"2012-07-12\",\"value\":7.8},{\"date\":\"2012-07-13\",\"value\":7.7},{\"date\":\"2012-07-14\",\"value\":7.5},{\"date\":\"2012-07-15\",\"value\":7.6},{\"date\":\"2012-07-16\",\"value\":8.5},{\"date\":\"2012-07-17\",\"value\":8.8},{\"date\":\"2012-07-18\",\"value\":9.1},{\"date\":\"2012-07-19\",\"value\":8.9},{\"date\":\"2012-07-20\",\"value\":8.5},{\"date\":\"2012-07-21\",\"value\":8.9},{\"date\":\"2012-07-22\",\"value\":8.4},{\"date\":\"2012-07-23\",\"value\":8.4},{\"date\":\"2012-07-24\",\"value\":8.6},{\"date\":\"2012-07-25\",\"value\":8.8},{\"date\":\"2012-07-26\",\"value\":8.9},{\"date\":\"2012-07-27\",\"value\":8.9},{\"date\":\"2012-07-28\",\"value\":8.9},{\"date\":\"2012-07-29\",\"value\":8.7},{\"date\":\"2012-07-30\",\"value\":9.1},{\"date\":\"2012-07-31\",\"value\":9.4},{\"date\":\"2012-08-01\",\"value\":9.6},{\"date\":\"2012-08-02\",\"value\":10.5},{\"date\":\"2012-08-03\",\"value\":11},{\"date\":\"2012-08-04\",\"value\":11},{\"date\":\"2012-08-05\",\"value\":10.9},{\"date\":\"2012-08-06\",\"value\":10.9},{\"date\":\"2012-08-07\",\"value\":11.1},{\"date\":\"2012-08-08\",\"value\":11.1},{\"date\":\"2012-08-09\",\"value\":11.1},{\"date\":\"2012-08-10\",\"value\":11.4},{\"date\":\"2012-08-11\",\"value\":11.5},{\"date\":\"2012-08-12\",\"value\":11.6},{\"date\":\"2012-08-13\",\"value\":12},{\"date\":\"2012-08-14\",\"value\":12.2},{\"date\":\"2012-08-15\",\"value\":13.3},{\"date\":\"2012-08-16\",\"value\":13.5},{\"date\":\"2012-08-17\",\"value\":11.6},{\"date\":\"2012-08-18\",\"value\":11.6},{\"date\":\"2012-08-19\",\"value\":8},{\"date\":\"2012-08-20\",\"value\":10.1},{\"date\":\"2012-08-21\",\"value\":9.9},{\"date\":\"2012-08-22\",\"value\":9.8},{\"date\":\"2012-08-23\",\"value\":10.1},{\"date\":\"2012-08-24\",\"value\":10.6},{\"date\":\"2012-08-25\",\"value\":10.5},{\"date\":\"2012-08-26\",\"value\":10.6},{\"date\":\"2012-08-27\",\"value\":10.9},{\"date\":\"2012-08-28\",\"value\":10.9},{\"date\":\"2012-08-29\",\"value\":10.9},{\"date\":\"2012-08-30\",\"value\":10.8},{\"date\":\"2012-08-31\",\"value\":10.2},{\"date\":\"2012-09-01\",\"value\":10},{\"date\":\"2012-09-02\",\"value\":10.2},{\"date\":\"2012-09-03\",\"value\":10.5},{\"date\":\"2012-09-04\",\"value\":10.4},{\"date\":\"2012-09-05\",\"value\":11},{\"date\":\"2012-09-06\",\"value\":11.2},{\"date\":\"2012-09-07\",\"value\":11},{\"date\":\"2012-09-08\",\"value\":11},{\"date\":\"2012-09-09\",\"value\":11},{\"date\":\"2012-09-10\",\"value\":11.2},{\"date\":\"2012-09-11\",\"value\":11.3},{\"date\":\"2012-09-12\",\"value\":11.4},{\"date\":\"2012-09-13\",\"value\":11.4},{\"date\":\"2012-09-14\",\"value\":11.7},{\"date\":\"2012-09-15\",\"value\":11.8},{\"date\":\"2012-09-16\",\"value\":11.9},{\"date\":\"2012-09-17\",\"value\":11.9},{\"date\":\"2012-09-18\",\"value\":12.3},{\"date\":\"2012-09-19\",\"value\":12.6},{\"date\":\"2012-09-20\",\"value\":12.3},{\"date\":\"2012-09-21\",\"value\":12.4},{\"date\":\"2012-09-22\",\"value\":12.2},{\"date\":\"2012-09-23\",\"value\":12.2},{\"date\":\"2012-09-24\",\"value\":12.1},{\"date\":\"2012-09-25\",\"value\":12.2},{\"date\":\"2012-09-26\",\"value\":12.3},{\"date\":\"2012-09-27\",\"value\":12.3},{\"date\":\"2012-09-28\",\"value\":12.4},{\"date\":\"2012-09-29\",\"value\":12.4},{\"date\":\"2012-09-30\",\"value\":12.4},{\"date\":\"2012-10-01\",\"value\":12.4},{\"date\":\"2012-10-02\",\"value\":12.8},{\"date\":\"2012-10-03\",\"value\":12.9},{\"date\":\"2012-10-04\",\"value\":12.9},{\"date\":\"2012-10-05\",\"value\":12.7},{\"date\":\"2012-10-06\",\"value\":12.5},{\"date\":\"2012-10-07\",\"value\":11.8},{\"date\":\"2012-10-08\",\"value\":11.8},{\"date\":\"2012-10-09\",\"value\":11.9},{\"date\":\"2012-10-10\",\"value\":12.1},{\"date\":\"2012-10-11\",\"value\":12},{\"date\":\"2012-10-12\",\"value\":12},{\"date\":\"2012-10-13\",\"value\":11.9},{\"date\":\"2012-10-14\",\"value\":11.7},{\"date\":\"2012-10-15\",\"value\":11.8},{\"date\":\"2012-10-16\",\"value\":11.9},{\"date\":\"2012-10-17\",\"value\":11.8},{\"date\":\"2012-10-18\",\"value\":11.9},{\"date\":\"2012-10-19\",\"value\":11.7},{\"date\":\"2012-10-20\",\"value\":11.7},{\"date\":\"2012-10-21\",\"value\":11.6},{\"date\":\"2012-10-22\",\"value\":11.7},{\"date\":\"2012-10-23\",\"value\":11.6},{\"date\":\"2012-10-24\",\"value\":11.6},{\"date\":\"2012-10-25\",\"value\":10.9},{\"date\":\"2012-10-26\",\"value\":10.2},{\"date\":\"2012-10-27\",\"value\":10.3},{\"date\":\"2012-10-28\",\"value\":10.7},{\"date\":\"2012-10-29\",\"value\":10.6},{\"date\":\"2012-10-30\",\"value\":10.9},{\"date\":\"2012-10-31\",\"value\":11.2},{\"date\":\"2012-11-01\",\"value\":10.6},{\"date\":\"2012-11-02\",\"value\":10.5},{\"date\":\"2012-11-03\",\"value\":10.6},{\"date\":\"2012-11-04\",\"value\":10.8},{\"date\":\"2012-11-05\",\"value\":10.8},{\"date\":\"2012-11-06\",\"value\":10.9},{\"date\":\"2012-11-07\",\"value\":10.9},{\"date\":\"2012-11-08\",\"value\":10.9},{\"date\":\"2012-11-09\",\"value\":10.8},{\"date\":\"2012-11-10\",\"value\":10.9},{\"date\":\"2012-11-11\",\"value\":10.9},{\"date\":\"2012-11-12\",\"value\":11},{\"date\":\"2012-11-13\",\"value\":10.9},{\"date\":\"2012-11-14\",\"value\":10.9},{\"date\":\"2012-11-15\",\"value\":11.2},{\"date\":\"2012-11-16\",\"value\":11.8},{\"date\":\"2012-11-17\",\"value\":11.8},{\"date\":\"2012-11-18\",\"value\":11.6},{\"date\":\"2012-11-19\",\"value\":11.8},{\"date\":\"2012-11-20\",\"value\":11.7},{\"date\":\"2012-11-21\",\"value\":11.8},{\"date\":\"2012-11-22\",\"value\":12.4},{\"date\":\"2012-11-23\",\"value\":12.4},{\"date\":\"2012-11-24\",\"value\":12.4},{\"date\":\"2012-11-25\",\"value\":12.5},{\"date\":\"2012-11-26\",\"value\":12.3},{\"date\":\"2012-11-27\",\"value\":12.2},{\"date\":\"2012-11-28\",\"value\":12.4},{\"date\":\"2012-11-29\",\"value\":12.4},{\"date\":\"2012-11-30\",\"value\":12.6},{\"date\":\"2012-12-01\",\"value\":12.6},{\"date\":\"2012-12-02\",\"value\":12.5},{\"date\":\"2012-12-03\",\"value\":12.7},{\"date\":\"2012-12-04\",\"value\":13.4},{\"date\":\"2012-12-05\",\"value\":13.4},{\"date\":\"2012-12-06\",\"value\":13.3},{\"date\":\"2012-12-07\",\"value\":13.5},{\"date\":\"2012-12-08\",\"value\":13.4},{\"date\":\"2012-12-09\",\"value\":13.4},{\"date\":\"2012-12-10\",\"value\":13.4},{\"date\":\"2012-12-11\",\"value\":13.6},{\"date\":\"2012-12-12\",\"value\":13.7},{\"date\":\"2012-12-13\",\"value\":13.7},{\"date\":\"2012-12-14\",\"value\":13.6},{\"date\":\"2012-12-15\",\"value\":13.5},{\"date\":\"2012-12-16\",\"value\":13.3},{\"date\":\"2012-12-17\",\"value\":13.3},{\"date\":\"2012-12-18\",\"value\":13.3},{\"date\":\"2012-12-19\",\"value\":13.6},{\"date\":\"2012-12-20\",\"value\":13.5},{\"date\":\"2012-12-21\",\"value\":13.5},{\"date\":\"2012-12-22\",\"value\":13.4},{\"date\":\"2012-12-23\",\"value\":13.3},{\"date\":\"2012-12-24\",\"value\":13.4},{\"date\":\"2012-12-25\",\"value\":13.4},{\"date\":\"2012-12-26\",\"value\":13.5},{\"date\":\"2012-12-27\",\"value\":13.4},{\"date\":\"2012-12-28\",\"value\":13.4},{\"date\":\"2012-12-29\",\"value\":13.4},{\"date\":\"2012-12-30\",\"value\":13.4},{\"date\":\"2012-12-31\",\"value\":13.5},{\"date\":\"2013-01-01\",\"value\":13.3},{\"date\":\"2013-01-02\",\"value\":13.3},{\"date\":\"2013-01-03\",\"value\":13.4},{\"date\":\"2013-01-04\",\"value\":13.5},{\"date\":\"2013-01-05\",\"value\":13.4},{\"date\":\"2013-01-06\",\"value\":13.4},{\"date\":\"2013-01-07\",\"value\":13.6},{\"date\":\"2013-01-08\",\"value\":13.7},{\"date\":\"2013-01-09\",\"value\":13.8},{\"date\":\"2013-01-10\",\"value\":14.1},{\"date\":\"2013-01-11\",\"value\":14.1},{\"date\":\"2013-01-12\",\"value\":14.2},{\"date\":\"2013-01-13\",\"value\":14.1},{\"date\":\"2013-01-14\",\"value\":14.3},{\"date\":\"2013-01-15\",\"value\":14.3},{\"date\":\"2013-01-16\",\"value\":14.7},{\"date\":\"2013-01-17\",\"value\":15.5},{\"date\":\"2013-01-18\",\"value\":15.7},{\"date\":\"2013-01-19\",\"value\":15.6},{\"date\":\"2013-01-20\",\"value\":15.7},{\"date\":\"2013-01-21\",\"value\":16.8},{\"date\":\"2013-01-22\",\"value\":17.3},{\"date\":\"2013-01-23\",\"value\":17.5},{\"date\":\"2013-01-24\",\"value\":16.9},{\"date\":\"2013-01-25\",\"value\":17.4},{\"date\":\"2013-01-26\",\"value\":17.9},{\"date\":\"2013-01-27\",\"value\":17.8},{\"date\":\"2013-01-28\",\"value\":18.7},{\"date\":\"2013-01-29\",\"value\":19.5},{\"date\":\"2013-01-30\",\"value\":19.7},{\"date\":\"2013-01-31\",\"value\":20.4},{\"date\":\"2013-02-01\",\"value\":20.5},{\"date\":\"2013-02-02\",\"value\":19.6},{\"date\":\"2013-02-03\",\"value\":20.6},{\"date\":\"2013-02-04\",\"value\":20.4},{\"date\":\"2013-02-05\",\"value\":20.6},{\"date\":\"2013-02-06\",\"value\":21.2},{\"date\":\"2013-02-07\",\"value\":22.1},{\"date\":\"2013-02-08\",\"value\":22.7},{\"date\":\"2013-02-09\",\"value\":23.6},{\"date\":\"2013-02-10\",\"value\":24},{\"date\":\"2013-02-11\",\"value\":24.6},{\"date\":\"2013-02-12\",\"value\":25.2},{\"date\":\"2013-02-13\",\"value\":24.2},{\"date\":\"2013-02-14\",\"value\":27.2},{\"date\":\"2013-02-15\",\"value\":27.1},{\"date\":\"2013-02-16\",\"value\":27.2},{\"date\":\"2013-02-17\",\"value\":26.8},{\"date\":\"2013-02-18\",\"value\":27},{\"date\":\"2013-02-19\",\"value\":29.4},{\"date\":\"2013-02-20\",\"value\":29.6},{\"date\":\"2013-02-21\",\"value\":29.8},{\"date\":\"2013-02-22\",\"value\":30.3},{\"date\":\"2013-02-23\",\"value\":29.8},{\"date\":\"2013-02-24\",\"value\":29.9},{\"date\":\"2013-02-25\",\"value\":30.4},{\"date\":\"2013-02-26\",\"value\":31.1},{\"date\":\"2013-02-27\",\"value\":30.9},{\"date\":\"2013-02-28\",\"value\":33.4},{\"date\":\"2013-03-01\",\"value\":34.5},{\"date\":\"2013-03-02\",\"value\":34.3},{\"date\":\"2013-03-03\",\"value\":34.5},{\"date\":\"2013-03-04\",\"value\":36.2},{\"date\":\"2013-03-05\",\"value\":40.3},{\"date\":\"2013-03-06\",\"value\":41},{\"date\":\"2013-03-07\",\"value\":42},{\"date\":\"2013-03-08\",\"value\":44.2},{\"date\":\"2013-03-09\",\"value\":46.8},{\"date\":\"2013-03-10\",\"value\":46},{\"date\":\"2013-03-11\",\"value\":48.4},{\"date\":\"2013-03-12\",\"value\":44.3},{\"date\":\"2013-03-13\",\"value\":46.9},{\"date\":\"2013-03-14\",\"value\":47.2},{\"date\":\"2013-03-15\",\"value\":47},{\"date\":\"2013-03-16\",\"value\":47},{\"date\":\"2013-03-17\",\"value\":47.4},{\"date\":\"2013-03-18\",\"value\":51.6},{\"date\":\"2013-03-19\",\"value\":59.1},{\"date\":\"2013-03-20\",\"value\":64.5},{\"date\":\"2013-03-21\",\"value\":70.8},{\"date\":\"2013-03-22\",\"value\":69.9},{\"date\":\"2013-03-23\",\"value\":64.3},{\"date\":\"2013-03-24\",\"value\":71.5},{\"date\":\"2013-03-25\",\"value\":73.6},{\"date\":\"2013-03-26\",\"value\":78.5},{\"date\":\"2013-03-27\",\"value\":88.9},{\"date\":\"2013-03-28\",\"value\":86.2},{\"date\":\"2013-03-29\",\"value\":90.5},{\"date\":\"2013-03-30\",\"value\":92.2},{\"date\":\"2013-03-31\",\"value\":93},{\"date\":\"2013-04-01\",\"value\":104},{\"date\":\"2013-04-02\",\"value\":118},{\"date\":\"2013-04-03\",\"value\":135},{\"date\":\"2013-04-04\",\"value\":132.1},{\"date\":\"2013-04-05\",\"value\":142.3},{\"date\":\"2013-04-06\",\"value\":142.6},{\"date\":\"2013-04-07\",\"value\":162.3},{\"date\":\"2013-04-08\",\"value\":187.5},{\"date\":\"2013-04-09\",\"value\":230},{\"date\":\"2013-04-10\",\"value\":165},{\"date\":\"2013-04-11\",\"value\":124.9},{\"date\":\"2013-04-12\",\"value\":117},{\"date\":\"2013-04-13\",\"value\":93},{\"date\":\"2013-04-14\",\"value\":90},{\"date\":\"2013-04-15\",\"value\":82.4},{\"date\":\"2013-04-16\",\"value\":68.4},{\"date\":\"2013-04-17\",\"value\":93.1},{\"date\":\"2013-04-18\",\"value\":109},{\"date\":\"2013-04-19\",\"value\":118.5},{\"date\":\"2013-04-20\",\"value\":126.6},{\"date\":\"2013-04-21\",\"value\":119.2},{\"date\":\"2013-04-22\",\"value\":127.4},{\"date\":\"2013-04-23\",\"value\":143.5},{\"date\":\"2013-04-24\",\"value\":154.2},{\"date\":\"2013-04-25\",\"value\":141.7},{\"date\":\"2013-04-26\",\"value\":136.9},{\"date\":\"2013-04-27\",\"value\":128},{\"date\":\"2013-04-28\",\"value\":134.4},{\"date\":\"2013-04-29\",\"value\":144},{\"date\":\"2013-04-30\",\"value\":139.2},{\"date\":\"2013-05-01\",\"value\":116.4},{\"date\":\"2013-05-02\",\"value\":106.3},{\"date\":\"2013-05-03\",\"value\":98.1},{\"date\":\"2013-05-04\",\"value\":112.9},{\"date\":\"2013-05-05\",\"value\":116},{\"date\":\"2013-05-06\",\"value\":112.3},{\"date\":\"2013-05-07\",\"value\":109.6},{\"date\":\"2013-05-08\",\"value\":113.2},{\"date\":\"2013-05-09\",\"value\":112.8},{\"date\":\"2013-05-10\",\"value\":117.7},{\"date\":\"2013-05-11\",\"value\":115.6},{\"date\":\"2013-05-12\",\"value\":114.8},{\"date\":\"2013-05-13\",\"value\":118},{\"date\":\"2013-05-14\",\"value\":111.4},{\"date\":\"2013-05-15\",\"value\":114.2},{\"date\":\"2013-05-16\",\"value\":118.2},{\"date\":\"2013-05-17\",\"value\":123.5},{\"date\":\"2013-05-18\",\"value\":123.2},{\"date\":\"2013-05-19\",\"value\":122.5},{\"date\":\"2013-05-20\",\"value\":122},{\"date\":\"2013-05-21\",\"value\":122.9},{\"date\":\"2013-05-22\",\"value\":123.8},{\"date\":\"2013-05-23\",\"value\":126.3},{\"date\":\"2013-05-24\",\"value\":133.1},{\"date\":\"2013-05-25\",\"value\":132},{\"date\":\"2013-05-26\",\"value\":133.5},{\"date\":\"2013-05-27\",\"value\":129.8},{\"date\":\"2013-05-28\",\"value\":129},{\"date\":\"2013-05-29\",\"value\":132.3},{\"date\":\"2013-05-30\",\"value\":128.8},{\"date\":\"2013-05-31\",\"value\":128.8},{\"date\":\"2013-06-01\",\"value\":129.3},{\"date\":\"2013-06-02\",\"value\":122.5},{\"date\":\"2013-06-03\",\"value\":120.7},{\"date\":\"2013-06-04\",\"value\":121.4},{\"date\":\"2013-06-05\",\"value\":121.9},{\"date\":\"2013-06-06\",\"value\":119},{\"date\":\"2013-06-07\",\"value\":111},{\"date\":\"2013-06-08\",\"value\":107.9},{\"date\":\"2013-06-09\",\"value\":100.4},{\"date\":\"2013-06-10\",\"value\":106.3},{\"date\":\"2013-06-11\",\"value\":109},{\"date\":\"2013-06-12\",\"value\":108.8},{\"date\":\"2013-06-13\",\"value\":103.9},{\"date\":\"2013-06-14\",\"value\":100},{\"date\":\"2013-06-15\",\"value\":99.8},{\"date\":\"2013-06-16\",\"value\":99.9},{\"date\":\"2013-06-17\",\"value\":101.9},{\"date\":\"2013-06-18\",\"value\":107.3},{\"date\":\"2013-06-19\",\"value\":108.3},{\"date\":\"2013-06-20\",\"value\":111.3},{\"date\":\"2013-06-21\",\"value\":109.5},{\"date\":\"2013-06-22\",\"value\":108.2},{\"date\":\"2013-06-23\",\"value\":107.9},{\"date\":\"2013-06-24\",\"value\":102.1},{\"date\":\"2013-06-25\",\"value\":103.3},{\"date\":\"2013-06-26\",\"value\":104},{\"date\":\"2013-06-27\",\"value\":101.7},{\"date\":\"2013-06-28\",\"value\":94.7},{\"date\":\"2013-06-29\",\"value\":95},{\"date\":\"2013-06-30\",\"value\":97.5},{\"date\":\"2013-07-01\",\"value\":88.1},{\"date\":\"2013-07-02\",\"value\":90.4},{\"date\":\"2013-07-03\",\"value\":78.9},{\"date\":\"2013-07-04\",\"value\":80},{\"date\":\"2013-07-05\",\"value\":68.5},{\"date\":\"2013-07-06\",\"value\":69.7},{\"date\":\"2013-07-07\",\"value\":76.5},{\"date\":\"2013-07-08\",\"value\":76},{\"date\":\"2013-07-09\",\"value\":76.7},{\"date\":\"2013-07-10\",\"value\":88},{\"date\":\"2013-07-11\",\"value\":89},{\"date\":\"2013-07-12\",\"value\":94},{\"date\":\"2013-07-13\",\"value\":98.3},{\"date\":\"2013-07-14\",\"value\":94.4},{\"date\":\"2013-07-15\",\"value\":98.9},{\"date\":\"2013-07-16\",\"value\":97.1},{\"date\":\"2013-07-17\",\"value\":98.5},{\"date\":\"2013-07-18\",\"value\":90.1},{\"date\":\"2013-07-19\",\"value\":92},{\"date\":\"2013-07-20\",\"value\":89.8},{\"date\":\"2013-07-21\",\"value\":92},{\"date\":\"2013-07-22\",\"value\":91.6},{\"date\":\"2013-07-23\",\"value\":95.6},{\"date\":\"2013-07-24\",\"value\":95.1},{\"date\":\"2013-07-25\",\"value\":96.9},{\"date\":\"2013-07-26\",\"value\":96},{\"date\":\"2013-07-27\",\"value\":94.4},{\"date\":\"2013-07-28\",\"value\":98.8},{\"date\":\"2013-07-29\",\"value\":101.5},{\"date\":\"2013-07-30\",\"value\":108},{\"date\":\"2013-07-31\",\"value\":106.2},{\"date\":\"2013-08-01\",\"value\":104},{\"date\":\"2013-08-02\",\"value\":104.5},{\"date\":\"2013-08-03\",\"value\":104.9},{\"date\":\"2013-08-04\",\"value\":105.1},{\"date\":\"2013-08-05\",\"value\":106.7},{\"date\":\"2013-08-06\",\"value\":106.6},{\"date\":\"2013-08-07\",\"value\":106},{\"date\":\"2013-08-08\",\"value\":103.1},{\"date\":\"2013-08-09\",\"value\":102.8},{\"date\":\"2013-08-10\",\"value\":103},{\"date\":\"2013-08-11\",\"value\":105},{\"date\":\"2013-08-12\",\"value\":106.8},{\"date\":\"2013-08-13\",\"value\":109.6},{\"date\":\"2013-08-14\",\"value\":112.6},{\"date\":\"2013-08-15\",\"value\":110},{\"date\":\"2013-08-16\",\"value\":109},{\"date\":\"2013-08-17\",\"value\":112.8},{\"date\":\"2013-08-18\",\"value\":113.4},{\"date\":\"2013-08-19\",\"value\":118.5},{\"date\":\"2013-08-20\",\"value\":121.2},{\"date\":\"2013-08-21\",\"value\":123.3},{\"date\":\"2013-08-22\",\"value\":122},{\"date\":\"2013-08-23\",\"value\":118.5},{\"date\":\"2013-08-24\",\"value\":119.6},{\"date\":\"2013-08-25\",\"value\":122.1},{\"date\":\"2013-08-26\",\"value\":120.1},{\"date\":\"2013-08-27\",\"value\":131.3},{\"date\":\"2013-08-28\",\"value\":128.8},{\"date\":\"2013-08-29\",\"value\":129.3},{\"date\":\"2013-08-30\",\"value\":138},{\"date\":\"2013-08-31\",\"value\":141},{\"date\":\"2013-09-01\",\"value\":146},{\"date\":\"2013-09-02\",\"value\":144},{\"date\":\"2013-09-03\",\"value\":144},{\"date\":\"2013-09-04\",\"value\":132.5},{\"date\":\"2013-09-05\",\"value\":130.2},{\"date\":\"2013-09-06\",\"value\":121.9},{\"date\":\"2013-09-07\",\"value\":129},{\"date\":\"2013-09-08\",\"value\":126.3},{\"date\":\"2013-09-09\",\"value\":133.1},{\"date\":\"2013-09-10\",\"value\":132.6},{\"date\":\"2013-09-11\",\"value\":142.1},{\"date\":\"2013-09-12\",\"value\":139.4},{\"date\":\"2013-09-13\",\"value\":140.7},{\"date\":\"2013-09-14\",\"value\":136.7},{\"date\":\"2013-09-15\",\"value\":138.3},{\"date\":\"2013-09-16\",\"value\":139.4},{\"date\":\"2013-09-17\",\"value\":139.1},{\"date\":\"2013-09-18\",\"value\":140.4},{\"date\":\"2013-09-19\",\"value\":135.1},{\"date\":\"2013-09-20\",\"value\":133.8},{\"date\":\"2013-09-21\",\"value\":134.4},{\"date\":\"2013-09-22\",\"value\":134},{\"date\":\"2013-09-23\",\"value\":133.4},{\"date\":\"2013-09-24\",\"value\":134.8},{\"date\":\"2013-09-25\",\"value\":135},{\"date\":\"2013-09-26\",\"value\":137.1},{\"date\":\"2013-09-27\",\"value\":138.9},{\"date\":\"2013-09-28\",\"value\":142.5},{\"date\":\"2013-09-29\",\"value\":143.9},{\"date\":\"2013-09-30\",\"value\":141.9},{\"date\":\"2013-10-01\",\"value\":140.3},{\"date\":\"2013-10-02\",\"value\":123},{\"date\":\"2013-10-03\",\"value\":131},{\"date\":\"2013-10-04\",\"value\":136.8},{\"date\":\"2013-10-05\",\"value\":136.7},{\"date\":\"2013-10-06\",\"value\":137.8},{\"date\":\"2013-10-07\",\"value\":135.8},{\"date\":\"2013-10-08\",\"value\":136.5},{\"date\":\"2013-10-09\",\"value\":139.5},{\"date\":\"2013-10-10\",\"value\":140.4},{\"date\":\"2013-10-11\",\"value\":140.1},{\"date\":\"2013-10-12\",\"value\":142.9},{\"date\":\"2013-10-13\",\"value\":147.5},{\"date\":\"2013-10-14\",\"value\":151.4},{\"date\":\"2013-10-15\",\"value\":158.1},{\"date\":\"2013-10-16\",\"value\":152.8},{\"date\":\"2013-10-17\",\"value\":157.6},{\"date\":\"2013-10-18\",\"value\":168.3},{\"date\":\"2013-10-19\",\"value\":183.1},{\"date\":\"2013-10-20\",\"value\":186.1},{\"date\":\"2013-10-21\",\"value\":192.8},{\"date\":\"2013-10-22\",\"value\":203},{\"date\":\"2013-10-23\",\"value\":228},{\"date\":\"2013-10-24\",\"value\":207},{\"date\":\"2013-10-25\",\"value\":197.9},{\"date\":\"2013-10-26\",\"value\":188.6},{\"date\":\"2013-10-27\",\"value\":206.9},{\"date\":\"2013-10-28\",\"value\":206.9},{\"date\":\"2013-10-29\",\"value\":216},{\"date\":\"2013-10-30\",\"value\":208},{\"date\":\"2013-10-31\",\"value\":211.2},{\"date\":\"2013-11-01\",\"value\":213.4},{\"date\":\"2013-11-02\",\"value\":211.7},{\"date\":\"2013-11-03\",\"value\":224},{\"date\":\"2013-11-04\",\"value\":238.2},{\"date\":\"2013-11-05\",\"value\":251.3},{\"date\":\"2013-11-06\",\"value\":264.1},{\"date\":\"2013-11-07\",\"value\":309.6},{\"date\":\"2013-11-08\",\"value\":355},{\"date\":\"2013-11-09\",\"value\":367.8},{\"date\":\"2013-11-10\",\"value\":336.3},{\"date\":\"2013-11-11\",\"value\":363},{\"date\":\"2013-11-12\",\"value\":380},{\"date\":\"2013-11-13\",\"value\":434.9},{\"date\":\"2013-11-14\",\"value\":433.4},{\"date\":\"2013-11-15\",\"value\":433.9},{\"date\":\"2013-11-16\",\"value\":462},{\"date\":\"2013-11-17\",\"value\":528.3},{\"date\":\"2013-11-18\",\"value\":785.4},{\"date\":\"2013-11-19\",\"value\":645.7},{\"date\":\"2013-11-20\",\"value\":638},{\"date\":\"2013-11-21\",\"value\":764.9},{\"date\":\"2013-11-22\",\"value\":802},{\"date\":\"2013-11-23\",\"value\":832.5},{\"date\":\"2013-11-24\",\"value\":795},{\"date\":\"2013-11-25\",\"value\":830},{\"date\":\"2013-11-26\",\"value\":970},{\"date\":\"2013-11-27\",\"value\":1079.9},{\"date\":\"2013-11-28\",\"value\":1101.4},{\"date\":\"2013-11-29\",\"value\":1206.9},{\"date\":\"2013-11-30\",\"value\":1205.7},{\"date\":\"2013-12-01\",\"value\":1004.4},{\"date\":\"2013-12-02\",\"value\":1096.6},{\"date\":\"2013-12-03\",\"value\":1154.9},{\"date\":\"2013-12-04\",\"value\":1237.6},{\"date\":\"2013-12-05\",\"value\":1106.3},{\"date\":\"2013-12-06\",\"value\":845},{\"date\":\"2013-12-07\",\"value\":697},{\"date\":\"2013-12-08\",\"value\":804},{\"date\":\"2013-12-09\",\"value\":919},{\"date\":\"2013-12-10\",\"value\":1033.7},{\"date\":\"2013-12-11\",\"value\":919.9},{\"date\":\"2013-12-12\",\"value\":900},{\"date\":\"2013-12-13\",\"value\":936.8},{\"date\":\"2013-12-14\",\"value\":908.9},{\"date\":\"2013-12-15\",\"value\":919.9},{\"date\":\"2013-12-16\",\"value\":759.9},{\"date\":\"2013-12-17\",\"value\":715},{\"date\":\"2013-12-18\",\"value\":541},{\"date\":\"2013-12-19\",\"value\":732},{\"date\":\"2013-12-20\",\"value\":650},{\"date\":\"2013-12-21\",\"value\":640.5},{\"date\":\"2013-12-22\",\"value\":639.5},{\"date\":\"2013-12-23\",\"value\":713.2},{\"date\":\"2013-12-24\",\"value\":702.8},{\"date\":\"2013-12-25\",\"value\":707.3},{\"date\":\"2013-12-26\",\"value\":802},{\"date\":\"2013-12-27\",\"value\":803},{\"date\":\"2013-12-28\",\"value\":762},{\"date\":\"2013-12-29\",\"value\":785},{\"date\":\"2013-12-30\",\"value\":804.8},{\"date\":\"2013-12-31\",\"value\":805.9},{\"date\":\"2014-01-01\",\"value\":815.9},{\"date\":\"2014-01-02\",\"value\":856.9},{\"date\":\"2014-01-03\",\"value\":884.3},{\"date\":\"2014-01-04\",\"value\":924.7},{\"date\":\"2014-01-05\",\"value\":1014.7},{\"date\":\"2014-01-06\",\"value\":1012.7},{\"date\":\"2014-01-07\",\"value\":879.9},{\"date\":\"2014-01-08\",\"value\":938.8},{\"date\":\"2014-01-09\",\"value\":937},{\"date\":\"2014-01-10\",\"value\":957.8},{\"date\":\"2014-01-11\",\"value\":1005.3},{\"date\":\"2014-01-12\",\"value\":939.8},{\"date\":\"2014-01-13\",\"value\":922.9},{\"date\":\"2014-01-14\",\"value\":919.3},{\"date\":\"2014-01-15\",\"value\":941.2},{\"date\":\"2014-01-16\",\"value\":913.5},{\"date\":\"2014-01-17\",\"value\":894.2},{\"date\":\"2014-01-18\",\"value\":905.7},{\"date\":\"2014-01-19\",\"value\":954.8},{\"date\":\"2014-01-20\",\"value\":956},{\"date\":\"2014-01-21\",\"value\":962.2},{\"date\":\"2014-01-22\",\"value\":951},{\"date\":\"2014-01-23\",\"value\":944.2},{\"date\":\"2014-01-24\",\"value\":916.5},{\"date\":\"2014-01-25\",\"value\":961},{\"date\":\"2014-01-26\",\"value\":1007},{\"date\":\"2014-01-27\",\"value\":943.5},{\"date\":\"2014-01-28\",\"value\":932.7},{\"date\":\"2014-01-29\",\"value\":925.7},{\"date\":\"2014-01-30\",\"value\":941.4},{\"date\":\"2014-01-31\",\"value\":938.8},{\"date\":\"2014-02-01\",\"value\":940.4},{\"date\":\"2014-02-02\",\"value\":953.3},{\"date\":\"2014-02-03\",\"value\":931.7},{\"date\":\"2014-02-04\",\"value\":926.6},{\"date\":\"2014-02-05\",\"value\":904.5},{\"date\":\"2014-02-06\",\"value\":828.9},{\"date\":\"2014-02-07\",\"value\":695.7},{\"date\":\"2014-02-08\",\"value\":648.8},{\"date\":\"2014-02-09\",\"value\":659.6},{\"date\":\"2014-02-10\",\"value\":582.6},{\"date\":\"2014-02-11\",\"value\":579},{\"date\":\"2014-02-12\",\"value\":531.1},{\"date\":\"2014-02-13\",\"value\":451.4},{\"date\":\"2014-02-14\",\"value\":427.7},{\"date\":\"2014-02-15\",\"value\":371.1},{\"date\":\"2014-02-16\",\"value\":299.8},{\"date\":\"2014-02-17\",\"value\":272.3},{\"date\":\"2014-02-18\",\"value\":294},{\"date\":\"2014-02-19\",\"value\":261.5},{\"date\":\"2014-02-20\",\"value\":111.9},{\"date\":\"2014-02-21\",\"value\":111.6},{\"date\":\"2014-02-22\",\"value\":255.6},{\"date\":\"2014-02-23\",\"value\":310.2},{\"date\":\"2014-02-24\",\"value\":174},{\"date\":\"2014-02-25\",\"value\":135.8},{\"date\":\"2014-02-26\",\"value\":593.1},{\"date\":\"2014-02-27\",\"value\":596.5},{\"date\":\"2014-02-28\",\"value\":573.9},{\"date\":\"2014-03-01\",\"value\":557.4},{\"date\":\"2014-03-02\",\"value\":544.6},{\"date\":\"2014-03-03\",\"value\":662.2},{\"date\":\"2014-03-04\",\"value\":661.8},{\"date\":\"2014-03-05\",\"value\":658.3},{\"date\":\"2014-03-06\",\"value\":648.3},{\"date\":\"2014-03-07\",\"value\":616.7},{\"date\":\"2014-03-08\",\"value\":609.2},{\"date\":\"2014-03-09\",\"value\":627},{\"date\":\"2014-03-10\",\"value\":613},{\"date\":\"2014-03-11\",\"value\":608.7},{\"date\":\"2014-03-12\",\"value\":619.4},{\"date\":\"2014-03-13\",\"value\":625},{\"date\":\"2014-03-14\",\"value\":614},{\"date\":\"2014-03-15\",\"value\":624},{\"date\":\"2014-03-16\",\"value\":619.1},{\"date\":\"2014-03-17\",\"value\":606.4},{\"date\":\"2014-03-18\",\"value\":598.9},{\"date\":\"2014-03-19\",\"value\":595},{\"date\":\"2014-03-20\",\"value\":566},{\"date\":\"2014-03-21\",\"value\":549.6},{\"date\":\"2014-03-22\",\"value\":564.3},{\"date\":\"2014-03-23\",\"value\":551.2},{\"date\":\"2014-03-24\",\"value\":567.6},{\"date\":\"2014-03-25\",\"value\":562.9},{\"date\":\"2014-03-26\",\"value\":562.5},{\"date\":\"2014-03-27\",\"value\":460.5},{\"date\":\"2014-03-28\",\"value\":482.6},{\"date\":\"2014-03-29\",\"value\":477.1},{\"date\":\"2014-03-30\",\"value\":446.9},{\"date\":\"2014-03-31\",\"value\":444.7},{\"date\":\"2014-04-01\",\"value\":463.5},{\"date\":\"2014-04-02\",\"value\":424.4},{\"date\":\"2014-04-03\",\"value\":436.3},{\"date\":\"2014-04-04\",\"value\":444.4},{\"date\":\"2014-04-05\",\"value\":456.6},{\"date\":\"2014-04-06\",\"value\":455.7},{\"date\":\"2014-04-07\",\"value\":462.4},{\"date\":\"2014-04-08\",\"value\":466.6},{\"date\":\"2014-04-09\",\"value\":457.3},{\"date\":\"2014-04-10\",\"value\":384.6},{\"date\":\"2014-04-11\",\"value\":435.1},{\"date\":\"2014-04-12\",\"value\":437.6},{\"date\":\"2014-04-13\",\"value\":427.6},{\"date\":\"2014-04-14\",\"value\":478.4},{\"date\":\"2014-04-15\",\"value\":526.4},{\"date\":\"2014-04-16\",\"value\":537},{\"date\":\"2014-04-17\",\"value\":502},{\"date\":\"2014-04-18\",\"value\":485.5},{\"date\":\"2014-04-19\",\"value\":506},{\"date\":\"2014-04-20\",\"value\":498.5},{\"date\":\"2014-04-21\",\"value\":495.2},{\"date\":\"2014-04-22\",\"value\":487.9},{\"date\":\"2014-04-23\",\"value\":487.3},{\"date\":\"2014-04-24\",\"value\":500.3},{\"date\":\"2014-04-25\",\"value\":464.5},{\"date\":\"2014-04-26\",\"value\":457.9},{\"date\":\"2014-04-27\",\"value\":443.2},{\"date\":\"2014-04-28\",\"value\":441.9},{\"date\":\"2014-04-29\",\"value\":446.1},{\"date\":\"2014-04-30\",\"value\":445.6},{\"date\":\"2014-05-01\",\"value\":460.1},{\"date\":\"2014-05-02\",\"value\":453.7},{\"date\":\"2014-05-03\",\"value\":438.6},{\"date\":\"2014-05-04\",\"value\":436},{\"date\":\"2014-05-05\",\"value\":430.9},{\"date\":\"2014-05-06\",\"value\":432.2},{\"date\":\"2014-05-07\",\"value\":446.5},{\"date\":\"2014-05-08\",\"value\":441.1},{\"date\":\"2014-05-09\",\"value\":445.5},{\"date\":\"2014-05-10\",\"value\":451.9},{\"date\":\"2014-05-11\",\"value\":433.2},{\"date\":\"2014-05-12\",\"value\":438.2},{\"date\":\"2014-05-13\",\"value\":433.9},{\"date\":\"2014-05-14\",\"value\":442.6},{\"date\":\"2014-05-15\",\"value\":448.1},{\"date\":\"2014-05-16\",\"value\":453.6},{\"date\":\"2014-05-17\",\"value\":452.8},{\"date\":\"2014-05-18\",\"value\":450.1},{\"date\":\"2014-05-19\",\"value\":443.9},{\"date\":\"2014-05-20\",\"value\":484.6},{\"date\":\"2014-05-21\",\"value\":488.8},{\"date\":\"2014-05-22\",\"value\":515.4},{\"date\":\"2014-05-23\",\"value\":518.1},{\"date\":\"2014-05-24\",\"value\":520.5},{\"date\":\"2014-05-25\",\"value\":570.4},{\"date\":\"2014-05-26\",\"value\":582},{\"date\":\"2014-05-27\",\"value\":570.1},{\"date\":\"2014-05-28\",\"value\":570.8},{\"date\":\"2014-05-29\",\"value\":564.4},{\"date\":\"2014-05-30\",\"value\":612.3},{\"date\":\"2014-05-31\",\"value\":627.9},{\"date\":\"2014-06-01\",\"value\":649.8},{\"date\":\"2014-06-02\",\"value\":655.5},{\"date\":\"2014-06-03\",\"value\":669.4},{\"date\":\"2014-06-04\",\"value\":638.9},{\"date\":\"2014-06-05\",\"value\":660.2},{\"date\":\"2014-06-06\",\"value\":650.4},{\"date\":\"2014-06-07\",\"value\":651.7},{\"date\":\"2014-06-08\",\"value\":651},{\"date\":\"2014-06-09\",\"value\":644.3},{\"date\":\"2014-06-10\",\"value\":655.6},{\"date\":\"2014-06-11\",\"value\":643},{\"date\":\"2014-06-12\",\"value\":597.1},{\"date\":\"2014-06-13\",\"value\":610.3},{\"date\":\"2014-06-14\",\"value\":583.4},{\"date\":\"2014-06-15\",\"value\":582.3},{\"date\":\"2014-06-16\",\"value\":599.1},{\"date\":\"2014-06-17\",\"value\":605.1},{\"date\":\"2014-06-18\",\"value\":606.2},{\"date\":\"2014-06-19\",\"value\":600.2},{\"date\":\"2014-06-20\",\"value\":590.8},{\"date\":\"2014-06-21\",\"value\":597},{\"date\":\"2014-06-22\",\"value\":603.6},{\"date\":\"2014-06-23\",\"value\":591.2},{\"date\":\"2014-06-24\",\"value\":588.8},{\"date\":\"2014-06-25\",\"value\":568.5},{\"date\":\"2014-06-26\",\"value\":582.7},{\"date\":\"2014-06-27\",\"value\":602.2},{\"date\":\"2014-06-28\",\"value\":597.6},{\"date\":\"2014-06-29\",\"value\":601.1},{\"date\":\"2014-06-30\",\"value\":635.1},{\"date\":\"2014-07-01\",\"value\":643.2},{\"date\":\"2014-07-02\",\"value\":645.7},{\"date\":\"2014-07-03\",\"value\":638},{\"date\":\"2014-07-04\",\"value\":624},{\"date\":\"2014-07-05\",\"value\":623},{\"date\":\"2014-07-06\",\"value\":626.7},{\"date\":\"2014-07-07\",\"value\":613.6},{\"date\":\"2014-07-08\",\"value\":615.3},{\"date\":\"2014-07-09\",\"value\":623},{\"date\":\"2014-07-10\",\"value\":618.4},{\"date\":\"2014-07-11\",\"value\":632.9},{\"date\":\"2014-07-12\",\"value\":635.9},{\"date\":\"2014-07-13\",\"value\":628},{\"date\":\"2014-07-14\",\"value\":618.3},{\"date\":\"2014-07-15\",\"value\":619.6},{\"date\":\"2014-07-16\",\"value\":614.8},{\"date\":\"2014-07-17\",\"value\":626.6},{\"date\":\"2014-07-18\",\"value\":627.5},{\"date\":\"2014-07-19\",\"value\":627},{\"date\":\"2014-07-20\",\"value\":621},{\"date\":\"2014-07-21\",\"value\":625.1},{\"date\":\"2014-07-22\",\"value\":622.5},{\"date\":\"2014-07-23\",\"value\":621.7},{\"date\":\"2014-07-24\",\"value\":601.9},{\"date\":\"2014-07-25\",\"value\":600.5},{\"date\":\"2014-07-26\",\"value\":596},{\"date\":\"2014-07-27\",\"value\":595},{\"date\":\"2014-07-28\",\"value\":587.9},{\"date\":\"2014-07-29\",\"value\":585.8},{\"date\":\"2014-07-30\",\"value\":564.6},{\"date\":\"2014-07-31\",\"value\":589.5},{\"date\":\"2014-08-01\",\"value\":598.8},{\"date\":\"2014-08-02\",\"value\":591.7},{\"date\":\"2014-08-03\",\"value\":588.9},{\"date\":\"2014-08-04\",\"value\":592.8},{\"date\":\"2014-08-05\",\"value\":588.8},{\"date\":\"2014-08-06\",\"value\":589.8},{\"date\":\"2014-08-07\",\"value\":592.8},{\"date\":\"2014-08-08\",\"value\":595.8},{\"date\":\"2014-08-09\",\"value\":589.5},{\"date\":\"2014-08-10\",\"value\":592.1},{\"date\":\"2014-08-11\",\"value\":575.9},{\"date\":\"2014-08-12\",\"value\":567.7},{\"date\":\"2014-08-13\",\"value\":542.1},{\"date\":\"2014-08-14\",\"value\":504.8},{\"date\":\"2014-08-15\",\"value\":496.5},{\"date\":\"2014-08-16\",\"value\":522},{\"date\":\"2014-08-17\",\"value\":485.5},{\"date\":\"2014-08-18\",\"value\":462.2},{\"date\":\"2014-08-19\",\"value\":485.1},{\"date\":\"2014-08-20\",\"value\":516.8},{\"date\":\"2014-08-21\",\"value\":517.9},{\"date\":\"2014-08-22\",\"value\":516.1},{\"date\":\"2014-08-23\",\"value\":497.7},{\"date\":\"2014-08-24\",\"value\":509.7},{\"date\":\"2014-08-25\",\"value\":502.9},{\"date\":\"2014-08-26\",\"value\":512.6},{\"date\":\"2014-08-27\",\"value\":515.2},{\"date\":\"2014-08-28\",\"value\":510.8},{\"date\":\"2014-08-29\",\"value\":512.6},{\"date\":\"2014-08-30\",\"value\":506},{\"date\":\"2014-08-31\",\"value\":481.8},{\"date\":\"2014-09-01\",\"value\":477.2},{\"date\":\"2014-09-02\",\"value\":478.9},{\"date\":\"2014-09-03\",\"value\":480},{\"date\":\"2014-09-04\",\"value\":491},{\"date\":\"2014-09-05\",\"value\":483.6},{\"date\":\"2014-09-06\",\"value\":484.5},{\"date\":\"2014-09-07\",\"value\":485.8},{\"date\":\"2014-09-08\",\"value\":475.7},{\"date\":\"2014-09-09\",\"value\":474.9},{\"date\":\"2014-09-10\",\"value\":479.7},{\"date\":\"2014-09-11\",\"value\":478.5},{\"date\":\"2014-09-12\",\"value\":477.7},{\"date\":\"2014-09-13\",\"value\":478.2},{\"date\":\"2014-09-14\",\"value\":477.7},{\"date\":\"2014-09-15\",\"value\":477.7},{\"date\":\"2014-09-16\",\"value\":466.8},{\"date\":\"2014-09-17\",\"value\":461.1},{\"date\":\"2014-09-18\",\"value\":424.3},{\"date\":\"2014-09-19\",\"value\":397.7},{\"date\":\"2014-09-20\",\"value\":411.5},{\"date\":\"2014-09-21\",\"value\":401.6},{\"date\":\"2014-09-22\",\"value\":404.1},{\"date\":\"2014-09-23\",\"value\":436.9},{\"date\":\"2014-09-24\",\"value\":423.8},{\"date\":\"2014-09-25\",\"value\":412.3},{\"date\":\"2014-09-26\",\"value\":404.5},{\"date\":\"2014-09-27\",\"value\":399},{\"date\":\"2014-09-28\",\"value\":379.1},{\"date\":\"2014-09-29\",\"value\":376.8},{\"date\":\"2014-09-30\",\"value\":388.2},{\"date\":\"2014-10-01\",\"value\":382.8},{\"date\":\"2014-10-02\",\"value\":375.1},{\"date\":\"2014-10-03\",\"value\":363.5},{\"date\":\"2014-10-04\",\"value\":335.3},{\"date\":\"2014-10-05\",\"value\":322.9},{\"date\":\"2014-10-06\",\"value\":331.5},{\"date\":\"2014-10-07\",\"value\":331.6},{\"date\":\"2014-10-08\",\"value\":350.9},{\"date\":\"2014-10-09\",\"value\":360.9},{\"date\":\"2014-10-10\",\"value\":361.7},{\"date\":\"2014-10-11\",\"value\":361.2},{\"date\":\"2014-10-12\",\"value\":373.2},{\"date\":\"2014-10-13\",\"value\":387.3},{\"date\":\"2014-10-14\",\"value\":397.1},{\"date\":\"2014-10-15\",\"value\":393.2},{\"date\":\"2014-10-16\",\"value\":379.8},{\"date\":\"2014-10-17\",\"value\":380.5},{\"date\":\"2014-10-18\",\"value\":390.9},{\"date\":\"2014-10-19\",\"value\":387.3},{\"date\":\"2014-10-20\",\"value\":380.4},{\"date\":\"2014-10-21\",\"value\":382.4},{\"date\":\"2014-10-22\",\"value\":378.9},{\"date\":\"2014-10-23\",\"value\":355.8},{\"date\":\"2014-10-24\",\"value\":355.1},{\"date\":\"2014-10-25\",\"value\":346.7},{\"date\":\"2014-10-26\",\"value\":348.7},{\"date\":\"2014-10-27\",\"value\":350.1},{\"date\":\"2014-10-28\",\"value\":351.1},{\"date\":\"2014-10-29\",\"value\":335.1},{\"date\":\"2014-10-30\",\"value\":344.9},{\"date\":\"2014-10-31\",\"value\":337.9},{\"date\":\"2014-11-01\",\"value\":325.4},{\"date\":\"2014-11-02\",\"value\":322.5},{\"date\":\"2014-11-03\",\"value\":324.2},{\"date\":\"2014-11-04\",\"value\":328},{\"date\":\"2014-11-05\",\"value\":338},{\"date\":\"2014-11-06\",\"value\":347.7},{\"date\":\"2014-11-07\",\"value\":341.9},{\"date\":\"2014-11-08\",\"value\":343.5},{\"date\":\"2014-11-09\",\"value\":362},{\"date\":\"2014-11-10\",\"value\":367.1},{\"date\":\"2014-11-11\",\"value\":365.4},{\"date\":\"2014-11-12\",\"value\":432},{\"date\":\"2014-11-13\",\"value\":428.7},{\"date\":\"2014-11-14\",\"value\":396.5},{\"date\":\"2014-11-15\",\"value\":374.9},{\"date\":\"2014-11-16\",\"value\":385.6},{\"date\":\"2014-11-17\",\"value\":384.7},{\"date\":\"2014-11-18\",\"value\":379.2},{\"date\":\"2014-11-19\",\"value\":381.4},{\"date\":\"2014-11-20\",\"value\":357.3},{\"date\":\"2014-11-21\",\"value\":351.8},{\"date\":\"2014-11-22\",\"value\":352},{\"date\":\"2014-11-23\",\"value\":365.9},{\"date\":\"2014-11-24\",\"value\":378.9},{\"date\":\"2014-11-25\",\"value\":376.4},{\"date\":\"2014-11-26\",\"value\":365.4},{\"date\":\"2014-11-27\",\"value\":368.8},{\"date\":\"2014-11-28\",\"value\":377.6},{\"date\":\"2014-11-29\",\"value\":376.3},{\"date\":\"2014-11-30\",\"value\":374.9},{\"date\":\"2014-12-01\",\"value\":378.6},{\"date\":\"2014-12-02\",\"value\":380.6},{\"date\":\"2014-12-03\",\"value\":377},{\"date\":\"2014-12-04\",\"value\":369.8},{\"date\":\"2014-12-05\",\"value\":377.6},{\"date\":\"2014-12-06\",\"value\":376.3},{\"date\":\"2014-12-07\",\"value\":376.5},{\"date\":\"2014-12-08\",\"value\":365},{\"date\":\"2014-12-09\",\"value\":352.2},{\"date\":\"2014-12-10\",\"value\":347.9},{\"date\":\"2014-12-11\",\"value\":347.7},{\"date\":\"2014-12-12\",\"value\":353.4},{\"date\":\"2014-12-13\",\"value\":348.2},{\"date\":\"2014-12-14\",\"value\":349.4},{\"date\":\"2014-12-15\",\"value\":345.4},{\"date\":\"2014-12-16\",\"value\":330.2},{\"date\":\"2014-12-17\",\"value\":320},{\"date\":\"2014-12-18\",\"value\":310.3},{\"date\":\"2014-12-19\",\"value\":317.8},{\"date\":\"2014-12-20\",\"value\":330.4},{\"date\":\"2014-12-21\",\"value\":322.6},{\"date\":\"2014-12-22\",\"value\":330.8},{\"date\":\"2014-12-23\",\"value\":335.3},{\"date\":\"2014-12-24\",\"value\":322.4},{\"date\":\"2014-12-25\",\"value\":319},{\"date\":\"2014-12-26\",\"value\":330},{\"date\":\"2014-12-27\",\"value\":315.3},{\"date\":\"2014-12-28\",\"value\":316.5},{\"date\":\"2014-12-29\",\"value\":314.1},{\"date\":\"2014-12-30\",\"value\":311.3},{\"date\":\"2014-12-31\",\"value\":318.2},{\"date\":\"2015-01-01\",\"value\":314.9},{\"date\":\"2015-01-02\",\"value\":315.2},{\"date\":\"2015-01-03\",\"value\":287.1},{\"date\":\"2015-01-04\",\"value\":264.7},{\"date\":\"2015-01-05\",\"value\":274.8},{\"date\":\"2015-01-06\",\"value\":282.3},{\"date\":\"2015-01-07\",\"value\":291.3},{\"date\":\"2015-01-08\",\"value\":282.7},{\"date\":\"2015-01-09\",\"value\":288},{\"date\":\"2015-01-10\",\"value\":273.4},{\"date\":\"2015-01-11\",\"value\":264.8},{\"date\":\"2015-01-12\",\"value\":269.3},{\"date\":\"2015-01-13\",\"value\":221.3},{\"date\":\"2015-01-14\",\"value\":164.9},{\"date\":\"2015-01-15\",\"value\":209.8},{\"date\":\"2015-01-16\",\"value\":206.9},{\"date\":\"2015-01-17\",\"value\":199.6},{\"date\":\"2015-01-18\",\"value\":210.6},{\"date\":\"2015-01-19\",\"value\":215.9},{\"date\":\"2015-01-20\",\"value\":210.6},{\"date\":\"2015-01-21\",\"value\":228.2},{\"date\":\"2015-01-22\",\"value\":232.7},{\"date\":\"2015-01-23\",\"value\":232.2},{\"date\":\"2015-01-24\",\"value\":248.2},{\"date\":\"2015-01-25\",\"value\":252.1},{\"date\":\"2015-01-26\",\"value\":269.2},{\"date\":\"2015-01-27\",\"value\":263.3},{\"date\":\"2015-01-28\",\"value\":236.2},{\"date\":\"2015-01-29\",\"value\":234},{\"date\":\"2015-01-30\",\"value\":231.8},{\"date\":\"2015-01-31\",\"value\":218.5},{\"date\":\"2015-02-01\",\"value\":225.3},{\"date\":\"2015-02-02\",\"value\":238.9},{\"date\":\"2015-02-03\",\"value\":227.4},{\"date\":\"2015-02-04\",\"value\":226.6},{\"date\":\"2015-02-05\",\"value\":216.5},{\"date\":\"2015-02-06\",\"value\":223},{\"date\":\"2015-02-07\",\"value\":227.7},{\"date\":\"2015-02-08\",\"value\":223.7},{\"date\":\"2015-02-09\",\"value\":220.3},{\"date\":\"2015-02-10\",\"value\":219.7},{\"date\":\"2015-02-11\",\"value\":218.8},{\"date\":\"2015-02-12\",\"value\":221.8},{\"date\":\"2015-02-13\",\"value\":236.2},{\"date\":\"2015-02-14\",\"value\":258.6},{\"date\":\"2015-02-15\",\"value\":233.3},{\"date\":\"2015-02-16\",\"value\":235.8},{\"date\":\"2015-02-17\",\"value\":243.2},{\"date\":\"2015-02-18\",\"value\":235.2},{\"date\":\"2015-02-19\",\"value\":241.9},{\"date\":\"2015-02-20\",\"value\":244.5},{\"date\":\"2015-02-21\",\"value\":244.4},{\"date\":\"2015-02-22\",\"value\":235.7},{\"date\":\"2015-02-23\",\"value\":238.8},{\"date\":\"2015-02-24\",\"value\":238.9},{\"date\":\"2015-02-25\",\"value\":237.3},{\"date\":\"2015-02-26\",\"value\":236.5},{\"date\":\"2015-02-27\",\"value\":253.5},{\"date\":\"2015-02-28\",\"value\":254.1},{\"date\":\"2015-03-01\",\"value\":257.9},{\"date\":\"2015-03-02\",\"value\":273.8},{\"date\":\"2015-03-03\",\"value\":280.6},{\"date\":\"2015-03-04\",\"value\":271.9},{\"date\":\"2015-03-05\",\"value\":275.2},{\"date\":\"2015-03-06\",\"value\":272.6},{\"date\":\"2015-03-07\",\"value\":274.9},{\"date\":\"2015-03-08\",\"value\":274.5},{\"date\":\"2015-03-09\",\"value\":290},{\"date\":\"2015-03-10\",\"value\":291.4},{\"date\":\"2015-03-11\",\"value\":295.6},{\"date\":\"2015-03-12\",\"value\":293.9},{\"date\":\"2015-03-13\",\"value\":287.2},{\"date\":\"2015-03-14\",\"value\":281.6},{\"date\":\"2015-03-15\",\"value\":284.9},{\"date\":\"2015-03-16\",\"value\":290.4},{\"date\":\"2015-03-17\",\"value\":285.4},{\"date\":\"2015-03-18\",\"value\":255.9},{\"date\":\"2015-03-19\",\"value\":260.9},{\"date\":\"2015-03-20\",\"value\":261.8},{\"date\":\"2015-03-21\",\"value\":259.7},{\"date\":\"2015-03-22\",\"value\":268.6},{\"date\":\"2015-03-23\",\"value\":265.5},{\"date\":\"2015-03-24\",\"value\":246.7},{\"date\":\"2015-03-25\",\"value\":246.4},{\"date\":\"2015-03-26\",\"value\":248},{\"date\":\"2015-03-27\",\"value\":247.2},{\"date\":\"2015-03-28\",\"value\":252},{\"date\":\"2015-03-29\",\"value\":242.1},{\"date\":\"2015-03-30\",\"value\":246.8},{\"date\":\"2015-03-31\",\"value\":244.1},{\"date\":\"2015-04-01\",\"value\":246.2},{\"date\":\"2015-04-02\",\"value\":252.6},{\"date\":\"2015-04-03\",\"value\":254.5},{\"date\":\"2015-04-04\",\"value\":252.9},{\"date\":\"2015-04-05\",\"value\":259.6},{\"date\":\"2015-04-06\",\"value\":255},{\"date\":\"2015-04-07\",\"value\":253},{\"date\":\"2015-04-08\",\"value\":244.6},{\"date\":\"2015-04-09\",\"value\":243.3},{\"date\":\"2015-04-10\",\"value\":234.7},{\"date\":\"2015-04-11\",\"value\":236.5},{\"date\":\"2015-04-12\",\"value\":235.9},{\"date\":\"2015-04-13\",\"value\":223.6},{\"date\":\"2015-04-14\",\"value\":218},{\"date\":\"2015-04-15\",\"value\":223},{\"date\":\"2015-04-16\",\"value\":228},{\"date\":\"2015-04-17\",\"value\":222.6},{\"date\":\"2015-04-18\",\"value\":223.4},{\"date\":\"2015-04-19\",\"value\":223},{\"date\":\"2015-04-20\",\"value\":224.2},{\"date\":\"2015-04-21\",\"value\":233.7},{\"date\":\"2015-04-22\",\"value\":233.8},{\"date\":\"2015-04-23\",\"value\":235.4},{\"date\":\"2015-04-24\",\"value\":231.1},{\"date\":\"2015-04-25\",\"value\":226.1},{\"date\":\"2015-04-26\",\"value\":218.7},{\"date\":\"2015-04-27\",\"value\":229},{\"date\":\"2015-04-28\",\"value\":225.8},{\"date\":\"2015-04-29\",\"value\":225.4},{\"date\":\"2015-04-30\",\"value\":235.8},{\"date\":\"2015-05-01\",\"value\":233.2},{\"date\":\"2015-05-02\",\"value\":235.3},{\"date\":\"2015-05-03\",\"value\":240},{\"date\":\"2015-05-04\",\"value\":239},{\"date\":\"2015-05-05\",\"value\":235.8},{\"date\":\"2015-05-06\",\"value\":230},{\"date\":\"2015-05-07\",\"value\":237.7},{\"date\":\"2015-05-08\",\"value\":243.7},{\"date\":\"2015-05-09\",\"value\":241.4},{\"date\":\"2015-05-10\",\"value\":240},{\"date\":\"2015-05-11\",\"value\":241.8},{\"date\":\"2015-05-12\",\"value\":241.6},{\"date\":\"2015-05-13\",\"value\":236.4},{\"date\":\"2015-05-14\",\"value\":236.9},{\"date\":\"2015-05-15\",\"value\":237.2},{\"date\":\"2015-05-16\",\"value\":236.2},{\"date\":\"2015-05-17\",\"value\":236.3},{\"date\":\"2015-05-18\",\"value\":232.6},{\"date\":\"2015-05-19\",\"value\":232},{\"date\":\"2015-05-20\",\"value\":234},{\"date\":\"2015-05-21\",\"value\":235.4},{\"date\":\"2015-05-22\",\"value\":240.4},{\"date\":\"2015-05-23\",\"value\":238.9},{\"date\":\"2015-05-24\",\"value\":241},{\"date\":\"2015-05-25\",\"value\":237.4},{\"date\":\"2015-05-26\",\"value\":237.8},{\"date\":\"2015-05-27\",\"value\":237.3},{\"date\":\"2015-05-28\",\"value\":237.3},{\"date\":\"2015-05-29\",\"value\":237},{\"date\":\"2015-05-30\",\"value\":233.2},{\"date\":\"2015-05-31\",\"value\":229.8},{\"date\":\"2015-06-01\",\"value\":223.1},{\"date\":\"2015-06-02\",\"value\":225.7},{\"date\":\"2015-06-03\",\"value\":225.6},{\"date\":\"2015-06-04\",\"value\":224.2},{\"date\":\"2015-06-05\",\"value\":225.3},{\"date\":\"2015-06-06\",\"value\":224.7},{\"date\":\"2015-06-07\",\"value\":223.5},{\"date\":\"2015-06-08\",\"value\":228.6},{\"date\":\"2015-06-09\",\"value\":229.6},{\"date\":\"2015-06-10\",\"value\":228.8},{\"date\":\"2015-06-11\",\"value\":229.9},{\"date\":\"2015-06-12\",\"value\":230.5},{\"date\":\"2015-06-13\",\"value\":232.5},{\"date\":\"2015-06-14\",\"value\":233.8},{\"date\":\"2015-06-15\",\"value\":237},{\"date\":\"2015-06-16\",\"value\":249.8},{\"date\":\"2015-06-17\",\"value\":247.4},{\"date\":\"2015-06-18\",\"value\":248.4},{\"date\":\"2015-06-19\",\"value\":244.1},{\"date\":\"2015-06-20\",\"value\":245},{\"date\":\"2015-06-21\",\"value\":244.1},{\"date\":\"2015-06-22\",\"value\":247.5},{\"date\":\"2015-06-23\",\"value\":243.8},{\"date\":\"2015-06-24\",\"value\":240.6},{\"date\":\"2015-06-25\",\"value\":242.6},{\"date\":\"2015-06-26\",\"value\":242.9},{\"date\":\"2015-06-27\",\"value\":250.7},{\"date\":\"2015-06-28\",\"value\":248.9},{\"date\":\"2015-06-29\",\"value\":257},{\"date\":\"2015-06-30\",\"value\":264.1},{\"date\":\"2015-07-01\",\"value\":257.6},{\"date\":\"2015-07-02\",\"value\":254.9},{\"date\":\"2015-07-03\",\"value\":255.4},{\"date\":\"2015-07-04\",\"value\":260.5},{\"date\":\"2015-07-05\",\"value\":270.1},{\"date\":\"2015-07-06\",\"value\":269.1},{\"date\":\"2015-07-07\",\"value\":266.2},{\"date\":\"2015-07-08\",\"value\":268.6},{\"date\":\"2015-07-09\",\"value\":269.1},{\"date\":\"2015-07-10\",\"value\":283.6},{\"date\":\"2015-07-11\",\"value\":292},{\"date\":\"2015-07-12\",\"value\":310.4},{\"date\":\"2015-07-13\",\"value\":290.4},{\"date\":\"2015-07-14\",\"value\":287},{\"date\":\"2015-07-15\",\"value\":283.4},{\"date\":\"2015-07-16\",\"value\":276.6},{\"date\":\"2015-07-17\",\"value\":279.6},{\"date\":\"2015-07-18\",\"value\":274},{\"date\":\"2015-07-19\",\"value\":273.2},{\"date\":\"2015-07-20\",\"value\":277.7},{\"date\":\"2015-07-21\",\"value\":275.1},{\"date\":\"2015-07-22\",\"value\":276.5},{\"date\":\"2015-07-23\",\"value\":275.5},{\"date\":\"2015-07-24\",\"value\":288.4},{\"date\":\"2015-07-25\",\"value\":288.7},{\"date\":\"2015-07-26\",\"value\":291.8},{\"date\":\"2015-07-27\",\"value\":293},{\"date\":\"2015-07-28\",\"value\":293.7},{\"date\":\"2015-07-29\",\"value\":288.4},{\"date\":\"2015-07-30\",\"value\":287},{\"date\":\"2015-07-31\",\"value\":283.7},{\"date\":\"2015-08-01\",\"value\":280.5},{\"date\":\"2015-08-02\",\"value\":281.4},{\"date\":\"2015-08-03\",\"value\":281.6},{\"date\":\"2015-08-04\",\"value\":284.3},{\"date\":\"2015-08-05\",\"value\":281.7},{\"date\":\"2015-08-06\",\"value\":278},{\"date\":\"2015-08-07\",\"value\":277.9},{\"date\":\"2015-08-08\",\"value\":258.6},{\"date\":\"2015-08-09\",\"value\":263.9},{\"date\":\"2015-08-10\",\"value\":263.3},{\"date\":\"2015-08-11\",\"value\":269},{\"date\":\"2015-08-12\",\"value\":267.7},{\"date\":\"2015-08-13\",\"value\":263.4},{\"date\":\"2015-08-14\",\"value\":265},{\"date\":\"2015-08-15\",\"value\":260.5},{\"date\":\"2015-08-16\",\"value\":257.1},{\"date\":\"2015-08-17\",\"value\":257.1},{\"date\":\"2015-08-18\",\"value\":246.7},{\"date\":\"2015-08-19\",\"value\":226},{\"date\":\"2015-08-20\",\"value\":234.7},{\"date\":\"2015-08-21\",\"value\":232.4},{\"date\":\"2015-08-22\",\"value\":229.5},{\"date\":\"2015-08-23\",\"value\":226.8},{\"date\":\"2015-08-24\",\"value\":211.4},{\"date\":\"2015-08-25\",\"value\":220.5},{\"date\":\"2015-08-26\",\"value\":225},{\"date\":\"2015-08-27\",\"value\":222.7},{\"date\":\"2015-08-28\",\"value\":231.6},{\"date\":\"2015-08-29\",\"value\":228.5},{\"date\":\"2015-08-30\",\"value\":228.4},{\"date\":\"2015-08-31\",\"value\":229.5},{\"date\":\"2015-09-01\",\"value\":227.2},{\"date\":\"2015-09-02\",\"value\":228.6},{\"date\":\"2015-09-03\",\"value\":226.2},{\"date\":\"2015-09-04\",\"value\":230.3},{\"date\":\"2015-09-05\",\"value\":233.7},{\"date\":\"2015-09-06\",\"value\":239.9},{\"date\":\"2015-09-07\",\"value\":239.6},{\"date\":\"2015-09-08\",\"value\":243.2},{\"date\":\"2015-09-09\",\"value\":237.4},{\"date\":\"2015-09-10\",\"value\":238.1},{\"date\":\"2015-09-11\",\"value\":239.9},{\"date\":\"2015-09-12\",\"value\":235.6},{\"date\":\"2015-09-13\",\"value\":230.2},{\"date\":\"2015-09-14\",\"value\":229.9},{\"date\":\"2015-09-15\",\"value\":229.5},{\"date\":\"2015-09-16\",\"value\":228.6},{\"date\":\"2015-09-17\",\"value\":232.7},{\"date\":\"2015-09-18\",\"value\":232.2},{\"date\":\"2015-09-19\",\"value\":231.1},{\"date\":\"2015-09-20\",\"value\":231.1},{\"date\":\"2015-09-21\",\"value\":226.3},{\"date\":\"2015-09-22\",\"value\":230},{\"date\":\"2015-09-23\",\"value\":229.9},{\"date\":\"2015-09-24\",\"value\":233.8},{\"date\":\"2015-09-25\",\"value\":235},{\"date\":\"2015-09-26\",\"value\":234.3},{\"date\":\"2015-09-27\",\"value\":232.5},{\"date\":\"2015-09-28\",\"value\":238.9},{\"date\":\"2015-09-29\",\"value\":236.7},{\"date\":\"2015-09-30\",\"value\":235.9},{\"date\":\"2015-10-01\",\"value\":237.1},{\"date\":\"2015-10-02\",\"value\":236.7},{\"date\":\"2015-10-03\",\"value\":238.6},{\"date\":\"2015-10-04\",\"value\":238.3},{\"date\":\"2015-10-05\",\"value\":240.1},{\"date\":\"2015-10-06\",\"value\":246.1},{\"date\":\"2015-10-07\",\"value\":243},{\"date\":\"2015-10-08\",\"value\":242.6},{\"date\":\"2015-10-09\",\"value\":244},{\"date\":\"2015-10-10\",\"value\":245.4},{\"date\":\"2015-10-11\",\"value\":247.6},{\"date\":\"2015-10-12\",\"value\":245.4},{\"date\":\"2015-10-13\",\"value\":248.8},{\"date\":\"2015-10-14\",\"value\":252.3},{\"date\":\"2015-10-15\",\"value\":254.4},{\"date\":\"2015-10-16\",\"value\":262.9},{\"date\":\"2015-10-17\",\"value\":269.6},{\"date\":\"2015-10-18\",\"value\":261.7},{\"date\":\"2015-10-19\",\"value\":263.8},{\"date\":\"2015-10-20\",\"value\":269.8},{\"date\":\"2015-10-21\",\"value\":267.1},{\"date\":\"2015-10-22\",\"value\":274.4},{\"date\":\"2015-10-23\",\"value\":276.9},{\"date\":\"2015-10-24\",\"value\":282.6},{\"date\":\"2015-10-25\",\"value\":287.9},{\"date\":\"2015-10-26\",\"value\":285.1},{\"date\":\"2015-10-27\",\"value\":294.7},{\"date\":\"2015-10-28\",\"value\":303.5},{\"date\":\"2015-10-29\",\"value\":313.6},{\"date\":\"2015-10-30\",\"value\":327.1},{\"date\":\"2015-10-31\",\"value\":311.2},{\"date\":\"2015-11-01\",\"value\":323},{\"date\":\"2015-11-02\",\"value\":359.3},{\"date\":\"2015-11-03\",\"value\":396.5},{\"date\":\"2015-11-04\",\"value\":400.9},{\"date\":\"2015-11-05\",\"value\":382.7},{\"date\":\"2015-11-06\",\"value\":369.8},{\"date\":\"2015-11-07\",\"value\":385.1},{\"date\":\"2015-11-08\",\"value\":371.6},{\"date\":\"2015-11-09\",\"value\":380.2},{\"date\":\"2015-11-10\",\"value\":336.7},{\"date\":\"2015-11-11\",\"value\":304.7},{\"date\":\"2015-11-12\",\"value\":333.9},{\"date\":\"2015-11-13\",\"value\":333.8},{\"date\":\"2015-11-14\",\"value\":331.8},{\"date\":\"2015-11-15\",\"value\":317.5},{\"date\":\"2015-11-16\",\"value\":330.2},{\"date\":\"2015-11-17\",\"value\":333.9},{\"date\":\"2015-11-18\",\"value\":335.9},{\"date\":\"2015-11-19\",\"value\":325},{\"date\":\"2015-11-20\",\"value\":321.1},{\"date\":\"2015-11-21\",\"value\":324.7},{\"date\":\"2015-11-22\",\"value\":322.8},{\"date\":\"2015-11-23\",\"value\":322.1},{\"date\":\"2015-11-24\",\"value\":318.4},{\"date\":\"2015-11-25\",\"value\":327.5},{\"date\":\"2015-11-26\",\"value\":353.7},{\"date\":\"2015-11-27\",\"value\":359.5},{\"date\":\"2015-11-28\",\"value\":355.8},{\"date\":\"2015-11-29\",\"value\":370.8},{\"date\":\"2015-11-30\",\"value\":378},{\"date\":\"2015-12-01\",\"value\":361.8},{\"date\":\"2015-12-02\",\"value\":360},{\"date\":\"2015-12-03\",\"value\":360.3},{\"date\":\"2015-12-04\",\"value\":361.7},{\"date\":\"2015-12-05\",\"value\":386.7},{\"date\":\"2015-12-06\",\"value\":393.4},{\"date\":\"2015-12-07\",\"value\":394.3},{\"date\":\"2015-12-08\",\"value\":410.7},{\"date\":\"2015-12-09\",\"value\":416},{\"date\":\"2015-12-10\",\"value\":415.5},{\"date\":\"2015-12-11\",\"value\":449.8},{\"date\":\"2015-12-12\",\"value\":432.3},{\"date\":\"2015-12-13\",\"value\":434.7},{\"date\":\"2015-12-14\",\"value\":442},{\"date\":\"2015-12-15\",\"value\":462.6},{\"date\":\"2015-12-16\",\"value\":454},{\"date\":\"2015-12-17\",\"value\":455.5},{\"date\":\"2015-12-18\",\"value\":463.2},{\"date\":\"2015-12-19\",\"value\":461.2},{\"date\":\"2015-12-20\",\"value\":441.8},{\"date\":\"2015-12-21\",\"value\":437.6},{\"date\":\"2015-12-22\",\"value\":437},{\"date\":\"2015-12-23\",\"value\":442.4},{\"date\":\"2015-12-24\",\"value\":453},{\"date\":\"2015-12-25\",\"value\":454},{\"date\":\"2015-12-26\",\"value\":415.4},{\"date\":\"2015-12-27\",\"value\":422.4},{\"date\":\"2015-12-28\",\"value\":421.8},{\"date\":\"2015-12-29\",\"value\":431.9},{\"date\":\"2015-12-30\",\"value\":427.1},{\"date\":\"2015-12-31\",\"value\":430},{\"date\":\"2016-01-01\",\"value\":434},{\"date\":\"2016-01-02\",\"value\":433.7},{\"date\":\"2016-01-03\",\"value\":430.7},{\"date\":\"2016-01-04\",\"value\":433.3},{\"date\":\"2016-01-05\",\"value\":431.2},{\"date\":\"2016-01-06\",\"value\":430.8},{\"date\":\"2016-01-07\",\"value\":457},{\"date\":\"2016-01-08\",\"value\":452.9},{\"date\":\"2016-01-09\",\"value\":448.3},{\"date\":\"2016-01-10\",\"value\":446.2},{\"date\":\"2016-01-11\",\"value\":447.7},{\"date\":\"2016-01-12\",\"value\":445},{\"date\":\"2016-01-13\",\"value\":432.2},{\"date\":\"2016-01-14\",\"value\":429.1},{\"date\":\"2016-01-15\",\"value\":372.3},{\"date\":\"2016-01-16\",\"value\":385},{\"date\":\"2016-01-17\",\"value\":382.5},{\"date\":\"2016-01-18\",\"value\":384.4},{\"date\":\"2016-01-19\",\"value\":379.5},{\"date\":\"2016-01-20\",\"value\":414.6},{\"date\":\"2016-01-21\",\"value\":410.2},{\"date\":\"2016-01-22\",\"value\":382.6},{\"date\":\"2016-01-23\",\"value\":388.6},{\"date\":\"2016-01-24\",\"value\":402.1},{\"date\":\"2016-01-25\",\"value\":392.8},{\"date\":\"2016-01-26\",\"value\":389.8},{\"date\":\"2016-01-27\",\"value\":395},{\"date\":\"2016-01-28\",\"value\":379.7},{\"date\":\"2016-01-29\",\"value\":380.3},{\"date\":\"2016-01-30\",\"value\":377.8},{\"date\":\"2016-01-31\",\"value\":369.8},{\"date\":\"2016-02-01\",\"value\":372.2},{\"date\":\"2016-02-02\",\"value\":373.9},{\"date\":\"2016-02-03\",\"value\":368},{\"date\":\"2016-02-04\",\"value\":390.6},{\"date\":\"2016-02-05\",\"value\":386.5},{\"date\":\"2016-02-06\",\"value\":376.7},{\"date\":\"2016-02-07\",\"value\":377.9},{\"date\":\"2016-02-08\",\"value\":372.6},{\"date\":\"2016-02-09\",\"value\":375.3},{\"date\":\"2016-02-10\",\"value\":381.9},{\"date\":\"2016-02-11\",\"value\":379.5},{\"date\":\"2016-02-12\",\"value\":384},{\"date\":\"2016-02-13\",\"value\":390.1},{\"date\":\"2016-02-14\",\"value\":405.5},{\"date\":\"2016-02-15\",\"value\":401.1},{\"date\":\"2016-02-16\",\"value\":406.4},{\"date\":\"2016-02-17\",\"value\":417.1},{\"date\":\"2016-02-18\",\"value\":421.4},{\"date\":\"2016-02-19\",\"value\":420},{\"date\":\"2016-02-20\",\"value\":440.1},{\"date\":\"2016-02-21\",\"value\":437.9},{\"date\":\"2016-02-22\",\"value\":437.8},{\"date\":\"2016-02-23\",\"value\":419.9},{\"date\":\"2016-02-24\",\"value\":422.7},{\"date\":\"2016-02-25\",\"value\":423.5},{\"date\":\"2016-02-26\",\"value\":427.3},{\"date\":\"2016-02-27\",\"value\":431.3},{\"date\":\"2016-02-28\",\"value\":432.5},{\"date\":\"2016-02-29\",\"value\":436.2},{\"date\":\"2016-03-01\",\"value\":434},{\"date\":\"2016-03-02\",\"value\":425.4},{\"date\":\"2016-03-03\",\"value\":419.6},{\"date\":\"2016-03-04\",\"value\":409.5},{\"date\":\"2016-03-05\",\"value\":399},{\"date\":\"2016-03-06\",\"value\":406},{\"date\":\"2016-03-07\",\"value\":414.9},{\"date\":\"2016-03-08\",\"value\":411.9},{\"date\":\"2016-03-09\",\"value\":412.8},{\"date\":\"2016-03-10\",\"value\":415.8},{\"date\":\"2016-03-11\",\"value\":419.1},{\"date\":\"2016-03-12\",\"value\":410.4},{\"date\":\"2016-03-13\",\"value\":412.4},{\"date\":\"2016-03-14\",\"value\":414.3},{\"date\":\"2016-03-15\",\"value\":415.1},{\"date\":\"2016-03-16\",\"value\":415.9},{\"date\":\"2016-03-17\",\"value\":418.2},{\"date\":\"2016-03-18\",\"value\":408.2},{\"date\":\"2016-03-19\",\"value\":408.7},{\"date\":\"2016-03-20\",\"value\":411.5},{\"date\":\"2016-03-21\",\"value\":411.1},{\"date\":\"2016-03-22\",\"value\":416.2},{\"date\":\"2016-03-23\",\"value\":417},{\"date\":\"2016-03-24\",\"value\":414.7},{\"date\":\"2016-03-25\",\"value\":415.7},{\"date\":\"2016-03-26\",\"value\":416.5},{\"date\":\"2016-03-27\",\"value\":424.6},{\"date\":\"2016-03-28\",\"value\":422.2},{\"date\":\"2016-03-29\",\"value\":415},{\"date\":\"2016-03-30\",\"value\":412.4},{\"date\":\"2016-03-31\",\"value\":415.7},{\"date\":\"2016-04-01\",\"value\":415.6},{\"date\":\"2016-04-02\",\"value\":418.5},{\"date\":\"2016-04-03\",\"value\":419.1},{\"date\":\"2016-04-04\",\"value\":419.3},{\"date\":\"2016-04-05\",\"value\":422.1},{\"date\":\"2016-04-06\",\"value\":421.3},{\"date\":\"2016-04-07\",\"value\":420.1},{\"date\":\"2016-04-08\",\"value\":417.7},{\"date\":\"2016-04-09\",\"value\":418},{\"date\":\"2016-04-10\",\"value\":420.3},{\"date\":\"2016-04-11\",\"value\":421.4},{\"date\":\"2016-04-12\",\"value\":424.7},{\"date\":\"2016-04-13\",\"value\":423.5},{\"date\":\"2016-04-14\",\"value\":424},{\"date\":\"2016-04-15\",\"value\":428.7},{\"date\":\"2016-04-16\",\"value\":430},{\"date\":\"2016-04-17\",\"value\":426.3},{\"date\":\"2016-04-18\",\"value\":427.7},{\"date\":\"2016-04-19\",\"value\":434.9},{\"date\":\"2016-04-20\",\"value\":441.2},{\"date\":\"2016-04-21\",\"value\":449.3},{\"date\":\"2016-04-22\",\"value\":445.3},{\"date\":\"2016-04-23\",\"value\":450.1},{\"date\":\"2016-04-24\",\"value\":457.6},{\"date\":\"2016-04-25\",\"value\":461.7},{\"date\":\"2016-04-26\",\"value\":466},{\"date\":\"2016-04-27\",\"value\":447},{\"date\":\"2016-04-28\",\"value\":448.5},{\"date\":\"2016-04-29\",\"value\":455},{\"date\":\"2016-04-30\",\"value\":448.5},{\"date\":\"2016-05-01\",\"value\":452.2},{\"date\":\"2016-05-02\",\"value\":444.2},{\"date\":\"2016-05-03\",\"value\":450.3},{\"date\":\"2016-05-04\",\"value\":445.8},{\"date\":\"2016-05-05\",\"value\":448.1},{\"date\":\"2016-05-06\",\"value\":459.6},{\"date\":\"2016-05-07\",\"value\":458.5},{\"date\":\"2016-05-08\",\"value\":457.9},{\"date\":\"2016-05-09\",\"value\":460.4},{\"date\":\"2016-05-10\",\"value\":449.4},{\"date\":\"2016-05-11\",\"value\":452.5},{\"date\":\"2016-05-12\",\"value\":454.4},{\"date\":\"2016-05-13\",\"value\":455.4},{\"date\":\"2016-05-14\",\"value\":456.4},{\"date\":\"2016-05-15\",\"value\":458.1},{\"date\":\"2016-05-16\",\"value\":454.9},{\"date\":\"2016-05-17\",\"value\":453.3},{\"date\":\"2016-05-18\",\"value\":454.2},{\"date\":\"2016-05-19\",\"value\":442.7},{\"date\":\"2016-05-20\",\"value\":442.1},{\"date\":\"2016-05-21\",\"value\":443.6},{\"date\":\"2016-05-22\",\"value\":439.6},{\"date\":\"2016-05-23\",\"value\":443.7},{\"date\":\"2016-05-24\",\"value\":446.1},{\"date\":\"2016-05-25\",\"value\":449.8},{\"date\":\"2016-05-26\",\"value\":453.3},{\"date\":\"2016-05-27\",\"value\":474},{\"date\":\"2016-05-28\",\"value\":524.2},{\"date\":\"2016-05-29\",\"value\":516},{\"date\":\"2016-05-30\",\"value\":532.3},{\"date\":\"2016-05-31\",\"value\":528.9},{\"date\":\"2016-06-01\",\"value\":537.4},{\"date\":\"2016-06-02\",\"value\":537.1},{\"date\":\"2016-06-03\",\"value\":567},{\"date\":\"2016-06-04\",\"value\":572},{\"date\":\"2016-06-05\",\"value\":574.9},{\"date\":\"2016-06-06\",\"value\":583.6},{\"date\":\"2016-06-07\",\"value\":575.6},{\"date\":\"2016-06-08\",\"value\":580.5},{\"date\":\"2016-06-09\",\"value\":574.7},{\"date\":\"2016-06-10\",\"value\":577.9},{\"date\":\"2016-06-11\",\"value\":591.6},{\"date\":\"2016-06-12\",\"value\":666.5},{\"date\":\"2016-06-13\",\"value\":700.1},{\"date\":\"2016-06-14\",\"value\":685.1},{\"date\":\"2016-06-15\",\"value\":690.8},{\"date\":\"2016-06-16\",\"value\":761.2},{\"date\":\"2016-06-17\",\"value\":743.9},{\"date\":\"2016-06-18\",\"value\":753.8},{\"date\":\"2016-06-19\",\"value\":761},{\"date\":\"2016-06-20\",\"value\":734},{\"date\":\"2016-06-21\",\"value\":667.4},{\"date\":\"2016-06-22\",\"value\":590.6},{\"date\":\"2016-06-23\",\"value\":620.8},{\"date\":\"2016-06-24\",\"value\":656.9},{\"date\":\"2016-06-25\",\"value\":663.5},{\"date\":\"2016-06-26\",\"value\":625.4},{\"date\":\"2016-06-27\",\"value\":644.7},{\"date\":\"2016-06-28\",\"value\":644.9},{\"date\":\"2016-06-29\",\"value\":636.5},{\"date\":\"2016-06-30\",\"value\":670},{\"date\":\"2016-07-01\",\"value\":674.6},{\"date\":\"2016-07-02\",\"value\":698.1},{\"date\":\"2016-07-03\",\"value\":661.6},{\"date\":\"2016-07-04\",\"value\":675.2},{\"date\":\"2016-07-05\",\"value\":663.7},{\"date\":\"2016-07-06\",\"value\":672.7},{\"date\":\"2016-07-07\",\"value\":635.3},{\"date\":\"2016-07-08\",\"value\":662.8},{\"date\":\"2016-07-09\",\"value\":651.8},{\"date\":\"2016-07-10\",\"value\":647.1},{\"date\":\"2016-07-11\",\"value\":646.7},{\"date\":\"2016-07-12\",\"value\":670.6},{\"date\":\"2016-07-13\",\"value\":661.2},{\"date\":\"2016-07-14\",\"value\":657.3},{\"date\":\"2016-07-15\",\"value\":664.2},{\"date\":\"2016-07-16\",\"value\":660.7},{\"date\":\"2016-07-17\",\"value\":676.3},{\"date\":\"2016-07-18\",\"value\":670.4},{\"date\":\"2016-07-19\",\"value\":671.1},{\"date\":\"2016-07-20\",\"value\":664.4},{\"date\":\"2016-07-21\",\"value\":664.6},{\"date\":\"2016-07-22\",\"value\":651.1},{\"date\":\"2016-07-23\",\"value\":655.2},{\"date\":\"2016-07-24\",\"value\":659.3},{\"date\":\"2016-07-25\",\"value\":654},{\"date\":\"2016-07-26\",\"value\":654.4},{\"date\":\"2016-07-27\",\"value\":654.5},{\"date\":\"2016-07-28\",\"value\":654.1},{\"date\":\"2016-07-29\",\"value\":655.4},{\"date\":\"2016-07-30\",\"value\":654.7},{\"date\":\"2016-07-31\",\"value\":621.9},{\"date\":\"2016-08-01\",\"value\":607},{\"date\":\"2016-08-02\",\"value\":513.4},{\"date\":\"2016-08-03\",\"value\":566.4},{\"date\":\"2016-08-04\",\"value\":576.2},{\"date\":\"2016-08-05\",\"value\":574.7},{\"date\":\"2016-08-06\",\"value\":586.5},{\"date\":\"2016-08-07\",\"value\":590.8},{\"date\":\"2016-08-08\",\"value\":589.2},{\"date\":\"2016-08-09\",\"value\":585.3},{\"date\":\"2016-08-10\",\"value\":590.9},{\"date\":\"2016-08-11\",\"value\":587.8},{\"date\":\"2016-08-12\",\"value\":587.1},{\"date\":\"2016-08-13\",\"value\":584.6},{\"date\":\"2016-08-14\",\"value\":569.1},{\"date\":\"2016-08-15\",\"value\":567},{\"date\":\"2016-08-16\",\"value\":580.2},{\"date\":\"2016-08-17\",\"value\":572.3},{\"date\":\"2016-08-18\",\"value\":573.4},{\"date\":\"2016-08-19\",\"value\":574.6},{\"date\":\"2016-08-20\",\"value\":582.6},{\"date\":\"2016-08-21\",\"value\":580.7},{\"date\":\"2016-08-22\",\"value\":587.5},{\"date\":\"2016-08-23\",\"value\":583.6},{\"date\":\"2016-08-24\",\"value\":579.7},{\"date\":\"2016-08-25\",\"value\":578},{\"date\":\"2016-08-26\",\"value\":579.4},{\"date\":\"2016-08-27\",\"value\":570.3},{\"date\":\"2016-08-28\",\"value\":575},{\"date\":\"2016-08-29\",\"value\":574.2},{\"date\":\"2016-08-30\",\"value\":577.3},{\"date\":\"2016-08-31\",\"value\":573.9},{\"date\":\"2016-09-01\",\"value\":572},{\"date\":\"2016-09-02\",\"value\":575.3},{\"date\":\"2016-09-03\",\"value\":598.8},{\"date\":\"2016-09-04\",\"value\":609.5},{\"date\":\"2016-09-05\",\"value\":605.8},{\"date\":\"2016-09-06\",\"value\":610.4},{\"date\":\"2016-09-07\",\"value\":613.2},{\"date\":\"2016-09-08\",\"value\":625.6},{\"date\":\"2016-09-09\",\"value\":623.2},{\"date\":\"2016-09-10\",\"value\":624.5},{\"date\":\"2016-09-11\",\"value\":605.6},{\"date\":\"2016-09-12\",\"value\":608},{\"date\":\"2016-09-13\",\"value\":608.6},{\"date\":\"2016-09-14\",\"value\":609.5},{\"date\":\"2016-09-15\",\"value\":608.1},{\"date\":\"2016-09-16\",\"value\":607.8},{\"date\":\"2016-09-17\",\"value\":607.1},{\"date\":\"2016-09-18\",\"value\":610.7},{\"date\":\"2016-09-19\",\"value\":609.8},{\"date\":\"2016-09-20\",\"value\":609.2},{\"date\":\"2016-09-21\",\"value\":597.2},{\"date\":\"2016-09-22\",\"value\":595.6},{\"date\":\"2016-09-23\",\"value\":602.9},{\"date\":\"2016-09-24\",\"value\":602.6},{\"date\":\"2016-09-25\",\"value\":601.5},{\"date\":\"2016-09-26\",\"value\":606.5},{\"date\":\"2016-09-27\",\"value\":605.5},{\"date\":\"2016-09-28\",\"value\":604.7},{\"date\":\"2016-09-29\",\"value\":604.7},{\"date\":\"2016-09-30\",\"value\":608.1},{\"date\":\"2016-10-01\",\"value\":613.4},{\"date\":\"2016-10-02\",\"value\":610.7},{\"date\":\"2016-10-03\",\"value\":611.6},{\"date\":\"2016-10-04\",\"value\":609},{\"date\":\"2016-10-05\",\"value\":611.8},{\"date\":\"2016-10-06\",\"value\":611},{\"date\":\"2016-10-07\",\"value\":616},{\"date\":\"2016-10-08\",\"value\":617.7},{\"date\":\"2016-10-09\",\"value\":615.8},{\"date\":\"2016-10-10\",\"value\":617.3},{\"date\":\"2016-10-11\",\"value\":640.5},{\"date\":\"2016-10-12\",\"value\":636},{\"date\":\"2016-10-13\",\"value\":635.6},{\"date\":\"2016-10-14\",\"value\":637.9},{\"date\":\"2016-10-15\",\"value\":637},{\"date\":\"2016-10-16\",\"value\":640.1},{\"date\":\"2016-10-17\",\"value\":637.4},{\"date\":\"2016-10-18\",\"value\":635.3},{\"date\":\"2016-10-19\",\"value\":629.1},{\"date\":\"2016-10-20\",\"value\":628.3},{\"date\":\"2016-10-21\",\"value\":630.5},{\"date\":\"2016-10-22\",\"value\":655.5},{\"date\":\"2016-10-23\",\"value\":653},{\"date\":\"2016-10-24\",\"value\":650.5},{\"date\":\"2016-10-25\",\"value\":651},{\"date\":\"2016-10-26\",\"value\":674.7},{\"date\":\"2016-10-27\",\"value\":682.3},{\"date\":\"2016-10-28\",\"value\":686.2},{\"date\":\"2016-10-29\",\"value\":715},{\"date\":\"2016-10-30\",\"value\":697.3},{\"date\":\"2016-10-31\",\"value\":698.7},{\"date\":\"2016-11-01\",\"value\":726.8},{\"date\":\"2016-11-02\",\"value\":733.5},{\"date\":\"2016-11-03\",\"value\":684.9},{\"date\":\"2016-11-04\",\"value\":702.1},{\"date\":\"2016-11-05\",\"value\":702.1},{\"date\":\"2016-11-06\",\"value\":709.9},{\"date\":\"2016-11-07\",\"value\":705.4},{\"date\":\"2016-11-08\",\"value\":710.9},{\"date\":\"2016-11-09\",\"value\":721.4},{\"date\":\"2016-11-10\",\"value\":714.6},{\"date\":\"2016-11-11\",\"value\":715},{\"date\":\"2016-11-12\",\"value\":704.3},{\"date\":\"2016-11-13\",\"value\":702},{\"date\":\"2016-11-14\",\"value\":704.6},{\"date\":\"2016-11-15\",\"value\":711.1},{\"date\":\"2016-11-16\",\"value\":740.3},{\"date\":\"2016-11-17\",\"value\":737.5},{\"date\":\"2016-11-18\",\"value\":747},{\"date\":\"2016-11-19\",\"value\":747.9},{\"date\":\"2016-11-20\",\"value\":728.5},{\"date\":\"2016-11-21\",\"value\":736.2},{\"date\":\"2016-11-22\",\"value\":749.3},{\"date\":\"2016-11-23\",\"value\":741.1},{\"date\":\"2016-11-24\",\"value\":735.3},{\"date\":\"2016-11-25\",\"value\":740.4},{\"date\":\"2016-11-26\",\"value\":734.1},{\"date\":\"2016-11-27\",\"value\":729.4},{\"date\":\"2016-11-28\",\"value\":733.3},{\"date\":\"2016-11-29\",\"value\":732.6},{\"date\":\"2016-11-30\",\"value\":742.5},{\"date\":\"2016-12-01\",\"value\":752.6},{\"date\":\"2016-12-02\",\"value\":770.9},{\"date\":\"2016-12-03\",\"value\":764.2},{\"date\":\"2016-12-04\",\"value\":766.4},{\"date\":\"2016-12-05\",\"value\":754.3},{\"date\":\"2016-12-06\",\"value\":758.2},{\"date\":\"2016-12-07\",\"value\":765.6},{\"date\":\"2016-12-08\",\"value\":768.5},{\"date\":\"2016-12-09\",\"value\":770.5},{\"date\":\"2016-12-10\",\"value\":774},{\"date\":\"2016-12-11\",\"value\":767.9},{\"date\":\"2016-12-12\",\"value\":778.5},{\"date\":\"2016-12-13\",\"value\":778.7},{\"date\":\"2016-12-14\",\"value\":776.5},{\"date\":\"2016-12-15\",\"value\":775.2},{\"date\":\"2016-12-16\",\"value\":782},{\"date\":\"2016-12-17\",\"value\":787.2},{\"date\":\"2016-12-18\",\"value\":789},{\"date\":\"2016-12-19\",\"value\":789.8},{\"date\":\"2016-12-20\",\"value\":799.1},{\"date\":\"2016-12-21\",\"value\":829.2},{\"date\":\"2016-12-22\",\"value\":860.2},{\"date\":\"2016-12-23\",\"value\":917.2},{\"date\":\"2016-12-24\",\"value\":891.1},{\"date\":\"2016-12-25\",\"value\":891.1},{\"date\":\"2016-12-26\",\"value\":898.4},{\"date\":\"2016-12-27\",\"value\":925.8},{\"date\":\"2016-12-28\",\"value\":972.2},{\"date\":\"2016-12-29\",\"value\":971.1},{\"date\":\"2016-12-30\",\"value\":959},{\"date\":\"2016-12-31\",\"value\":963.4},{\"date\":\"2017-01-01\",\"value\":995.4},{\"date\":\"2017-01-02\",\"value\":1017},{\"date\":\"2017-01-03\",\"value\":1033.3},{\"date\":\"2017-01-04\",\"value\":1135.4},{\"date\":\"2017-01-05\",\"value\":989.3},{\"date\":\"2017-01-06\",\"value\":886.2},{\"date\":\"2017-01-07\",\"value\":888.9},{\"date\":\"2017-01-08\",\"value\":900.9},{\"date\":\"2017-01-09\",\"value\":899.8},{\"date\":\"2017-01-10\",\"value\":904.4},{\"date\":\"2017-01-11\",\"value\":785.4},{\"date\":\"2017-01-12\",\"value\":810.1},{\"date\":\"2017-01-13\",\"value\":824.8},{\"date\":\"2017-01-14\",\"value\":819.6},{\"date\":\"2017-01-15\",\"value\":821.2},{\"date\":\"2017-01-16\",\"value\":827.3},{\"date\":\"2017-01-17\",\"value\":899.7},{\"date\":\"2017-01-18\",\"value\":872},{\"date\":\"2017-01-19\",\"value\":895.2},{\"date\":\"2017-01-20\",\"value\":892.9},{\"date\":\"2017-01-21\",\"value\":919.8},{\"date\":\"2017-01-22\",\"value\":918.8},{\"date\":\"2017-01-23\",\"value\":921.5},{\"date\":\"2017-01-24\",\"value\":893.8},{\"date\":\"2017-01-25\",\"value\":894.4},{\"date\":\"2017-01-26\",\"value\":915.6},{\"date\":\"2017-01-27\",\"value\":918},{\"date\":\"2017-01-28\",\"value\":918.5},{\"date\":\"2017-01-29\",\"value\":914.5},{\"date\":\"2017-01-30\",\"value\":920.7},{\"date\":\"2017-01-31\",\"value\":965.5},{\"date\":\"2017-02-01\",\"value\":982.4},{\"date\":\"2017-02-02\",\"value\":1004},{\"date\":\"2017-02-03\",\"value\":1013},{\"date\":\"2017-02-04\",\"value\":1031.8},{\"date\":\"2017-02-05\",\"value\":1016.1},{\"date\":\"2017-02-06\",\"value\":1024.7},{\"date\":\"2017-02-07\",\"value\":1049.6},{\"date\":\"2017-02-08\",\"value\":1055.5},{\"date\":\"2017-02-09\",\"value\":979},{\"date\":\"2017-02-10\",\"value\":997.6},{\"date\":\"2017-02-11\",\"value\":1008.3},{\"date\":\"2017-02-12\",\"value\":996.5},{\"date\":\"2017-02-13\",\"value\":995.4},{\"date\":\"2017-02-14\",\"value\":1008.3},{\"date\":\"2017-02-15\",\"value\":1008.2},{\"date\":\"2017-02-16\",\"value\":1031.9},{\"date\":\"2017-02-17\",\"value\":1049.4},{\"date\":\"2017-02-18\",\"value\":1052.3},{\"date\":\"2017-02-19\",\"value\":1048.9},{\"date\":\"2017-02-20\",\"value\":1077.6},{\"date\":\"2017-02-21\",\"value\":1119},{\"date\":\"2017-02-22\",\"value\":1120.5},{\"date\":\"2017-02-23\",\"value\":1171.9},{\"date\":\"2017-02-24\",\"value\":1176.5},{\"date\":\"2017-02-25\",\"value\":1149.1},{\"date\":\"2017-02-26\",\"value\":1171.6},{\"date\":\"2017-02-27\",\"value\":1188.8},{\"date\":\"2017-02-28\",\"value\":1189.3},{\"date\":\"2017-03-01\",\"value\":1222.7},{\"date\":\"2017-03-02\",\"value\":1255.5},{\"date\":\"2017-03-03\",\"value\":1283.3},{\"date\":\"2017-03-04\",\"value\":1264.3},{\"date\":\"2017-03-05\",\"value\":1271.2},{\"date\":\"2017-03-06\",\"value\":1277},{\"date\":\"2017-03-07\",\"value\":1232.7},{\"date\":\"2017-03-08\",\"value\":1147},{\"date\":\"2017-03-09\",\"value\":1191.3},{\"date\":\"2017-03-10\",\"value\":1112.4},{\"date\":\"2017-03-11\",\"value\":1179.2},{\"date\":\"2017-03-12\",\"value\":1225.1},{\"date\":\"2017-03-13\",\"value\":1238.2},{\"date\":\"2017-03-14\",\"value\":1243.1},{\"date\":\"2017-03-15\",\"value\":1253.4},{\"date\":\"2017-03-16\",\"value\":1172.9},{\"date\":\"2017-03-17\",\"value\":1071.7},{\"date\":\"2017-03-18\",\"value\":971.4},{\"date\":\"2017-03-19\",\"value\":1022.6},{\"date\":\"2017-03-20\",\"value\":1047.5},{\"date\":\"2017-03-21\",\"value\":1121.3},{\"date\":\"2017-03-22\",\"value\":1044.7},{\"date\":\"2017-03-23\",\"value\":1035},{\"date\":\"2017-03-24\",\"value\":939.7},{\"date\":\"2017-03-25\",\"value\":966.3},{\"date\":\"2017-03-26\",\"value\":969.4},{\"date\":\"2017-03-27\",\"value\":1045.1},{\"date\":\"2017-03-28\",\"value\":1044.4},{\"date\":\"2017-03-29\",\"value\":1041.9},{\"date\":\"2017-03-30\",\"value\":1037.9},{\"date\":\"2017-03-31\",\"value\":1079.1},{\"date\":\"2017-04-01\",\"value\":1086.1},{\"date\":\"2017-04-02\",\"value\":1097.4},{\"date\":\"2017-04-03\",\"value\":1147.6},{\"date\":\"2017-04-04\",\"value\":1141.8},{\"date\":\"2017-04-05\",\"value\":1129.9},{\"date\":\"2017-04-06\",\"value\":1188.7},{\"date\":\"2017-04-07\",\"value\":1190.5},{\"date\":\"2017-04-08\",\"value\":1180.8},{\"date\":\"2017-04-09\",\"value\":1204.3},{\"date\":\"2017-04-10\",\"value\":1206.7},{\"date\":\"2017-04-11\",\"value\":1220.7},{\"date\":\"2017-04-12\",\"value\":1212.5},{\"date\":\"2017-04-13\",\"value\":1176.2},{\"date\":\"2017-04-14\",\"value\":1177.3},{\"date\":\"2017-04-15\",\"value\":1177},{\"date\":\"2017-04-16\",\"value\":1176.8},{\"date\":\"2017-04-17\",\"value\":1194},{\"date\":\"2017-04-18\",\"value\":1206.1},{\"date\":\"2017-04-19\",\"value\":1215.2},{\"date\":\"2017-04-20\",\"value\":1238.1},{\"date\":\"2017-04-21\",\"value\":1249.6},{\"date\":\"2017-04-22\",\"value\":1240.9},{\"date\":\"2017-04-23\",\"value\":1249.1},{\"date\":\"2017-04-24\",\"value\":1248.2},{\"date\":\"2017-04-25\",\"value\":1264.3},{\"date\":\"2017-04-26\",\"value\":1286.6},{\"date\":\"2017-04-27\",\"value\":1332.9},{\"date\":\"2017-04-28\",\"value\":1329.6},{\"date\":\"2017-04-29\",\"value\":1336.3},{\"date\":\"2017-04-30\",\"value\":1351.9},{\"date\":\"2017-05-01\",\"value\":1415.8},{\"date\":\"2017-05-02\",\"value\":1445.9},{\"date\":\"2017-05-03\",\"value\":1485.6},{\"date\":\"2017-05-04\",\"value\":1516.8},{\"date\":\"2017-05-05\",\"value\":1507.8},{\"date\":\"2017-05-06\",\"value\":1545.3},{\"date\":\"2017-05-07\",\"value\":1554.4},{\"date\":\"2017-05-08\",\"value\":1664.5},{\"date\":\"2017-05-09\",\"value\":1697.5},{\"date\":\"2017-05-10\",\"value\":1752.3},{\"date\":\"2017-05-11\",\"value\":1819.3},{\"date\":\"2017-05-12\",\"value\":1686.4},{\"date\":\"2017-05-13\",\"value\":1763.7},{\"date\":\"2017-05-14\",\"value\":1772.6},{\"date\":\"2017-05-15\",\"value\":1708.9},{\"date\":\"2017-05-16\",\"value\":1729.3},{\"date\":\"2017-05-17\",\"value\":1801.3},{\"date\":\"2017-05-18\",\"value\":1881},{\"date\":\"2017-05-19\",\"value\":1962},{\"date\":\"2017-05-20\",\"value\":2040.2},{\"date\":\"2017-05-21\",\"value\":2044.2},{\"date\":\"2017-05-22\",\"value\":2124.4},{\"date\":\"2017-05-23\",\"value\":2272.6},{\"date\":\"2017-05-24\",\"value\":2445.3},{\"date\":\"2017-05-25\",\"value\":2307.2},{\"date\":\"2017-05-26\",\"value\":2244.9},{\"date\":\"2017-05-27\",\"value\":2052.4},{\"date\":\"2017-05-28\",\"value\":2189},{\"date\":\"2017-05-29\",\"value\":2278.2},{\"date\":\"2017-05-30\",\"value\":2192.6},{\"date\":\"2017-05-31\",\"value\":2303.3},{\"date\":\"2017-06-01\",\"value\":2412.6},{\"date\":\"2017-06-02\",\"value\":2492.6},{\"date\":\"2017-06-03\",\"value\":2545.4},{\"date\":\"2017-06-04\",\"value\":2524.1},{\"date\":\"2017-06-05\",\"value\":2705},{\"date\":\"2017-06-06\",\"value\":2870.5},{\"date\":\"2017-06-07\",\"value\":2691.5},{\"date\":\"2017-06-08\",\"value\":2798.8},{\"date\":\"2017-06-09\",\"value\":2811.4},{\"date\":\"2017-06-10\",\"value\":2900.3},{\"date\":\"2017-06-11\",\"value\":2973.4},{\"date\":\"2017-06-12\",\"value\":2656.8},{\"date\":\"2017-06-13\",\"value\":2713},{\"date\":\"2017-06-14\",\"value\":2467.3},{\"date\":\"2017-06-15\",\"value\":2442.5},{\"date\":\"2017-06-16\",\"value\":2508.6},{\"date\":\"2017-06-17\",\"value\":2655.1},{\"date\":\"2017-06-18\",\"value\":2539.6},{\"date\":\"2017-06-19\",\"value\":2616.8},{\"date\":\"2017-06-20\",\"value\":2754.4},{\"date\":\"2017-06-21\",\"value\":2677.6},{\"date\":\"2017-06-22\",\"value\":2722.8},{\"date\":\"2017-06-23\",\"value\":2710.4},{\"date\":\"2017-06-24\",\"value\":2590.1},{\"date\":\"2017-06-25\",\"value\":2541.6},{\"date\":\"2017-06-26\",\"value\":2446.1},{\"date\":\"2017-06-27\",\"value\":2583.8},{\"date\":\"2017-06-28\",\"value\":2577.7},{\"date\":\"2017-06-29\",\"value\":2558.4},{\"date\":\"2017-06-30\",\"value\":2480.6},{\"date\":\"2017-07-01\",\"value\":2424.6},{\"date\":\"2017-07-02\",\"value\":2536.5},{\"date\":\"2017-07-03\",\"value\":2572.5},{\"date\":\"2017-07-04\",\"value\":2617.3},{\"date\":\"2017-07-05\",\"value\":2627.9},{\"date\":\"2017-07-06\",\"value\":2614.2},{\"date\":\"2017-07-07\",\"value\":2513.9},{\"date\":\"2017-07-08\",\"value\":2564.9},{\"date\":\"2017-07-09\",\"value\":2511.4},{\"date\":\"2017-07-10\",\"value\":2344},{\"date\":\"2017-07-11\",\"value\":2324.3},{\"date\":\"2017-07-12\",\"value\":2403.1},{\"date\":\"2017-07-13\",\"value\":2362.4},{\"date\":\"2017-07-14\",\"value\":2234.2},{\"date\":\"2017-07-15\",\"value\":1975.1},{\"date\":\"2017-07-16\",\"value\":1914.1},{\"date\":\"2017-07-17\",\"value\":2233.4},{\"date\":\"2017-07-18\",\"value\":2320.2},{\"date\":\"2017-07-19\",\"value\":2282.6},{\"date\":\"2017-07-20\",\"value\":2866},{\"date\":\"2017-07-21\",\"value\":2675.1},{\"date\":\"2017-07-22\",\"value\":2836.5},{\"date\":\"2017-07-23\",\"value\":2756.6},{\"date\":\"2017-07-24\",\"value\":2763.4},{\"date\":\"2017-07-25\",\"value\":2582.6},{\"date\":\"2017-07-26\",\"value\":2559.2},{\"date\":\"2017-07-27\",\"value\":2691.9},{\"date\":\"2017-07-28\",\"value\":2806.8},{\"date\":\"2017-07-29\",\"value\":2733.5},{\"date\":\"2017-07-30\",\"value\":2766.5},{\"date\":\"2017-07-31\",\"value\":2883.3},{\"date\":\"2017-08-01\",\"value\":2747},{\"date\":\"2017-08-02\",\"value\":2720.5},{\"date\":\"2017-08-03\",\"value\":2810},{\"date\":\"2017-08-04\",\"value\":2878.5},{\"date\":\"2017-08-05\",\"value\":3262.8},{\"date\":\"2017-08-06\",\"value\":3232},{\"date\":\"2017-08-07\",\"value\":3401.9},{\"date\":\"2017-08-08\",\"value\":3429.4},{\"date\":\"2017-08-09\",\"value\":3348.8},{\"date\":\"2017-08-10\",\"value\":3425.7},{\"date\":\"2017-08-11\",\"value\":3654.4},{\"date\":\"2017-08-12\",\"value\":3871.6},{\"date\":\"2017-08-13\",\"value\":4062.6},{\"date\":\"2017-08-14\",\"value\":4327.9},{\"date\":\"2017-08-15\",\"value\":4161.7},{\"date\":\"2017-08-16\",\"value\":4387.4},{\"date\":\"2017-08-17\",\"value\":4278.9},{\"date\":\"2017-08-18\",\"value\":4105.4},{\"date\":\"2017-08-19\",\"value\":4150.5},{\"date\":\"2017-08-20\",\"value\":4066.6},{\"date\":\"2017-08-21\",\"value\":4005.1},{\"date\":\"2017-08-22\",\"value\":4089.7},{\"date\":\"2017-08-23\",\"value\":4141.1},{\"date\":\"2017-08-24\",\"value\":4318.4},{\"date\":\"2017-08-25\",\"value\":4364.4},{\"date\":\"2017-08-26\",\"value\":4352.3},{\"date\":\"2017-08-27\",\"value\":4345.8},{\"date\":\"2017-08-28\",\"value\":4390.3},{\"date\":\"2017-08-29\",\"value\":4597.3},{\"date\":\"2017-08-30\",\"value\":4583},{\"date\":\"2017-08-31\",\"value\":4735.1},{\"date\":\"2017-09-01\",\"value\":4921.9},{\"date\":\"2017-09-02\",\"value\":4573.8},{\"date\":\"2017-09-03\",\"value\":4612.9},{\"date\":\"2017-09-04\",\"value\":4267.5},{\"date\":\"2017-09-05\",\"value\":4409.1},{\"date\":\"2017-09-06\",\"value\":4618.7},{\"date\":\"2017-09-07\",\"value\":4635.6},{\"date\":\"2017-09-08\",\"value\":4326.5},{\"date\":\"2017-09-09\",\"value\":4335.1},{\"date\":\"2017-09-10\",\"value\":4245.9},{\"date\":\"2017-09-11\",\"value\":4217.9},{\"date\":\"2017-09-12\",\"value\":4158.9},{\"date\":\"2017-09-13\",\"value\":3870.3},{\"date\":\"2017-09-14\",\"value\":3243.1},{\"date\":\"2017-09-15\",\"value\":3713.8},{\"date\":\"2017-09-16\",\"value\":3698.9},{\"date\":\"2017-09-17\",\"value\":3689.6},{\"date\":\"2017-09-18\",\"value\":4100.3},{\"date\":\"2017-09-19\",\"value\":3908},{\"date\":\"2017-09-20\",\"value\":3882.2},{\"date\":\"2017-09-21\",\"value\":3617.3},{\"date\":\"2017-09-22\",\"value\":3600.8},{\"date\":\"2017-09-23\",\"value\":3788},{\"date\":\"2017-09-24\",\"value\":3667.5},{\"date\":\"2017-09-25\",\"value\":3932.8},{\"date\":\"2017-09-26\",\"value\":3892.7},{\"date\":\"2017-09-27\",\"value\":4212.2},{\"date\":\"2017-09-28\",\"value\":4195.6},{\"date\":\"2017-09-29\",\"value\":4172.8},{\"date\":\"2017-09-30\",\"value\":4360.6},{\"date\":\"2017-10-01\",\"value\":4403.1},{\"date\":\"2017-10-02\",\"value\":4401.3},{\"date\":\"2017-10-03\",\"value\":4314.2},{\"date\":\"2017-10-04\",\"value\":4218.7},{\"date\":\"2017-10-05\",\"value\":4321.4},{\"date\":\"2017-10-06\",\"value\":4371.9},{\"date\":\"2017-10-07\",\"value\":4435.8},{\"date\":\"2017-10-08\",\"value\":4611.7},{\"date\":\"2017-10-09\",\"value\":4777.5},{\"date\":\"2017-10-10\",\"value\":4763.4},{\"date\":\"2017-10-11\",\"value\":4824.2},{\"date\":\"2017-10-12\",\"value\":5432.6},{\"date\":\"2017-10-13\",\"value\":5637.3},{\"date\":\"2017-10-14\",\"value\":5824.7},{\"date\":\"2017-10-15\",\"value\":5688.1},{\"date\":\"2017-10-16\",\"value\":5759.3},{\"date\":\"2017-10-17\",\"value\":5598.6},{\"date\":\"2017-10-18\",\"value\":5575.8},{\"date\":\"2017-10-19\",\"value\":5698.6},{\"date\":\"2017-10-20\",\"value\":5993.1},{\"date\":\"2017-10-21\",\"value\":6006.6},{\"date\":\"2017-10-22\",\"value\":5982.9},{\"date\":\"2017-10-23\",\"value\":5903.6},{\"date\":\"2017-10-24\",\"value\":5513.1},{\"date\":\"2017-10-25\",\"value\":5734},{\"date\":\"2017-10-26\",\"value\":5887.6},{\"date\":\"2017-10-27\",\"value\":5764.6},{\"date\":\"2017-10-28\",\"value\":5726.6},{\"date\":\"2017-10-29\",\"value\":6147.5},{\"date\":\"2017-10-30\",\"value\":6124.3},{\"date\":\"2017-10-31\",\"value\":6451.2},{\"date\":\"2017-11-01\",\"value\":6737.8},{\"date\":\"2017-11-02\",\"value\":7024.8},{\"date\":\"2017-11-03\",\"value\":7152.1},{\"date\":\"2017-11-04\",\"value\":7363.8},{\"date\":\"2017-11-05\",\"value\":7389.5},{\"date\":\"2017-11-06\",\"value\":6959.2},{\"date\":\"2017-11-07\",\"value\":7102.8},{\"date\":\"2017-11-08\",\"value\":7444.4},{\"date\":\"2017-11-09\",\"value\":7129.6},{\"date\":\"2017-11-10\",\"value\":6565.8},{\"date\":\"2017-11-11\",\"value\":6339.9},{\"date\":\"2017-11-12\",\"value\":5878.1},{\"date\":\"2017-11-13\",\"value\":6522.5},{\"date\":\"2017-11-14\",\"value\":6597.1},{\"date\":\"2017-11-15\",\"value\":7283.2},{\"date\":\"2017-11-16\",\"value\":7853.7},{\"date\":\"2017-11-17\",\"value\":7700},{\"date\":\"2017-11-18\",\"value\":7780.9},{\"date\":\"2017-11-19\",\"value\":8042.6},{\"date\":\"2017-11-20\",\"value\":8244.7},{\"date\":\"2017-11-21\",\"value\":8100},{\"date\":\"2017-11-22\",\"value\":8234.5},{\"date\":\"2017-11-23\",\"value\":8013.4},{\"date\":\"2017-11-24\",\"value\":8200.8},{\"date\":\"2017-11-25\",\"value\":8754.7},{\"date\":\"2017-11-26\",\"value\":9318.4},{\"date\":\"2017-11-27\",\"value\":9733.2},{\"date\":\"2017-11-28\",\"value\":9906},{\"date\":\"2017-11-29\",\"value\":9837.9},{\"date\":\"2017-11-30\",\"value\":9946.8},{\"date\":\"2017-12-01\",\"value\":10861.5},{\"date\":\"2017-12-02\",\"value\":10912.7},{\"date\":\"2017-12-03\",\"value\":11246.2},{\"date\":\"2017-12-04\",\"value\":11623.9},{\"date\":\"2017-12-05\",\"value\":11667.1},{\"date\":\"2017-12-06\",\"value\":13749.6},{\"date\":\"2017-12-07\",\"value\":16850.3},{\"date\":\"2017-12-08\",\"value\":16047.6},{\"date\":\"2017-12-09\",\"value\":14843.4},{\"date\":\"2017-12-10\",\"value\":15059.6},{\"date\":\"2017-12-11\",\"value\":16732.5},{\"date\":\"2017-12-12\",\"value\":17083.9},{\"date\":\"2017-12-13\",\"value\":16286.8},{\"date\":\"2017-12-14\",\"value\":16467.9},{\"date\":\"2017-12-15\",\"value\":17604.8},{\"date\":\"2017-12-16\",\"value\":19345.5},{\"date\":\"2017-12-17\",\"value\":19065.7},{\"date\":\"2017-12-18\",\"value\":18972.3},{\"date\":\"2017-12-19\",\"value\":17523.7},{\"date\":\"2017-12-20\",\"value\":16462},{\"date\":\"2017-12-21\",\"value\":15632.1},{\"date\":\"2017-12-22\",\"value\":13665},{\"date\":\"2017-12-23\",\"value\":14396.5},{\"date\":\"2017-12-24\",\"value\":13790},{\"date\":\"2017-12-25\",\"value\":13833.5},{\"date\":\"2017-12-26\",\"value\":15756.6},{\"date\":\"2017-12-27\",\"value\":15416.6},{\"date\":\"2017-12-28\",\"value\":14398.7},{\"date\":\"2017-12-29\",\"value\":14392.6},{\"date\":\"2017-12-30\",\"value\":12531.5},{\"date\":\"2017-12-31\",\"value\":13850.4},{\"date\":\"2018-01-01\",\"value\":13444.9},{\"date\":\"2018-01-02\",\"value\":14754.1},{\"date\":\"2018-01-03\",\"value\":15156.6},{\"date\":\"2018-01-04\",\"value\":15180.1},{\"date\":\"2018-01-05\",\"value\":16954.8},{\"date\":\"2018-01-06\",\"value\":17172.3},{\"date\":\"2018-01-07\",\"value\":16228.2},{\"date\":\"2018-01-08\",\"value\":14976.2},{\"date\":\"2018-01-09\",\"value\":14778.5},{\"date\":\"2018-01-10\",\"value\":15043},{\"date\":\"2018-01-11\",\"value\":13535.4},{\"date\":\"2018-01-12\",\"value\":13886.7},{\"date\":\"2018-01-13\",\"value\":14292.2},{\"date\":\"2018-01-14\",\"value\":13695.2},{\"date\":\"2018-01-15\",\"value\":13697.5},{\"date\":\"2018-01-16\",\"value\":11362},{\"date\":\"2018-01-17\",\"value\":11192.3},{\"date\":\"2018-01-18\",\"value\":11245.4},{\"date\":\"2018-01-19\",\"value\":11580.2},{\"date\":\"2018-01-20\",\"value\":12858.9},{\"date\":\"2018-01-21\",\"value\":11594.9},{\"date\":\"2018-01-22\",\"value\":10864.8},{\"date\":\"2018-01-23\",\"value\":10903.2},{\"date\":\"2018-01-24\",\"value\":11452.3},{\"date\":\"2018-01-25\",\"value\":11203},{\"date\":\"2018-01-26\",\"value\":11118.1},{\"date\":\"2018-01-27\",\"value\":11467.5},{\"date\":\"2018-01-28\",\"value\":11795.1},{\"date\":\"2018-01-29\",\"value\":11244.8},{\"date\":\"2018-01-30\",\"value\":10166},{\"date\":\"2018-01-31\",\"value\":10265.4},{\"date\":\"2018-02-01\",\"value\":9181.1},{\"date\":\"2018-02-02\",\"value\":8893.2},{\"date\":\"2018-02-03\",\"value\":9241.1},{\"date\":\"2018-02-04\",\"value\":8222.2},{\"date\":\"2018-02-05\",\"value\":6938.5},{\"date\":\"2018-02-06\",\"value\":7701.2},{\"date\":\"2018-02-07\",\"value\":7594.7},{\"date\":\"2018-02-08\",\"value\":8164.2},{\"date\":\"2018-02-09\",\"value\":8699.8},{\"date\":\"2018-02-10\",\"value\":8559.6},{\"date\":\"2018-02-11\",\"value\":8081.9},{\"date\":\"2018-02-12\",\"value\":8903.5},{\"date\":\"2018-02-13\",\"value\":8539.2},{\"date\":\"2018-02-14\",\"value\":9476.3},{\"date\":\"2018-02-15\",\"value\":10037.3},{\"date\":\"2018-02-16\",\"value\":10178.7},{\"date\":\"2018-02-17\",\"value\":11073.5},{\"date\":\"2018-02-18\",\"value\":10398.8},{\"date\":\"2018-02-19\",\"value\":11169.4},{\"date\":\"2018-02-20\",\"value\":11238.7},{\"date\":\"2018-02-21\",\"value\":10473},{\"date\":\"2018-02-22\",\"value\":9841.7},{\"date\":\"2018-02-23\",\"value\":10170.4},{\"date\":\"2018-02-24\",\"value\":9704.3},{\"date\":\"2018-02-25\",\"value\":9585.2},{\"date\":\"2018-02-26\",\"value\":10285.1},{\"date\":\"2018-02-27\",\"value\":10594.4},{\"date\":\"2018-02-28\",\"value\":10333.9},{\"date\":\"2018-03-01\",\"value\":10904.5},{\"date\":\"2018-03-02\",\"value\":10827.7},{\"date\":\"2018-03-03\",\"value\":11402.3},{\"date\":\"2018-03-04\",\"value\":11416.5},{\"date\":\"2018-03-05\",\"value\":11330.6},{\"date\":\"2018-03-06\",\"value\":10675.1},{\"date\":\"2018-03-07\",\"value\":9902.9},{\"date\":\"2018-03-08\",\"value\":9300},{\"date\":\"2018-03-09\",\"value\":9217},{\"date\":\"2018-03-10\",\"value\":8762},{\"date\":\"2018-03-11\",\"value\":9529.6},{\"date\":\"2018-03-12\",\"value\":9137.4},{\"date\":\"2018-03-13\",\"value\":9154.9},{\"date\":\"2018-03-14\",\"value\":8210.6},{\"date\":\"2018-03-15\",\"value\":8264.4},{\"date\":\"2018-03-16\",\"value\":8289.2},{\"date\":\"2018-03-17\",\"value\":7874.9},{\"date\":\"2018-03-18\",\"value\":8201.2},{\"date\":\"2018-03-19\",\"value\":8616.8},{\"date\":\"2018-03-20\",\"value\":8912.6},{\"date\":\"2018-03-21\",\"value\":8905.9},{\"date\":\"2018-03-22\",\"value\":8726.2},{\"date\":\"2018-03-23\",\"value\":8916.8},{\"date\":\"2018-03-24\",\"value\":8547.4},{\"date\":\"2018-03-25\",\"value\":8473.2},{\"date\":\"2018-03-26\",\"value\":8143.5},{\"date\":\"2018-03-27\",\"value\":7801.7},{\"date\":\"2018-03-28\",\"value\":7954.9},{\"date\":\"2018-03-29\",\"value\":7129.2},{\"date\":\"2018-03-30\",\"value\":6853.7},{\"date\":\"2018-03-31\",\"value\":6938.2},{\"date\":\"2018-04-01\",\"value\":6825.2},{\"date\":\"2018-04-02\",\"value\":7068.4},{\"date\":\"2018-04-03\",\"value\":7424.2},{\"date\":\"2018-04-04\",\"value\":6808.9},{\"date\":\"2018-04-05\",\"value\":6782},{\"date\":\"2018-04-06\",\"value\":6624.3},{\"date\":\"2018-04-07\",\"value\":6905.7},{\"date\":\"2018-04-08\",\"value\":7030.5},{\"date\":\"2018-04-09\",\"value\":6781.9},{\"date\":\"2018-04-10\",\"value\":6854.8},{\"date\":\"2018-04-11\",\"value\":6962.1},{\"date\":\"2018-04-12\",\"value\":7926.6},{\"date\":\"2018-04-13\",\"value\":7887.4},{\"date\":\"2018-04-14\",\"value\":8004.4},{\"date\":\"2018-04-15\",\"value\":8363.6},{\"date\":\"2018-04-16\",\"value\":8070},{\"date\":\"2018-04-17\",\"value\":7908.6},{\"date\":\"2018-04-18\",\"value\":8178.4},{\"date\":\"2018-04-19\",\"value\":8290.8},{\"date\":\"2018-04-20\",\"value\":8867},{\"date\":\"2018-04-21\",\"value\":8923.1},{\"date\":\"2018-04-22\",\"value\":8806.7},{\"date\":\"2018-04-23\",\"value\":8952.8},{\"date\":\"2018-04-24\",\"value\":9645.3},{\"date\":\"2018-04-25\",\"value\":8873.1},{\"date\":\"2018-04-26\",\"value\":9287},{\"date\":\"2018-04-27\",\"value\":8940.9},{\"date\":\"2018-04-28\",\"value\":9352.4},{\"date\":\"2018-04-29\",\"value\":9415.1},{\"date\":\"2018-04-30\",\"value\":9245.1},{\"date\":\"2018-05-01\",\"value\":9074.9},{\"date\":\"2018-05-02\",\"value\":9243.2},{\"date\":\"2018-05-03\",\"value\":9749.7},{\"date\":\"2018-05-04\",\"value\":9708.6},{\"date\":\"2018-05-05\",\"value\":9853.5},{\"date\":\"2018-05-06\",\"value\":9656.4},{\"date\":\"2018-05-07\",\"value\":9431.6},{\"date\":\"2018-05-08\",\"value\":9196.4},{\"date\":\"2018-05-09\",\"value\":9319.1},{\"date\":\"2018-05-10\",\"value\":9025.7},{\"date\":\"2018-05-11\",\"value\":8408.3},{\"date\":\"2018-05-12\",\"value\":8459.5},{\"date\":\"2018-05-13\",\"value\":8693.5},{\"date\":\"2018-05-14\",\"value\":8674.1},{\"date\":\"2018-05-15\",\"value\":8477},{\"date\":\"2018-05-16\",\"value\":8344.4},{\"date\":\"2018-05-17\",\"value\":8063},{\"date\":\"2018-05-18\",\"value\":8245.7},{\"date\":\"2018-05-19\",\"value\":8245.1},{\"date\":\"2018-05-20\",\"value\":8529},{\"date\":\"2018-05-21\",\"value\":8403.3},{\"date\":\"2018-05-22\",\"value\":8006},{\"date\":\"2018-05-23\",\"value\":7512.3},{\"date\":\"2018-05-24\",\"value\":7592.9},{\"date\":\"2018-05-25\",\"value\":7477.7},{\"date\":\"2018-05-26\",\"value\":7361.3},{\"date\":\"2018-05-27\",\"value\":7366.7},{\"date\":\"2018-05-28\",\"value\":7119.3},{\"date\":\"2018-05-29\",\"value\":7467.7},{\"date\":\"2018-05-30\",\"value\":7400.1},{\"date\":\"2018-05-31\",\"value\":7502.6},{\"date\":\"2018-06-01\",\"value\":7530.8},{\"date\":\"2018-06-02\",\"value\":7646.6},{\"date\":\"2018-06-03\",\"value\":7729.3},{\"date\":\"2018-06-04\",\"value\":7504.3},{\"date\":\"2018-06-05\",\"value\":7631.5},{\"date\":\"2018-06-06\",\"value\":7661},{\"date\":\"2018-06-07\",\"value\":7697.8},{\"date\":\"2018-06-08\",\"value\":7622.1},{\"date\":\"2018-06-09\",\"value\":7515.8},{\"date\":\"2018-06-10\",\"value\":6775.1},{\"date\":\"2018-06-11\",\"value\":6885.9},{\"date\":\"2018-06-12\",\"value\":6558.2},{\"date\":\"2018-06-13\",\"value\":6312.3},{\"date\":\"2018-06-14\",\"value\":6647.1},{\"date\":\"2018-06-15\",\"value\":6410.3},{\"date\":\"2018-06-16\",\"value\":6505.8},{\"date\":\"2018-06-17\",\"value\":6460.3},{\"date\":\"2018-06-18\",\"value\":6719.8},{\"date\":\"2018-06-19\",\"value\":6752.4},{\"date\":\"2018-06-20\",\"value\":6765.4},{\"date\":\"2018-06-21\",\"value\":6728},{\"date\":\"2018-06-22\",\"value\":6055.7},{\"date\":\"2018-06-23\",\"value\":6167.3},{\"date\":\"2018-06-24\",\"value\":6154.6},{\"date\":\"2018-06-25\",\"value\":6256.6},{\"date\":\"2018-06-26\",\"value\":6082.1},{\"date\":\"2018-06-27\",\"value\":6154.9},{\"date\":\"2018-06-28\",\"value\":5883.5},{\"date\":\"2018-06-29\",\"value\":6213.3},{\"date\":\"2018-06-30\",\"value\":6398.9},{\"date\":\"2018-07-01\",\"value\":6366.8},{\"date\":\"2018-07-02\",\"value\":6619.5},{\"date\":\"2018-07-03\",\"value\":6513.5},{\"date\":\"2018-07-04\",\"value\":6598.4},{\"date\":\"2018-07-05\",\"value\":6546.5},{\"date\":\"2018-07-06\",\"value\":6617.7},{\"date\":\"2018-07-07\",\"value\":6765.5},{\"date\":\"2018-07-08\",\"value\":6714.8},{\"date\":\"2018-07-09\",\"value\":6667.1},{\"date\":\"2018-07-10\",\"value\":6307.2},{\"date\":\"2018-07-11\",\"value\":6389.1},{\"date\":\"2018-07-12\",\"value\":6250.6},{\"date\":\"2018-07-13\",\"value\":6230.2},{\"date\":\"2018-07-14\",\"value\":6254.8},{\"date\":\"2018-07-15\",\"value\":6362.9},{\"date\":\"2018-07-16\",\"value\":6729.9},{\"date\":\"2018-07-17\",\"value\":7322},{\"date\":\"2018-07-18\",\"value\":7383.6},{\"date\":\"2018-07-19\",\"value\":7477.5},{\"date\":\"2018-07-20\",\"value\":7339.4},{\"date\":\"2018-07-21\",\"value\":7408.7},{\"date\":\"2018-07-22\",\"value\":7412.3},{\"date\":\"2018-07-23\",\"value\":7723},{\"date\":\"2018-07-24\",\"value\":8407},{\"date\":\"2018-07-25\",\"value\":8173.7},{\"date\":\"2018-07-26\",\"value\":7937},{\"date\":\"2018-07-27\",\"value\":8187.4},{\"date\":\"2018-07-28\",\"value\":8234.1},{\"date\":\"2018-07-29\",\"value\":8215.6},{\"date\":\"2018-07-30\",\"value\":8177.1},{\"date\":\"2018-07-31\",\"value\":7729.4},{\"date\":\"2018-08-01\",\"value\":7606.4},{\"date\":\"2018-08-02\",\"value\":7535.6},{\"date\":\"2018-08-03\",\"value\":7419},{\"date\":\"2018-08-04\",\"value\":7014.3},{\"date\":\"2018-08-05\",\"value\":7027.1},{\"date\":\"2018-08-06\",\"value\":6943.6},{\"date\":\"2018-08-07\",\"value\":6724.9},{\"date\":\"2018-08-08\",\"value\":6283.6},{\"date\":\"2018-08-09\",\"value\":6538.8},{\"date\":\"2018-08-10\",\"value\":6152.3},{\"date\":\"2018-08-11\",\"value\":6231.6},{\"date\":\"2018-08-12\",\"value\":6313},{\"date\":\"2018-08-13\",\"value\":6255.3},{\"date\":\"2018-08-14\",\"value\":6190.2},{\"date\":\"2018-08-15\",\"value\":6256.9},{\"date\":\"2018-08-16\",\"value\":6306.7},{\"date\":\"2018-08-17\",\"value\":6581.7},{\"date\":\"2018-08-18\",\"value\":6379.1},{\"date\":\"2018-08-19\",\"value\":6481.5},{\"date\":\"2018-08-20\",\"value\":6268.1},{\"date\":\"2018-08-21\",\"value\":6482.2},{\"date\":\"2018-08-22\",\"value\":6359.6},{\"date\":\"2018-08-23\",\"value\":6521.2},{\"date\":\"2018-08-24\",\"value\":6680.4},{\"date\":\"2018-08-25\",\"value\":6734.8},{\"date\":\"2018-08-26\",\"value\":6712.7},{\"date\":\"2018-08-27\",\"value\":6897.6},{\"date\":\"2018-08-28\",\"value\":7074.6},{\"date\":\"2018-08-29\",\"value\":7029.1},{\"date\":\"2018-08-30\",\"value\":6993.7},{\"date\":\"2018-08-31\",\"value\":7033.8},{\"date\":\"2018-09-01\",\"value\":7189.6},{\"date\":\"2018-09-02\",\"value\":7293.9},{\"date\":\"2018-09-03\",\"value\":7264.2},{\"date\":\"2018-09-04\",\"value\":7377.5},{\"date\":\"2018-09-05\",\"value\":6706.8},{\"date\":\"2018-09-06\",\"value\":6514},{\"date\":\"2018-09-07\",\"value\":6390.9},{\"date\":\"2018-09-08\",\"value\":6184.3},{\"date\":\"2018-09-09\",\"value\":6238.5},{\"date\":\"2018-09-10\",\"value\":6321},{\"date\":\"2018-09-11\",\"value\":6293.9},{\"date\":\"2018-09-12\",\"value\":6338},{\"date\":\"2018-09-13\",\"value\":6482.9},{\"date\":\"2018-09-14\",\"value\":6483.7},{\"date\":\"2018-09-15\",\"value\":6519},{\"date\":\"2018-09-16\",\"value\":6500.2},{\"date\":\"2018-09-17\",\"value\":6251.9},{\"date\":\"2018-09-18\",\"value\":6342},{\"date\":\"2018-09-19\",\"value\":6390.4},{\"date\":\"2018-09-20\",\"value\":6489.2},{\"date\":\"2018-09-21\",\"value\":6766.7},{\"date\":\"2018-09-22\",\"value\":6729.6},{\"date\":\"2018-09-23\",\"value\":6704.1},{\"date\":\"2018-09-24\",\"value\":6584.1},{\"date\":\"2018-09-25\",\"value\":6445.1},{\"date\":\"2018-09-26\",\"value\":6468.1},{\"date\":\"2018-09-27\",\"value\":6689.2},{\"date\":\"2018-09-28\",\"value\":6636},{\"date\":\"2018-09-29\",\"value\":6603.9},{\"date\":\"2018-09-30\",\"value\":6635.2},{\"date\":\"2018-10-01\",\"value\":6608.2},{\"date\":\"2018-10-02\",\"value\":6549.9},{\"date\":\"2018-10-03\",\"value\":6507.8},{\"date\":\"2018-10-04\",\"value\":6584.2},{\"date\":\"2018-10-05\",\"value\":6639.1},{\"date\":\"2018-10-06\",\"value\":6596.3},{\"date\":\"2018-10-07\",\"value\":6611},{\"date\":\"2018-10-08\",\"value\":6669.6},{\"date\":\"2018-10-09\",\"value\":6650.8},{\"date\":\"2018-10-10\",\"value\":6618},{\"date\":\"2018-10-11\",\"value\":6239.1},{\"date\":\"2018-10-12\",\"value\":6291.3},{\"date\":\"2018-10-13\",\"value\":6321.7},{\"date\":\"2018-10-14\",\"value\":6326.8},{\"date\":\"2018-10-15\",\"value\":6699.8},{\"date\":\"2018-10-16\",\"value\":6705.3},{\"date\":\"2018-10-17\",\"value\":6686.6},{\"date\":\"2018-10-18\",\"value\":6574.1},{\"date\":\"2018-10-19\",\"value\":6512},{\"date\":\"2018-10-20\",\"value\":6572.2},{\"date\":\"2018-10-21\",\"value\":6583},{\"date\":\"2018-10-22\",\"value\":6555.8},{\"date\":\"2018-10-23\",\"value\":6528.7},{\"date\":\"2018-10-24\",\"value\":6530.7},{\"date\":\"2018-10-25\",\"value\":6507},{\"date\":\"2018-10-26\",\"value\":6510},{\"date\":\"2018-10-27\",\"value\":6494.2},{\"date\":\"2018-10-28\",\"value\":6486.1},{\"date\":\"2018-10-29\",\"value\":6335},{\"date\":\"2018-10-30\",\"value\":6325.7},{\"date\":\"2018-10-31\",\"value\":6365.9},{\"date\":\"2018-11-01\",\"value\":6400.5},{\"date\":\"2018-11-02\",\"value\":6424.7},{\"date\":\"2018-11-03\",\"value\":6386.2},{\"date\":\"2018-11-04\",\"value\":6478.2},{\"date\":\"2018-11-05\",\"value\":6459.7},{\"date\":\"2018-11-06\",\"value\":6502.8},{\"date\":\"2018-11-07\",\"value\":6565.3},{\"date\":\"2018-11-08\",\"value\":6474},{\"date\":\"2018-11-09\",\"value\":6412},{\"date\":\"2018-11-10\",\"value\":6427.1},{\"date\":\"2018-11-11\",\"value\":6446.1},{\"date\":\"2018-11-12\",\"value\":6435},{\"date\":\"2018-11-13\",\"value\":6429.2},{\"date\":\"2018-11-14\",\"value\":5842.4},{\"date\":\"2018-11-15\",\"value\":5718.9},{\"date\":\"2018-11-16\",\"value\":5636.2},{\"date\":\"2018-11-17\",\"value\":5621.8},{\"date\":\"2018-11-18\",\"value\":5658.3},{\"date\":\"2018-11-19\",\"value\":4883.8},{\"date\":\"2018-11-20\",\"value\":4524.6},{\"date\":\"2018-11-21\",\"value\":4638.7},{\"date\":\"2018-11-22\",\"value\":4356},{\"date\":\"2018-11-23\",\"value\":4398},{\"date\":\"2018-11-24\",\"value\":3920.4},{\"date\":\"2018-11-25\",\"value\":4062.2},{\"date\":\"2018-11-26\",\"value\":3837},{\"date\":\"2018-11-27\",\"value\":3866.5},{\"date\":\"2018-11-28\",\"value\":4265.4},{\"date\":\"2018-11-29\",\"value\":4296.5},{\"date\":\"2018-11-30\",\"value\":4039.7},{\"date\":\"2018-12-01\",\"value\":4196.2},{\"date\":\"2018-12-02\",\"value\":4160.4},{\"date\":\"2018-12-03\",\"value\":3897.8},{\"date\":\"2018-12-04\",\"value\":3958.5},{\"date\":\"2018-12-05\",\"value\":3771.6},{\"date\":\"2018-12-06\",\"value\":3508.6},{\"date\":\"2018-12-07\",\"value\":3422.2},{\"date\":\"2018-12-08\",\"value\":3430.4},{\"date\":\"2018-12-09\",\"value\":3567.5},{\"date\":\"2018-12-10\",\"value\":3460.5},{\"date\":\"2018-12-11\",\"value\":3407.7},{\"date\":\"2018-12-12\",\"value\":3466.1},{\"date\":\"2018-12-13\",\"value\":3315.3},{\"date\":\"2018-12-14\",\"value\":3247.8},{\"date\":\"2018-12-15\",\"value\":3228.7},{\"date\":\"2018-12-16\",\"value\":3247.9},{\"date\":\"2018-12-17\",\"value\":3526.1},{\"date\":\"2018-12-18\",\"value\":3668},{\"date\":\"2018-12-19\",\"value\":3687.1},{\"date\":\"2018-12-20\",\"value\":4076},{\"date\":\"2018-12-21\",\"value\":3850.9},{\"date\":\"2018-12-22\",\"value\":3964.4},{\"date\":\"2018-12-23\",\"value\":3944.4},{\"date\":\"2018-12-24\",\"value\":4026.1},{\"date\":\"2018-12-25\",\"value\":3762.5},{\"date\":\"2018-12-26\",\"value\":3793.7},{\"date\":\"2018-12-27\",\"value\":3586.9},{\"date\":\"2018-12-28\",\"value\":3861.6},{\"date\":\"2018-12-29\",\"value\":3706.8},{\"date\":\"2018-12-30\",\"value\":3815},{\"date\":\"2018-12-31\",\"value\":3709.4},{\"date\":\"2019-01-01\",\"value\":3809.4},{\"date\":\"2019-01-02\",\"value\":3873.8},{\"date\":\"2019-01-03\",\"value\":3780.1},{\"date\":\"2019-01-04\",\"value\":3802.7},{\"date\":\"2019-01-05\",\"value\":3785.4},{\"date\":\"2019-01-06\",\"value\":4004.1},{\"date\":\"2019-01-07\",\"value\":3985.9},{\"date\":\"2019-01-08\",\"value\":3971},{\"date\":\"2019-01-09\",\"value\":3978},{\"date\":\"2019-01-10\",\"value\":3603.7},{\"date\":\"2019-01-11\",\"value\":3616.5},{\"date\":\"2019-01-12\",\"value\":3597.2},{\"date\":\"2019-01-13\",\"value\":3490.2},{\"date\":\"2019-01-14\",\"value\":3638.1},{\"date\":\"2019-01-15\",\"value\":3571.3},{\"date\":\"2019-01-16\",\"value\":3588},{\"date\":\"2019-01-17\",\"value\":3626.4},{\"date\":\"2019-01-18\",\"value\":3605.6},{\"date\":\"2019-01-19\",\"value\":3677.8},{\"date\":\"2019-01-20\",\"value\":3542.3},{\"date\":\"2019-01-21\",\"value\":3536.7},{\"date\":\"2019-01-22\",\"value\":3580.1},{\"date\":\"2019-01-23\",\"value\":3561.5},{\"date\":\"2019-01-24\",\"value\":3574.3},{\"date\":\"2019-01-25\",\"value\":3572},{\"date\":\"2019-01-26\",\"value\":3570.9},{\"date\":\"2019-01-27\",\"value\":3555.6},{\"date\":\"2019-01-28\",\"value\":3442.8},{\"date\":\"2019-01-29\",\"value\":3414.8},{\"date\":\"2019-01-30\",\"value\":3460},{\"date\":\"2019-01-31\",\"value\":3437.2},{\"date\":\"2019-02-01\",\"value\":3467.9},{\"date\":\"2019-02-02\",\"value\":3502.5},{\"date\":\"2019-02-03\",\"value\":3459.1},{\"date\":\"2019-02-04\",\"value\":3462.8},{\"date\":\"2019-02-05\",\"value\":3468.4},{\"date\":\"2019-02-06\",\"value\":3404.3},{\"date\":\"2019-02-07\",\"value\":3397.7},{\"date\":\"2019-02-08\",\"value\":3661.7},{\"date\":\"2019-02-09\",\"value\":3661.4},{\"date\":\"2019-02-10\",\"value\":3679},{\"date\":\"2019-02-11\",\"value\":3631.8},{\"date\":\"2019-02-12\",\"value\":3632},{\"date\":\"2019-02-13\",\"value\":3611.5},{\"date\":\"2019-02-14\",\"value\":3592.6},{\"date\":\"2019-02-15\",\"value\":3604.7},{\"date\":\"2019-02-16\",\"value\":3616.8},{\"date\":\"2019-02-17\",\"value\":3664.2},{\"date\":\"2019-02-18\",\"value\":3896},{\"date\":\"2019-02-19\",\"value\":3914.3},{\"date\":\"2019-02-20\",\"value\":3972.4},{\"date\":\"2019-02-21\",\"value\":3936.6},{\"date\":\"2019-02-22\",\"value\":3965.2},{\"date\":\"2019-02-23\",\"value\":4120.4},{\"date\":\"2019-02-24\",\"value\":3755.2},{\"date\":\"2019-02-25\",\"value\":3833.7},{\"date\":\"2019-02-26\",\"value\":3810.3},{\"date\":\"2019-02-27\",\"value\":3814.6},{\"date\":\"2019-02-28\",\"value\":3816.6},{\"date\":\"2019-03-01\",\"value\":3821.9},{\"date\":\"2019-03-02\",\"value\":3823.1},{\"date\":\"2019-03-03\",\"value\":3809.5},{\"date\":\"2019-03-04\",\"value\":3715.9},{\"date\":\"2019-03-05\",\"value\":3857.2},{\"date\":\"2019-03-06\",\"value\":3863},{\"date\":\"2019-03-07\",\"value\":3875.1},{\"date\":\"2019-03-08\",\"value\":3865.9},{\"date\":\"2019-03-09\",\"value\":3944.3},{\"date\":\"2019-03-10\",\"value\":3915.2},{\"date\":\"2019-03-11\",\"value\":3870.3},{\"date\":\"2019-03-12\",\"value\":3886},{\"date\":\"2019-03-13\",\"value\":3865.1},{\"date\":\"2019-03-14\",\"value\":3879},{\"date\":\"2019-03-15\",\"value\":3924.3},{\"date\":\"2019-03-16\",\"value\":4006.4},{\"date\":\"2019-03-17\",\"value\":3981.5},{\"date\":\"2019-03-18\",\"value\":3990.2},{\"date\":\"2019-03-19\",\"value\":4017},{\"date\":\"2019-03-20\",\"value\":4041.2},{\"date\":\"2019-03-21\",\"value\":3982.2},{\"date\":\"2019-03-22\",\"value\":3990.4},{\"date\":\"2019-03-23\",\"value\":4002.5},{\"date\":\"2019-03-24\",\"value\":3994.7},{\"date\":\"2019-03-25\",\"value\":3937},{\"date\":\"2019-03-26\",\"value\":3942.8},{\"date\":\"2019-03-27\",\"value\":4041.7},{\"date\":\"2019-03-28\",\"value\":4025.6},{\"date\":\"2019-03-29\",\"value\":4102.2},{\"date\":\"2019-03-30\",\"value\":4111.8},{\"date\":\"2019-03-31\",\"value\":4102.3},{\"date\":\"2019-04-01\",\"value\":4145.1},{\"date\":\"2019-04-02\",\"value\":4859.3},{\"date\":\"2019-04-03\",\"value\":4968.7},{\"date\":\"2019-04-04\",\"value\":4902.4},{\"date\":\"2019-04-05\",\"value\":5010.2},{\"date\":\"2019-04-06\",\"value\":5046.2},{\"date\":\"2019-04-07\",\"value\":5173.6},{\"date\":\"2019-04-08\",\"value\":5245.2},{\"date\":\"2019-04-09\",\"value\":5158.4},{\"date\":\"2019-04-10\",\"value\":5307.8},{\"date\":\"2019-04-11\",\"value\":5022.6},{\"date\":\"2019-04-12\",\"value\":5054.2},{\"date\":\"2019-04-13\",\"value\":5051.8},{\"date\":\"2019-04-14\",\"value\":5134.8},{\"date\":\"2019-04-15\",\"value\":5032.3},{\"date\":\"2019-04-16\",\"value\":5180.9},{\"date\":\"2019-04-17\",\"value\":5208.3},{\"date\":\"2019-04-18\",\"value\":5264.7},{\"date\":\"2019-04-19\",\"value\":5241},{\"date\":\"2019-04-20\",\"value\":5290.2},{\"date\":\"2019-04-21\",\"value\":5243.5},{\"date\":\"2019-04-22\",\"value\":5346.7},{\"date\":\"2019-04-23\",\"value\":5511.6},{\"date\":\"2019-04-24\",\"value\":5415.6},{\"date\":\"2019-04-25\",\"value\":5209.1},{\"date\":\"2019-04-26\",\"value\":5298.3},{\"date\":\"2019-04-27\",\"value\":5265.9},{\"date\":\"2019-04-28\",\"value\":5302.3},{\"date\":\"2019-04-29\",\"value\":5235},{\"date\":\"2019-04-30\",\"value\":5320.8},{\"date\":\"2019-05-01\",\"value\":5384.2},{\"date\":\"2019-05-02\",\"value\":5493.8},{\"date\":\"2019-05-03\",\"value\":5766.8},{\"date\":\"2019-05-04\",\"value\":5830.9},{\"date\":\"2019-05-05\",\"value\":5774.9},{\"date\":\"2019-05-06\",\"value\":5745.1},{\"date\":\"2019-05-07\",\"value\":5849.5},{\"date\":\"2019-05-08\",\"value\":5990.3},{\"date\":\"2019-05-09\",\"value\":6191.5},{\"date\":\"2019-05-10\",\"value\":6386},{\"date\":\"2019-05-11\",\"value\":7190.3},{\"date\":\"2019-05-12\",\"value\":6984.8},{\"date\":\"2019-05-13\",\"value\":7806},{\"date\":\"2019-05-14\",\"value\":7994.6},{\"date\":\"2019-05-15\",\"value\":8164.6},{\"date\":\"2019-05-16\",\"value\":7871.8},{\"date\":\"2019-05-17\",\"value\":7359.5},{\"date\":\"2019-05-18\",\"value\":7262.6},{\"date\":\"2019-05-19\",\"value\":8157.2},{\"date\":\"2019-05-20\",\"value\":7965.3},{\"date\":\"2019-05-21\",\"value\":7930.3},{\"date\":\"2019-05-22\",\"value\":7635.7},{\"date\":\"2019-05-23\",\"value\":7852.1},{\"date\":\"2019-05-24\",\"value\":7970.1},{\"date\":\"2019-05-25\",\"value\":8027.4},{\"date\":\"2019-05-26\",\"value\":8630.2},{\"date\":\"2019-05-27\",\"value\":8760.1},{\"date\":\"2019-05-28\",\"value\":8716.3},{\"date\":\"2019-05-29\",\"value\":8647.8},{\"date\":\"2019-05-30\",\"value\":8271.9},{\"date\":\"2019-05-31\",\"value\":8558.3},{\"date\":\"2019-06-01\",\"value\":8545.7},{\"date\":\"2019-06-02\",\"value\":8728.6},{\"date\":\"2019-06-03\",\"value\":8124.8},{\"date\":\"2019-06-04\",\"value\":7685.5},{\"date\":\"2019-06-05\",\"value\":7779.1},{\"date\":\"2019-06-06\",\"value\":7784.9},{\"date\":\"2019-06-07\",\"value\":7985.2},{\"date\":\"2019-06-08\",\"value\":7901.4},{\"date\":\"2019-06-09\",\"value\":7635},{\"date\":\"2019-06-10\",\"value\":7987.8},{\"date\":\"2019-06-11\",\"value\":7888},{\"date\":\"2019-06-12\",\"value\":8133.1},{\"date\":\"2019-06-13\",\"value\":8219},{\"date\":\"2019-06-14\",\"value\":8656.1},{\"date\":\"2019-06-15\",\"value\":8812.5},{\"date\":\"2019-06-16\",\"value\":8962.5},{\"date\":\"2019-06-17\",\"value\":9318.8},{\"date\":\"2019-06-18\",\"value\":9080.6},{\"date\":\"2019-06-19\",\"value\":9255.4},{\"date\":\"2019-06-20\",\"value\":9517},{\"date\":\"2019-06-21\",\"value\":10179.3},{\"date\":\"2019-06-22\",\"value\":10721.7},{\"date\":\"2019-06-23\",\"value\":10897.1},{\"date\":\"2019-06-24\",\"value\":11046.4},{\"date\":\"2019-06-25\",\"value\":11809.9},{\"date\":\"2019-06-26\",\"value\":13063.8},{\"date\":\"2019-06-27\",\"value\":11287.8},{\"date\":\"2019-06-28\",\"value\":12409.1},{\"date\":\"2019-06-29\",\"value\":11906.5},{\"date\":\"2019-06-30\",\"value\":10818.6},{\"date\":\"2019-07-01\",\"value\":10616.6},{\"date\":\"2019-07-02\",\"value\":10835.9},{\"date\":\"2019-07-03\",\"value\":11900.8},{\"date\":\"2019-07-04\",\"value\":11163.1},{\"date\":\"2019-07-05\",\"value\":10970.2},{\"date\":\"2019-07-06\",\"value\":11268},{\"date\":\"2019-07-07\",\"value\":11415.9},{\"date\":\"2019-07-08\",\"value\":12252.6},{\"date\":\"2019-07-09\",\"value\":12541.5},{\"date\":\"2019-07-10\",\"value\":12110.6},{\"date\":\"2019-07-11\",\"value\":11342.3},{\"date\":\"2019-07-12\",\"value\":11762.1},{\"date\":\"2019-07-13\",\"value\":11364.9},{\"date\":\"2019-07-14\",\"value\":10200.1},{\"date\":\"2019-07-15\",\"value\":10845.9},{\"date\":\"2019-07-16\",\"value\":9424.8},{\"date\":\"2019-07-17\",\"value\":9723.2},{\"date\":\"2019-07-18\",\"value\":10651.4},{\"date\":\"2019-07-19\",\"value\":10571.5},{\"date\":\"2019-07-20\",\"value\":10826.7},{\"date\":\"2019-07-21\",\"value\":10714.4},{\"date\":\"2019-07-22\",\"value\":10412.5},{\"date\":\"2019-07-23\",\"value\":9888.7},{\"date\":\"2019-07-24\",\"value\":9804.3},{\"date\":\"2019-07-25\",\"value\":9945.3},{\"date\":\"2019-07-26\",\"value\":9831},{\"date\":\"2019-07-27\",\"value\":9492.1},{\"date\":\"2019-07-28\",\"value\":9727.8},{\"date\":\"2019-07-29\",\"value\":9580.9},{\"date\":\"2019-07-30\",\"value\":9580.7},{\"date\":\"2019-07-31\",\"value\":10082},{\"date\":\"2019-08-01\",\"value\":10380},{\"date\":\"2019-08-02\",\"value\":10520.1},{\"date\":\"2019-08-03\",\"value\":10815.7},{\"date\":\"2019-08-04\",\"value\":10934.6},{\"date\":\"2019-08-05\",\"value\":11816.8},{\"date\":\"2019-08-06\",\"value\":11480.9},{\"date\":\"2019-08-07\",\"value\":12013.9},{\"date\":\"2019-08-08\",\"value\":12191.6},{\"date\":\"2019-08-09\",\"value\":12089.8},{\"date\":\"2019-08-10\",\"value\":11314.5},{\"date\":\"2019-08-11\",\"value\":11517.2},{\"date\":\"2019-08-12\",\"value\":11394.2},{\"date\":\"2019-08-13\",\"value\":10892.9},{\"date\":\"2019-08-14\",\"value\":10049.4},{\"date\":\"2019-08-15\",\"value\":10303.4},{\"date\":\"2019-08-16\",\"value\":10335.6},{\"date\":\"2019-08-17\",\"value\":10218.1},{\"date\":\"2019-08-18\",\"value\":10312.7},{\"date\":\"2019-08-19\",\"value\":10910.7},{\"date\":\"2019-08-20\",\"value\":10752.6},{\"date\":\"2019-08-21\",\"value\":10141.5},{\"date\":\"2019-08-22\",\"value\":10105},{\"date\":\"2019-08-23\",\"value\":10388.7},{\"date\":\"2019-08-24\",\"value\":10131},{\"date\":\"2019-08-25\",\"value\":10136.3},{\"date\":\"2019-08-26\",\"value\":10371.8},{\"date\":\"2019-08-27\",\"value\":10184.8},{\"date\":\"2019-08-28\",\"value\":9729.4},{\"date\":\"2019-08-29\",\"value\":9491},{\"date\":\"2019-08-30\",\"value\":9585.4},{\"date\":\"2019-08-31\",\"value\":9594.4},{\"date\":\"2019-09-01\",\"value\":9729.3},{\"date\":\"2019-09-02\",\"value\":10348.8},{\"date\":\"2019-09-03\",\"value\":10612.3},{\"date\":\"2019-09-04\",\"value\":10568.2},{\"date\":\"2019-09-05\",\"value\":10566.9},{\"date\":\"2019-09-06\",\"value\":10309.3},{\"date\":\"2019-09-07\",\"value\":10461.1},{\"date\":\"2019-09-08\",\"value\":10402.8},{\"date\":\"2019-09-09\",\"value\":10309},{\"date\":\"2019-09-10\",\"value\":10105.4},{\"date\":\"2019-09-11\",\"value\":10162.5},{\"date\":\"2019-09-12\",\"value\":10415.1},{\"date\":\"2019-09-13\",\"value\":10342.1},{\"date\":\"2019-09-14\",\"value\":10337.3},{\"date\":\"2019-09-15\",\"value\":10311.5},{\"date\":\"2019-09-16\",\"value\":10255.5},{\"date\":\"2019-09-17\",\"value\":10195.7},{\"date\":\"2019-09-18\",\"value\":10164.7},{\"date\":\"2019-09-19\",\"value\":10250.5},{\"date\":\"2019-09-20\",\"value\":10172.7},{\"date\":\"2019-09-21\",\"value\":9993},{\"date\":\"2019-09-22\",\"value\":10031.6},{\"date\":\"2019-09-23\",\"value\":9702.2},{\"date\":\"2019-09-24\",\"value\":8513.9},{\"date\":\"2019-09-25\",\"value\":8432.4},{\"date\":\"2019-09-26\",\"value\":8063.8},{\"date\":\"2019-09-27\",\"value\":8184.9},{\"date\":\"2019-09-28\",\"value\":8208.5},{\"date\":\"2019-09-29\",\"value\":8049.1},{\"date\":\"2019-09-30\",\"value\":8284.3},{\"date\":\"2019-10-01\",\"value\":8302.7},{\"date\":\"2019-10-02\",\"value\":8364.1},{\"date\":\"2019-10-03\",\"value\":8226.9},{\"date\":\"2019-10-04\",\"value\":8148.1},{\"date\":\"2019-10-05\",\"value\":8127.3},{\"date\":\"2019-10-06\",\"value\":7881.9},{\"date\":\"2019-10-07\",\"value\":8198.6},{\"date\":\"2019-10-08\",\"value\":8182.9},{\"date\":\"2019-10-09\",\"value\":8566.7},{\"date\":\"2019-10-10\",\"value\":8562.3},{\"date\":\"2019-10-11\",\"value\":8267.8},{\"date\":\"2019-10-12\",\"value\":8304.4},{\"date\":\"2019-10-13\",\"value\":8281.5},{\"date\":\"2019-10-14\",\"value\":8353.3},{\"date\":\"2019-10-15\",\"value\":8167.2},{\"date\":\"2019-10-16\",\"value\":8000.4},{\"date\":\"2019-10-17\",\"value\":8073.3},{\"date\":\"2019-10-18\",\"value\":7948.5},{\"date\":\"2019-10-19\",\"value\":7957.3},{\"date\":\"2019-10-20\",\"value\":8223.4},{\"date\":\"2019-10-21\",\"value\":8208.2},{\"date\":\"2019-10-22\",\"value\":8031.4},{\"date\":\"2019-10-23\",\"value\":7477},{\"date\":\"2019-10-24\",\"value\":7422.7},{\"date\":\"2019-10-25\",\"value\":8658.3},{\"date\":\"2019-10-26\",\"value\":9230.6},{\"date\":\"2019-10-27\",\"value\":9529.6},{\"date\":\"2019-10-28\",\"value\":9207.2},{\"date\":\"2019-10-29\",\"value\":9411.3},{\"date\":\"2019-10-30\",\"value\":9157.9},{\"date\":\"2019-10-31\",\"value\":9152.6},{\"date\":\"2019-11-01\",\"value\":9230.1},{\"date\":\"2019-11-02\",\"value\":9300.6},{\"date\":\"2019-11-03\",\"value\":9198.3},{\"date\":\"2019-11-04\",\"value\":9396.4},{\"date\":\"2019-11-05\",\"value\":9310.8},{\"date\":\"2019-11-06\",\"value\":9338.9},{\"date\":\"2019-11-07\",\"value\":9223.5},{\"date\":\"2019-11-08\",\"value\":8778.2},{\"date\":\"2019-11-09\",\"value\":8804.5},{\"date\":\"2019-11-10\",\"value\":9036.8},{\"date\":\"2019-11-11\",\"value\":8736.9},{\"date\":\"2019-11-12\",\"value\":8812.6},{\"date\":\"2019-11-13\",\"value\":8783.1},{\"date\":\"2019-11-14\",\"value\":8661.2},{\"date\":\"2019-11-15\",\"value\":8476.3},{\"date\":\"2019-11-16\",\"value\":8497.3},{\"date\":\"2019-11-17\",\"value\":8509.8},{\"date\":\"2019-11-18\",\"value\":8208.4},{\"date\":\"2019-11-19\",\"value\":8145.7},{\"date\":\"2019-11-20\",\"value\":8099.3},{\"date\":\"2019-11-21\",\"value\":7627.9},{\"date\":\"2019-11-22\",\"value\":7272.5},{\"date\":\"2019-11-23\",\"value\":7324.1},{\"date\":\"2019-11-24\",\"value\":6924.7},{\"date\":\"2019-11-25\",\"value\":7115.6},{\"date\":\"2019-11-26\",\"value\":7162.8},{\"date\":\"2019-11-27\",\"value\":7510.6},{\"date\":\"2019-11-28\",\"value\":7426.7},{\"date\":\"2019-11-29\",\"value\":7742.7},{\"date\":\"2019-11-30\",\"value\":7546.6},{\"date\":\"2019-12-01\",\"value\":7396.4},{\"date\":\"2019-12-02\",\"value\":7298.2},{\"date\":\"2019-12-03\",\"value\":7291.8},{\"date\":\"2019-12-04\",\"value\":7204.4},{\"date\":\"2019-12-05\",\"value\":7399.2},{\"date\":\"2019-12-06\",\"value\":7530.8},{\"date\":\"2019-12-07\",\"value\":7510.9},{\"date\":\"2019-12-08\",\"value\":7524.4},{\"date\":\"2019-12-09\",\"value\":7355.8},{\"date\":\"2019-12-10\",\"value\":7235.7},{\"date\":\"2019-12-11\",\"value\":7208},{\"date\":\"2019-12-12\",\"value\":7208},{\"date\":\"2019-12-13\",\"value\":7255.2},{\"date\":\"2019-12-14\",\"value\":7080.8},{\"date\":\"2019-12-15\",\"value\":7128.5},{\"date\":\"2019-12-16\",\"value\":6903.5},{\"date\":\"2019-12-17\",\"value\":6613.3},{\"date\":\"2019-12-18\",\"value\":7276},{\"date\":\"2019-12-19\",\"value\":7165.5},{\"date\":\"2019-12-20\",\"value\":7196.4},{\"date\":\"2019-12-21\",\"value\":7156.2},{\"date\":\"2019-12-22\",\"value\":7495.8},{\"date\":\"2019-12-23\",\"value\":7322.8},{\"date\":\"2019-12-24\",\"value\":7268.3},{\"date\":\"2019-12-25\",\"value\":7224.8},{\"date\":\"2019-12-26\",\"value\":7210.9},{\"date\":\"2019-12-27\",\"value\":7261.7},{\"date\":\"2019-12-28\",\"value\":7321.5},{\"date\":\"2019-12-29\",\"value\":7397.5},{\"date\":\"2019-12-30\",\"value\":7261.8},{\"date\":\"2019-12-31\",\"value\":7196.4},{\"date\":\"2020-01-01\",\"value\":7199.8},{\"date\":\"2020-01-02\",\"value\":6967},{\"date\":\"2020-01-03\",\"value\":7343.1},{\"date\":\"2020-01-04\",\"value\":7376.8},{\"date\":\"2020-01-05\",\"value\":7372.5},{\"date\":\"2020-01-06\",\"value\":7759.1},{\"date\":\"2020-01-07\",\"value\":8155.7},{\"date\":\"2020-01-08\",\"value\":8059.6},{\"date\":\"2020-01-09\",\"value\":7842.4},{\"date\":\"2020-01-10\",\"value\":8187.1},{\"date\":\"2020-01-11\",\"value\":8024.1},{\"date\":\"2020-01-12\",\"value\":8187.6},{\"date\":\"2020-01-13\",\"value\":8111.4},{\"date\":\"2020-01-14\",\"value\":8829.2},{\"date\":\"2020-01-15\",\"value\":8818.3},{\"date\":\"2020-01-16\",\"value\":8726.9},{\"date\":\"2020-01-17\",\"value\":8913.1},{\"date\":\"2020-01-18\",\"value\":8916.3},{\"date\":\"2020-01-19\",\"value\":8706.2},{\"date\":\"2020-01-20\",\"value\":8641.9},{\"date\":\"2020-01-21\",\"value\":8732.6},{\"date\":\"2020-01-22\",\"value\":8678.5},{\"date\":\"2020-01-23\",\"value\":8405.1},{\"date\":\"2020-01-24\",\"value\":8439.9},{\"date\":\"2020-01-25\",\"value\":8341.6},{\"date\":\"2020-01-26\",\"value\":8607.8},{\"date\":\"2020-01-27\",\"value\":8866.6},{\"date\":\"2020-01-28\",\"value\":9377.3},{\"date\":\"2020-01-29\",\"value\":9298.9},{\"date\":\"2020-01-30\",\"value\":9507.3},{\"date\":\"2020-01-31\",\"value\":9349.1},{\"date\":\"2020-02-01\",\"value\":9381.6},{\"date\":\"2020-02-02\",\"value\":9334.9},{\"date\":\"2020-02-03\",\"value\":9296.6},{\"date\":\"2020-02-04\",\"value\":9193.9},{\"date\":\"2020-02-05\",\"value\":9611.8},{\"date\":\"2020-02-06\",\"value\":9772},{\"date\":\"2020-02-07\",\"value\":9818.6},{\"date\":\"2020-02-08\",\"value\":9895.5},{\"date\":\"2020-02-09\",\"value\":10151.5},{\"date\":\"2020-02-10\",\"value\":9854.1},{\"date\":\"2020-02-11\",\"value\":10229.5},{\"date\":\"2020-02-12\",\"value\":10317.7},{\"date\":\"2020-02-13\",\"value\":10235.1},{\"date\":\"2020-02-14\",\"value\":10333},{\"date\":\"2020-02-15\",\"value\":9907.7},{\"date\":\"2020-02-16\",\"value\":9932.3},{\"date\":\"2020-02-17\",\"value\":9701.4},{\"date\":\"2020-02-18\",\"value\":10158.4},{\"date\":\"2020-02-19\",\"value\":9609.4},{\"date\":\"2020-02-20\",\"value\":9602.4},{\"date\":\"2020-02-21\",\"value\":9684.5},{\"date\":\"2020-02-22\",\"value\":9655.7},{\"date\":\"2020-02-23\",\"value\":9942.7},{\"date\":\"2020-02-24\",\"value\":9662.7},{\"date\":\"2020-02-25\",\"value\":9317.2},{\"date\":\"2020-02-26\",\"value\":8800.3},{\"date\":\"2020-02-27\",\"value\":8818.6},{\"date\":\"2020-02-28\",\"value\":8697.5},{\"date\":\"2020-02-29\",\"value\":8543.7},{\"date\":\"2020-03-01\",\"value\":8540},{\"date\":\"2020-03-02\",\"value\":8904.8},{\"date\":\"2020-03-03\",\"value\":8761.4},{\"date\":\"2020-03-04\",\"value\":8757.9},{\"date\":\"2020-03-05\",\"value\":9060.3},{\"date\":\"2020-03-06\",\"value\":9134.8},{\"date\":\"2020-03-07\",\"value\":8887.8},{\"date\":\"2020-03-08\",\"value\":8034.1},{\"date\":\"2020-03-09\",\"value\":7933},{\"date\":\"2020-03-10\",\"value\":7891.2},{\"date\":\"2020-03-11\",\"value\":7935.1},{\"date\":\"2020-03-12\",\"value\":4826},{\"date\":\"2020-03-13\",\"value\":5584.3},{\"date\":\"2020-03-14\",\"value\":5182.7},{\"date\":\"2020-03-15\",\"value\":5366.3},{\"date\":\"2020-03-16\",\"value\":5030},{\"date\":\"2020-03-17\",\"value\":5261.1},{\"date\":\"2020-03-18\",\"value\":5361.4},{\"date\":\"2020-03-19\",\"value\":6172},{\"date\":\"2020-03-20\",\"value\":6205.3},{\"date\":\"2020-03-21\",\"value\":6186.2},{\"date\":\"2020-03-22\",\"value\":5822.1},{\"date\":\"2020-03-23\",\"value\":6468.9},{\"date\":\"2020-03-24\",\"value\":6744.6},{\"date\":\"2020-03-25\",\"value\":6678.9},{\"date\":\"2020-03-26\",\"value\":6725.1},{\"date\":\"2020-03-27\",\"value\":6373.4},{\"date\":\"2020-03-28\",\"value\":6233.7},{\"date\":\"2020-03-29\",\"value\":5890.4},{\"date\":\"2020-03-30\",\"value\":6391},{\"date\":\"2020-03-31\",\"value\":6412.5},{\"date\":\"2020-04-01\",\"value\":6638.5},{\"date\":\"2020-04-02\",\"value\":6800.5},{\"date\":\"2020-04-03\",\"value\":6735.9},{\"date\":\"2020-04-04\",\"value\":6857.4},{\"date\":\"2020-04-05\",\"value\":6772.7},{\"date\":\"2020-04-06\",\"value\":7332.3},{\"date\":\"2020-04-07\",\"value\":7185.2},{\"date\":\"2020-04-08\",\"value\":7361.2},{\"date\":\"2020-04-09\",\"value\":7289},{\"date\":\"2020-04-10\",\"value\":6863.1},{\"date\":\"2020-04-11\",\"value\":6867.8},{\"date\":\"2020-04-12\",\"value\":6917.6},{\"date\":\"2020-04-13\",\"value\":6841.3},{\"date\":\"2020-04-14\",\"value\":6850.9},{\"date\":\"2020-04-15\",\"value\":6629.1},{\"date\":\"2020-04-16\",\"value\":7085.6},{\"date\":\"2020-04-17\",\"value\":7035.8},{\"date\":\"2020-04-18\",\"value\":7230.8},{\"date\":\"2020-04-19\",\"value\":7122.9},{\"date\":\"2020-04-20\",\"value\":6833.5},{\"date\":\"2020-04-21\",\"value\":6842.5},{\"date\":\"2020-04-22\",\"value\":7112.9},{\"date\":\"2020-04-23\",\"value\":7488.5},{\"date\":\"2020-04-24\",\"value\":7503.8},{\"date\":\"2020-04-25\",\"value\":7540.4},{\"date\":\"2020-04-26\",\"value\":7678.9},{\"date\":\"2020-04-27\",\"value\":7766},{\"date\":\"2020-04-28\",\"value\":7746.9},{\"date\":\"2020-04-29\",\"value\":8770.9},{\"date\":\"2020-04-30\",\"value\":8629},{\"date\":\"2020-05-01\",\"value\":8821.6},{\"date\":\"2020-05-02\",\"value\":8966.3},{\"date\":\"2020-05-03\",\"value\":8885.5},{\"date\":\"2020-05-04\",\"value\":8874.7},{\"date\":\"2020-05-05\",\"value\":9001},{\"date\":\"2020-05-06\",\"value\":9151.4},{\"date\":\"2020-05-07\",\"value\":9979.8},{\"date\":\"2020-05-08\",\"value\":9806.2},{\"date\":\"2020-05-09\",\"value\":9554.6},{\"date\":\"2020-05-10\",\"value\":8738.8},{\"date\":\"2020-05-11\",\"value\":8579.8},{\"date\":\"2020-05-12\",\"value\":8813.8},{\"date\":\"2020-05-13\",\"value\":9298.7},{\"date\":\"2020-05-14\",\"value\":9778.4},{\"date\":\"2020-05-15\",\"value\":9318},{\"date\":\"2020-05-16\",\"value\":9379.5},{\"date\":\"2020-05-17\",\"value\":9677.7},{\"date\":\"2020-05-18\",\"value\":9730.7},{\"date\":\"2020-05-19\",\"value\":9773.3},{\"date\":\"2020-05-20\",\"value\":9512.3},{\"date\":\"2020-05-21\",\"value\":9059},{\"date\":\"2020-05-22\",\"value\":9169.7},{\"date\":\"2020-05-23\",\"value\":9177},{\"date\":\"2020-05-24\",\"value\":8728.2},{\"date\":\"2020-05-25\",\"value\":8898.2},{\"date\":\"2020-05-26\",\"value\":8842.5},{\"date\":\"2020-05-27\",\"value\":9199.1},{\"date\":\"2020-05-28\",\"value\":9572.2},{\"date\":\"2020-05-29\",\"value\":9424.8},{\"date\":\"2020-05-30\",\"value\":9692.5},{\"date\":\"2020-05-31\",\"value\":9454.8},{\"date\":\"2020-06-01\",\"value\":10189.3},{\"date\":\"2020-06-02\",\"value\":9527.6},{\"date\":\"2020-06-03\",\"value\":9667.2},{\"date\":\"2020-06-04\",\"value\":9794.4},{\"date\":\"2020-06-05\",\"value\":9631.2},{\"date\":\"2020-06-06\",\"value\":9669.6},{\"date\":\"2020-06-07\",\"value\":9742.6},{\"date\":\"2020-06-08\",\"value\":9777.9},{\"date\":\"2020-06-09\",\"value\":9768.8},{\"date\":\"2020-06-10\",\"value\":9878.8},{\"date\":\"2020-06-11\",\"value\":9283.2},{\"date\":\"2020-06-12\",\"value\":9466.6},{\"date\":\"2020-06-13\",\"value\":9471.3},{\"date\":\"2020-06-14\",\"value\":9345.3},{\"date\":\"2020-06-15\",\"value\":9425.4},{\"date\":\"2020-06-16\",\"value\":9523.5},{\"date\":\"2020-06-17\",\"value\":9464.6},{\"date\":\"2020-06-18\",\"value\":9388.1},{\"date\":\"2020-06-19\",\"value\":9314},{\"date\":\"2020-06-20\",\"value\":9358.8},{\"date\":\"2020-06-21\",\"value\":9296.4},{\"date\":\"2020-06-22\",\"value\":9683.7},{\"date\":\"2020-06-23\",\"value\":9624.6},{\"date\":\"2020-06-24\",\"value\":9302},{\"date\":\"2020-06-25\",\"value\":9247.5},{\"date\":\"2020-06-26\",\"value\":9160},{\"date\":\"2020-06-27\",\"value\":9008.3},{\"date\":\"2020-06-28\",\"value\":9124},{\"date\":\"2020-06-29\",\"value\":9185.4},{\"date\":\"2020-06-30\",\"value\":9135.4},{\"date\":\"2020-07-01\",\"value\":9229.9},{\"date\":\"2020-07-02\",\"value\":9085.1},{\"date\":\"2020-07-03\",\"value\":9067.1},{\"date\":\"2020-07-04\",\"value\":9134.4},{\"date\":\"2020-07-05\",\"value\":9081},{\"date\":\"2020-07-06\",\"value\":9339},{\"date\":\"2020-07-07\",\"value\":9256},{\"date\":\"2020-07-08\",\"value\":9429.9},{\"date\":\"2020-07-09\",\"value\":9235.7},{\"date\":\"2020-07-10\",\"value\":9285.1},{\"date\":\"2020-07-11\",\"value\":9233.3},{\"date\":\"2020-07-12\",\"value\":9300.8},{\"date\":\"2020-07-13\",\"value\":9243.6},{\"date\":\"2020-07-14\",\"value\":9253.4},{\"date\":\"2020-07-15\",\"value\":9198.7},{\"date\":\"2020-07-16\",\"value\":9135.3},{\"date\":\"2020-07-17\",\"value\":9155.8},{\"date\":\"2020-07-18\",\"value\":9170.2},{\"date\":\"2020-07-19\",\"value\":9208},{\"date\":\"2020-07-20\",\"value\":9162.4},{\"date\":\"2020-07-21\",\"value\":9387.3},{\"date\":\"2020-07-22\",\"value\":9513.7},{\"date\":\"2020-07-23\",\"value\":9599.6},{\"date\":\"2020-07-24\",\"value\":9546.4},{\"date\":\"2020-07-25\",\"value\":9704.1},{\"date\":\"2020-07-26\",\"value\":9932.5},{\"date\":\"2020-07-27\",\"value\":11022.8},{\"date\":\"2020-07-28\",\"value\":10908.5},{\"date\":\"2020-07-29\",\"value\":11105.9},{\"date\":\"2020-07-30\",\"value\":11096.2},{\"date\":\"2020-07-31\",\"value\":11333.4},{\"date\":\"2020-08-01\",\"value\":11803.1},{\"date\":\"2020-08-02\",\"value\":11066.8},{\"date\":\"2020-08-03\",\"value\":11224.4},{\"date\":\"2020-08-04\",\"value\":11184.7},{\"date\":\"2020-08-05\",\"value\":11735.1},{\"date\":\"2020-08-06\",\"value\":11757.1},{\"date\":\"2020-08-07\",\"value\":11592},{\"date\":\"2020-08-08\",\"value\":11764.3},{\"date\":\"2020-08-09\",\"value\":11681.2},{\"date\":\"2020-08-10\",\"value\":11889.2},{\"date\":\"2020-08-11\",\"value\":11390.4},{\"date\":\"2020-08-12\",\"value\":11557.2},{\"date\":\"2020-08-13\",\"value\":11770.9},{\"date\":\"2020-08-14\",\"value\":11750.8},{\"date\":\"2020-08-15\",\"value\":11845.3},{\"date\":\"2020-08-16\",\"value\":11899},{\"date\":\"2020-08-17\",\"value\":12282.6},{\"date\":\"2020-08-18\",\"value\":11947.6},{\"date\":\"2020-08-19\",\"value\":11750.2},{\"date\":\"2020-08-20\",\"value\":11856.9},{\"date\":\"2020-08-21\",\"value\":11529.2},{\"date\":\"2020-08-22\",\"value\":11661.3},{\"date\":\"2020-08-23\",\"value\":11641.6},{\"date\":\"2020-08-24\",\"value\":11753.5},{\"date\":\"2020-08-25\",\"value\":11324.8},{\"date\":\"2020-08-26\",\"value\":11462.3},{\"date\":\"2020-08-27\",\"value\":11327.4},{\"date\":\"2020-08-28\",\"value\":11527.4},{\"date\":\"2020-08-29\",\"value\":11468.1},{\"date\":\"2020-08-30\",\"value\":11702},{\"date\":\"2020-08-31\",\"value\":11644.2},{\"date\":\"2020-09-01\",\"value\":11914.9},{\"date\":\"2020-09-02\",\"value\":11413.3},{\"date\":\"2020-09-03\",\"value\":10168.8},{\"date\":\"2020-09-04\",\"value\":10472.5},{\"date\":\"2020-09-05\",\"value\":10092.2},{\"date\":\"2020-09-06\",\"value\":10296.4},{\"date\":\"2020-09-07\",\"value\":10376.9},{\"date\":\"2020-09-08\",\"value\":10126.6},{\"date\":\"2020-09-09\",\"value\":10224.6},{\"date\":\"2020-09-10\",\"value\":10339.7},{\"date\":\"2020-09-11\",\"value\":10390.2},{\"date\":\"2020-09-12\",\"value\":10441.9},{\"date\":\"2020-09-13\",\"value\":10326},{\"date\":\"2020-09-14\",\"value\":10675.3},{\"date\":\"2020-09-15\",\"value\":10785.3},{\"date\":\"2020-09-16\",\"value\":10949.5},{\"date\":\"2020-09-17\",\"value\":10941.3},{\"date\":\"2020-09-18\",\"value\":10933},{\"date\":\"2020-09-19\",\"value\":11081.8},{\"date\":\"2020-09-20\",\"value\":10921.5},{\"date\":\"2020-09-21\",\"value\":10416.8},{\"date\":\"2020-09-22\",\"value\":10531.5},{\"date\":\"2020-09-23\",\"value\":10237.3},{\"date\":\"2020-09-24\",\"value\":10739.4},{\"date\":\"2020-09-25\",\"value\":10688.8},{\"date\":\"2020-09-26\",\"value\":10727.9},{\"date\":\"2020-09-27\",\"value\":10776.2},{\"date\":\"2020-09-28\",\"value\":10693.2},{\"date\":\"2020-09-29\",\"value\":10840.9},{\"date\":\"2020-09-30\",\"value\":10776.1},{\"date\":\"2020-10-01\",\"value\":10620.5},{\"date\":\"2020-10-02\",\"value\":10572.3},{\"date\":\"2020-10-03\",\"value\":10544.2},{\"date\":\"2020-10-04\",\"value\":10672.9},{\"date\":\"2020-10-05\",\"value\":10789.5},{\"date\":\"2020-10-06\",\"value\":10602.6},{\"date\":\"2020-10-07\",\"value\":10670.9},{\"date\":\"2020-10-08\",\"value\":10924.1},{\"date\":\"2020-10-09\",\"value\":11054.2},{\"date\":\"2020-10-10\",\"value\":11298.4},{\"date\":\"2020-10-11\",\"value\":11371},{\"date\":\"2020-10-12\",\"value\":11533.9},{\"date\":\"2020-10-13\",\"value\":11423.8},{\"date\":\"2020-10-14\",\"value\":11420.4},{\"date\":\"2020-10-15\",\"value\":11503},{\"date\":\"2020-10-16\",\"value\":11322},{\"date\":\"2020-10-17\",\"value\":11362.1},{\"date\":\"2020-10-18\",\"value\":11506.9},{\"date\":\"2020-10-19\",\"value\":11753.4},{\"date\":\"2020-10-20\",\"value\":11913.5},{\"date\":\"2020-10-21\",\"value\":12808.7},{\"date\":\"2020-10-22\",\"value\":12974.6},{\"date\":\"2020-10-23\",\"value\":12934.1},{\"date\":\"2020-10-24\",\"value\":13117.2},{\"date\":\"2020-10-25\",\"value\":13032.2},{\"date\":\"2020-10-26\",\"value\":13061.6},{\"date\":\"2020-10-27\",\"value\":13657.8},{\"date\":\"2020-10-28\",\"value\":13278.9},{\"date\":\"2020-10-29\",\"value\":13457.2},{\"date\":\"2020-10-30\",\"value\":13559.9},{\"date\":\"2020-10-31\",\"value\":13797.3},{\"date\":\"2020-11-01\",\"value\":13759.4},{\"date\":\"2020-11-02\",\"value\":13561.4},{\"date\":\"2020-11-03\",\"value\":14019.9},{\"date\":\"2020-11-04\",\"value\":14145.6},{\"date\":\"2020-11-05\",\"value\":15587.1},{\"date\":\"2020-11-06\",\"value\":15577.9},{\"date\":\"2020-11-07\",\"value\":14828.4},{\"date\":\"2020-11-08\",\"value\":15483.7},{\"date\":\"2020-11-09\",\"value\":15327.2},{\"date\":\"2020-11-10\",\"value\":15303.6},{\"date\":\"2020-11-11\",\"value\":15695.8},{\"date\":\"2020-11-12\",\"value\":16294.7},{\"date\":\"2020-11-13\",\"value\":16324.2},{\"date\":\"2020-11-14\",\"value\":16071},{\"date\":\"2020-11-15\",\"value\":15953},{\"date\":\"2020-11-16\",\"value\":16715.8},{\"date\":\"2020-11-17\",\"value\":17662.3},{\"date\":\"2020-11-18\",\"value\":17774.6},{\"date\":\"2020-11-19\",\"value\":17803.5},{\"date\":\"2020-11-20\",\"value\":18675.2},{\"date\":\"2020-11-21\",\"value\":18687.2},{\"date\":\"2020-11-22\",\"value\":18412.9},{\"date\":\"2020-11-23\",\"value\":18379.6},{\"date\":\"2020-11-24\",\"value\":19152.6},{\"date\":\"2020-11-25\",\"value\":18723},{\"date\":\"2020-11-26\",\"value\":17162},{\"date\":\"2020-11-27\",\"value\":17127.1},{\"date\":\"2020-11-28\",\"value\":17730.7},{\"date\":\"2020-11-29\",\"value\":18185.5},{\"date\":\"2020-11-30\",\"value\":19698.1},{\"date\":\"2020-12-01\",\"value\":18770.7},{\"date\":\"2020-12-02\",\"value\":19218.8},{\"date\":\"2020-12-03\",\"value\":19433.3},{\"date\":\"2020-12-04\",\"value\":18658.1},{\"date\":\"2020-12-05\",\"value\":19146.5},{\"date\":\"2020-12-06\",\"value\":19379.9},{\"date\":\"2020-12-07\",\"value\":19170.7},{\"date\":\"2020-12-08\",\"value\":18326.6},{\"date\":\"2020-12-09\",\"value\":18546},{\"date\":\"2020-12-10\",\"value\":18247.2},{\"date\":\"2020-12-11\",\"value\":18023.6},{\"date\":\"2020-12-12\",\"value\":18808.9},{\"date\":\"2020-12-13\",\"value\":19176.8},{\"date\":\"2020-12-14\",\"value\":19273.8},{\"date\":\"2020-12-15\",\"value\":19434.9},{\"date\":\"2020-12-16\",\"value\":21352.2},{\"date\":\"2020-12-17\",\"value\":22825.4},{\"date\":\"2020-12-18\",\"value\":23127.9},{\"date\":\"2020-12-19\",\"value\":23844},{\"date\":\"2020-12-20\",\"value\":23474.9},{\"date\":\"2020-12-21\",\"value\":22728.5},{\"date\":\"2020-12-22\",\"value\":23823.2},{\"date\":\"2020-12-23\",\"value\":23257.9},{\"date\":\"2020-12-24\",\"value\":23736.5},{\"date\":\"2020-12-25\",\"value\":24689.6},{\"date\":\"2020-12-26\",\"value\":26454.4},{\"date\":\"2020-12-27\",\"value\":26261.3},{\"date\":\"2020-12-28\",\"value\":27057.8},{\"date\":\"2020-12-29\",\"value\":27376},{\"date\":\"2020-12-30\",\"value\":28868.7},{\"date\":\"2020-12-31\",\"value\":28949.4},{\"date\":\"2021-01-01\",\"value\":29359.9},{\"date\":\"2021-01-02\",\"value\":32193.3},{\"date\":\"2021-01-03\",\"value\":32958.9},{\"date\":\"2021-01-04\",\"value\":32022.6},{\"date\":\"2021-01-05\",\"value\":33991.5},{\"date\":\"2021-01-06\",\"value\":36793.2},{\"date\":\"2021-01-07\",\"value\":39460.2},{\"date\":\"2021-01-08\",\"value\":40599.3},{\"date\":\"2021-01-09\",\"value\":40151.9},{\"date\":\"2021-01-10\",\"value\":38192.2},{\"date\":\"2021-01-11\",\"value\":35544.3},{\"date\":\"2021-01-12\",\"value\":34076.1},{\"date\":\"2021-01-13\",\"value\":37382.2},{\"date\":\"2021-01-14\",\"value\":39175.7},{\"date\":\"2021-01-15\",\"value\":36845.8},{\"date\":\"2021-01-16\",\"value\":36019.5},{\"date\":\"2021-01-17\",\"value\":35839.6},{\"date\":\"2021-01-18\",\"value\":36613.2},{\"date\":\"2021-01-19\",\"value\":36002.9},{\"date\":\"2021-01-20\",\"value\":35476.3},{\"date\":\"2021-01-21\",\"value\":30842.1},{\"date\":\"2021-01-22\",\"value\":33000.5},{\"date\":\"2021-01-23\",\"value\":32088.9},{\"date\":\"2021-01-24\",\"value\":32241.3},{\"date\":\"2021-01-25\",\"value\":32252.3},{\"date\":\"2021-01-26\",\"value\":32502.1},{\"date\":\"2021-01-27\",\"value\":30404},{\"date\":\"2021-01-28\",\"value\":33374.8},{\"date\":\"2021-01-29\",\"value\":34301.8},{\"date\":\"2021-01-30\",\"value\":34283.1},{\"date\":\"2021-01-31\",\"value\":33108.1},{\"date\":\"2021-02-01\",\"value\":33515.7},{\"date\":\"2021-02-02\",\"value\":35485.2},{\"date\":\"2021-02-03\",\"value\":37646.8},{\"date\":\"2021-02-04\",\"value\":36982.1},{\"date\":\"2021-02-05\",\"value\":38297.6},{\"date\":\"2021-02-06\",\"value\":39256.6},{\"date\":\"2021-02-07\",\"value\":38852.9},{\"date\":\"2021-02-08\",\"value\":46395.7},{\"date\":\"2021-02-09\",\"value\":46508.6},{\"date\":\"2021-02-10\",\"value\":44836},{\"date\":\"2021-02-11\",\"value\":47990.7},{\"date\":\"2021-02-12\",\"value\":47371.7},{\"date\":\"2021-02-13\",\"value\":47168.7},{\"date\":\"2021-02-14\",\"value\":48643.4},{\"date\":\"2021-02-15\",\"value\":47936.3},{\"date\":\"2021-02-16\",\"value\":49169.7},{\"date\":\"2021-02-17\",\"value\":52079.2},{\"date\":\"2021-02-18\",\"value\":51582.2},{\"date\":\"2021-02-19\",\"value\":55906.6},{\"date\":\"2021-02-20\",\"value\":55923.7},{\"date\":\"2021-02-21\",\"value\":57433.8},{\"date\":\"2021-02-22\",\"value\":54111.8},{\"date\":\"2021-02-23\",\"value\":48911.2},{\"date\":\"2021-02-24\",\"value\":49697.5},{\"date\":\"2021-02-25\",\"value\":46928.5},{\"date\":\"2021-02-26\",\"value\":46345.6},{\"date\":\"2021-02-27\",\"value\":46136.7},{\"date\":\"2021-02-28\",\"value\":45164},{\"date\":\"2021-03-01\",\"value\":49595.5},{\"date\":\"2021-03-02\",\"value\":48424.2},{\"date\":\"2021-03-03\",\"value\":50395.1},{\"date\":\"2021-03-04\",\"value\":48428},{\"date\":\"2021-03-05\",\"value\":48792.5},{\"date\":\"2021-03-06\",\"value\":48855.6},{\"date\":\"2021-03-07\",\"value\":50982.3},{\"date\":\"2021-03-08\",\"value\":52311},{\"date\":\"2021-03-09\",\"value\":54879},{\"date\":\"2021-03-10\",\"value\":55851.9},{\"date\":\"2021-03-11\",\"value\":57799.5},{\"date\":\"2021-03-12\",\"value\":57265.1},{\"date\":\"2021-03-13\",\"value\":61195.3},{\"date\":\"2021-03-14\",\"value\":59113.7},{\"date\":\"2021-03-15\",\"value\":55791.3},{\"date\":\"2021-03-16\",\"value\":56889.7},{\"date\":\"2021-03-17\",\"value\":58913.5},{\"date\":\"2021-03-18\",\"value\":57656},{\"date\":\"2021-03-19\",\"value\":58088},{\"date\":\"2021-03-20\",\"value\":58093.4},{\"date\":\"2021-03-21\",\"value\":57383.8},{\"date\":\"2021-03-22\",\"value\":54158.3},{\"date\":\"2021-03-23\",\"value\":54452.5},{\"date\":\"2021-03-24\",\"value\":52325.4},{\"date\":\"2021-03-25\",\"value\":51322.3},{\"date\":\"2021-03-26\",\"value\":55036.1},{\"date\":\"2021-03-27\",\"value\":55862.9},{\"date\":\"2021-03-28\",\"value\":55765.2},{\"date\":\"2021-03-29\",\"value\":57616.2},{\"date\":\"2021-03-30\",\"value\":58771.3},{\"date\":\"2021-03-31\",\"value\":58763.7},{\"date\":\"2021-04-01\",\"value\":58718.3},{\"date\":\"2021-04-02\",\"value\":58977.3},{\"date\":\"2021-04-03\",\"value\":57059.9},{\"date\":\"2021-04-04\",\"value\":58199.9},{\"date\":\"2021-04-05\",\"value\":58993.4},{\"date\":\"2021-04-06\",\"value\":57996.3},{\"date\":\"2021-04-07\",\"value\":55948.7},{\"date\":\"2021-04-08\",\"value\":58077.4},{\"date\":\"2021-04-09\",\"value\":58118.7},{\"date\":\"2021-04-10\",\"value\":59748.4},{\"date\":\"2021-04-11\",\"value\":59978.7},{\"date\":\"2021-04-12\",\"value\":59863.8},{\"date\":\"2021-04-13\",\"value\":63540.9},{\"date\":\"2021-04-14\",\"value\":62980.4},{\"date\":\"2021-04-15\",\"value\":63216},{\"date\":\"2021-04-16\",\"value\":61379.7},{\"date\":\"2021-04-17\",\"value\":60041.9},{\"date\":\"2021-04-18\",\"value\":56207.1},{\"date\":\"2021-04-19\",\"value\":55646.1},{\"date\":\"2021-04-20\",\"value\":56483.2},{\"date\":\"2021-04-21\",\"value\":53820.2},{\"date\":\"2021-04-22\",\"value\":51729.5},{\"date\":\"2021-04-23\",\"value\":51143.6},{\"date\":\"2021-04-24\",\"value\":50088.9},{\"date\":\"2021-04-25\",\"value\":48963.6},{\"date\":\"2021-04-26\",\"value\":54020.5},{\"date\":\"2021-04-27\",\"value\":55036.5},{\"date\":\"2021-04-28\",\"value\":54841.4},{\"date\":\"2021-04-29\",\"value\":53560.8},{\"date\":\"2021-04-30\",\"value\":57720.3},{\"date\":\"2021-05-01\",\"value\":57807.1},{\"date\":\"2021-05-02\",\"value\":56603.8},{\"date\":\"2021-05-03\",\"value\":57169.8},{\"date\":\"2021-05-04\",\"value\":53741.5},{\"date\":\"2021-05-05\",\"value\":57441.3},{\"date\":\"2021-05-06\",\"value\":56405.4},{\"date\":\"2021-05-07\",\"value\":57337.2},{\"date\":\"2021-05-08\",\"value\":58840.1},{\"date\":\"2021-05-09\",\"value\":58238.3},{\"date\":\"2021-05-10\",\"value\":55848.9},{\"date\":\"2021-05-11\",\"value\":56695.7},{\"date\":\"2021-05-12\",\"value\":49384.2},{\"date\":\"2021-05-13\",\"value\":49704.6},{\"date\":\"2021-05-14\",\"value\":49839.8},{\"date\":\"2021-05-15\",\"value\":46708.8},{\"date\":\"2021-05-16\",\"value\":46426.4},{\"date\":\"2021-05-17\",\"value\":43541.3},{\"date\":\"2021-05-18\",\"value\":42897.3},{\"date\":\"2021-05-19\",\"value\":36720.5},{\"date\":\"2021-05-20\",\"value\":40717.2},{\"date\":\"2021-05-21\",\"value\":37297.4},{\"date\":\"2021-05-22\",\"value\":37448.3},{\"date\":\"2021-05-23\",\"value\":34679.7},{\"date\":\"2021-05-24\",\"value\":38750.6},{\"date\":\"2021-05-25\",\"value\":38378.3},{\"date\":\"2021-05-26\",\"value\":39249.2},{\"date\":\"2021-05-27\",\"value\":38417.3},{\"date\":\"2021-05-28\",\"value\":35662.5},{\"date\":\"2021-05-29\",\"value\":34584.6},{\"date\":\"2021-05-30\",\"value\":35652.8},{\"date\":\"2021-05-31\",\"value\":37298.6},{\"date\":\"2021-06-01\",\"value\":36687.6},{\"date\":\"2021-06-02\",\"value\":37555.8},{\"date\":\"2021-06-03\",\"value\":39187.3},{\"date\":\"2021-06-04\",\"value\":36851.3},{\"date\":\"2021-06-05\",\"value\":35520},{\"date\":\"2021-06-06\",\"value\":35815.4},{\"date\":\"2021-06-07\",\"value\":33578},{\"date\":\"2021-06-08\",\"value\":33382.9},{\"date\":\"2021-06-09\",\"value\":37332.2},{\"date\":\"2021-06-10\",\"value\":36649.4},{\"date\":\"2021-06-11\",\"value\":37314.6},{\"date\":\"2021-06-12\",\"value\":35467.5},{\"date\":\"2021-06-13\",\"value\":39022.9},{\"date\":\"2021-06-14\",\"value\":40529.4},{\"date\":\"2021-06-15\",\"value\":40156.1},{\"date\":\"2021-06-16\",\"value\":38336},{\"date\":\"2021-06-17\",\"value\":38052},{\"date\":\"2021-06-18\",\"value\":35749.4},{\"date\":\"2021-06-19\",\"value\":35513.4},{\"date\":\"2021-06-20\",\"value\":35595.8},{\"date\":\"2021-06-21\",\"value\":31692},{\"date\":\"2021-06-22\",\"value\":32496.4},{\"date\":\"2021-06-23\",\"value\":33674.3},{\"date\":\"2021-06-24\",\"value\":34665.8},{\"date\":\"2021-06-25\",\"value\":31594},{\"date\":\"2021-06-26\",\"value\":32243.4},{\"date\":\"2021-06-27\",\"value\":34678.5},{\"date\":\"2021-06-28\",\"value\":34475.9},{\"date\":\"2021-06-29\",\"value\":35834.7},{\"date\":\"2021-06-30\",\"value\":35026.9},{\"date\":\"2021-07-01\",\"value\":33543.6},{\"date\":\"2021-07-02\",\"value\":33813.4},{\"date\":\"2021-07-03\",\"value\":34742.8},{\"date\":\"2021-07-04\",\"value\":35298.2},{\"date\":\"2021-07-05\",\"value\":33687.8},{\"date\":\"2021-07-06\",\"value\":34225.6},{\"date\":\"2021-07-07\",\"value\":33867.8},{\"date\":\"2021-07-08\",\"value\":32866.3},{\"date\":\"2021-07-09\",\"value\":33797.4},{\"date\":\"2021-07-10\",\"value\":33510.6},{\"date\":\"2021-07-11\",\"value\":34227.7},{\"date\":\"2021-07-12\",\"value\":33113},{\"date\":\"2021-07-13\",\"value\":32728.1},{\"date\":\"2021-07-14\",\"value\":32820.7},{\"date\":\"2021-07-15\",\"value\":31840.5},{\"date\":\"2021-07-16\",\"value\":31394},{\"date\":\"2021-07-17\",\"value\":31518.6},{\"date\":\"2021-07-18\",\"value\":31785.4},{\"date\":\"2021-07-19\",\"value\":30837.2},{\"date\":\"2021-07-20\",\"value\":29793.8},{\"date\":\"2021-07-21\",\"value\":32131.4},{\"date\":\"2021-07-22\",\"value\":32298.9},{\"date\":\"2021-07-23\",\"value\":33603.3},{\"date\":\"2021-07-24\",\"value\":33824.8},{\"date\":\"2021-07-25\",\"value\":35391.1},{\"date\":\"2021-07-26\",\"value\":37276.6},{\"date\":\"2021-07-27\",\"value\":39452},{\"date\":\"2021-07-28\",\"value\":40003.2},{\"date\":\"2021-07-29\",\"value\":40001.4},{\"date\":\"2021-07-30\",\"value\":42203.4},{\"date\":\"2021-07-31\",\"value\":41553.7},{\"date\":\"2021-08-01\",\"value\":39878.3},{\"date\":\"2021-08-02\",\"value\":39168.4},{\"date\":\"2021-08-03\",\"value\":38130.3},{\"date\":\"2021-08-04\",\"value\":39736.9},{\"date\":\"2021-08-05\",\"value\":40867.2},{\"date\":\"2021-08-06\",\"value\":42795.4},{\"date\":\"2021-08-07\",\"value\":44614.2},{\"date\":\"2021-08-08\",\"value\":43792.8},{\"date\":\"2021-08-09\",\"value\":46284.3},{\"date\":\"2021-08-10\",\"value\":45593.8},{\"date\":\"2021-08-11\",\"value\":45564.3},{\"date\":\"2021-08-12\",\"value\":44403.4},{\"date\":\"2021-08-13\",\"value\":47809.1},{\"date\":\"2021-08-14\",\"value\":47081.5},{\"date\":\"2021-08-15\",\"value\":46991.3},{\"date\":\"2021-08-16\",\"value\":45996.3},{\"date\":\"2021-08-17\",\"value\":44691.6},{\"date\":\"2021-08-18\",\"value\":44723.8},{\"date\":\"2021-08-19\",\"value\":46755.9},{\"date\":\"2021-08-20\",\"value\":49324},{\"date\":\"2021-08-21\",\"value\":48875.8},{\"date\":\"2021-08-22\",\"value\":49254.5},{\"date\":\"2021-08-23\",\"value\":49539.7},{\"date\":\"2021-08-24\",\"value\":47714.7},{\"date\":\"2021-08-25\",\"value\":48994.5},{\"date\":\"2021-08-26\",\"value\":46831.6},{\"date\":\"2021-08-27\",\"value\":49064.3},{\"date\":\"2021-08-28\",\"value\":48897.1},{\"date\":\"2021-08-29\",\"value\":48777.4},{\"date\":\"2021-08-30\",\"value\":46992.7},{\"date\":\"2021-08-31\",\"value\":47130.4},{\"date\":\"2021-09-01\",\"value\":48819.4},{\"date\":\"2021-09-02\",\"value\":49274.3},{\"date\":\"2021-09-03\",\"value\":49999},{\"date\":\"2021-09-04\",\"value\":49918.4},{\"date\":\"2021-09-05\",\"value\":51768.6},{\"date\":\"2021-09-06\",\"value\":52672.1},{\"date\":\"2021-09-07\",\"value\":46779.6},{\"date\":\"2021-09-08\",\"value\":46061.4},{\"date\":\"2021-09-09\",\"value\":46385.6},{\"date\":\"2021-09-10\",\"value\":44842.8},{\"date\":\"2021-09-11\",\"value\":45161.9},{\"date\":\"2021-09-12\",\"value\":46062.3},{\"date\":\"2021-09-13\",\"value\":44949.5},{\"date\":\"2021-09-14\",\"value\":47077.5},{\"date\":\"2021-09-15\",\"value\":48130.6},{\"date\":\"2021-09-16\",\"value\":47748},{\"date\":\"2021-09-17\",\"value\":47282.8},{\"date\":\"2021-09-18\",\"value\":48306.7},{\"date\":\"2021-09-19\",\"value\":47238.7},{\"date\":\"2021-09-20\",\"value\":42870.6},{\"date\":\"2021-09-21\",\"value\":40651.3},{\"date\":\"2021-09-22\",\"value\":43551.6},{\"date\":\"2021-09-23\",\"value\":44869.2},{\"date\":\"2021-09-24\",\"value\":42819.9},{\"date\":\"2021-09-25\",\"value\":42686.8},{\"date\":\"2021-09-26\",\"value\":43203.4},{\"date\":\"2021-09-27\",\"value\":42172.6},{\"date\":\"2021-09-28\",\"value\":41022.3},{\"date\":\"2021-09-29\",\"value\":41536.8},{\"date\":\"2021-09-30\",\"value\":43823.3},{\"date\":\"2021-10-01\",\"value\":48146},{\"date\":\"2021-10-02\",\"value\":47666.9},{\"date\":\"2021-10-03\",\"value\":48200.1},{\"date\":\"2021-10-04\",\"value\":49227.3},{\"date\":\"2021-10-05\",\"value\":51469.3},{\"date\":\"2021-10-06\",\"value\":55323.2},{\"date\":\"2021-10-07\",\"value\":53783.9},{\"date\":\"2021-10-08\",\"value\":53914.7},{\"date\":\"2021-10-09\",\"value\":54942.5},{\"date\":\"2021-10-10\",\"value\":54687.7},{\"date\":\"2021-10-11\",\"value\":57477.3},{\"date\":\"2021-10-12\",\"value\":56015.9},{\"date\":\"2021-10-13\",\"value\":57380.1},{\"date\":\"2021-10-14\",\"value\":57345.8},{\"date\":\"2021-10-15\",\"value\":61672.5},{\"date\":\"2021-10-16\",\"value\":60861.1},{\"date\":\"2021-10-17\",\"value\":61527.5},{\"date\":\"2021-10-18\",\"value\":62056.3},{\"date\":\"2021-10-19\",\"value\":64278.5},{\"date\":\"2021-10-20\",\"value\":65979.1},{\"date\":\"2021-10-21\",\"value\":62210.2},{\"date\":\"2021-10-22\",\"value\":60690.3},{\"date\":\"2021-10-23\",\"value\":61312.5},{\"date\":\"2021-10-24\",\"value\":60866.5},{\"date\":\"2021-10-25\",\"value\":63067},{\"date\":\"2021-10-26\",\"value\":60310.8},{\"date\":\"2021-10-27\",\"value\":58438.1},{\"date\":\"2021-10-28\",\"value\":60582.5},{\"date\":\"2021-10-29\",\"value\":62242.8},{\"date\":\"2021-10-30\",\"value\":61840.1},{\"date\":\"2021-10-31\",\"value\":61309.6},{\"date\":\"2021-11-01\",\"value\":60915.3},{\"date\":\"2021-11-02\",\"value\":63221.7},{\"date\":\"2021-11-03\",\"value\":62918.5},{\"date\":\"2021-11-04\",\"value\":61412.6},{\"date\":\"2021-11-05\",\"value\":60974.3},{\"date\":\"2021-11-06\",\"value\":61483.9},{\"date\":\"2021-11-07\",\"value\":63273.2},{\"date\":\"2021-11-08\",\"value\":67527.9},{\"date\":\"2021-11-09\",\"value\":66904.4},{\"date\":\"2021-11-10\",\"value\":64932.6},{\"date\":\"2021-11-11\",\"value\":64806.7},{\"date\":\"2021-11-12\",\"value\":64134.5},{\"date\":\"2021-11-13\",\"value\":64398.6},{\"date\":\"2021-11-14\",\"value\":65508.2},{\"date\":\"2021-11-15\",\"value\":63597.9},{\"date\":\"2021-11-16\",\"value\":60089.1},{\"date\":\"2021-11-17\",\"value\":60367.8},{\"date\":\"2021-11-18\",\"value\":56955.3},{\"date\":\"2021-11-19\",\"value\":58083.4},{\"date\":\"2021-11-20\",\"value\":59717.6},{\"date\":\"2021-11-21\",\"value\":58714.3},{\"date\":\"2021-11-22\",\"value\":56308.8},{\"date\":\"2021-11-23\",\"value\":57573.2},{\"date\":\"2021-11-24\",\"value\":57171.7},{\"date\":\"2021-11-25\",\"value\":58935.1},{\"date\":\"2021-11-26\",\"value\":53730.9},{\"date\":\"2021-11-27\",\"value\":54765.9},{\"date\":\"2021-11-28\",\"value\":57291.5},{\"date\":\"2021-11-29\",\"value\":57794.8},{\"date\":\"2021-11-30\",\"value\":56882.9},{\"date\":\"2021-12-01\",\"value\":57210.3},{\"date\":\"2021-12-02\",\"value\":56496},{\"date\":\"2021-12-03\",\"value\":53631.5},{\"date\":\"2021-12-04\",\"value\":49195.2},{\"date\":\"2021-12-05\",\"value\":49405.5},{\"date\":\"2021-12-06\",\"value\":50562.1},{\"date\":\"2021-12-07\",\"value\":50595.2},{\"date\":\"2021-12-08\",\"value\":50473.9},{\"date\":\"2021-12-09\",\"value\":47596.6},{\"date\":\"2021-12-10\",\"value\":47137.2},{\"date\":\"2021-12-11\",\"value\":49314.5},{\"date\":\"2021-12-12\",\"value\":50081},{\"date\":\"2021-12-13\",\"value\":46703.6},{\"date\":\"2021-12-14\",\"value\":48366.5},{\"date\":\"2021-12-15\",\"value\":48871.5},{\"date\":\"2021-12-16\",\"value\":47628.2},{\"date\":\"2021-12-17\",\"value\":46172.2},{\"date\":\"2021-12-18\",\"value\":46856.2},{\"date\":\"2021-12-19\",\"value\":46704.5},{\"date\":\"2021-12-20\",\"value\":46895.2},{\"date\":\"2021-12-21\",\"value\":48902},{\"date\":\"2021-12-22\",\"value\":48599.7},{\"date\":\"2021-12-23\",\"value\":50801},{\"date\":\"2021-12-24\",\"value\":50786.1},{\"date\":\"2021-12-25\",\"value\":50406.4},{\"date\":\"2021-12-26\",\"value\":50779.9},{\"date\":\"2021-12-27\",\"value\":50678.2},{\"date\":\"2021-12-28\",\"value\":47545.2},{\"date\":\"2021-12-29\",\"value\":46461.7},{\"date\":\"2021-12-30\",\"value\":47123.3},{\"date\":\"2021-12-31\",\"value\":46219.5},{\"date\":\"2022-01-01\",\"value\":47738},{\"date\":\"2022-01-02\",\"value\":47311.8},{\"date\":\"2022-01-03\",\"value\":46430.2},{\"date\":\"2022-01-04\",\"value\":45837.3},{\"date\":\"2022-01-05\",\"value\":43425.9},{\"date\":\"2022-01-06\",\"value\":43097.5},{\"date\":\"2022-01-07\",\"value\":41546.7},{\"date\":\"2022-01-08\",\"value\":41672},{\"date\":\"2022-01-09\",\"value\":41848.3},{\"date\":\"2022-01-10\",\"value\":41832.2},{\"date\":\"2022-01-11\",\"value\":42733.2},{\"date\":\"2022-01-12\",\"value\":43901},{\"date\":\"2022-01-13\",\"value\":42560},{\"date\":\"2022-01-14\",\"value\":43073.3},{\"date\":\"2022-01-15\",\"value\":43097},{\"date\":\"2022-01-16\",\"value\":43079.1},{\"date\":\"2022-01-17\",\"value\":42209.3},{\"date\":\"2022-01-18\",\"value\":42364.6},{\"date\":\"2022-01-19\",\"value\":41677.8},{\"date\":\"2022-01-20\",\"value\":40715.9},{\"date\":\"2022-01-21\",\"value\":36475.5},{\"date\":\"2022-01-22\",\"value\":35075.2},{\"date\":\"2022-01-23\",\"value\":36269.5},{\"date\":\"2022-01-24\",\"value\":36686.3},{\"date\":\"2022-01-25\",\"value\":36950.6},{\"date\":\"2022-01-26\",\"value\":36800.4},{\"date\":\"2022-01-27\",\"value\":37164.3},{\"date\":\"2022-01-28\",\"value\":37745.1},{\"date\":\"2022-01-29\",\"value\":38170.8},{\"date\":\"2022-01-30\",\"value\":37917.7},{\"date\":\"2022-01-31\",\"value\":38498.6},{\"date\":\"2022-02-01\",\"value\":38709.7},{\"date\":\"2022-02-02\",\"value\":36890.2},{\"date\":\"2022-02-03\",\"value\":37287.8},{\"date\":\"2022-02-04\",\"value\":41567.6},{\"date\":\"2022-02-05\",\"value\":41412.1},{\"date\":\"2022-02-06\",\"value\":42392.2},{\"date\":\"2022-02-07\",\"value\":43833.9},{\"date\":\"2022-02-08\",\"value\":44038.2},{\"date\":\"2022-02-09\",\"value\":44388.9},{\"date\":\"2022-02-10\",\"value\":43521},{\"date\":\"2022-02-11\",\"value\":42388.4},{\"date\":\"2022-02-12\",\"value\":42205.2},{\"date\":\"2022-02-13\",\"value\":42061.1},{\"date\":\"2022-02-14\",\"value\":42550.3},{\"date\":\"2022-02-15\",\"value\":44544.4},{\"date\":\"2022-02-16\",\"value\":43883.6},{\"date\":\"2022-02-17\",\"value\":40552.8},{\"date\":\"2022-02-18\",\"value\":40000.1},{\"date\":\"2022-02-19\",\"value\":40090.3},{\"date\":\"2022-02-20\",\"value\":38355},{\"date\":\"2022-02-21\",\"value\":37017.7},{\"date\":\"2022-02-22\",\"value\":38248.2},{\"date\":\"2022-02-23\",\"value\":37224.6},{\"date\":\"2022-02-24\",\"value\":38339.2},{\"date\":\"2022-02-25\",\"value\":39209.6},{\"date\":\"2022-02-26\",\"value\":39115.5},{\"date\":\"2022-02-27\",\"value\":37689.1},{\"date\":\"2022-02-28\",\"value\":43188.2},{\"date\":\"2022-03-01\",\"value\":44420.3},{\"date\":\"2022-03-02\",\"value\":43912.8},{\"date\":\"2022-03-03\",\"value\":42463},{\"date\":\"2022-03-04\",\"value\":39142.7},{\"date\":\"2022-03-05\",\"value\":39395.8},{\"date\":\"2022-03-06\",\"value\":38403.1},{\"date\":\"2022-03-07\",\"value\":38024.8},{\"date\":\"2022-03-08\",\"value\":38744.8},{\"date\":\"2022-03-09\",\"value\":41929},{\"date\":\"2022-03-10\",\"value\":39416.3},{\"date\":\"2022-03-11\",\"value\":38730.2},{\"date\":\"2022-03-12\",\"value\":38814.3},{\"date\":\"2022-03-13\",\"value\":37792.4},{\"date\":\"2022-03-14\",\"value\":39671.1},{\"date\":\"2022-03-15\",\"value\":39285.7},{\"date\":\"2022-03-16\",\"value\":41118.7},{\"date\":\"2022-03-17\",\"value\":40914.8},{\"date\":\"2022-03-18\",\"value\":41767.8},{\"date\":\"2022-03-19\",\"value\":42233},{\"date\":\"2022-03-20\",\"value\":41276},{\"date\":\"2022-03-21\",\"value\":41022},{\"date\":\"2022-03-22\",\"value\":42373},{\"date\":\"2022-03-23\",\"value\":42912},{\"date\":\"2022-03-24\",\"value\":44013},{\"date\":\"2022-03-25\",\"value\":44331},{\"date\":\"2022-03-26\",\"value\":44548},{\"date\":\"2022-03-27\",\"value\":46859},{\"date\":\"2022-03-28\",\"value\":47105},{\"date\":\"2022-03-29\",\"value\":47449},{\"date\":\"2022-03-30\",\"value\":47075},{\"date\":\"2022-03-31\",\"value\":45525},{\"date\":\"2022-04-01\",\"value\":46297},{\"date\":\"2022-04-02\",\"value\":45811},{\"date\":\"2022-04-03\",\"value\":46407},{\"date\":\"2022-04-04\",\"value\":46629},{\"date\":\"2022-04-05\",\"value\":45506},{\"date\":\"2022-04-06\",\"value\":43173},{\"date\":\"2022-04-07\",\"value\":43448},{\"date\":\"2022-04-08\",\"value\":42275},{\"date\":\"2022-04-09\",\"value\":42767},{\"date\":\"2022-04-10\",\"value\":42138},{\"date\":\"2022-04-11\",\"value\":39497},{\"date\":\"2022-04-12\",\"value\":40078},{\"date\":\"2022-04-13\",\"value\":41133},{\"date\":\"2022-04-14\",\"value\":39936},{\"date\":\"2022-04-15\",\"value\":40560},{\"date\":\"2022-04-16\",\"value\":40382},{\"date\":\"2022-04-17\",\"value\":39703},{\"date\":\"2022-04-18\",\"value\":40803},{\"date\":\"2022-04-19\",\"value\":41503},{\"date\":\"2022-04-20\",\"value\":41368},{\"date\":\"2022-04-21\",\"value\":40482},{\"date\":\"2022-04-22\",\"value\":39709},{\"date\":\"2022-04-23\",\"value\":39418},{\"date\":\"2022-04-24\",\"value\":39464},{\"date\":\"2022-04-25\",\"value\":40427},{\"date\":\"2022-04-26\",\"value\":38113},{\"date\":\"2022-04-27\",\"value\":39243},{\"date\":\"2022-04-28\",\"value\":39748},{\"date\":\"2022-04-29\",\"value\":38581},{\"date\":\"2022-04-30\",\"value\":37650},{\"date\":\"2022-05-01\",\"value\":38461},{\"date\":\"2022-05-02\",\"value\":38514},{\"date\":\"2022-05-03\",\"value\":37718},{\"date\":\"2022-05-04\",\"value\":39688},{\"date\":\"2022-05-05\",\"value\":36544},{\"date\":\"2022-05-06\",\"value\":36009},{\"date\":\"2022-05-07\",\"value\":35468},{\"date\":\"2022-05-08\",\"value\":34060},{\"date\":\"2022-05-09\",\"value\":30095},{\"date\":\"2022-05-10\",\"value\":31007.5},{\"date\":\"2022-05-11\",\"value\":29068.2},{\"date\":\"2022-05-12\",\"value\":28976},{\"date\":\"2022-05-13\",\"value\":29284.4},{\"date\":\"2022-05-14\",\"value\":30080.4},{\"date\":\"2022-05-15\",\"value\":31308.7},{\"date\":\"2022-05-16\",\"value\":29849},{\"date\":\"2022-05-17\",\"value\":30437.5},{\"date\":\"2022-05-18\",\"value\":28683.7},{\"date\":\"2022-05-19\",\"value\":30305.9},{\"date\":\"2022-05-20\",\"value\":29178.6},{\"date\":\"2022-05-21\",\"value\":29434.6},{\"date\":\"2022-05-22\",\"value\":30286.6},{\"date\":\"2022-05-23\",\"value\":29093.3},{\"date\":\"2022-05-24\",\"value\":29648.7},{\"date\":\"2022-05-25\",\"value\":29540.6},{\"date\":\"2022-05-26\",\"value\":29203.5},{\"date\":\"2022-05-27\",\"value\":28601.2},{\"date\":\"2022-05-28\",\"value\":29027.1},{\"date\":\"2022-05-29\",\"value\":29465.2},{\"date\":\"2022-05-30\",\"value\":31723.3},{\"date\":\"2022-05-31\",\"value\":31793.4},{\"date\":\"2022-06-01\",\"value\":29798.5},{\"date\":\"2022-06-02\",\"value\":30455.5},{\"date\":\"2022-06-03\",\"value\":29700.9},{\"date\":\"2022-06-04\",\"value\":29864.3},{\"date\":\"2022-06-05\",\"value\":29913},{\"date\":\"2022-06-06\",\"value\":31367.6},{\"date\":\"2022-06-07\",\"value\":31128.8},{\"date\":\"2022-06-08\",\"value\":30201.6},{\"date\":\"2022-06-09\",\"value\":30097.8},{\"date\":\"2022-06-10\",\"value\":29083.3},{\"date\":\"2022-06-11\",\"value\":28403.4},{\"date\":\"2022-06-12\",\"value\":26606.3},{\"date\":\"2022-06-13\",\"value\":22448},{\"date\":\"2022-06-14\",\"value\":22157.3},{\"date\":\"2022-06-15\",\"value\":22577.9},{\"date\":\"2022-06-16\",\"value\":20386.6},{\"date\":\"2022-06-17\",\"value\":20444.6},{\"date\":\"2022-06-18\",\"value\":18986.5},{\"date\":\"2022-06-19\",\"value\":20577.2},{\"date\":\"2022-06-20\",\"value\":20572.3},{\"date\":\"2022-06-21\",\"value\":20720.4},{\"date\":\"2022-06-22\",\"value\":19965.8},{\"date\":\"2022-06-23\",\"value\":21100.7},{\"date\":\"2022-06-24\",\"value\":21226.9},{\"date\":\"2022-06-25\",\"value\":21489.9},{\"date\":\"2022-06-26\",\"value\":21043.5},{\"date\":\"2022-06-27\",\"value\":20730.2},{\"date\":\"2022-06-28\",\"value\":20278},{\"date\":\"2022-06-29\",\"value\":20111.3},{\"date\":\"2022-06-30\",\"value\":19926.6},{\"date\":\"2022-07-01\",\"value\":19262.9},{\"date\":\"2022-07-02\",\"value\":19243.2},{\"date\":\"2022-07-03\",\"value\":19309.9},{\"date\":\"2022-07-04\",\"value\":20215.8},{\"date\":\"2022-07-05\",\"value\":20200.6},{\"date\":\"2022-07-06\",\"value\":20561.1},{\"date\":\"2022-07-07\",\"value\":21637.8},{\"date\":\"2022-07-08\",\"value\":21611.2},{\"date\":\"2022-07-09\",\"value\":21587.5},{\"date\":\"2022-07-10\",\"value\":20847.4},{\"date\":\"2022-07-11\",\"value\":19963.2},{\"date\":\"2022-07-12\",\"value\":19330.9},{\"date\":\"2022-07-13\",\"value\":20250},{\"date\":\"2022-07-14\",\"value\":20586},{\"date\":\"2022-07-15\",\"value\":20825.1},{\"date\":\"2022-07-16\",\"value\":21209.9},{\"date\":\"2022-07-17\",\"value\":20785.6},{\"date\":\"2022-07-18\",\"value\":22525.8},{\"date\":\"2022-07-19\",\"value\":23410.2},{\"date\":\"2022-07-20\",\"value\":23215.2},{\"date\":\"2022-07-21\",\"value\":23153},{\"date\":\"2022-07-22\",\"value\":22675.2},{\"date\":\"2022-07-23\",\"value\":22460.4},{\"date\":\"2022-07-24\",\"value\":22582.1},{\"date\":\"2022-07-25\",\"value\":21301.9},{\"date\":\"2022-07-26\",\"value\":21248.7},{\"date\":\"2022-07-27\",\"value\":22958.3},{\"date\":\"2022-07-28\",\"value\":23850},{\"date\":\"2022-07-29\",\"value\":23774.3},{\"date\":\"2022-07-30\",\"value\":23634.2},{\"date\":\"2022-07-31\",\"value\":23303.4},{\"date\":\"2022-08-01\",\"value\":23271.2},{\"date\":\"2022-08-02\",\"value\":22988.6},{\"date\":\"2022-08-03\",\"value\":22820.8},{\"date\":\"2022-08-04\",\"value\":22612.1},{\"date\":\"2022-08-05\",\"value\":23308.2},{\"date\":\"2022-08-06\",\"value\":22944.2},{\"date\":\"2022-08-07\",\"value\":23175.3},{\"date\":\"2022-08-08\",\"value\":23816.3},{\"date\":\"2022-08-09\",\"value\":23146.7},{\"date\":\"2022-08-10\",\"value\":23962.9},{\"date\":\"2022-08-11\",\"value\":23935.3},{\"date\":\"2022-08-12\",\"value\":24398.7},{\"date\":\"2022-08-13\",\"value\":24442.5},{\"date\":\"2022-08-14\",\"value\":24302.8},{\"date\":\"2022-08-15\",\"value\":24101.7},{\"date\":\"2022-08-16\",\"value\":23856.8},{\"date\":\"2022-08-17\",\"value\":23338},{\"date\":\"2022-08-18\",\"value\":23203.6},{\"date\":\"2022-08-19\",\"value\":20831.3},{\"date\":\"2022-08-20\",\"value\":21138.9},{\"date\":\"2022-08-21\",\"value\":21517.2},{\"date\":\"2022-08-22\",\"value\":21416.3},{\"date\":\"2022-08-23\",\"value\":21517.2},{\"date\":\"2022-08-24\",\"value\":21365.2},{\"date\":\"2022-08-25\",\"value\":21565.4},{\"date\":\"2022-08-26\",\"value\":20249.9},{\"date\":\"2022-08-27\",\"value\":20033.9},{\"date\":\"2022-08-28\",\"value\":19550.2},{\"date\":\"2022-08-29\",\"value\":20295.8},{\"date\":\"2022-08-30\",\"value\":19792.6},{\"date\":\"2022-08-31\",\"value\":20043.9},{\"date\":\"2022-09-01\",\"value\":20126.1},{\"date\":\"2022-09-02\",\"value\":19952.7},{\"date\":\"2022-09-03\",\"value\":19831.4},{\"date\":\"2022-09-04\",\"value\":19999.9},{\"date\":\"2022-09-05\",\"value\":19793.1},{\"date\":\"2022-09-06\",\"value\":18786.4},{\"date\":\"2022-09-07\",\"value\":19281.5},{\"date\":\"2022-09-08\",\"value\":19317.4},{\"date\":\"2022-09-09\",\"value\":21365.2},{\"date\":\"2022-09-10\",\"value\":21650.4},{\"date\":\"2022-09-11\",\"value\":21834.9},{\"date\":\"2022-09-12\",\"value\":22395.3},{\"date\":\"2022-09-13\",\"value\":20175.5},{\"date\":\"2022-09-14\",\"value\":20222.5},{\"date\":\"2022-09-15\",\"value\":19701.7},{\"date\":\"2022-09-16\",\"value\":19802.4},{\"date\":\"2022-09-17\",\"value\":20113.5},{\"date\":\"2022-09-18\",\"value\":19418.8},{\"date\":\"2022-09-19\",\"value\":19538.9},{\"date\":\"2022-09-20\",\"value\":18872.4},{\"date\":\"2022-09-21\",\"value\":18489},{\"date\":\"2022-09-22\",\"value\":19404},{\"date\":\"2022-09-23\",\"value\":19293.5},{\"date\":\"2022-09-24\",\"value\":18925.2},{\"date\":\"2022-09-25\",\"value\":18803.2},{\"date\":\"2022-09-26\",\"value\":19225.7},{\"date\":\"2022-09-27\",\"value\":19081},{\"date\":\"2022-09-28\",\"value\":19411},{\"date\":\"2022-09-29\",\"value\":19593},{\"date\":\"2022-09-30\",\"value\":19423},{\"date\":\"2022-10-01\",\"value\":19311.9},{\"date\":\"2022-10-02\",\"value\":19052.2},{\"date\":\"2022-10-03\",\"value\":19628.3},{\"date\":\"2022-10-04\",\"value\":20340.2},{\"date\":\"2022-10-05\",\"value\":20157.5},{\"date\":\"2022-10-06\",\"value\":19956.7},{\"date\":\"2022-10-07\",\"value\":19531.3},{\"date\":\"2022-10-08\",\"value\":19415},{\"date\":\"2022-10-09\",\"value\":19441},{\"date\":\"2022-10-10\",\"value\":19134.6},{\"date\":\"2022-10-11\",\"value\":19059.1},{\"date\":\"2022-10-12\",\"value\":19154.8},{\"date\":\"2022-10-13\",\"value\":19379.8},{\"date\":\"2022-10-14\",\"value\":19181.8},{\"date\":\"2022-10-15\",\"value\":19068.7},{\"date\":\"2022-10-16\",\"value\":19261.9},{\"date\":\"2022-10-17\",\"value\":19548.2},{\"date\":\"2022-10-18\",\"value\":19328.2},{\"date\":\"2022-10-19\",\"value\":19123.9},{\"date\":\"2022-10-20\",\"value\":19042.9},{\"date\":\"2022-10-21\",\"value\":19162.6},{\"date\":\"2022-10-22\",\"value\":19204.8},{\"date\":\"2022-10-23\",\"value\":19571.2},{\"date\":\"2022-10-24\",\"value\":19331.5},{\"date\":\"2022-10-25\",\"value\":20082.7},{\"date\":\"2022-10-26\",\"value\":20769.5},{\"date\":\"2022-10-27\",\"value\":20292.9},{\"date\":\"2022-10-28\",\"value\":20594.4},{\"date\":\"2022-10-29\",\"value\":20809.8},{\"date\":\"2022-10-30\",\"value\":20626.3},{\"date\":\"2022-10-31\",\"value\":20496.3},{\"date\":\"2022-11-01\",\"value\":20483.5},{\"date\":\"2022-11-02\",\"value\":20154.4},{\"date\":\"2022-11-03\",\"value\":20206.4},{\"date\":\"2022-11-04\",\"value\":21145.9},{\"date\":\"2022-11-05\",\"value\":21301.6},{\"date\":\"2022-11-06\",\"value\":20916.3},{\"date\":\"2022-11-07\",\"value\":20589},{\"date\":\"2022-11-08\",\"value\":18527.4},{\"date\":\"2022-11-09\",\"value\":15886.9},{\"date\":\"2022-11-10\",\"value\":17589.1},{\"date\":\"2022-11-11\",\"value\":17049.9},{\"date\":\"2022-11-12\",\"value\":16795.2},{\"date\":\"2022-11-13\",\"value\":16324.5},{\"date\":\"2022-11-14\",\"value\":16613.7},{\"date\":\"2022-11-15\",\"value\":16895.1},{\"date\":\"2022-11-16\",\"value\":16540.5},{\"date\":\"2022-11-17\",\"value\":16691.2},{\"date\":\"2022-11-18\",\"value\":16638.3},{\"date\":\"2022-11-19\",\"value\":16699.2},{\"date\":\"2022-11-20\",\"value\":16286.7},{\"date\":\"2022-11-21\",\"value\":15776.2},{\"date\":\"2022-11-22\",\"value\":16212.9},{\"date\":\"2022-11-23\",\"value\":16623.9},{\"date\":\"2022-11-24\",\"value\":16601.2},{\"date\":\"2022-11-25\",\"value\":16512.3},{\"date\":\"2022-11-26\",\"value\":16456.5},{\"date\":\"2022-11-27\",\"value\":16425.6},{\"date\":\"2022-11-28\",\"value\":16211.7},{\"date\":\"2022-11-29\",\"value\":16440.4},{\"date\":\"2022-11-30\",\"value\":17163.9},{\"date\":\"2022-12-01\",\"value\":16972},{\"date\":\"2022-12-02\",\"value\":17093.6},{\"date\":\"2022-12-03\",\"value\":16884.5},{\"date\":\"2022-12-04\",\"value\":17112.6},{\"date\":\"2022-12-05\",\"value\":16966.5},{\"date\":\"2022-12-06\",\"value\":17089.3},{\"date\":\"2022-12-07\",\"value\":16835.2},{\"date\":\"2022-12-08\",\"value\":17225.7},{\"date\":\"2022-12-09\",\"value\":17125.7},{\"date\":\"2022-12-10\",\"value\":17127.2},{\"date\":\"2022-12-11\",\"value\":17093.3},{\"date\":\"2022-12-12\",\"value\":17210.4},{\"date\":\"2022-12-13\",\"value\":17778.6},{\"date\":\"2022-12-14\",\"value\":17796.4},{\"date\":\"2022-12-15\",\"value\":17356.1},{\"date\":\"2022-12-16\",\"value\":16629.6},{\"date\":\"2022-12-17\",\"value\":16777.1},{\"date\":\"2022-12-18\",\"value\":16741.1},{\"date\":\"2022-12-19\",\"value\":16441.3},{\"date\":\"2022-12-20\",\"value\":16902.8},{\"date\":\"2022-12-21\",\"value\":16831.8},{\"date\":\"2022-12-22\",\"value\":16820.6},{\"date\":\"2022-12-23\",\"value\":16779.1},{\"date\":\"2022-12-24\",\"value\":16837.2},{\"date\":\"2022-12-25\",\"value\":16831.8},{\"date\":\"2022-12-26\",\"value\":16918.1},{\"date\":\"2022-12-27\",\"value\":16706.1},{\"date\":\"2022-12-28\",\"value\":16546.2},{\"date\":\"2022-12-29\",\"value\":16636.4},{\"date\":\"2022-12-30\",\"value\":16607.2},{\"date\":\"2022-12-31\",\"value\":16537.4},{\"date\":\"2023-01-01\",\"value\":16618.4},{\"date\":\"2023-01-02\",\"value\":16674.3},{\"date\":\"2023-01-03\",\"value\":16674.2},{\"date\":\"2023-01-04\",\"value\":16852.1},{\"date\":\"2023-01-05\",\"value\":16829.8},{\"date\":\"2023-01-06\",\"value\":16950.9},{\"date\":\"2023-01-07\",\"value\":16943.6},{\"date\":\"2023-01-08\",\"value\":17119},{\"date\":\"2023-01-09\",\"value\":17180.1},{\"date\":\"2023-01-10\",\"value\":17439.1},{\"date\":\"2023-01-11\",\"value\":17942.3},{\"date\":\"2023-01-12\",\"value\":18851.3},{\"date\":\"2023-01-13\",\"value\":19927},{\"date\":\"2023-01-14\",\"value\":20958.2},{\"date\":\"2023-01-15\",\"value\":20879.8},{\"date\":\"2023-01-16\",\"value\":21184.2},{\"date\":\"2023-01-17\",\"value\":21137.1},{\"date\":\"2023-01-18\",\"value\":20670.6},{\"date\":\"2023-01-19\",\"value\":21081.2},{\"date\":\"2023-01-20\",\"value\":22677.2},{\"date\":\"2023-01-21\",\"value\":22775.7},{\"date\":\"2023-01-22\",\"value\":22707.8},{\"date\":\"2023-01-23\",\"value\":22915.5},{\"date\":\"2023-01-24\",\"value\":22632.5},{\"date\":\"2023-01-25\",\"value\":23055.1},{\"date\":\"2023-01-26\",\"value\":23016},{\"date\":\"2023-01-27\",\"value\":23074.6},{\"date\":\"2023-01-28\",\"value\":23027.9},{\"date\":\"2023-01-29\",\"value\":23753.1},{\"date\":\"2023-01-30\",\"value\":22832.2},{\"date\":\"2023-01-31\",\"value\":23125.1},{\"date\":\"2023-02-01\",\"value\":23725.6},{\"date\":\"2023-02-02\",\"value\":23427.6},{\"date\":\"2023-02-03\",\"value\":23431.2},{\"date\":\"2023-02-04\",\"value\":23323.8},{\"date\":\"2023-02-05\",\"value\":22936},{\"date\":\"2023-02-06\",\"value\":22761.8},{\"date\":\"2023-02-07\",\"value\":23251.7},{\"date\":\"2023-02-08\",\"value\":22964.6},{\"date\":\"2023-02-09\",\"value\":21792.5},{\"date\":\"2023-02-10\",\"value\":21635},{\"date\":\"2023-02-11\",\"value\":21859.8},{\"date\":\"2023-02-12\",\"value\":21786.8},{\"date\":\"2023-02-13\",\"value\":21772.6},{\"date\":\"2023-02-14\",\"value\":22198.5},{\"date\":\"2023-02-15\",\"value\":24327.9},{\"date\":\"2023-02-16\",\"value\":23539.6},{\"date\":\"2023-02-17\",\"value\":24573.5},{\"date\":\"2023-02-18\",\"value\":24631.4},{\"date\":\"2023-02-19\",\"value\":24302.9},{\"date\":\"2023-02-20\",\"value\":24839.5},{\"date\":\"2023-02-21\",\"value\":24450.7},{\"date\":\"2023-02-22\",\"value\":24186.6},{\"date\":\"2023-02-23\",\"value\":23936.3},{\"date\":\"2023-02-24\",\"value\":23191.5},{\"date\":\"2023-02-25\",\"value\":23166.1},{\"date\":\"2023-02-26\",\"value\":23558.7},{\"date\":\"2023-02-27\",\"value\":23494.1},{\"date\":\"2023-02-28\",\"value\":23130.5},{\"date\":\"2023-03-01\",\"value\":23642.2},{\"date\":\"2023-03-02\",\"value\":23465.4},{\"date\":\"2023-03-03\",\"value\":22354.4},{\"date\":\"2023-03-04\",\"value\":22347.1},{\"date\":\"2023-03-05\",\"value\":22428.3},{\"date\":\"2023-03-06\",\"value\":22410},{\"date\":\"2023-03-07\",\"value\":22197.8},{\"date\":\"2023-03-08\",\"value\":21710.8},{\"date\":\"2023-03-09\",\"value\":20361.8},{\"date\":\"2023-03-10\",\"value\":20156.7},{\"date\":\"2023-03-11\",\"value\":20467.5},{\"date\":\"2023-03-12\",\"value\":21994.8},{\"date\":\"2023-03-13\",\"value\":24114.4},{\"date\":\"2023-03-14\",\"value\":24699.7},{\"date\":\"2023-03-15\",\"value\":24282.7},{\"date\":\"2023-03-16\",\"value\":25004.1},{\"date\":\"2023-03-17\",\"value\":27391.8},{\"date\":\"2023-03-18\",\"value\":26914.5},{\"date\":\"2023-03-19\",\"value\":27958.7},{\"date\":\"2023-03-20\",\"value\":27720.5},{\"date\":\"2023-03-21\",\"value\":28114},{\"date\":\"2023-03-22\",\"value\":27261.7},{\"date\":\"2023-03-23\",\"value\":28310.7},{\"date\":\"2023-03-24\",\"value\":27462.2},{\"date\":\"2023-03-25\",\"value\":27475.6},{\"date\":\"2023-03-26\",\"value\":27973.5},{\"date\":\"2023-03-27\",\"value\":27129.8},{\"date\":\"2023-03-28\",\"value\":27262.2},{\"date\":\"2023-03-29\",\"value\":28350.4},{\"date\":\"2023-03-30\",\"value\":28029.5},{\"date\":\"2023-03-31\",\"value\":28473.7},{\"date\":\"2023-04-01\",\"value\":28456.1},{\"date\":\"2023-04-02\",\"value\":28198.3},{\"date\":\"2023-04-03\",\"value\":27802.1},{\"date\":\"2023-04-04\",\"value\":28164.4},{\"date\":\"2023-04-05\",\"value\":28173.5},{\"date\":\"2023-04-06\",\"value\":28036.7},{\"date\":\"2023-04-07\",\"value\":27910.4},{\"date\":\"2023-04-08\",\"value\":27941.2},{\"date\":\"2023-04-09\",\"value\":28326.6},{\"date\":\"2023-04-10\",\"value\":29641},{\"date\":\"2023-04-11\",\"value\":30209.6},{\"date\":\"2023-04-12\",\"value\":29886.4},{\"date\":\"2023-04-13\",\"value\":30387.4},{\"date\":\"2023-04-14\",\"value\":30472.5},{\"date\":\"2023-04-15\",\"value\":30299.6},{\"date\":\"2023-04-16\",\"value\":30310.3},{\"date\":\"2023-04-17\",\"value\":29434.9},{\"date\":\"2023-04-18\",\"value\":30382.2},{\"date\":\"2023-04-19\",\"value\":28813.7},{\"date\":\"2023-04-20\",\"value\":28240.5},{\"date\":\"2023-04-21\",\"value\":27264.8},{\"date\":\"2023-04-22\",\"value\":27813.9},{\"date\":\"2023-04-23\",\"value\":27591.4},{\"date\":\"2023-04-24\",\"value\":27509.3},{\"date\":\"2023-04-25\",\"value\":28298.8},{\"date\":\"2023-04-26\",\"value\":28424.6},{\"date\":\"2023-04-27\",\"value\":29475.9},{\"date\":\"2023-04-28\",\"value\":29321.8},{\"date\":\"2023-04-29\",\"value\":29234.1},{\"date\":\"2023-04-30\",\"value\":29252.1},{\"date\":\"2023-05-01\",\"value\":28077.6},{\"date\":\"2023-05-02\",\"value\":28669.1},{\"date\":\"2023-05-03\",\"value\":29023.6},{\"date\":\"2023-05-04\",\"value\":28842.1},{\"date\":\"2023-05-05\",\"value\":29513.2},{\"date\":\"2023-05-06\",\"value\":28857.1},{\"date\":\"2023-05-07\",\"value\":28424.8},{\"date\":\"2023-05-08\",\"value\":27670.5},{\"date\":\"2023-05-09\",\"value\":27634.9},{\"date\":\"2023-05-10\",\"value\":27603.3},{\"date\":\"2023-05-11\",\"value\":26983.5},{\"date\":\"2023-05-12\",\"value\":26799.2},{\"date\":\"2023-05-13\",\"value\":26777.5},{\"date\":\"2023-05-14\",\"value\":26920},{\"date\":\"2023-05-15\",\"value\":27183.9},{\"date\":\"2023-05-16\",\"value\":27035.3},{\"date\":\"2023-05-17\",\"value\":27403.1},{\"date\":\"2023-05-18\",\"value\":26828},{\"date\":\"2023-05-19\",\"value\":26882.9},{\"date\":\"2023-05-20\",\"value\":27116.2},{\"date\":\"2023-05-21\",\"value\":26749.9},{\"date\":\"2023-05-22\",\"value\":26847.3},{\"date\":\"2023-05-23\",\"value\":27220.7},{\"date\":\"2023-05-24\",\"value\":26328.4},{\"date\":\"2023-05-25\",\"value\":26475.8},{\"date\":\"2023-05-26\",\"value\":26711.5},{\"date\":\"2023-05-27\",\"value\":26857.5},{\"date\":\"2023-05-28\",\"value\":28071.2},{\"date\":\"2023-05-29\",\"value\":27739.4},{\"date\":\"2023-05-30\",\"value\":27698.2},{\"date\":\"2023-05-31\",\"value\":27216.1},{\"date\":\"2023-06-01\",\"value\":26819},{\"date\":\"2023-06-02\",\"value\":27244.7},{\"date\":\"2023-06-03\",\"value\":27072},{\"date\":\"2023-06-04\",\"value\":27122.3},{\"date\":\"2023-06-05\",\"value\":25747.4},{\"date\":\"2023-06-06\",\"value\":27230.2},{\"date\":\"2023-06-07\",\"value\":26342.5},{\"date\":\"2023-06-08\",\"value\":26501.1},{\"date\":\"2023-06-09\",\"value\":26479.3},{\"date\":\"2023-06-10\",\"value\":25844},{\"date\":\"2023-06-11\",\"value\":25928.4},{\"date\":\"2023-06-12\",\"value\":25906.8},{\"date\":\"2023-06-13\",\"value\":25929.4},{\"date\":\"2023-06-14\",\"value\":25129.5},{\"date\":\"2023-06-15\",\"value\":25591.3},{\"date\":\"2023-06-16\",\"value\":26341.3},{\"date\":\"2023-06-17\",\"value\":26515},{\"date\":\"2023-06-18\",\"value\":26339.7},{\"date\":\"2023-06-19\",\"value\":26845.9},{\"date\":\"2023-06-20\",\"value\":28307.7},{\"date\":\"2023-06-21\",\"value\":29996.9},{\"date\":\"2023-06-22\",\"value\":29890.5},{\"date\":\"2023-06-23\",\"value\":30679.4},{\"date\":\"2023-06-24\",\"value\":30533.6},{\"date\":\"2023-06-25\",\"value\":30465.3},{\"date\":\"2023-06-26\",\"value\":30267},{\"date\":\"2023-06-27\",\"value\":30689.1},{\"date\":\"2023-06-28\",\"value\":30078.6},{\"date\":\"2023-06-29\",\"value\":30445.7},{\"date\":\"2023-06-30\",\"value\":30472.9},{\"date\":\"2023-07-01\",\"value\":30586.8},{\"date\":\"2023-07-02\",\"value\":30617.7},{\"date\":\"2023-07-03\",\"value\":31151.3},{\"date\":\"2023-07-04\",\"value\":30768.4},{\"date\":\"2023-07-05\",\"value\":30512.8},{\"date\":\"2023-07-06\",\"value\":29913.1},{\"date\":\"2023-07-07\",\"value\":30346.4},{\"date\":\"2023-07-08\",\"value\":30288.8},{\"date\":\"2023-07-09\",\"value\":30166.9},{\"date\":\"2023-07-10\",\"value\":30415.3},{\"date\":\"2023-07-11\",\"value\":30623.3},{\"date\":\"2023-07-12\",\"value\":30387.3},{\"date\":\"2023-07-13\",\"value\":31466.1},{\"date\":\"2023-07-14\",\"value\":30317.4},{\"date\":\"2023-07-15\",\"value\":30291.4},{\"date\":\"2023-07-16\",\"value\":30235.5},{\"date\":\"2023-07-17\",\"value\":30139.7},{\"date\":\"2023-07-18\",\"value\":29866.8},{\"date\":\"2023-07-19\",\"value\":29909.7},{\"date\":\"2023-07-20\",\"value\":29801},{\"date\":\"2023-07-21\",\"value\":29903.1},{\"date\":\"2023-07-22\",\"value\":29788.9},{\"date\":\"2023-07-23\",\"value\":30085.9},{\"date\":\"2023-07-24\",\"value\":29178.1},{\"date\":\"2023-07-25\",\"value\":29228.6},{\"date\":\"2023-07-26\",\"value\":29352.2},{\"date\":\"2023-07-27\",\"value\":29222.7},{\"date\":\"2023-07-28\",\"value\":29315},{\"date\":\"2023-07-29\",\"value\":29353.5},{\"date\":\"2023-07-30\",\"value\":29281.7},{\"date\":\"2023-07-31\",\"value\":29232.4},{\"date\":\"2023-08-01\",\"value\":29712.2},{\"date\":\"2023-08-02\",\"value\":29173.7},{\"date\":\"2023-08-03\",\"value\":29189.3},{\"date\":\"2023-08-04\",\"value\":29105.5},{\"date\":\"2023-08-05\",\"value\":29068.1},{\"date\":\"2023-08-06\",\"value\":29081.3},{\"date\":\"2023-08-07\",\"value\":29204.2},{\"date\":\"2023-08-08\",\"value\":29777.4},{\"date\":\"2023-08-09\",\"value\":29578},{\"date\":\"2023-08-10\",\"value\":29449},{\"date\":\"2023-08-11\",\"value\":29420.8},{\"date\":\"2023-08-12\",\"value\":29428.2},{\"date\":\"2023-08-13\",\"value\":29300.1},{\"date\":\"2023-08-14\",\"value\":29426.7},{\"date\":\"2023-08-15\",\"value\":29195.3},{\"date\":\"2023-08-16\",\"value\":28726.3},{\"date\":\"2023-08-17\",\"value\":26635.7},{\"date\":\"2023-08-18\",\"value\":26053.2},{\"date\":\"2023-08-19\",\"value\":26099.4},{\"date\":\"2023-08-20\",\"value\":26190.8},{\"date\":\"2023-08-21\",\"value\":26126},{\"date\":\"2023-08-22\",\"value\":26039.9},{\"date\":\"2023-08-23\",\"value\":26436.2},{\"date\":\"2023-08-24\",\"value\":26177},{\"date\":\"2023-08-25\",\"value\":26057.2},{\"date\":\"2023-08-26\",\"value\":26017.1},{\"date\":\"2023-08-27\",\"value\":26100.6},{\"date\":\"2023-08-28\",\"value\":26118.9},{\"date\":\"2023-08-29\",\"value\":27723.9},{\"date\":\"2023-08-30\",\"value\":27298.8},{\"date\":\"2023-08-31\",\"value\":25937.3},{\"date\":\"2023-09-01\",\"value\":25803.2},{\"date\":\"2023-09-02\",\"value\":25869.7},{\"date\":\"2023-09-03\",\"value\":25971},{\"date\":\"2023-09-04\",\"value\":25823.3},{\"date\":\"2023-09-05\",\"value\":25790.2},{\"date\":\"2023-09-06\",\"value\":25758},{\"date\":\"2023-09-07\",\"value\":26249.8},{\"date\":\"2023-09-08\",\"value\":25909.5},{\"date\":\"2023-09-09\",\"value\":25901.1},{\"date\":\"2023-09-10\",\"value\":25840.2},{\"date\":\"2023-09-11\",\"value\":25166.4},{\"date\":\"2023-09-12\",\"value\":25834.5},{\"date\":\"2023-09-13\",\"value\":26223},{\"date\":\"2023-09-14\",\"value\":26524.7},{\"date\":\"2023-09-15\",\"value\":26601},{\"date\":\"2023-09-16\",\"value\":26562},{\"date\":\"2023-09-17\",\"value\":26529.1},{\"date\":\"2023-09-18\",\"value\":26763.5},{\"date\":\"2023-09-19\",\"value\":27209.2},{\"date\":\"2023-09-20\",\"value\":27125},{\"date\":\"2023-09-21\",\"value\":26570},{\"date\":\"2023-09-22\",\"value\":26581.9},{\"date\":\"2023-09-23\",\"value\":26579.2},{\"date\":\"2023-09-24\",\"value\":26251.5},{\"date\":\"2023-09-25\",\"value\":26302.7},{\"date\":\"2023-09-26\",\"value\":26218.9},{\"date\":\"2023-09-27\",\"value\":26366.1},{\"date\":\"2023-09-28\",\"value\":27022.6},{\"date\":\"2023-09-29\",\"value\":26909.8},{\"date\":\"2023-09-30\",\"value\":26962.7},{\"date\":\"2023-10-01\",\"value\":27974.5},{\"date\":\"2023-10-02\",\"value\":27505.3},{\"date\":\"2023-10-03\",\"value\":27428.4},{\"date\":\"2023-10-04\",\"value\":27790.9},{\"date\":\"2023-10-05\",\"value\":27410.3},{\"date\":\"2023-10-06\",\"value\":27936.9},{\"date\":\"2023-10-07\",\"value\":27961.1},{\"date\":\"2023-10-08\",\"value\":27922.7},{\"date\":\"2023-10-09\",\"value\":27581.4},{\"date\":\"2023-10-10\",\"value\":27391},{\"date\":\"2023-10-11\",\"value\":26876.6},{\"date\":\"2023-10-12\",\"value\":26761.1},{\"date\":\"2023-10-13\",\"value\":26863.5},{\"date\":\"2023-10-14\",\"value\":26852.8},{\"date\":\"2023-10-15\",\"value\":27161.2},{\"date\":\"2023-10-16\",\"value\":28509.7},{\"date\":\"2023-10-17\",\"value\":28403.6},{\"date\":\"2023-10-18\",\"value\":28321.7},{\"date\":\"2023-10-19\",\"value\":28723},{\"date\":\"2023-10-20\",\"value\":29674.5},{\"date\":\"2023-10-21\",\"value\":29912.9},{\"date\":\"2023-10-22\",\"value\":29984.2},{\"date\":\"2023-10-23\",\"value\":33041.8},{\"date\":\"2023-10-24\",\"value\":33917},{\"date\":\"2023-10-25\",\"value\":34496.8},{\"date\":\"2023-10-26\",\"value\":34153.7},{\"date\":\"2023-10-27\",\"value\":33901.8},{\"date\":\"2023-10-28\",\"value\":34082.6},{\"date\":\"2023-10-29\",\"value\":34526.7},{\"date\":\"2023-10-30\",\"value\":34477.9},{\"date\":\"2023-10-31\",\"value\":34650.6},{\"date\":\"2023-11-01\",\"value\":35423.8},{\"date\":\"2023-11-02\",\"value\":34931.4},{\"date\":\"2023-11-03\",\"value\":34718.7},{\"date\":\"2023-11-04\",\"value\":35065.8},{\"date\":\"2023-11-05\",\"value\":35019.4},{\"date\":\"2023-11-06\",\"value\":35042},{\"date\":\"2023-11-07\",\"value\":35426.1},{\"date\":\"2023-11-08\",\"value\":35636.9},{\"date\":\"2023-11-09\",\"value\":36700.5},{\"date\":\"2023-11-10\",\"value\":37303},{\"date\":\"2023-11-11\",\"value\":37150.5},{\"date\":\"2023-11-12\",\"value\":37064.4},{\"date\":\"2023-11-13\",\"value\":36478.3},{\"date\":\"2023-11-14\",\"value\":35549.3},{\"date\":\"2023-11-15\",\"value\":37874.9},{\"date\":\"2023-11-16\",\"value\":36161.2},{\"date\":\"2023-11-17\",\"value\":36595.4},{\"date\":\"2023-11-18\",\"value\":36568.6},{\"date\":\"2023-11-19\",\"value\":37354.2},{\"date\":\"2023-11-20\",\"value\":37454.1},{\"date\":\"2023-11-21\",\"value\":35813.6},{\"date\":\"2023-11-22\",\"value\":37410.8},{\"date\":\"2023-11-23\",\"value\":37293.1},{\"date\":\"2023-11-24\",\"value\":37717.3},{\"date\":\"2023-11-25\",\"value\":37787},{\"date\":\"2023-11-26\",\"value\":37451.8},{\"date\":\"2023-11-27\",\"value\":37248.6},{\"date\":\"2023-11-28\",\"value\":37823.3},{\"date\":\"2023-11-29\",\"value\":37855.5},{\"date\":\"2023-11-30\",\"value\":37712.9},{\"date\":\"2023-12-01\",\"value\":38688.2},{\"date\":\"2023-12-02\",\"value\":39458.4},{\"date\":\"2023-12-03\",\"value\":39970.2},{\"date\":\"2023-12-04\",\"value\":41987.8},{\"date\":\"2023-12-05\",\"value\":44076.2},{\"date\":\"2023-12-06\",\"value\":43776.3},{\"date\":\"2023-12-07\",\"value\":43289.7},{\"date\":\"2023-12-08\",\"value\":44175.5},{\"date\":\"2023-12-09\",\"value\":43718.4},{\"date\":\"2023-12-10\",\"value\":43791},{\"date\":\"2023-12-11\",\"value\":41256.1},{\"date\":\"2023-12-12\",\"value\":41487},{\"date\":\"2023-12-13\",\"value\":42884.5},{\"date\":\"2023-12-14\",\"value\":43025.9},{\"date\":\"2023-12-15\",\"value\":41929},{\"date\":\"2023-12-16\",\"value\":42271.7},{\"date\":\"2023-12-17\",\"value\":41368.7},{\"date\":\"2023-12-18\",\"value\":42659.7},{\"date\":\"2023-12-19\",\"value\":42259.3},{\"date\":\"2023-12-20\",\"value\":43662.8},{\"date\":\"2023-12-21\",\"value\":43865.9},{\"date\":\"2023-12-22\",\"value\":43968.9},{\"date\":\"2023-12-23\",\"value\":43710.4},{\"date\":\"2023-12-24\",\"value\":42981.5},{\"date\":\"2023-12-25\",\"value\":43578.5},{\"date\":\"2023-12-26\",\"value\":42513.3},{\"date\":\"2023-12-27\",\"value\":43446.5},{\"date\":\"2023-12-28\",\"value\":42581.1},{\"date\":\"2023-12-29\",\"value\":42072.4},{\"date\":\"2023-12-30\",\"value\":42136.7},{\"date\":\"2023-12-31\",\"value\":42272.5}]');\n\n});\n\nparcelRegister(\"mDWTX\", function(module, exports) {\n\n$parcel$export(module.exports, \"Utils\", () => $df5bef30413a053b$export$d2ca453b913dcdea);\n/**\n * The model holding a date and a value for the cart.\n */ var $df5bef30413a053b$export$d2ca453b913dcdea;\n(function(Utils) {\n    Utils.calculateMovingAverage = (data, window, factor = 1)=>{\n        // Clone the input dates but set the price to undefined.\n        const out = Object.values(structuredClone(data)).map((entry)=>{\n            return {\n                date: entry.date,\n                price: undefined\n            };\n        });\n        if (data.length < window || window <= 0) return out;\n        let sum = 0;\n        for(let i = 0; i < window; i++)sum += data[i].value ?? 0;\n        out[window - 1].value = sum / window * factor;\n        for(let i = window; i < data.length; i++){\n            sum += (data[i].value ?? 0) - (data[i - window].value ?? 0);\n            out[i].value = sum / window * factor;\n        }\n        return out;\n    };\n    Utils.setElementText = (className, text)=>{\n        for (const infoBox of document.getElementsByClassName(className)){\n            const container = infoBox;\n            if (container != null) container.innerText = typeof text === \"string\" ? text : text();\n        }\n    };\n    Utils.toTwoDecimals = (val)=>{\n        return (Math.round(val * 100) / 100).toFixed(2);\n    };\n})($df5bef30413a053b$export$d2ca453b913dcdea || ($df5bef30413a053b$export$d2ca453b913dcdea = {}));\n\n});\n\n\nvar $jqz8H = parcelRequire(\"jqz8H\");\n\nvar $5wcQa = parcelRequire(\"5wcQa\");\n\nvar $5pY61 = parcelRequire(\"5pY61\");\n\nvar $4rPAP = parcelRequire(\"4rPAP\");\n\nvar $23umq = parcelRequire(\"23umq\");\n\nvar $mDWTX = parcelRequire(\"mDWTX\");\n(0, $jqz8H.default).register((0, $5wcQa.default));\n(0, $jqz8H.default).defaults.color = (0, (/*@__PURE__*/$parcel$interopDefault($5pY61))).slate[400];\n(async ()=>{\n    const chartElement = document.getElementById(\"pi_cycle\");\n    if (chartElement == null) return;\n    const btc_data = [\n        ...(0, (/*@__PURE__*/$parcel$interopDefault($23umq))),\n        ...(0, (/*@__PURE__*/$parcel$interopDefault($4rPAP)))\n    ];\n    const dma350x2 = (0, $mDWTX.Utils).calculateMovingAverage(btc_data, 350, 2);\n    const dma111 = (0, $mDWTX.Utils).calculateMovingAverage(btc_data, 111);\n    const indicator = dma350x2.map((mva_350, index)=>{\n        if (dma111[index].value === undefined || mva_350.value === undefined) return {\n            date: mva_350.date,\n            value: undefined\n        };\n        return {\n            date: mva_350.date,\n            value: dma111[index].value / mva_350.value\n        };\n    });\n    (0, $mDWTX.Utils).setElementText(\"pi-cycle-info\", ()=>{\n        const val = indicator[indicator.length - 1].value;\n        if (val === undefined) return \"unknown\";\n        return `Indicator: ${(0, $mDWTX.Utils).toTwoDecimals(val)}`;\n    });\n    new (0, $jqz8H.default)(chartElement, {\n        type: \"line\",\n        data: {\n            datasets: [\n                {\n                    label: \"USD/BTC\",\n                    data: btc_data,\n                    borderWidth: 1\n                },\n                {\n                    label: \"350DMAx2\",\n                    data: dma350x2\n                },\n                {\n                    label: \"111DMA\",\n                    data: dma111\n                },\n                {\n                    label: \"Indicator\",\n                    data: indicator,\n                    yAxisID: \"y1\"\n                }\n            ]\n        },\n        options: {\n            normalized: true,\n            animation: false,\n            // Don't draw dots per data point.\n            datasets: {\n                line: {\n                    pointRadius: 0,\n                    borderWidth: 2\n                }\n            },\n            // Hovering anywhere should hover the nearest x-value independent of y-value.\n            hover: {\n                mode: \"index\",\n                intersect: false\n            },\n            parsing: {\n                xAxisKey: \"date\",\n                yAxisKey: \"value\"\n            },\n            scales: {\n                y: {\n                    type: \"logarithmic\",\n                    display: true,\n                    position: \"left\"\n                },\n                y1: {\n                    type: \"linear\",\n                    display: true,\n                    position: \"right\",\n                    min: 0,\n                    max: 4,\n                    grid: {\n                        drawOnChartArea: false\n                    }\n                }\n            },\n            plugins: {\n                // Show tooltip for nearest x-value for all grpahs independent of y-value of mouse.\n                tooltip: {\n                    mode: \"index\",\n                    intersect: false\n                },\n                annotation: {\n                    annotations: {\n                        lowerBox: {\n                            drawTime: \"beforeDatasetsDraw\",\n                            type: \"box\",\n                            xMin: btc_data[0].date,\n                            xMax: btc_data[btc_data.length - 1].date,\n                            yMin: 0,\n                            yMax: 0.35,\n                            yScaleID: \"y1\",\n                            backgroundColor: \"rgba(255, 0, 0, 0.15)\",\n                            borderWidth: 0\n                        },\n                        upperBox: {\n                            drawTime: \"beforeDatasetsDraw\",\n                            type: \"box\",\n                            xMin: btc_data[0].date,\n                            xMax: btc_data[btc_data.length - 1].date,\n                            yMin: 0.95,\n                            yMax: 1.5,\n                            yScaleID: \"y1\",\n                            backgroundColor: \"rgba(0, 255, 0, 0.15)\",\n                            borderWidth: 0\n                        }\n                    }\n                }\n            }\n        }\n    });\n})();\n\n\n//# sourceMappingURL=index.2e064e06.js.map\n","import {Chart, registerables} from '../dist/chart.js';\n\nChart.register(...registerables);\n\nexport * from '../dist/chart.js';\nexport default Chart;\n","/*!\n * Chart.js v4.4.5\n * https://www.chartjs.org\n * (c) 2024 Chart.js Contributors\n * Released under the MIT License\n */\nimport { r as requestAnimFrame, a as resolve, e as effects, c as color, i as isObject, d as defaults, b as isArray, v as valueOrDefault, u as unlistenArrayEvents, l as listenArrayEvents, f as resolveObjectKey, g as isNumberFinite, h as defined, s as sign, j as createContext, k as isNullOrUndef, _ as _arrayUnique, t as toRadians, m as toPercentage, n as toDimension, T as TAU, o as formatNumber, p as _angleBetween, H as HALF_PI, P as PI, q as _getStartAndCountOfVisiblePoints, w as _scaleRangesChanged, x as isNumber, y as _parseObjectDataRadialScale, z as getRelativePosition, A as _rlookupByKey, B as _lookupByKey, C as _isPointInArea, D as getAngleFromPoint, E as toPadding, F as each, G as getMaximumSize, I as _getParentNode, J as readUsedSize, K as supportsEventListenerOptions, L as throttled, M as _isDomSupported, N as _factorize, O as finiteOrDefault, Q as callback, R as _addGrace, S as _limitValue, U as toDegrees, V as _measureText, W as _int16Range, X as _alignPixel, Y as clipArea, Z as renderText, $ as unclipArea, a0 as toFont, a1 as _toLeftRightCenter, a2 as _alignStartEnd, a3 as overrides, a4 as merge, a5 as _capitalize, a6 as descriptors, a7 as isFunction, a8 as _attachContext, a9 as _createResolver, aa as _descriptors, ab as mergeIf, ac as uid, ad as debounce, ae as retinaScale, af as clearCanvas, ag as setsEqual, ah as _elementsEqual, ai as _isClickEvent, aj as _isBetween, ak as _readValueToProps, al as _updateBezierControlPoints, am as _computeSegments, an as _boundSegments, ao as _steppedInterpolation, ap as _bezierInterpolation, aq as _pointInLine, ar as _steppedLineTo, as as _bezierCurveTo, at as drawPoint, au as addRoundedRectPath, av as toTRBL, aw as toTRBLCorners, ax as _boundSegment, ay as _normalizeAngle, az as getRtlAdapter, aA as overrideTextDirection, aB as _textX, aC as restoreTextDirection, aD as drawPointLegend, aE as distanceBetweenPoints, aF as noop, aG as _setMinAndMaxByKey, aH as niceNum, aI as almostWhole, aJ as almostEquals, aK as _decimalPlaces, aL as Ticks, aM as log10, aN as _longestText, aO as _filterBetween, aP as _lookup } from './chunks/helpers.segment.js';\nimport '@kurkle/color';\n\nclass Animator {\n    constructor(){\n        this._request = null;\n        this._charts = new Map();\n        this._running = false;\n        this._lastDate = undefined;\n    }\n _notify(chart, anims, date, type) {\n        const callbacks = anims.listeners[type];\n        const numSteps = anims.duration;\n        callbacks.forEach((fn)=>fn({\n                chart,\n                initial: anims.initial,\n                numSteps,\n                currentStep: Math.min(date - anims.start, numSteps)\n            }));\n    }\n _refresh() {\n        if (this._request) {\n            return;\n        }\n        this._running = true;\n        this._request = requestAnimFrame.call(window, ()=>{\n            this._update();\n            this._request = null;\n            if (this._running) {\n                this._refresh();\n            }\n        });\n    }\n _update(date = Date.now()) {\n        let remaining = 0;\n        this._charts.forEach((anims, chart)=>{\n            if (!anims.running || !anims.items.length) {\n                return;\n            }\n            const items = anims.items;\n            let i = items.length - 1;\n            let draw = false;\n            let item;\n            for(; i >= 0; --i){\n                item = items[i];\n                if (item._active) {\n                    if (item._total > anims.duration) {\n                        anims.duration = item._total;\n                    }\n                    item.tick(date);\n                    draw = true;\n                } else {\n                    items[i] = items[items.length - 1];\n                    items.pop();\n                }\n            }\n            if (draw) {\n                chart.draw();\n                this._notify(chart, anims, date, 'progress');\n            }\n            if (!items.length) {\n                anims.running = false;\n                this._notify(chart, anims, date, 'complete');\n                anims.initial = false;\n            }\n            remaining += items.length;\n        });\n        this._lastDate = date;\n        if (remaining === 0) {\n            this._running = false;\n        }\n    }\n _getAnims(chart) {\n        const charts = this._charts;\n        let anims = charts.get(chart);\n        if (!anims) {\n            anims = {\n                running: false,\n                initial: true,\n                items: [],\n                listeners: {\n                    complete: [],\n                    progress: []\n                }\n            };\n            charts.set(chart, anims);\n        }\n        return anims;\n    }\n listen(chart, event, cb) {\n        this._getAnims(chart).listeners[event].push(cb);\n    }\n add(chart, items) {\n        if (!items || !items.length) {\n            return;\n        }\n        this._getAnims(chart).items.push(...items);\n    }\n has(chart) {\n        return this._getAnims(chart).items.length > 0;\n    }\n start(chart) {\n        const anims = this._charts.get(chart);\n        if (!anims) {\n            return;\n        }\n        anims.running = true;\n        anims.start = Date.now();\n        anims.duration = anims.items.reduce((acc, cur)=>Math.max(acc, cur._duration), 0);\n        this._refresh();\n    }\n    running(chart) {\n        if (!this._running) {\n            return false;\n        }\n        const anims = this._charts.get(chart);\n        if (!anims || !anims.running || !anims.items.length) {\n            return false;\n        }\n        return true;\n    }\n stop(chart) {\n        const anims = this._charts.get(chart);\n        if (!anims || !anims.items.length) {\n            return;\n        }\n        const items = anims.items;\n        let i = items.length - 1;\n        for(; i >= 0; --i){\n            items[i].cancel();\n        }\n        anims.items = [];\n        this._notify(chart, anims, Date.now(), 'complete');\n    }\n remove(chart) {\n        return this._charts.delete(chart);\n    }\n}\nvar animator = /* #__PURE__ */ new Animator();\n\nconst transparent = 'transparent';\nconst interpolators = {\n    boolean (from, to, factor) {\n        return factor > 0.5 ? to : from;\n    },\n color (from, to, factor) {\n        const c0 = color(from || transparent);\n        const c1 = c0.valid && color(to || transparent);\n        return c1 && c1.valid ? c1.mix(c0, factor).hexString() : to;\n    },\n    number (from, to, factor) {\n        return from + (to - from) * factor;\n    }\n};\nclass Animation {\n    constructor(cfg, target, prop, to){\n        const currentValue = target[prop];\n        to = resolve([\n            cfg.to,\n            to,\n            currentValue,\n            cfg.from\n        ]);\n        const from = resolve([\n            cfg.from,\n            currentValue,\n            to\n        ]);\n        this._active = true;\n        this._fn = cfg.fn || interpolators[cfg.type || typeof from];\n        this._easing = effects[cfg.easing] || effects.linear;\n        this._start = Math.floor(Date.now() + (cfg.delay || 0));\n        this._duration = this._total = Math.floor(cfg.duration);\n        this._loop = !!cfg.loop;\n        this._target = target;\n        this._prop = prop;\n        this._from = from;\n        this._to = to;\n        this._promises = undefined;\n    }\n    active() {\n        return this._active;\n    }\n    update(cfg, to, date) {\n        if (this._active) {\n            this._notify(false);\n            const currentValue = this._target[this._prop];\n            const elapsed = date - this._start;\n            const remain = this._duration - elapsed;\n            this._start = date;\n            this._duration = Math.floor(Math.max(remain, cfg.duration));\n            this._total += elapsed;\n            this._loop = !!cfg.loop;\n            this._to = resolve([\n                cfg.to,\n                to,\n                currentValue,\n                cfg.from\n            ]);\n            this._from = resolve([\n                cfg.from,\n                currentValue,\n                to\n            ]);\n        }\n    }\n    cancel() {\n        if (this._active) {\n            this.tick(Date.now());\n            this._active = false;\n            this._notify(false);\n        }\n    }\n    tick(date) {\n        const elapsed = date - this._start;\n        const duration = this._duration;\n        const prop = this._prop;\n        const from = this._from;\n        const loop = this._loop;\n        const to = this._to;\n        let factor;\n        this._active = from !== to && (loop || elapsed < duration);\n        if (!this._active) {\n            this._target[prop] = to;\n            this._notify(true);\n            return;\n        }\n        if (elapsed < 0) {\n            this._target[prop] = from;\n            return;\n        }\n        factor = elapsed / duration % 2;\n        factor = loop && factor > 1 ? 2 - factor : factor;\n        factor = this._easing(Math.min(1, Math.max(0, factor)));\n        this._target[prop] = this._fn(from, to, factor);\n    }\n    wait() {\n        const promises = this._promises || (this._promises = []);\n        return new Promise((res, rej)=>{\n            promises.push({\n                res,\n                rej\n            });\n        });\n    }\n    _notify(resolved) {\n        const method = resolved ? 'res' : 'rej';\n        const promises = this._promises || [];\n        for(let i = 0; i < promises.length; i++){\n            promises[i][method]();\n        }\n    }\n}\n\nclass Animations {\n    constructor(chart, config){\n        this._chart = chart;\n        this._properties = new Map();\n        this.configure(config);\n    }\n    configure(config) {\n        if (!isObject(config)) {\n            return;\n        }\n        const animationOptions = Object.keys(defaults.animation);\n        const animatedProps = this._properties;\n        Object.getOwnPropertyNames(config).forEach((key)=>{\n            const cfg = config[key];\n            if (!isObject(cfg)) {\n                return;\n            }\n            const resolved = {};\n            for (const option of animationOptions){\n                resolved[option] = cfg[option];\n            }\n            (isArray(cfg.properties) && cfg.properties || [\n                key\n            ]).forEach((prop)=>{\n                if (prop === key || !animatedProps.has(prop)) {\n                    animatedProps.set(prop, resolved);\n                }\n            });\n        });\n    }\n _animateOptions(target, values) {\n        const newOptions = values.options;\n        const options = resolveTargetOptions(target, newOptions);\n        if (!options) {\n            return [];\n        }\n        const animations = this._createAnimations(options, newOptions);\n        if (newOptions.$shared) {\n            awaitAll(target.options.$animations, newOptions).then(()=>{\n                target.options = newOptions;\n            }, ()=>{\n            });\n        }\n        return animations;\n    }\n _createAnimations(target, values) {\n        const animatedProps = this._properties;\n        const animations = [];\n        const running = target.$animations || (target.$animations = {});\n        const props = Object.keys(values);\n        const date = Date.now();\n        let i;\n        for(i = props.length - 1; i >= 0; --i){\n            const prop = props[i];\n            if (prop.charAt(0) === '$') {\n                continue;\n            }\n            if (prop === 'options') {\n                animations.push(...this._animateOptions(target, values));\n                continue;\n            }\n            const value = values[prop];\n            let animation = running[prop];\n            const cfg = animatedProps.get(prop);\n            if (animation) {\n                if (cfg && animation.active()) {\n                    animation.update(cfg, value, date);\n                    continue;\n                } else {\n                    animation.cancel();\n                }\n            }\n            if (!cfg || !cfg.duration) {\n                target[prop] = value;\n                continue;\n            }\n            running[prop] = animation = new Animation(cfg, target, prop, value);\n            animations.push(animation);\n        }\n        return animations;\n    }\n update(target, values) {\n        if (this._properties.size === 0) {\n            Object.assign(target, values);\n            return;\n        }\n        const animations = this._createAnimations(target, values);\n        if (animations.length) {\n            animator.add(this._chart, animations);\n            return true;\n        }\n    }\n}\nfunction awaitAll(animations, properties) {\n    const running = [];\n    const keys = Object.keys(properties);\n    for(let i = 0; i < keys.length; i++){\n        const anim = animations[keys[i]];\n        if (anim && anim.active()) {\n            running.push(anim.wait());\n        }\n    }\n    return Promise.all(running);\n}\nfunction resolveTargetOptions(target, newOptions) {\n    if (!newOptions) {\n        return;\n    }\n    let options = target.options;\n    if (!options) {\n        target.options = newOptions;\n        return;\n    }\n    if (options.$shared) {\n        target.options = options = Object.assign({}, options, {\n            $shared: false,\n            $animations: {}\n        });\n    }\n    return options;\n}\n\nfunction scaleClip(scale, allowedOverflow) {\n    const opts = scale && scale.options || {};\n    const reverse = opts.reverse;\n    const min = opts.min === undefined ? allowedOverflow : 0;\n    const max = opts.max === undefined ? allowedOverflow : 0;\n    return {\n        start: reverse ? max : min,\n        end: reverse ? min : max\n    };\n}\nfunction defaultClip(xScale, yScale, allowedOverflow) {\n    if (allowedOverflow === false) {\n        return false;\n    }\n    const x = scaleClip(xScale, allowedOverflow);\n    const y = scaleClip(yScale, allowedOverflow);\n    return {\n        top: y.end,\n        right: x.end,\n        bottom: y.start,\n        left: x.start\n    };\n}\nfunction toClip(value) {\n    let t, r, b, l;\n    if (isObject(value)) {\n        t = value.top;\n        r = value.right;\n        b = value.bottom;\n        l = value.left;\n    } else {\n        t = r = b = l = value;\n    }\n    return {\n        top: t,\n        right: r,\n        bottom: b,\n        left: l,\n        disabled: value === false\n    };\n}\nfunction getSortedDatasetIndices(chart, filterVisible) {\n    const keys = [];\n    const metasets = chart._getSortedDatasetMetas(filterVisible);\n    let i, ilen;\n    for(i = 0, ilen = metasets.length; i < ilen; ++i){\n        keys.push(metasets[i].index);\n    }\n    return keys;\n}\nfunction applyStack(stack, value, dsIndex, options = {}) {\n    const keys = stack.keys;\n    const singleMode = options.mode === 'single';\n    let i, ilen, datasetIndex, otherValue;\n    if (value === null) {\n        return;\n    }\n    for(i = 0, ilen = keys.length; i < ilen; ++i){\n        datasetIndex = +keys[i];\n        if (datasetIndex === dsIndex) {\n            if (options.all) {\n                continue;\n            }\n            break;\n        }\n        otherValue = stack.values[datasetIndex];\n        if (isNumberFinite(otherValue) && (singleMode || value === 0 || sign(value) === sign(otherValue))) {\n            value += otherValue;\n        }\n    }\n    return value;\n}\nfunction convertObjectDataToArray(data, meta) {\n    const { iScale , vScale  } = meta;\n    const iAxisKey = iScale.axis === 'x' ? 'x' : 'y';\n    const vAxisKey = vScale.axis === 'x' ? 'x' : 'y';\n    const keys = Object.keys(data);\n    const adata = new Array(keys.length);\n    let i, ilen, key;\n    for(i = 0, ilen = keys.length; i < ilen; ++i){\n        key = keys[i];\n        adata[i] = {\n            [iAxisKey]: key,\n            [vAxisKey]: data[key]\n        };\n    }\n    return adata;\n}\nfunction isStacked(scale, meta) {\n    const stacked = scale && scale.options.stacked;\n    return stacked || stacked === undefined && meta.stack !== undefined;\n}\nfunction getStackKey(indexScale, valueScale, meta) {\n    return `${indexScale.id}.${valueScale.id}.${meta.stack || meta.type}`;\n}\nfunction getUserBounds(scale) {\n    const { min , max , minDefined , maxDefined  } = scale.getUserBounds();\n    return {\n        min: minDefined ? min : Number.NEGATIVE_INFINITY,\n        max: maxDefined ? max : Number.POSITIVE_INFINITY\n    };\n}\nfunction getOrCreateStack(stacks, stackKey, indexValue) {\n    const subStack = stacks[stackKey] || (stacks[stackKey] = {});\n    return subStack[indexValue] || (subStack[indexValue] = {});\n}\nfunction getLastIndexInStack(stack, vScale, positive, type) {\n    for (const meta of vScale.getMatchingVisibleMetas(type).reverse()){\n        const value = stack[meta.index];\n        if (positive && value > 0 || !positive && value < 0) {\n            return meta.index;\n        }\n    }\n    return null;\n}\nfunction updateStacks(controller, parsed) {\n    const { chart , _cachedMeta: meta  } = controller;\n    const stacks = chart._stacks || (chart._stacks = {});\n    const { iScale , vScale , index: datasetIndex  } = meta;\n    const iAxis = iScale.axis;\n    const vAxis = vScale.axis;\n    const key = getStackKey(iScale, vScale, meta);\n    const ilen = parsed.length;\n    let stack;\n    for(let i = 0; i < ilen; ++i){\n        const item = parsed[i];\n        const { [iAxis]: index , [vAxis]: value  } = item;\n        const itemStacks = item._stacks || (item._stacks = {});\n        stack = itemStacks[vAxis] = getOrCreateStack(stacks, key, index);\n        stack[datasetIndex] = value;\n        stack._top = getLastIndexInStack(stack, vScale, true, meta.type);\n        stack._bottom = getLastIndexInStack(stack, vScale, false, meta.type);\n        const visualValues = stack._visualValues || (stack._visualValues = {});\n        visualValues[datasetIndex] = value;\n    }\n}\nfunction getFirstScaleId(chart, axis) {\n    const scales = chart.scales;\n    return Object.keys(scales).filter((key)=>scales[key].axis === axis).shift();\n}\nfunction createDatasetContext(parent, index) {\n    return createContext(parent, {\n        active: false,\n        dataset: undefined,\n        datasetIndex: index,\n        index,\n        mode: 'default',\n        type: 'dataset'\n    });\n}\nfunction createDataContext(parent, index, element) {\n    return createContext(parent, {\n        active: false,\n        dataIndex: index,\n        parsed: undefined,\n        raw: undefined,\n        element,\n        index,\n        mode: 'default',\n        type: 'data'\n    });\n}\nfunction clearStacks(meta, items) {\n    const datasetIndex = meta.controller.index;\n    const axis = meta.vScale && meta.vScale.axis;\n    if (!axis) {\n        return;\n    }\n    items = items || meta._parsed;\n    for (const parsed of items){\n        const stacks = parsed._stacks;\n        if (!stacks || stacks[axis] === undefined || stacks[axis][datasetIndex] === undefined) {\n            return;\n        }\n        delete stacks[axis][datasetIndex];\n        if (stacks[axis]._visualValues !== undefined && stacks[axis]._visualValues[datasetIndex] !== undefined) {\n            delete stacks[axis]._visualValues[datasetIndex];\n        }\n    }\n}\nconst isDirectUpdateMode = (mode)=>mode === 'reset' || mode === 'none';\nconst cloneIfNotShared = (cached, shared)=>shared ? cached : Object.assign({}, cached);\nconst createStack = (canStack, meta, chart)=>canStack && !meta.hidden && meta._stacked && {\n        keys: getSortedDatasetIndices(chart, true),\n        values: null\n    };\nclass DatasetController {\n static defaults = {};\n static datasetElementType = null;\n static dataElementType = null;\n constructor(chart, datasetIndex){\n        this.chart = chart;\n        this._ctx = chart.ctx;\n        this.index = datasetIndex;\n        this._cachedDataOpts = {};\n        this._cachedMeta = this.getMeta();\n        this._type = this._cachedMeta.type;\n        this.options = undefined;\n         this._parsing = false;\n        this._data = undefined;\n        this._objectData = undefined;\n        this._sharedOptions = undefined;\n        this._drawStart = undefined;\n        this._drawCount = undefined;\n        this.enableOptionSharing = false;\n        this.supportsDecimation = false;\n        this.$context = undefined;\n        this._syncList = [];\n        this.datasetElementType = new.target.datasetElementType;\n        this.dataElementType = new.target.dataElementType;\n        this.initialize();\n    }\n    initialize() {\n        const meta = this._cachedMeta;\n        this.configure();\n        this.linkScales();\n        meta._stacked = isStacked(meta.vScale, meta);\n        this.addElements();\n        if (this.options.fill && !this.chart.isPluginEnabled('filler')) {\n            console.warn(\"Tried to use the 'fill' option without the 'Filler' plugin enabled. Please import and register the 'Filler' plugin and make sure it is not disabled in the options\");\n        }\n    }\n    updateIndex(datasetIndex) {\n        if (this.index !== datasetIndex) {\n            clearStacks(this._cachedMeta);\n        }\n        this.index = datasetIndex;\n    }\n    linkScales() {\n        const chart = this.chart;\n        const meta = this._cachedMeta;\n        const dataset = this.getDataset();\n        const chooseId = (axis, x, y, r)=>axis === 'x' ? x : axis === 'r' ? r : y;\n        const xid = meta.xAxisID = valueOrDefault(dataset.xAxisID, getFirstScaleId(chart, 'x'));\n        const yid = meta.yAxisID = valueOrDefault(dataset.yAxisID, getFirstScaleId(chart, 'y'));\n        const rid = meta.rAxisID = valueOrDefault(dataset.rAxisID, getFirstScaleId(chart, 'r'));\n        const indexAxis = meta.indexAxis;\n        const iid = meta.iAxisID = chooseId(indexAxis, xid, yid, rid);\n        const vid = meta.vAxisID = chooseId(indexAxis, yid, xid, rid);\n        meta.xScale = this.getScaleForId(xid);\n        meta.yScale = this.getScaleForId(yid);\n        meta.rScale = this.getScaleForId(rid);\n        meta.iScale = this.getScaleForId(iid);\n        meta.vScale = this.getScaleForId(vid);\n    }\n    getDataset() {\n        return this.chart.data.datasets[this.index];\n    }\n    getMeta() {\n        return this.chart.getDatasetMeta(this.index);\n    }\n getScaleForId(scaleID) {\n        return this.chart.scales[scaleID];\n    }\n _getOtherScale(scale) {\n        const meta = this._cachedMeta;\n        return scale === meta.iScale ? meta.vScale : meta.iScale;\n    }\n    reset() {\n        this._update('reset');\n    }\n _destroy() {\n        const meta = this._cachedMeta;\n        if (this._data) {\n            unlistenArrayEvents(this._data, this);\n        }\n        if (meta._stacked) {\n            clearStacks(meta);\n        }\n    }\n _dataCheck() {\n        const dataset = this.getDataset();\n        const data = dataset.data || (dataset.data = []);\n        const _data = this._data;\n        if (isObject(data)) {\n            const meta = this._cachedMeta;\n            this._data = convertObjectDataToArray(data, meta);\n        } else if (_data !== data) {\n            if (_data) {\n                unlistenArrayEvents(_data, this);\n                const meta = this._cachedMeta;\n                clearStacks(meta);\n                meta._parsed = [];\n            }\n            if (data && Object.isExtensible(data)) {\n                listenArrayEvents(data, this);\n            }\n            this._syncList = [];\n            this._data = data;\n        }\n    }\n    addElements() {\n        const meta = this._cachedMeta;\n        this._dataCheck();\n        if (this.datasetElementType) {\n            meta.dataset = new this.datasetElementType();\n        }\n    }\n    buildOrUpdateElements(resetNewElements) {\n        const meta = this._cachedMeta;\n        const dataset = this.getDataset();\n        let stackChanged = false;\n        this._dataCheck();\n        const oldStacked = meta._stacked;\n        meta._stacked = isStacked(meta.vScale, meta);\n        if (meta.stack !== dataset.stack) {\n            stackChanged = true;\n            clearStacks(meta);\n            meta.stack = dataset.stack;\n        }\n        this._resyncElements(resetNewElements);\n        if (stackChanged || oldStacked !== meta._stacked) {\n            updateStacks(this, meta._parsed);\n            meta._stacked = isStacked(meta.vScale, meta);\n        }\n    }\n configure() {\n        const config = this.chart.config;\n        const scopeKeys = config.datasetScopeKeys(this._type);\n        const scopes = config.getOptionScopes(this.getDataset(), scopeKeys, true);\n        this.options = config.createResolver(scopes, this.getContext());\n        this._parsing = this.options.parsing;\n        this._cachedDataOpts = {};\n    }\n parse(start, count) {\n        const { _cachedMeta: meta , _data: data  } = this;\n        const { iScale , _stacked  } = meta;\n        const iAxis = iScale.axis;\n        let sorted = start === 0 && count === data.length ? true : meta._sorted;\n        let prev = start > 0 && meta._parsed[start - 1];\n        let i, cur, parsed;\n        if (this._parsing === false) {\n            meta._parsed = data;\n            meta._sorted = true;\n            parsed = data;\n        } else {\n            if (isArray(data[start])) {\n                parsed = this.parseArrayData(meta, data, start, count);\n            } else if (isObject(data[start])) {\n                parsed = this.parseObjectData(meta, data, start, count);\n            } else {\n                parsed = this.parsePrimitiveData(meta, data, start, count);\n            }\n            const isNotInOrderComparedToPrev = ()=>cur[iAxis] === null || prev && cur[iAxis] < prev[iAxis];\n            for(i = 0; i < count; ++i){\n                meta._parsed[i + start] = cur = parsed[i];\n                if (sorted) {\n                    if (isNotInOrderComparedToPrev()) {\n                        sorted = false;\n                    }\n                    prev = cur;\n                }\n            }\n            meta._sorted = sorted;\n        }\n        if (_stacked) {\n            updateStacks(this, parsed);\n        }\n    }\n parsePrimitiveData(meta, data, start, count) {\n        const { iScale , vScale  } = meta;\n        const iAxis = iScale.axis;\n        const vAxis = vScale.axis;\n        const labels = iScale.getLabels();\n        const singleScale = iScale === vScale;\n        const parsed = new Array(count);\n        let i, ilen, index;\n        for(i = 0, ilen = count; i < ilen; ++i){\n            index = i + start;\n            parsed[i] = {\n                [iAxis]: singleScale || iScale.parse(labels[index], index),\n                [vAxis]: vScale.parse(data[index], index)\n            };\n        }\n        return parsed;\n    }\n parseArrayData(meta, data, start, count) {\n        const { xScale , yScale  } = meta;\n        const parsed = new Array(count);\n        let i, ilen, index, item;\n        for(i = 0, ilen = count; i < ilen; ++i){\n            index = i + start;\n            item = data[index];\n            parsed[i] = {\n                x: xScale.parse(item[0], index),\n                y: yScale.parse(item[1], index)\n            };\n        }\n        return parsed;\n    }\n parseObjectData(meta, data, start, count) {\n        const { xScale , yScale  } = meta;\n        const { xAxisKey ='x' , yAxisKey ='y'  } = this._parsing;\n        const parsed = new Array(count);\n        let i, ilen, index, item;\n        for(i = 0, ilen = count; i < ilen; ++i){\n            index = i + start;\n            item = data[index];\n            parsed[i] = {\n                x: xScale.parse(resolveObjectKey(item, xAxisKey), index),\n                y: yScale.parse(resolveObjectKey(item, yAxisKey), index)\n            };\n        }\n        return parsed;\n    }\n getParsed(index) {\n        return this._cachedMeta._parsed[index];\n    }\n getDataElement(index) {\n        return this._cachedMeta.data[index];\n    }\n applyStack(scale, parsed, mode) {\n        const chart = this.chart;\n        const meta = this._cachedMeta;\n        const value = parsed[scale.axis];\n        const stack = {\n            keys: getSortedDatasetIndices(chart, true),\n            values: parsed._stacks[scale.axis]._visualValues\n        };\n        return applyStack(stack, value, meta.index, {\n            mode\n        });\n    }\n updateRangeFromParsed(range, scale, parsed, stack) {\n        const parsedValue = parsed[scale.axis];\n        let value = parsedValue === null ? NaN : parsedValue;\n        const values = stack && parsed._stacks[scale.axis];\n        if (stack && values) {\n            stack.values = values;\n            value = applyStack(stack, parsedValue, this._cachedMeta.index);\n        }\n        range.min = Math.min(range.min, value);\n        range.max = Math.max(range.max, value);\n    }\n getMinMax(scale, canStack) {\n        const meta = this._cachedMeta;\n        const _parsed = meta._parsed;\n        const sorted = meta._sorted && scale === meta.iScale;\n        const ilen = _parsed.length;\n        const otherScale = this._getOtherScale(scale);\n        const stack = createStack(canStack, meta, this.chart);\n        const range = {\n            min: Number.POSITIVE_INFINITY,\n            max: Number.NEGATIVE_INFINITY\n        };\n        const { min: otherMin , max: otherMax  } = getUserBounds(otherScale);\n        let i, parsed;\n        function _skip() {\n            parsed = _parsed[i];\n            const otherValue = parsed[otherScale.axis];\n            return !isNumberFinite(parsed[scale.axis]) || otherMin > otherValue || otherMax < otherValue;\n        }\n        for(i = 0; i < ilen; ++i){\n            if (_skip()) {\n                continue;\n            }\n            this.updateRangeFromParsed(range, scale, parsed, stack);\n            if (sorted) {\n                break;\n            }\n        }\n        if (sorted) {\n            for(i = ilen - 1; i >= 0; --i){\n                if (_skip()) {\n                    continue;\n                }\n                this.updateRangeFromParsed(range, scale, parsed, stack);\n                break;\n            }\n        }\n        return range;\n    }\n    getAllParsedValues(scale) {\n        const parsed = this._cachedMeta._parsed;\n        const values = [];\n        let i, ilen, value;\n        for(i = 0, ilen = parsed.length; i < ilen; ++i){\n            value = parsed[i][scale.axis];\n            if (isNumberFinite(value)) {\n                values.push(value);\n            }\n        }\n        return values;\n    }\n getMaxOverflow() {\n        return false;\n    }\n getLabelAndValue(index) {\n        const meta = this._cachedMeta;\n        const iScale = meta.iScale;\n        const vScale = meta.vScale;\n        const parsed = this.getParsed(index);\n        return {\n            label: iScale ? '' + iScale.getLabelForValue(parsed[iScale.axis]) : '',\n            value: vScale ? '' + vScale.getLabelForValue(parsed[vScale.axis]) : ''\n        };\n    }\n _update(mode) {\n        const meta = this._cachedMeta;\n        this.update(mode || 'default');\n        meta._clip = toClip(valueOrDefault(this.options.clip, defaultClip(meta.xScale, meta.yScale, this.getMaxOverflow())));\n    }\n update(mode) {}\n    draw() {\n        const ctx = this._ctx;\n        const chart = this.chart;\n        const meta = this._cachedMeta;\n        const elements = meta.data || [];\n        const area = chart.chartArea;\n        const active = [];\n        const start = this._drawStart || 0;\n        const count = this._drawCount || elements.length - start;\n        const drawActiveElementsOnTop = this.options.drawActiveElementsOnTop;\n        let i;\n        if (meta.dataset) {\n            meta.dataset.draw(ctx, area, start, count);\n        }\n        for(i = start; i < start + count; ++i){\n            const element = elements[i];\n            if (element.hidden) {\n                continue;\n            }\n            if (element.active && drawActiveElementsOnTop) {\n                active.push(element);\n            } else {\n                element.draw(ctx, area);\n            }\n        }\n        for(i = 0; i < active.length; ++i){\n            active[i].draw(ctx, area);\n        }\n    }\n getStyle(index, active) {\n        const mode = active ? 'active' : 'default';\n        return index === undefined && this._cachedMeta.dataset ? this.resolveDatasetElementOptions(mode) : this.resolveDataElementOptions(index || 0, mode);\n    }\n getContext(index, active, mode) {\n        const dataset = this.getDataset();\n        let context;\n        if (index >= 0 && index < this._cachedMeta.data.length) {\n            const element = this._cachedMeta.data[index];\n            context = element.$context || (element.$context = createDataContext(this.getContext(), index, element));\n            context.parsed = this.getParsed(index);\n            context.raw = dataset.data[index];\n            context.index = context.dataIndex = index;\n        } else {\n            context = this.$context || (this.$context = createDatasetContext(this.chart.getContext(), this.index));\n            context.dataset = dataset;\n            context.index = context.datasetIndex = this.index;\n        }\n        context.active = !!active;\n        context.mode = mode;\n        return context;\n    }\n resolveDatasetElementOptions(mode) {\n        return this._resolveElementOptions(this.datasetElementType.id, mode);\n    }\n resolveDataElementOptions(index, mode) {\n        return this._resolveElementOptions(this.dataElementType.id, mode, index);\n    }\n _resolveElementOptions(elementType, mode = 'default', index) {\n        const active = mode === 'active';\n        const cache = this._cachedDataOpts;\n        const cacheKey = elementType + '-' + mode;\n        const cached = cache[cacheKey];\n        const sharing = this.enableOptionSharing && defined(index);\n        if (cached) {\n            return cloneIfNotShared(cached, sharing);\n        }\n        const config = this.chart.config;\n        const scopeKeys = config.datasetElementScopeKeys(this._type, elementType);\n        const prefixes = active ? [\n            `${elementType}Hover`,\n            'hover',\n            elementType,\n            ''\n        ] : [\n            elementType,\n            ''\n        ];\n        const scopes = config.getOptionScopes(this.getDataset(), scopeKeys);\n        const names = Object.keys(defaults.elements[elementType]);\n        const context = ()=>this.getContext(index, active, mode);\n        const values = config.resolveNamedOptions(scopes, names, context, prefixes);\n        if (values.$shared) {\n            values.$shared = sharing;\n            cache[cacheKey] = Object.freeze(cloneIfNotShared(values, sharing));\n        }\n        return values;\n    }\n _resolveAnimations(index, transition, active) {\n        const chart = this.chart;\n        const cache = this._cachedDataOpts;\n        const cacheKey = `animation-${transition}`;\n        const cached = cache[cacheKey];\n        if (cached) {\n            return cached;\n        }\n        let options;\n        if (chart.options.animation !== false) {\n            const config = this.chart.config;\n            const scopeKeys = config.datasetAnimationScopeKeys(this._type, transition);\n            const scopes = config.getOptionScopes(this.getDataset(), scopeKeys);\n            options = config.createResolver(scopes, this.getContext(index, active, transition));\n        }\n        const animations = new Animations(chart, options && options.animations);\n        if (options && options._cacheable) {\n            cache[cacheKey] = Object.freeze(animations);\n        }\n        return animations;\n    }\n getSharedOptions(options) {\n        if (!options.$shared) {\n            return;\n        }\n        return this._sharedOptions || (this._sharedOptions = Object.assign({}, options));\n    }\n includeOptions(mode, sharedOptions) {\n        return !sharedOptions || isDirectUpdateMode(mode) || this.chart._animationsDisabled;\n    }\n _getSharedOptions(start, mode) {\n        const firstOpts = this.resolveDataElementOptions(start, mode);\n        const previouslySharedOptions = this._sharedOptions;\n        const sharedOptions = this.getSharedOptions(firstOpts);\n        const includeOptions = this.includeOptions(mode, sharedOptions) || sharedOptions !== previouslySharedOptions;\n        this.updateSharedOptions(sharedOptions, mode, firstOpts);\n        return {\n            sharedOptions,\n            includeOptions\n        };\n    }\n updateElement(element, index, properties, mode) {\n        if (isDirectUpdateMode(mode)) {\n            Object.assign(element, properties);\n        } else {\n            this._resolveAnimations(index, mode).update(element, properties);\n        }\n    }\n updateSharedOptions(sharedOptions, mode, newOptions) {\n        if (sharedOptions && !isDirectUpdateMode(mode)) {\n            this._resolveAnimations(undefined, mode).update(sharedOptions, newOptions);\n        }\n    }\n _setStyle(element, index, mode, active) {\n        element.active = active;\n        const options = this.getStyle(index, active);\n        this._resolveAnimations(index, mode, active).update(element, {\n            options: !active && this.getSharedOptions(options) || options\n        });\n    }\n    removeHoverStyle(element, datasetIndex, index) {\n        this._setStyle(element, index, 'active', false);\n    }\n    setHoverStyle(element, datasetIndex, index) {\n        this._setStyle(element, index, 'active', true);\n    }\n _removeDatasetHoverStyle() {\n        const element = this._cachedMeta.dataset;\n        if (element) {\n            this._setStyle(element, undefined, 'active', false);\n        }\n    }\n _setDatasetHoverStyle() {\n        const element = this._cachedMeta.dataset;\n        if (element) {\n            this._setStyle(element, undefined, 'active', true);\n        }\n    }\n _resyncElements(resetNewElements) {\n        const data = this._data;\n        const elements = this._cachedMeta.data;\n        for (const [method, arg1, arg2] of this._syncList){\n            this[method](arg1, arg2);\n        }\n        this._syncList = [];\n        const numMeta = elements.length;\n        const numData = data.length;\n        const count = Math.min(numData, numMeta);\n        if (count) {\n            this.parse(0, count);\n        }\n        if (numData > numMeta) {\n            this._insertElements(numMeta, numData - numMeta, resetNewElements);\n        } else if (numData < numMeta) {\n            this._removeElements(numData, numMeta - numData);\n        }\n    }\n _insertElements(start, count, resetNewElements = true) {\n        const meta = this._cachedMeta;\n        const data = meta.data;\n        const end = start + count;\n        let i;\n        const move = (arr)=>{\n            arr.length += count;\n            for(i = arr.length - 1; i >= end; i--){\n                arr[i] = arr[i - count];\n            }\n        };\n        move(data);\n        for(i = start; i < end; ++i){\n            data[i] = new this.dataElementType();\n        }\n        if (this._parsing) {\n            move(meta._parsed);\n        }\n        this.parse(start, count);\n        if (resetNewElements) {\n            this.updateElements(data, start, count, 'reset');\n        }\n    }\n    updateElements(element, start, count, mode) {}\n _removeElements(start, count) {\n        const meta = this._cachedMeta;\n        if (this._parsing) {\n            const removed = meta._parsed.splice(start, count);\n            if (meta._stacked) {\n                clearStacks(meta, removed);\n            }\n        }\n        meta.data.splice(start, count);\n    }\n _sync(args) {\n        if (this._parsing) {\n            this._syncList.push(args);\n        } else {\n            const [method, arg1, arg2] = args;\n            this[method](arg1, arg2);\n        }\n        this.chart._dataChanges.push([\n            this.index,\n            ...args\n        ]);\n    }\n    _onDataPush() {\n        const count = arguments.length;\n        this._sync([\n            '_insertElements',\n            this.getDataset().data.length - count,\n            count\n        ]);\n    }\n    _onDataPop() {\n        this._sync([\n            '_removeElements',\n            this._cachedMeta.data.length - 1,\n            1\n        ]);\n    }\n    _onDataShift() {\n        this._sync([\n            '_removeElements',\n            0,\n            1\n        ]);\n    }\n    _onDataSplice(start, count) {\n        if (count) {\n            this._sync([\n                '_removeElements',\n                start,\n                count\n            ]);\n        }\n        const newCount = arguments.length - 2;\n        if (newCount) {\n            this._sync([\n                '_insertElements',\n                start,\n                newCount\n            ]);\n        }\n    }\n    _onDataUnshift() {\n        this._sync([\n            '_insertElements',\n            0,\n            arguments.length\n        ]);\n    }\n}\n\nfunction getAllScaleValues(scale, type) {\n    if (!scale._cache.$bar) {\n        const visibleMetas = scale.getMatchingVisibleMetas(type);\n        let values = [];\n        for(let i = 0, ilen = visibleMetas.length; i < ilen; i++){\n            values = values.concat(visibleMetas[i].controller.getAllParsedValues(scale));\n        }\n        scale._cache.$bar = _arrayUnique(values.sort((a, b)=>a - b));\n    }\n    return scale._cache.$bar;\n}\n function computeMinSampleSize(meta) {\n    const scale = meta.iScale;\n    const values = getAllScaleValues(scale, meta.type);\n    let min = scale._length;\n    let i, ilen, curr, prev;\n    const updateMinAndPrev = ()=>{\n        if (curr === 32767 || curr === -32768) {\n            return;\n        }\n        if (defined(prev)) {\n            min = Math.min(min, Math.abs(curr - prev) || min);\n        }\n        prev = curr;\n    };\n    for(i = 0, ilen = values.length; i < ilen; ++i){\n        curr = scale.getPixelForValue(values[i]);\n        updateMinAndPrev();\n    }\n    prev = undefined;\n    for(i = 0, ilen = scale.ticks.length; i < ilen; ++i){\n        curr = scale.getPixelForTick(i);\n        updateMinAndPrev();\n    }\n    return min;\n}\n function computeFitCategoryTraits(index, ruler, options, stackCount) {\n    const thickness = options.barThickness;\n    let size, ratio;\n    if (isNullOrUndef(thickness)) {\n        size = ruler.min * options.categoryPercentage;\n        ratio = options.barPercentage;\n    } else {\n        size = thickness * stackCount;\n        ratio = 1;\n    }\n    return {\n        chunk: size / stackCount,\n        ratio,\n        start: ruler.pixels[index] - size / 2\n    };\n}\n function computeFlexCategoryTraits(index, ruler, options, stackCount) {\n    const pixels = ruler.pixels;\n    const curr = pixels[index];\n    let prev = index > 0 ? pixels[index - 1] : null;\n    let next = index < pixels.length - 1 ? pixels[index + 1] : null;\n    const percent = options.categoryPercentage;\n    if (prev === null) {\n        prev = curr - (next === null ? ruler.end - ruler.start : next - curr);\n    }\n    if (next === null) {\n        next = curr + curr - prev;\n    }\n    const start = curr - (curr - Math.min(prev, next)) / 2 * percent;\n    const size = Math.abs(next - prev) / 2 * percent;\n    return {\n        chunk: size / stackCount,\n        ratio: options.barPercentage,\n        start\n    };\n}\nfunction parseFloatBar(entry, item, vScale, i) {\n    const startValue = vScale.parse(entry[0], i);\n    const endValue = vScale.parse(entry[1], i);\n    const min = Math.min(startValue, endValue);\n    const max = Math.max(startValue, endValue);\n    let barStart = min;\n    let barEnd = max;\n    if (Math.abs(min) > Math.abs(max)) {\n        barStart = max;\n        barEnd = min;\n    }\n    item[vScale.axis] = barEnd;\n    item._custom = {\n        barStart,\n        barEnd,\n        start: startValue,\n        end: endValue,\n        min,\n        max\n    };\n}\nfunction parseValue(entry, item, vScale, i) {\n    if (isArray(entry)) {\n        parseFloatBar(entry, item, vScale, i);\n    } else {\n        item[vScale.axis] = vScale.parse(entry, i);\n    }\n    return item;\n}\nfunction parseArrayOrPrimitive(meta, data, start, count) {\n    const iScale = meta.iScale;\n    const vScale = meta.vScale;\n    const labels = iScale.getLabels();\n    const singleScale = iScale === vScale;\n    const parsed = [];\n    let i, ilen, item, entry;\n    for(i = start, ilen = start + count; i < ilen; ++i){\n        entry = data[i];\n        item = {};\n        item[iScale.axis] = singleScale || iScale.parse(labels[i], i);\n        parsed.push(parseValue(entry, item, vScale, i));\n    }\n    return parsed;\n}\nfunction isFloatBar(custom) {\n    return custom && custom.barStart !== undefined && custom.barEnd !== undefined;\n}\nfunction barSign(size, vScale, actualBase) {\n    if (size !== 0) {\n        return sign(size);\n    }\n    return (vScale.isHorizontal() ? 1 : -1) * (vScale.min >= actualBase ? 1 : -1);\n}\nfunction borderProps(properties) {\n    let reverse, start, end, top, bottom;\n    if (properties.horizontal) {\n        reverse = properties.base > properties.x;\n        start = 'left';\n        end = 'right';\n    } else {\n        reverse = properties.base < properties.y;\n        start = 'bottom';\n        end = 'top';\n    }\n    if (reverse) {\n        top = 'end';\n        bottom = 'start';\n    } else {\n        top = 'start';\n        bottom = 'end';\n    }\n    return {\n        start,\n        end,\n        reverse,\n        top,\n        bottom\n    };\n}\nfunction setBorderSkipped(properties, options, stack, index) {\n    let edge = options.borderSkipped;\n    const res = {};\n    if (!edge) {\n        properties.borderSkipped = res;\n        return;\n    }\n    if (edge === true) {\n        properties.borderSkipped = {\n            top: true,\n            right: true,\n            bottom: true,\n            left: true\n        };\n        return;\n    }\n    const { start , end , reverse , top , bottom  } = borderProps(properties);\n    if (edge === 'middle' && stack) {\n        properties.enableBorderRadius = true;\n        if ((stack._top || 0) === index) {\n            edge = top;\n        } else if ((stack._bottom || 0) === index) {\n            edge = bottom;\n        } else {\n            res[parseEdge(bottom, start, end, reverse)] = true;\n            edge = top;\n        }\n    }\n    res[parseEdge(edge, start, end, reverse)] = true;\n    properties.borderSkipped = res;\n}\nfunction parseEdge(edge, a, b, reverse) {\n    if (reverse) {\n        edge = swap(edge, a, b);\n        edge = startEnd(edge, b, a);\n    } else {\n        edge = startEnd(edge, a, b);\n    }\n    return edge;\n}\nfunction swap(orig, v1, v2) {\n    return orig === v1 ? v2 : orig === v2 ? v1 : orig;\n}\nfunction startEnd(v, start, end) {\n    return v === 'start' ? start : v === 'end' ? end : v;\n}\nfunction setInflateAmount(properties, { inflateAmount  }, ratio) {\n    properties.inflateAmount = inflateAmount === 'auto' ? ratio === 1 ? 0.33 : 0 : inflateAmount;\n}\nclass BarController extends DatasetController {\n    static id = 'bar';\n static defaults = {\n        datasetElementType: false,\n        dataElementType: 'bar',\n        categoryPercentage: 0.8,\n        barPercentage: 0.9,\n        grouped: true,\n        animations: {\n            numbers: {\n                type: 'number',\n                properties: [\n                    'x',\n                    'y',\n                    'base',\n                    'width',\n                    'height'\n                ]\n            }\n        }\n    };\n static overrides = {\n        scales: {\n            _index_: {\n                type: 'category',\n                offset: true,\n                grid: {\n                    offset: true\n                }\n            },\n            _value_: {\n                type: 'linear',\n                beginAtZero: true\n            }\n        }\n    };\n parsePrimitiveData(meta, data, start, count) {\n        return parseArrayOrPrimitive(meta, data, start, count);\n    }\n parseArrayData(meta, data, start, count) {\n        return parseArrayOrPrimitive(meta, data, start, count);\n    }\n parseObjectData(meta, data, start, count) {\n        const { iScale , vScale  } = meta;\n        const { xAxisKey ='x' , yAxisKey ='y'  } = this._parsing;\n        const iAxisKey = iScale.axis === 'x' ? xAxisKey : yAxisKey;\n        const vAxisKey = vScale.axis === 'x' ? xAxisKey : yAxisKey;\n        const parsed = [];\n        let i, ilen, item, obj;\n        for(i = start, ilen = start + count; i < ilen; ++i){\n            obj = data[i];\n            item = {};\n            item[iScale.axis] = iScale.parse(resolveObjectKey(obj, iAxisKey), i);\n            parsed.push(parseValue(resolveObjectKey(obj, vAxisKey), item, vScale, i));\n        }\n        return parsed;\n    }\n updateRangeFromParsed(range, scale, parsed, stack) {\n        super.updateRangeFromParsed(range, scale, parsed, stack);\n        const custom = parsed._custom;\n        if (custom && scale === this._cachedMeta.vScale) {\n            range.min = Math.min(range.min, custom.min);\n            range.max = Math.max(range.max, custom.max);\n        }\n    }\n getMaxOverflow() {\n        return 0;\n    }\n getLabelAndValue(index) {\n        const meta = this._cachedMeta;\n        const { iScale , vScale  } = meta;\n        const parsed = this.getParsed(index);\n        const custom = parsed._custom;\n        const value = isFloatBar(custom) ? '[' + custom.start + ', ' + custom.end + ']' : '' + vScale.getLabelForValue(parsed[vScale.axis]);\n        return {\n            label: '' + iScale.getLabelForValue(parsed[iScale.axis]),\n            value\n        };\n    }\n    initialize() {\n        this.enableOptionSharing = true;\n        super.initialize();\n        const meta = this._cachedMeta;\n        meta.stack = this.getDataset().stack;\n    }\n    update(mode) {\n        const meta = this._cachedMeta;\n        this.updateElements(meta.data, 0, meta.data.length, mode);\n    }\n    updateElements(bars, start, count, mode) {\n        const reset = mode === 'reset';\n        const { index , _cachedMeta: { vScale  }  } = this;\n        const base = vScale.getBasePixel();\n        const horizontal = vScale.isHorizontal();\n        const ruler = this._getRuler();\n        const { sharedOptions , includeOptions  } = this._getSharedOptions(start, mode);\n        for(let i = start; i < start + count; i++){\n            const parsed = this.getParsed(i);\n            const vpixels = reset || isNullOrUndef(parsed[vScale.axis]) ? {\n                base,\n                head: base\n            } : this._calculateBarValuePixels(i);\n            const ipixels = this._calculateBarIndexPixels(i, ruler);\n            const stack = (parsed._stacks || {})[vScale.axis];\n            const properties = {\n                horizontal,\n                base: vpixels.base,\n                enableBorderRadius: !stack || isFloatBar(parsed._custom) || index === stack._top || index === stack._bottom,\n                x: horizontal ? vpixels.head : ipixels.center,\n                y: horizontal ? ipixels.center : vpixels.head,\n                height: horizontal ? ipixels.size : Math.abs(vpixels.size),\n                width: horizontal ? Math.abs(vpixels.size) : ipixels.size\n            };\n            if (includeOptions) {\n                properties.options = sharedOptions || this.resolveDataElementOptions(i, bars[i].active ? 'active' : mode);\n            }\n            const options = properties.options || bars[i].options;\n            setBorderSkipped(properties, options, stack, index);\n            setInflateAmount(properties, options, ruler.ratio);\n            this.updateElement(bars[i], i, properties, mode);\n        }\n    }\n _getStacks(last, dataIndex) {\n        const { iScale  } = this._cachedMeta;\n        const metasets = iScale.getMatchingVisibleMetas(this._type).filter((meta)=>meta.controller.options.grouped);\n        const stacked = iScale.options.stacked;\n        const stacks = [];\n        const currentParsed = this._cachedMeta.controller.getParsed(dataIndex);\n        const iScaleValue = currentParsed && currentParsed[iScale.axis];\n        const skipNull = (meta)=>{\n            const parsed = meta._parsed.find((item)=>item[iScale.axis] === iScaleValue);\n            const val = parsed && parsed[meta.vScale.axis];\n            if (isNullOrUndef(val) || isNaN(val)) {\n                return true;\n            }\n        };\n        for (const meta of metasets){\n            if (dataIndex !== undefined && skipNull(meta)) {\n                continue;\n            }\n            if (stacked === false || stacks.indexOf(meta.stack) === -1 || stacked === undefined && meta.stack === undefined) {\n                stacks.push(meta.stack);\n            }\n            if (meta.index === last) {\n                break;\n            }\n        }\n        if (!stacks.length) {\n            stacks.push(undefined);\n        }\n        return stacks;\n    }\n _getStackCount(index) {\n        return this._getStacks(undefined, index).length;\n    }\n _getStackIndex(datasetIndex, name, dataIndex) {\n        const stacks = this._getStacks(datasetIndex, dataIndex);\n        const index = name !== undefined ? stacks.indexOf(name) : -1;\n        return index === -1 ? stacks.length - 1 : index;\n    }\n _getRuler() {\n        const opts = this.options;\n        const meta = this._cachedMeta;\n        const iScale = meta.iScale;\n        const pixels = [];\n        let i, ilen;\n        for(i = 0, ilen = meta.data.length; i < ilen; ++i){\n            pixels.push(iScale.getPixelForValue(this.getParsed(i)[iScale.axis], i));\n        }\n        const barThickness = opts.barThickness;\n        const min = barThickness || computeMinSampleSize(meta);\n        return {\n            min,\n            pixels,\n            start: iScale._startPixel,\n            end: iScale._endPixel,\n            stackCount: this._getStackCount(),\n            scale: iScale,\n            grouped: opts.grouped,\n            ratio: barThickness ? 1 : opts.categoryPercentage * opts.barPercentage\n        };\n    }\n _calculateBarValuePixels(index) {\n        const { _cachedMeta: { vScale , _stacked , index: datasetIndex  } , options: { base: baseValue , minBarLength  }  } = this;\n        const actualBase = baseValue || 0;\n        const parsed = this.getParsed(index);\n        const custom = parsed._custom;\n        const floating = isFloatBar(custom);\n        let value = parsed[vScale.axis];\n        let start = 0;\n        let length = _stacked ? this.applyStack(vScale, parsed, _stacked) : value;\n        let head, size;\n        if (length !== value) {\n            start = length - value;\n            length = value;\n        }\n        if (floating) {\n            value = custom.barStart;\n            length = custom.barEnd - custom.barStart;\n            if (value !== 0 && sign(value) !== sign(custom.barEnd)) {\n                start = 0;\n            }\n            start += value;\n        }\n        const startValue = !isNullOrUndef(baseValue) && !floating ? baseValue : start;\n        let base = vScale.getPixelForValue(startValue);\n        if (this.chart.getDataVisibility(index)) {\n            head = vScale.getPixelForValue(start + length);\n        } else {\n            head = base;\n        }\n        size = head - base;\n        if (Math.abs(size) < minBarLength) {\n            size = barSign(size, vScale, actualBase) * minBarLength;\n            if (value === actualBase) {\n                base -= size / 2;\n            }\n            const startPixel = vScale.getPixelForDecimal(0);\n            const endPixel = vScale.getPixelForDecimal(1);\n            const min = Math.min(startPixel, endPixel);\n            const max = Math.max(startPixel, endPixel);\n            base = Math.max(Math.min(base, max), min);\n            head = base + size;\n            if (_stacked && !floating) {\n                parsed._stacks[vScale.axis]._visualValues[datasetIndex] = vScale.getValueForPixel(head) - vScale.getValueForPixel(base);\n            }\n        }\n        if (base === vScale.getPixelForValue(actualBase)) {\n            const halfGrid = sign(size) * vScale.getLineWidthForValue(actualBase) / 2;\n            base += halfGrid;\n            size -= halfGrid;\n        }\n        return {\n            size,\n            base,\n            head,\n            center: head + size / 2\n        };\n    }\n _calculateBarIndexPixels(index, ruler) {\n        const scale = ruler.scale;\n        const options = this.options;\n        const skipNull = options.skipNull;\n        const maxBarThickness = valueOrDefault(options.maxBarThickness, Infinity);\n        let center, size;\n        if (ruler.grouped) {\n            const stackCount = skipNull ? this._getStackCount(index) : ruler.stackCount;\n            const range = options.barThickness === 'flex' ? computeFlexCategoryTraits(index, ruler, options, stackCount) : computeFitCategoryTraits(index, ruler, options, stackCount);\n            const stackIndex = this._getStackIndex(this.index, this._cachedMeta.stack, skipNull ? index : undefined);\n            center = range.start + range.chunk * stackIndex + range.chunk / 2;\n            size = Math.min(maxBarThickness, range.chunk * range.ratio);\n        } else {\n            center = scale.getPixelForValue(this.getParsed(index)[scale.axis], index);\n            size = Math.min(maxBarThickness, ruler.min * ruler.ratio);\n        }\n        return {\n            base: center - size / 2,\n            head: center + size / 2,\n            center,\n            size\n        };\n    }\n    draw() {\n        const meta = this._cachedMeta;\n        const vScale = meta.vScale;\n        const rects = meta.data;\n        const ilen = rects.length;\n        let i = 0;\n        for(; i < ilen; ++i){\n            if (this.getParsed(i)[vScale.axis] !== null && !rects[i].hidden) {\n                rects[i].draw(this._ctx);\n            }\n        }\n    }\n}\n\nclass BubbleController extends DatasetController {\n    static id = 'bubble';\n static defaults = {\n        datasetElementType: false,\n        dataElementType: 'point',\n        animations: {\n            numbers: {\n                type: 'number',\n                properties: [\n                    'x',\n                    'y',\n                    'borderWidth',\n                    'radius'\n                ]\n            }\n        }\n    };\n static overrides = {\n        scales: {\n            x: {\n                type: 'linear'\n            },\n            y: {\n                type: 'linear'\n            }\n        }\n    };\n    initialize() {\n        this.enableOptionSharing = true;\n        super.initialize();\n    }\n parsePrimitiveData(meta, data, start, count) {\n        const parsed = super.parsePrimitiveData(meta, data, start, count);\n        for(let i = 0; i < parsed.length; i++){\n            parsed[i]._custom = this.resolveDataElementOptions(i + start).radius;\n        }\n        return parsed;\n    }\n parseArrayData(meta, data, start, count) {\n        const parsed = super.parseArrayData(meta, data, start, count);\n        for(let i = 0; i < parsed.length; i++){\n            const item = data[start + i];\n            parsed[i]._custom = valueOrDefault(item[2], this.resolveDataElementOptions(i + start).radius);\n        }\n        return parsed;\n    }\n parseObjectData(meta, data, start, count) {\n        const parsed = super.parseObjectData(meta, data, start, count);\n        for(let i = 0; i < parsed.length; i++){\n            const item = data[start + i];\n            parsed[i]._custom = valueOrDefault(item && item.r && +item.r, this.resolveDataElementOptions(i + start).radius);\n        }\n        return parsed;\n    }\n getMaxOverflow() {\n        const data = this._cachedMeta.data;\n        let max = 0;\n        for(let i = data.length - 1; i >= 0; --i){\n            max = Math.max(max, data[i].size(this.resolveDataElementOptions(i)) / 2);\n        }\n        return max > 0 && max;\n    }\n getLabelAndValue(index) {\n        const meta = this._cachedMeta;\n        const labels = this.chart.data.labels || [];\n        const { xScale , yScale  } = meta;\n        const parsed = this.getParsed(index);\n        const x = xScale.getLabelForValue(parsed.x);\n        const y = yScale.getLabelForValue(parsed.y);\n        const r = parsed._custom;\n        return {\n            label: labels[index] || '',\n            value: '(' + x + ', ' + y + (r ? ', ' + r : '') + ')'\n        };\n    }\n    update(mode) {\n        const points = this._cachedMeta.data;\n        this.updateElements(points, 0, points.length, mode);\n    }\n    updateElements(points, start, count, mode) {\n        const reset = mode === 'reset';\n        const { iScale , vScale  } = this._cachedMeta;\n        const { sharedOptions , includeOptions  } = this._getSharedOptions(start, mode);\n        const iAxis = iScale.axis;\n        const vAxis = vScale.axis;\n        for(let i = start; i < start + count; i++){\n            const point = points[i];\n            const parsed = !reset && this.getParsed(i);\n            const properties = {};\n            const iPixel = properties[iAxis] = reset ? iScale.getPixelForDecimal(0.5) : iScale.getPixelForValue(parsed[iAxis]);\n            const vPixel = properties[vAxis] = reset ? vScale.getBasePixel() : vScale.getPixelForValue(parsed[vAxis]);\n            properties.skip = isNaN(iPixel) || isNaN(vPixel);\n            if (includeOptions) {\n                properties.options = sharedOptions || this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n                if (reset) {\n                    properties.options.radius = 0;\n                }\n            }\n            this.updateElement(point, i, properties, mode);\n        }\n    }\n resolveDataElementOptions(index, mode) {\n        const parsed = this.getParsed(index);\n        let values = super.resolveDataElementOptions(index, mode);\n        if (values.$shared) {\n            values = Object.assign({}, values, {\n                $shared: false\n            });\n        }\n        const radius = values.radius;\n        if (mode !== 'active') {\n            values.radius = 0;\n        }\n        values.radius += valueOrDefault(parsed && parsed._custom, radius);\n        return values;\n    }\n}\n\nfunction getRatioAndOffset(rotation, circumference, cutout) {\n    let ratioX = 1;\n    let ratioY = 1;\n    let offsetX = 0;\n    let offsetY = 0;\n    if (circumference < TAU) {\n        const startAngle = rotation;\n        const endAngle = startAngle + circumference;\n        const startX = Math.cos(startAngle);\n        const startY = Math.sin(startAngle);\n        const endX = Math.cos(endAngle);\n        const endY = Math.sin(endAngle);\n        const calcMax = (angle, a, b)=>_angleBetween(angle, startAngle, endAngle, true) ? 1 : Math.max(a, a * cutout, b, b * cutout);\n        const calcMin = (angle, a, b)=>_angleBetween(angle, startAngle, endAngle, true) ? -1 : Math.min(a, a * cutout, b, b * cutout);\n        const maxX = calcMax(0, startX, endX);\n        const maxY = calcMax(HALF_PI, startY, endY);\n        const minX = calcMin(PI, startX, endX);\n        const minY = calcMin(PI + HALF_PI, startY, endY);\n        ratioX = (maxX - minX) / 2;\n        ratioY = (maxY - minY) / 2;\n        offsetX = -(maxX + minX) / 2;\n        offsetY = -(maxY + minY) / 2;\n    }\n    return {\n        ratioX,\n        ratioY,\n        offsetX,\n        offsetY\n    };\n}\nclass DoughnutController extends DatasetController {\n    static id = 'doughnut';\n static defaults = {\n        datasetElementType: false,\n        dataElementType: 'arc',\n        animation: {\n            animateRotate: true,\n            animateScale: false\n        },\n        animations: {\n            numbers: {\n                type: 'number',\n                properties: [\n                    'circumference',\n                    'endAngle',\n                    'innerRadius',\n                    'outerRadius',\n                    'startAngle',\n                    'x',\n                    'y',\n                    'offset',\n                    'borderWidth',\n                    'spacing'\n                ]\n            }\n        },\n        cutout: '50%',\n        rotation: 0,\n        circumference: 360,\n        radius: '100%',\n        spacing: 0,\n        indexAxis: 'r'\n    };\n    static descriptors = {\n        _scriptable: (name)=>name !== 'spacing',\n        _indexable: (name)=>name !== 'spacing' && !name.startsWith('borderDash') && !name.startsWith('hoverBorderDash')\n    };\n static overrides = {\n        aspectRatio: 1,\n        plugins: {\n            legend: {\n                labels: {\n                    generateLabels (chart) {\n                        const data = chart.data;\n                        if (data.labels.length && data.datasets.length) {\n                            const { labels: { pointStyle , color  }  } = chart.legend.options;\n                            return data.labels.map((label, i)=>{\n                                const meta = chart.getDatasetMeta(0);\n                                const style = meta.controller.getStyle(i);\n                                return {\n                                    text: label,\n                                    fillStyle: style.backgroundColor,\n                                    strokeStyle: style.borderColor,\n                                    fontColor: color,\n                                    lineWidth: style.borderWidth,\n                                    pointStyle: pointStyle,\n                                    hidden: !chart.getDataVisibility(i),\n                                    index: i\n                                };\n                            });\n                        }\n                        return [];\n                    }\n                },\n                onClick (e, legendItem, legend) {\n                    legend.chart.toggleDataVisibility(legendItem.index);\n                    legend.chart.update();\n                }\n            }\n        }\n    };\n    constructor(chart, datasetIndex){\n        super(chart, datasetIndex);\n        this.enableOptionSharing = true;\n        this.innerRadius = undefined;\n        this.outerRadius = undefined;\n        this.offsetX = undefined;\n        this.offsetY = undefined;\n    }\n    linkScales() {}\n parse(start, count) {\n        const data = this.getDataset().data;\n        const meta = this._cachedMeta;\n        if (this._parsing === false) {\n            meta._parsed = data;\n        } else {\n            let getter = (i)=>+data[i];\n            if (isObject(data[start])) {\n                const { key ='value'  } = this._parsing;\n                getter = (i)=>+resolveObjectKey(data[i], key);\n            }\n            let i, ilen;\n            for(i = start, ilen = start + count; i < ilen; ++i){\n                meta._parsed[i] = getter(i);\n            }\n        }\n    }\n _getRotation() {\n        return toRadians(this.options.rotation - 90);\n    }\n _getCircumference() {\n        return toRadians(this.options.circumference);\n    }\n _getRotationExtents() {\n        let min = TAU;\n        let max = -TAU;\n        for(let i = 0; i < this.chart.data.datasets.length; ++i){\n            if (this.chart.isDatasetVisible(i) && this.chart.getDatasetMeta(i).type === this._type) {\n                const controller = this.chart.getDatasetMeta(i).controller;\n                const rotation = controller._getRotation();\n                const circumference = controller._getCircumference();\n                min = Math.min(min, rotation);\n                max = Math.max(max, rotation + circumference);\n            }\n        }\n        return {\n            rotation: min,\n            circumference: max - min\n        };\n    }\n update(mode) {\n        const chart = this.chart;\n        const { chartArea  } = chart;\n        const meta = this._cachedMeta;\n        const arcs = meta.data;\n        const spacing = this.getMaxBorderWidth() + this.getMaxOffset(arcs) + this.options.spacing;\n        const maxSize = Math.max((Math.min(chartArea.width, chartArea.height) - spacing) / 2, 0);\n        const cutout = Math.min(toPercentage(this.options.cutout, maxSize), 1);\n        const chartWeight = this._getRingWeight(this.index);\n        const { circumference , rotation  } = this._getRotationExtents();\n        const { ratioX , ratioY , offsetX , offsetY  } = getRatioAndOffset(rotation, circumference, cutout);\n        const maxWidth = (chartArea.width - spacing) / ratioX;\n        const maxHeight = (chartArea.height - spacing) / ratioY;\n        const maxRadius = Math.max(Math.min(maxWidth, maxHeight) / 2, 0);\n        const outerRadius = toDimension(this.options.radius, maxRadius);\n        const innerRadius = Math.max(outerRadius * cutout, 0);\n        const radiusLength = (outerRadius - innerRadius) / this._getVisibleDatasetWeightTotal();\n        this.offsetX = offsetX * outerRadius;\n        this.offsetY = offsetY * outerRadius;\n        meta.total = this.calculateTotal();\n        this.outerRadius = outerRadius - radiusLength * this._getRingWeightOffset(this.index);\n        this.innerRadius = Math.max(this.outerRadius - radiusLength * chartWeight, 0);\n        this.updateElements(arcs, 0, arcs.length, mode);\n    }\n _circumference(i, reset) {\n        const opts = this.options;\n        const meta = this._cachedMeta;\n        const circumference = this._getCircumference();\n        if (reset && opts.animation.animateRotate || !this.chart.getDataVisibility(i) || meta._parsed[i] === null || meta.data[i].hidden) {\n            return 0;\n        }\n        return this.calculateCircumference(meta._parsed[i] * circumference / TAU);\n    }\n    updateElements(arcs, start, count, mode) {\n        const reset = mode === 'reset';\n        const chart = this.chart;\n        const chartArea = chart.chartArea;\n        const opts = chart.options;\n        const animationOpts = opts.animation;\n        const centerX = (chartArea.left + chartArea.right) / 2;\n        const centerY = (chartArea.top + chartArea.bottom) / 2;\n        const animateScale = reset && animationOpts.animateScale;\n        const innerRadius = animateScale ? 0 : this.innerRadius;\n        const outerRadius = animateScale ? 0 : this.outerRadius;\n        const { sharedOptions , includeOptions  } = this._getSharedOptions(start, mode);\n        let startAngle = this._getRotation();\n        let i;\n        for(i = 0; i < start; ++i){\n            startAngle += this._circumference(i, reset);\n        }\n        for(i = start; i < start + count; ++i){\n            const circumference = this._circumference(i, reset);\n            const arc = arcs[i];\n            const properties = {\n                x: centerX + this.offsetX,\n                y: centerY + this.offsetY,\n                startAngle,\n                endAngle: startAngle + circumference,\n                circumference,\n                outerRadius,\n                innerRadius\n            };\n            if (includeOptions) {\n                properties.options = sharedOptions || this.resolveDataElementOptions(i, arc.active ? 'active' : mode);\n            }\n            startAngle += circumference;\n            this.updateElement(arc, i, properties, mode);\n        }\n    }\n    calculateTotal() {\n        const meta = this._cachedMeta;\n        const metaData = meta.data;\n        let total = 0;\n        let i;\n        for(i = 0; i < metaData.length; i++){\n            const value = meta._parsed[i];\n            if (value !== null && !isNaN(value) && this.chart.getDataVisibility(i) && !metaData[i].hidden) {\n                total += Math.abs(value);\n            }\n        }\n        return total;\n    }\n    calculateCircumference(value) {\n        const total = this._cachedMeta.total;\n        if (total > 0 && !isNaN(value)) {\n            return TAU * (Math.abs(value) / total);\n        }\n        return 0;\n    }\n    getLabelAndValue(index) {\n        const meta = this._cachedMeta;\n        const chart = this.chart;\n        const labels = chart.data.labels || [];\n        const value = formatNumber(meta._parsed[index], chart.options.locale);\n        return {\n            label: labels[index] || '',\n            value\n        };\n    }\n    getMaxBorderWidth(arcs) {\n        let max = 0;\n        const chart = this.chart;\n        let i, ilen, meta, controller, options;\n        if (!arcs) {\n            for(i = 0, ilen = chart.data.datasets.length; i < ilen; ++i){\n                if (chart.isDatasetVisible(i)) {\n                    meta = chart.getDatasetMeta(i);\n                    arcs = meta.data;\n                    controller = meta.controller;\n                    break;\n                }\n            }\n        }\n        if (!arcs) {\n            return 0;\n        }\n        for(i = 0, ilen = arcs.length; i < ilen; ++i){\n            options = controller.resolveDataElementOptions(i);\n            if (options.borderAlign !== 'inner') {\n                max = Math.max(max, options.borderWidth || 0, options.hoverBorderWidth || 0);\n            }\n        }\n        return max;\n    }\n    getMaxOffset(arcs) {\n        let max = 0;\n        for(let i = 0, ilen = arcs.length; i < ilen; ++i){\n            const options = this.resolveDataElementOptions(i);\n            max = Math.max(max, options.offset || 0, options.hoverOffset || 0);\n        }\n        return max;\n    }\n _getRingWeightOffset(datasetIndex) {\n        let ringWeightOffset = 0;\n        for(let i = 0; i < datasetIndex; ++i){\n            if (this.chart.isDatasetVisible(i)) {\n                ringWeightOffset += this._getRingWeight(i);\n            }\n        }\n        return ringWeightOffset;\n    }\n _getRingWeight(datasetIndex) {\n        return Math.max(valueOrDefault(this.chart.data.datasets[datasetIndex].weight, 1), 0);\n    }\n _getVisibleDatasetWeightTotal() {\n        return this._getRingWeightOffset(this.chart.data.datasets.length) || 1;\n    }\n}\n\nclass LineController extends DatasetController {\n    static id = 'line';\n static defaults = {\n        datasetElementType: 'line',\n        dataElementType: 'point',\n        showLine: true,\n        spanGaps: false\n    };\n static overrides = {\n        scales: {\n            _index_: {\n                type: 'category'\n            },\n            _value_: {\n                type: 'linear'\n            }\n        }\n    };\n    initialize() {\n        this.enableOptionSharing = true;\n        this.supportsDecimation = true;\n        super.initialize();\n    }\n    update(mode) {\n        const meta = this._cachedMeta;\n        const { dataset: line , data: points = [] , _dataset  } = meta;\n        const animationsDisabled = this.chart._animationsDisabled;\n        let { start , count  } = _getStartAndCountOfVisiblePoints(meta, points, animationsDisabled);\n        this._drawStart = start;\n        this._drawCount = count;\n        if (_scaleRangesChanged(meta)) {\n            start = 0;\n            count = points.length;\n        }\n        line._chart = this.chart;\n        line._datasetIndex = this.index;\n        line._decimated = !!_dataset._decimated;\n        line.points = points;\n        const options = this.resolveDatasetElementOptions(mode);\n        if (!this.options.showLine) {\n            options.borderWidth = 0;\n        }\n        options.segment = this.options.segment;\n        this.updateElement(line, undefined, {\n            animated: !animationsDisabled,\n            options\n        }, mode);\n        this.updateElements(points, start, count, mode);\n    }\n    updateElements(points, start, count, mode) {\n        const reset = mode === 'reset';\n        const { iScale , vScale , _stacked , _dataset  } = this._cachedMeta;\n        const { sharedOptions , includeOptions  } = this._getSharedOptions(start, mode);\n        const iAxis = iScale.axis;\n        const vAxis = vScale.axis;\n        const { spanGaps , segment  } = this.options;\n        const maxGapLength = isNumber(spanGaps) ? spanGaps : Number.POSITIVE_INFINITY;\n        const directUpdate = this.chart._animationsDisabled || reset || mode === 'none';\n        const end = start + count;\n        const pointsCount = points.length;\n        let prevParsed = start > 0 && this.getParsed(start - 1);\n        for(let i = 0; i < pointsCount; ++i){\n            const point = points[i];\n            const properties = directUpdate ? point : {};\n            if (i < start || i >= end) {\n                properties.skip = true;\n                continue;\n            }\n            const parsed = this.getParsed(i);\n            const nullData = isNullOrUndef(parsed[vAxis]);\n            const iPixel = properties[iAxis] = iScale.getPixelForValue(parsed[iAxis], i);\n            const vPixel = properties[vAxis] = reset || nullData ? vScale.getBasePixel() : vScale.getPixelForValue(_stacked ? this.applyStack(vScale, parsed, _stacked) : parsed[vAxis], i);\n            properties.skip = isNaN(iPixel) || isNaN(vPixel) || nullData;\n            properties.stop = i > 0 && Math.abs(parsed[iAxis] - prevParsed[iAxis]) > maxGapLength;\n            if (segment) {\n                properties.parsed = parsed;\n                properties.raw = _dataset.data[i];\n            }\n            if (includeOptions) {\n                properties.options = sharedOptions || this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n            }\n            if (!directUpdate) {\n                this.updateElement(point, i, properties, mode);\n            }\n            prevParsed = parsed;\n        }\n    }\n getMaxOverflow() {\n        const meta = this._cachedMeta;\n        const dataset = meta.dataset;\n        const border = dataset.options && dataset.options.borderWidth || 0;\n        const data = meta.data || [];\n        if (!data.length) {\n            return border;\n        }\n        const firstPoint = data[0].size(this.resolveDataElementOptions(0));\n        const lastPoint = data[data.length - 1].size(this.resolveDataElementOptions(data.length - 1));\n        return Math.max(border, firstPoint, lastPoint) / 2;\n    }\n    draw() {\n        const meta = this._cachedMeta;\n        meta.dataset.updateControlPoints(this.chart.chartArea, meta.iScale.axis);\n        super.draw();\n    }\n}\n\nclass PolarAreaController extends DatasetController {\n    static id = 'polarArea';\n static defaults = {\n        dataElementType: 'arc',\n        animation: {\n            animateRotate: true,\n            animateScale: true\n        },\n        animations: {\n            numbers: {\n                type: 'number',\n                properties: [\n                    'x',\n                    'y',\n                    'startAngle',\n                    'endAngle',\n                    'innerRadius',\n                    'outerRadius'\n                ]\n            }\n        },\n        indexAxis: 'r',\n        startAngle: 0\n    };\n static overrides = {\n        aspectRatio: 1,\n        plugins: {\n            legend: {\n                labels: {\n                    generateLabels (chart) {\n                        const data = chart.data;\n                        if (data.labels.length && data.datasets.length) {\n                            const { labels: { pointStyle , color  }  } = chart.legend.options;\n                            return data.labels.map((label, i)=>{\n                                const meta = chart.getDatasetMeta(0);\n                                const style = meta.controller.getStyle(i);\n                                return {\n                                    text: label,\n                                    fillStyle: style.backgroundColor,\n                                    strokeStyle: style.borderColor,\n                                    fontColor: color,\n                                    lineWidth: style.borderWidth,\n                                    pointStyle: pointStyle,\n                                    hidden: !chart.getDataVisibility(i),\n                                    index: i\n                                };\n                            });\n                        }\n                        return [];\n                    }\n                },\n                onClick (e, legendItem, legend) {\n                    legend.chart.toggleDataVisibility(legendItem.index);\n                    legend.chart.update();\n                }\n            }\n        },\n        scales: {\n            r: {\n                type: 'radialLinear',\n                angleLines: {\n                    display: false\n                },\n                beginAtZero: true,\n                grid: {\n                    circular: true\n                },\n                pointLabels: {\n                    display: false\n                },\n                startAngle: 0\n            }\n        }\n    };\n    constructor(chart, datasetIndex){\n        super(chart, datasetIndex);\n        this.innerRadius = undefined;\n        this.outerRadius = undefined;\n    }\n    getLabelAndValue(index) {\n        const meta = this._cachedMeta;\n        const chart = this.chart;\n        const labels = chart.data.labels || [];\n        const value = formatNumber(meta._parsed[index].r, chart.options.locale);\n        return {\n            label: labels[index] || '',\n            value\n        };\n    }\n    parseObjectData(meta, data, start, count) {\n        return _parseObjectDataRadialScale.bind(this)(meta, data, start, count);\n    }\n    update(mode) {\n        const arcs = this._cachedMeta.data;\n        this._updateRadius();\n        this.updateElements(arcs, 0, arcs.length, mode);\n    }\n getMinMax() {\n        const meta = this._cachedMeta;\n        const range = {\n            min: Number.POSITIVE_INFINITY,\n            max: Number.NEGATIVE_INFINITY\n        };\n        meta.data.forEach((element, index)=>{\n            const parsed = this.getParsed(index).r;\n            if (!isNaN(parsed) && this.chart.getDataVisibility(index)) {\n                if (parsed < range.min) {\n                    range.min = parsed;\n                }\n                if (parsed > range.max) {\n                    range.max = parsed;\n                }\n            }\n        });\n        return range;\n    }\n _updateRadius() {\n        const chart = this.chart;\n        const chartArea = chart.chartArea;\n        const opts = chart.options;\n        const minSize = Math.min(chartArea.right - chartArea.left, chartArea.bottom - chartArea.top);\n        const outerRadius = Math.max(minSize / 2, 0);\n        const innerRadius = Math.max(opts.cutoutPercentage ? outerRadius / 100 * opts.cutoutPercentage : 1, 0);\n        const radiusLength = (outerRadius - innerRadius) / chart.getVisibleDatasetCount();\n        this.outerRadius = outerRadius - radiusLength * this.index;\n        this.innerRadius = this.outerRadius - radiusLength;\n    }\n    updateElements(arcs, start, count, mode) {\n        const reset = mode === 'reset';\n        const chart = this.chart;\n        const opts = chart.options;\n        const animationOpts = opts.animation;\n        const scale = this._cachedMeta.rScale;\n        const centerX = scale.xCenter;\n        const centerY = scale.yCenter;\n        const datasetStartAngle = scale.getIndexAngle(0) - 0.5 * PI;\n        let angle = datasetStartAngle;\n        let i;\n        const defaultAngle = 360 / this.countVisibleElements();\n        for(i = 0; i < start; ++i){\n            angle += this._computeAngle(i, mode, defaultAngle);\n        }\n        for(i = start; i < start + count; i++){\n            const arc = arcs[i];\n            let startAngle = angle;\n            let endAngle = angle + this._computeAngle(i, mode, defaultAngle);\n            let outerRadius = chart.getDataVisibility(i) ? scale.getDistanceFromCenterForValue(this.getParsed(i).r) : 0;\n            angle = endAngle;\n            if (reset) {\n                if (animationOpts.animateScale) {\n                    outerRadius = 0;\n                }\n                if (animationOpts.animateRotate) {\n                    startAngle = endAngle = datasetStartAngle;\n                }\n            }\n            const properties = {\n                x: centerX,\n                y: centerY,\n                innerRadius: 0,\n                outerRadius,\n                startAngle,\n                endAngle,\n                options: this.resolveDataElementOptions(i, arc.active ? 'active' : mode)\n            };\n            this.updateElement(arc, i, properties, mode);\n        }\n    }\n    countVisibleElements() {\n        const meta = this._cachedMeta;\n        let count = 0;\n        meta.data.forEach((element, index)=>{\n            if (!isNaN(this.getParsed(index).r) && this.chart.getDataVisibility(index)) {\n                count++;\n            }\n        });\n        return count;\n    }\n _computeAngle(index, mode, defaultAngle) {\n        return this.chart.getDataVisibility(index) ? toRadians(this.resolveDataElementOptions(index, mode).angle || defaultAngle) : 0;\n    }\n}\n\nclass PieController extends DoughnutController {\n    static id = 'pie';\n static defaults = {\n        cutout: 0,\n        rotation: 0,\n        circumference: 360,\n        radius: '100%'\n    };\n}\n\nclass RadarController extends DatasetController {\n    static id = 'radar';\n static defaults = {\n        datasetElementType: 'line',\n        dataElementType: 'point',\n        indexAxis: 'r',\n        showLine: true,\n        elements: {\n            line: {\n                fill: 'start'\n            }\n        }\n    };\n static overrides = {\n        aspectRatio: 1,\n        scales: {\n            r: {\n                type: 'radialLinear'\n            }\n        }\n    };\n getLabelAndValue(index) {\n        const vScale = this._cachedMeta.vScale;\n        const parsed = this.getParsed(index);\n        return {\n            label: vScale.getLabels()[index],\n            value: '' + vScale.getLabelForValue(parsed[vScale.axis])\n        };\n    }\n    parseObjectData(meta, data, start, count) {\n        return _parseObjectDataRadialScale.bind(this)(meta, data, start, count);\n    }\n    update(mode) {\n        const meta = this._cachedMeta;\n        const line = meta.dataset;\n        const points = meta.data || [];\n        const labels = meta.iScale.getLabels();\n        line.points = points;\n        if (mode !== 'resize') {\n            const options = this.resolveDatasetElementOptions(mode);\n            if (!this.options.showLine) {\n                options.borderWidth = 0;\n            }\n            const properties = {\n                _loop: true,\n                _fullLoop: labels.length === points.length,\n                options\n            };\n            this.updateElement(line, undefined, properties, mode);\n        }\n        this.updateElements(points, 0, points.length, mode);\n    }\n    updateElements(points, start, count, mode) {\n        const scale = this._cachedMeta.rScale;\n        const reset = mode === 'reset';\n        for(let i = start; i < start + count; i++){\n            const point = points[i];\n            const options = this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n            const pointPosition = scale.getPointPositionForValue(i, this.getParsed(i).r);\n            const x = reset ? scale.xCenter : pointPosition.x;\n            const y = reset ? scale.yCenter : pointPosition.y;\n            const properties = {\n                x,\n                y,\n                angle: pointPosition.angle,\n                skip: isNaN(x) || isNaN(y),\n                options\n            };\n            this.updateElement(point, i, properties, mode);\n        }\n    }\n}\n\nclass ScatterController extends DatasetController {\n    static id = 'scatter';\n static defaults = {\n        datasetElementType: false,\n        dataElementType: 'point',\n        showLine: false,\n        fill: false\n    };\n static overrides = {\n        interaction: {\n            mode: 'point'\n        },\n        scales: {\n            x: {\n                type: 'linear'\n            },\n            y: {\n                type: 'linear'\n            }\n        }\n    };\n getLabelAndValue(index) {\n        const meta = this._cachedMeta;\n        const labels = this.chart.data.labels || [];\n        const { xScale , yScale  } = meta;\n        const parsed = this.getParsed(index);\n        const x = xScale.getLabelForValue(parsed.x);\n        const y = yScale.getLabelForValue(parsed.y);\n        return {\n            label: labels[index] || '',\n            value: '(' + x + ', ' + y + ')'\n        };\n    }\n    update(mode) {\n        const meta = this._cachedMeta;\n        const { data: points = []  } = meta;\n        const animationsDisabled = this.chart._animationsDisabled;\n        let { start , count  } = _getStartAndCountOfVisiblePoints(meta, points, animationsDisabled);\n        this._drawStart = start;\n        this._drawCount = count;\n        if (_scaleRangesChanged(meta)) {\n            start = 0;\n            count = points.length;\n        }\n        if (this.options.showLine) {\n            if (!this.datasetElementType) {\n                this.addElements();\n            }\n            const { dataset: line , _dataset  } = meta;\n            line._chart = this.chart;\n            line._datasetIndex = this.index;\n            line._decimated = !!_dataset._decimated;\n            line.points = points;\n            const options = this.resolveDatasetElementOptions(mode);\n            options.segment = this.options.segment;\n            this.updateElement(line, undefined, {\n                animated: !animationsDisabled,\n                options\n            }, mode);\n        } else if (this.datasetElementType) {\n            delete meta.dataset;\n            this.datasetElementType = false;\n        }\n        this.updateElements(points, start, count, mode);\n    }\n    addElements() {\n        const { showLine  } = this.options;\n        if (!this.datasetElementType && showLine) {\n            this.datasetElementType = this.chart.registry.getElement('line');\n        }\n        super.addElements();\n    }\n    updateElements(points, start, count, mode) {\n        const reset = mode === 'reset';\n        const { iScale , vScale , _stacked , _dataset  } = this._cachedMeta;\n        const firstOpts = this.resolveDataElementOptions(start, mode);\n        const sharedOptions = this.getSharedOptions(firstOpts);\n        const includeOptions = this.includeOptions(mode, sharedOptions);\n        const iAxis = iScale.axis;\n        const vAxis = vScale.axis;\n        const { spanGaps , segment  } = this.options;\n        const maxGapLength = isNumber(spanGaps) ? spanGaps : Number.POSITIVE_INFINITY;\n        const directUpdate = this.chart._animationsDisabled || reset || mode === 'none';\n        let prevParsed = start > 0 && this.getParsed(start - 1);\n        for(let i = start; i < start + count; ++i){\n            const point = points[i];\n            const parsed = this.getParsed(i);\n            const properties = directUpdate ? point : {};\n            const nullData = isNullOrUndef(parsed[vAxis]);\n            const iPixel = properties[iAxis] = iScale.getPixelForValue(parsed[iAxis], i);\n            const vPixel = properties[vAxis] = reset || nullData ? vScale.getBasePixel() : vScale.getPixelForValue(_stacked ? this.applyStack(vScale, parsed, _stacked) : parsed[vAxis], i);\n            properties.skip = isNaN(iPixel) || isNaN(vPixel) || nullData;\n            properties.stop = i > 0 && Math.abs(parsed[iAxis] - prevParsed[iAxis]) > maxGapLength;\n            if (segment) {\n                properties.parsed = parsed;\n                properties.raw = _dataset.data[i];\n            }\n            if (includeOptions) {\n                properties.options = sharedOptions || this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n            }\n            if (!directUpdate) {\n                this.updateElement(point, i, properties, mode);\n            }\n            prevParsed = parsed;\n        }\n        this.updateSharedOptions(sharedOptions, mode, firstOpts);\n    }\n getMaxOverflow() {\n        const meta = this._cachedMeta;\n        const data = meta.data || [];\n        if (!this.options.showLine) {\n            let max = 0;\n            for(let i = data.length - 1; i >= 0; --i){\n                max = Math.max(max, data[i].size(this.resolveDataElementOptions(i)) / 2);\n            }\n            return max > 0 && max;\n        }\n        const dataset = meta.dataset;\n        const border = dataset.options && dataset.options.borderWidth || 0;\n        if (!data.length) {\n            return border;\n        }\n        const firstPoint = data[0].size(this.resolveDataElementOptions(0));\n        const lastPoint = data[data.length - 1].size(this.resolveDataElementOptions(data.length - 1));\n        return Math.max(border, firstPoint, lastPoint) / 2;\n    }\n}\n\nvar controllers = /*#__PURE__*/Object.freeze({\n__proto__: null,\nBarController: BarController,\nBubbleController: BubbleController,\nDoughnutController: DoughnutController,\nLineController: LineController,\nPieController: PieController,\nPolarAreaController: PolarAreaController,\nRadarController: RadarController,\nScatterController: ScatterController\n});\n\n/**\n * @namespace Chart._adapters\n * @since 2.8.0\n * @private\n */ function abstract() {\n    throw new Error('This method is not implemented: Check that a complete date adapter is provided.');\n}\n/**\n * Date adapter (current used by the time scale)\n * @namespace Chart._adapters._date\n * @memberof Chart._adapters\n * @private\n */ class DateAdapterBase {\n    /**\n   * Override default date adapter methods.\n   * Accepts type parameter to define options type.\n   * @example\n   * Chart._adapters._date.override<{myAdapterOption: string}>({\n   *   init() {\n   *     console.log(this.options.myAdapterOption);\n   *   }\n   * })\n   */ static override(members) {\n        Object.assign(DateAdapterBase.prototype, members);\n    }\n    options;\n    constructor(options){\n        this.options = options || {};\n    }\n    // eslint-disable-next-line @typescript-eslint/no-empty-function\n    init() {}\n    formats() {\n        return abstract();\n    }\n    parse() {\n        return abstract();\n    }\n    format() {\n        return abstract();\n    }\n    add() {\n        return abstract();\n    }\n    diff() {\n        return abstract();\n    }\n    startOf() {\n        return abstract();\n    }\n    endOf() {\n        return abstract();\n    }\n}\nvar adapters = {\n    _date: DateAdapterBase\n};\n\nfunction binarySearch(metaset, axis, value, intersect) {\n    const { controller , data , _sorted  } = metaset;\n    const iScale = controller._cachedMeta.iScale;\n    if (iScale && axis === iScale.axis && axis !== 'r' && _sorted && data.length) {\n        const lookupMethod = iScale._reversePixels ? _rlookupByKey : _lookupByKey;\n        if (!intersect) {\n            return lookupMethod(data, axis, value);\n        } else if (controller._sharedOptions) {\n            const el = data[0];\n            const range = typeof el.getRange === 'function' && el.getRange(axis);\n            if (range) {\n                const start = lookupMethod(data, axis, value - range);\n                const end = lookupMethod(data, axis, value + range);\n                return {\n                    lo: start.lo,\n                    hi: end.hi\n                };\n            }\n        }\n    }\n    return {\n        lo: 0,\n        hi: data.length - 1\n    };\n}\n function evaluateInteractionItems(chart, axis, position, handler, intersect) {\n    const metasets = chart.getSortedVisibleDatasetMetas();\n    const value = position[axis];\n    for(let i = 0, ilen = metasets.length; i < ilen; ++i){\n        const { index , data  } = metasets[i];\n        const { lo , hi  } = binarySearch(metasets[i], axis, value, intersect);\n        for(let j = lo; j <= hi; ++j){\n            const element = data[j];\n            if (!element.skip) {\n                handler(element, index, j);\n            }\n        }\n    }\n}\n function getDistanceMetricForAxis(axis) {\n    const useX = axis.indexOf('x') !== -1;\n    const useY = axis.indexOf('y') !== -1;\n    return function(pt1, pt2) {\n        const deltaX = useX ? Math.abs(pt1.x - pt2.x) : 0;\n        const deltaY = useY ? Math.abs(pt1.y - pt2.y) : 0;\n        return Math.sqrt(Math.pow(deltaX, 2) + Math.pow(deltaY, 2));\n    };\n}\n function getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible) {\n    const items = [];\n    if (!includeInvisible && !chart.isPointInArea(position)) {\n        return items;\n    }\n    const evaluationFunc = function(element, datasetIndex, index) {\n        if (!includeInvisible && !_isPointInArea(element, chart.chartArea, 0)) {\n            return;\n        }\n        if (element.inRange(position.x, position.y, useFinalPosition)) {\n            items.push({\n                element,\n                datasetIndex,\n                index\n            });\n        }\n    };\n    evaluateInteractionItems(chart, axis, position, evaluationFunc, true);\n    return items;\n}\n function getNearestRadialItems(chart, position, axis, useFinalPosition) {\n    let items = [];\n    function evaluationFunc(element, datasetIndex, index) {\n        const { startAngle , endAngle  } = element.getProps([\n            'startAngle',\n            'endAngle'\n        ], useFinalPosition);\n        const { angle  } = getAngleFromPoint(element, {\n            x: position.x,\n            y: position.y\n        });\n        if (_angleBetween(angle, startAngle, endAngle)) {\n            items.push({\n                element,\n                datasetIndex,\n                index\n            });\n        }\n    }\n    evaluateInteractionItems(chart, axis, position, evaluationFunc);\n    return items;\n}\n function getNearestCartesianItems(chart, position, axis, intersect, useFinalPosition, includeInvisible) {\n    let items = [];\n    const distanceMetric = getDistanceMetricForAxis(axis);\n    let minDistance = Number.POSITIVE_INFINITY;\n    function evaluationFunc(element, datasetIndex, index) {\n        const inRange = element.inRange(position.x, position.y, useFinalPosition);\n        if (intersect && !inRange) {\n            return;\n        }\n        const center = element.getCenterPoint(useFinalPosition);\n        const pointInArea = !!includeInvisible || chart.isPointInArea(center);\n        if (!pointInArea && !inRange) {\n            return;\n        }\n        const distance = distanceMetric(position, center);\n        if (distance < minDistance) {\n            items = [\n                {\n                    element,\n                    datasetIndex,\n                    index\n                }\n            ];\n            minDistance = distance;\n        } else if (distance === minDistance) {\n            items.push({\n                element,\n                datasetIndex,\n                index\n            });\n        }\n    }\n    evaluateInteractionItems(chart, axis, position, evaluationFunc);\n    return items;\n}\n function getNearestItems(chart, position, axis, intersect, useFinalPosition, includeInvisible) {\n    if (!includeInvisible && !chart.isPointInArea(position)) {\n        return [];\n    }\n    return axis === 'r' && !intersect ? getNearestRadialItems(chart, position, axis, useFinalPosition) : getNearestCartesianItems(chart, position, axis, intersect, useFinalPosition, includeInvisible);\n}\n function getAxisItems(chart, position, axis, intersect, useFinalPosition) {\n    const items = [];\n    const rangeMethod = axis === 'x' ? 'inXRange' : 'inYRange';\n    let intersectsItem = false;\n    evaluateInteractionItems(chart, axis, position, (element, datasetIndex, index)=>{\n        if (element[rangeMethod] && element[rangeMethod](position[axis], useFinalPosition)) {\n            items.push({\n                element,\n                datasetIndex,\n                index\n            });\n            intersectsItem = intersectsItem || element.inRange(position.x, position.y, useFinalPosition);\n        }\n    });\n    if (intersect && !intersectsItem) {\n        return [];\n    }\n    return items;\n}\n var Interaction = {\n    evaluateInteractionItems,\n    modes: {\n index (chart, e, options, useFinalPosition) {\n            const position = getRelativePosition(e, chart);\n            const axis = options.axis || 'x';\n            const includeInvisible = options.includeInvisible || false;\n            const items = options.intersect ? getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible) : getNearestItems(chart, position, axis, false, useFinalPosition, includeInvisible);\n            const elements = [];\n            if (!items.length) {\n                return [];\n            }\n            chart.getSortedVisibleDatasetMetas().forEach((meta)=>{\n                const index = items[0].index;\n                const element = meta.data[index];\n                if (element && !element.skip) {\n                    elements.push({\n                        element,\n                        datasetIndex: meta.index,\n                        index\n                    });\n                }\n            });\n            return elements;\n        },\n dataset (chart, e, options, useFinalPosition) {\n            const position = getRelativePosition(e, chart);\n            const axis = options.axis || 'xy';\n            const includeInvisible = options.includeInvisible || false;\n            let items = options.intersect ? getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible) : getNearestItems(chart, position, axis, false, useFinalPosition, includeInvisible);\n            if (items.length > 0) {\n                const datasetIndex = items[0].datasetIndex;\n                const data = chart.getDatasetMeta(datasetIndex).data;\n                items = [];\n                for(let i = 0; i < data.length; ++i){\n                    items.push({\n                        element: data[i],\n                        datasetIndex,\n                        index: i\n                    });\n                }\n            }\n            return items;\n        },\n point (chart, e, options, useFinalPosition) {\n            const position = getRelativePosition(e, chart);\n            const axis = options.axis || 'xy';\n            const includeInvisible = options.includeInvisible || false;\n            return getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible);\n        },\n nearest (chart, e, options, useFinalPosition) {\n            const position = getRelativePosition(e, chart);\n            const axis = options.axis || 'xy';\n            const includeInvisible = options.includeInvisible || false;\n            return getNearestItems(chart, position, axis, options.intersect, useFinalPosition, includeInvisible);\n        },\n x (chart, e, options, useFinalPosition) {\n            const position = getRelativePosition(e, chart);\n            return getAxisItems(chart, position, 'x', options.intersect, useFinalPosition);\n        },\n y (chart, e, options, useFinalPosition) {\n            const position = getRelativePosition(e, chart);\n            return getAxisItems(chart, position, 'y', options.intersect, useFinalPosition);\n        }\n    }\n};\n\nconst STATIC_POSITIONS = [\n    'left',\n    'top',\n    'right',\n    'bottom'\n];\nfunction filterByPosition(array, position) {\n    return array.filter((v)=>v.pos === position);\n}\nfunction filterDynamicPositionByAxis(array, axis) {\n    return array.filter((v)=>STATIC_POSITIONS.indexOf(v.pos) === -1 && v.box.axis === axis);\n}\nfunction sortByWeight(array, reverse) {\n    return array.sort((a, b)=>{\n        const v0 = reverse ? b : a;\n        const v1 = reverse ? a : b;\n        return v0.weight === v1.weight ? v0.index - v1.index : v0.weight - v1.weight;\n    });\n}\nfunction wrapBoxes(boxes) {\n    const layoutBoxes = [];\n    let i, ilen, box, pos, stack, stackWeight;\n    for(i = 0, ilen = (boxes || []).length; i < ilen; ++i){\n        box = boxes[i];\n        ({ position: pos , options: { stack , stackWeight =1  }  } = box);\n        layoutBoxes.push({\n            index: i,\n            box,\n            pos,\n            horizontal: box.isHorizontal(),\n            weight: box.weight,\n            stack: stack && pos + stack,\n            stackWeight\n        });\n    }\n    return layoutBoxes;\n}\nfunction buildStacks(layouts) {\n    const stacks = {};\n    for (const wrap of layouts){\n        const { stack , pos , stackWeight  } = wrap;\n        if (!stack || !STATIC_POSITIONS.includes(pos)) {\n            continue;\n        }\n        const _stack = stacks[stack] || (stacks[stack] = {\n            count: 0,\n            placed: 0,\n            weight: 0,\n            size: 0\n        });\n        _stack.count++;\n        _stack.weight += stackWeight;\n    }\n    return stacks;\n}\n function setLayoutDims(layouts, params) {\n    const stacks = buildStacks(layouts);\n    const { vBoxMaxWidth , hBoxMaxHeight  } = params;\n    let i, ilen, layout;\n    for(i = 0, ilen = layouts.length; i < ilen; ++i){\n        layout = layouts[i];\n        const { fullSize  } = layout.box;\n        const stack = stacks[layout.stack];\n        const factor = stack && layout.stackWeight / stack.weight;\n        if (layout.horizontal) {\n            layout.width = factor ? factor * vBoxMaxWidth : fullSize && params.availableWidth;\n            layout.height = hBoxMaxHeight;\n        } else {\n            layout.width = vBoxMaxWidth;\n            layout.height = factor ? factor * hBoxMaxHeight : fullSize && params.availableHeight;\n        }\n    }\n    return stacks;\n}\nfunction buildLayoutBoxes(boxes) {\n    const layoutBoxes = wrapBoxes(boxes);\n    const fullSize = sortByWeight(layoutBoxes.filter((wrap)=>wrap.box.fullSize), true);\n    const left = sortByWeight(filterByPosition(layoutBoxes, 'left'), true);\n    const right = sortByWeight(filterByPosition(layoutBoxes, 'right'));\n    const top = sortByWeight(filterByPosition(layoutBoxes, 'top'), true);\n    const bottom = sortByWeight(filterByPosition(layoutBoxes, 'bottom'));\n    const centerHorizontal = filterDynamicPositionByAxis(layoutBoxes, 'x');\n    const centerVertical = filterDynamicPositionByAxis(layoutBoxes, 'y');\n    return {\n        fullSize,\n        leftAndTop: left.concat(top),\n        rightAndBottom: right.concat(centerVertical).concat(bottom).concat(centerHorizontal),\n        chartArea: filterByPosition(layoutBoxes, 'chartArea'),\n        vertical: left.concat(right).concat(centerVertical),\n        horizontal: top.concat(bottom).concat(centerHorizontal)\n    };\n}\nfunction getCombinedMax(maxPadding, chartArea, a, b) {\n    return Math.max(maxPadding[a], chartArea[a]) + Math.max(maxPadding[b], chartArea[b]);\n}\nfunction updateMaxPadding(maxPadding, boxPadding) {\n    maxPadding.top = Math.max(maxPadding.top, boxPadding.top);\n    maxPadding.left = Math.max(maxPadding.left, boxPadding.left);\n    maxPadding.bottom = Math.max(maxPadding.bottom, boxPadding.bottom);\n    maxPadding.right = Math.max(maxPadding.right, boxPadding.right);\n}\nfunction updateDims(chartArea, params, layout, stacks) {\n    const { pos , box  } = layout;\n    const maxPadding = chartArea.maxPadding;\n    if (!isObject(pos)) {\n        if (layout.size) {\n            chartArea[pos] -= layout.size;\n        }\n        const stack = stacks[layout.stack] || {\n            size: 0,\n            count: 1\n        };\n        stack.size = Math.max(stack.size, layout.horizontal ? box.height : box.width);\n        layout.size = stack.size / stack.count;\n        chartArea[pos] += layout.size;\n    }\n    if (box.getPadding) {\n        updateMaxPadding(maxPadding, box.getPadding());\n    }\n    const newWidth = Math.max(0, params.outerWidth - getCombinedMax(maxPadding, chartArea, 'left', 'right'));\n    const newHeight = Math.max(0, params.outerHeight - getCombinedMax(maxPadding, chartArea, 'top', 'bottom'));\n    const widthChanged = newWidth !== chartArea.w;\n    const heightChanged = newHeight !== chartArea.h;\n    chartArea.w = newWidth;\n    chartArea.h = newHeight;\n    return layout.horizontal ? {\n        same: widthChanged,\n        other: heightChanged\n    } : {\n        same: heightChanged,\n        other: widthChanged\n    };\n}\nfunction handleMaxPadding(chartArea) {\n    const maxPadding = chartArea.maxPadding;\n    function updatePos(pos) {\n        const change = Math.max(maxPadding[pos] - chartArea[pos], 0);\n        chartArea[pos] += change;\n        return change;\n    }\n    chartArea.y += updatePos('top');\n    chartArea.x += updatePos('left');\n    updatePos('right');\n    updatePos('bottom');\n}\nfunction getMargins(horizontal, chartArea) {\n    const maxPadding = chartArea.maxPadding;\n    function marginForPositions(positions) {\n        const margin = {\n            left: 0,\n            top: 0,\n            right: 0,\n            bottom: 0\n        };\n        positions.forEach((pos)=>{\n            margin[pos] = Math.max(chartArea[pos], maxPadding[pos]);\n        });\n        return margin;\n    }\n    return horizontal ? marginForPositions([\n        'left',\n        'right'\n    ]) : marginForPositions([\n        'top',\n        'bottom'\n    ]);\n}\nfunction fitBoxes(boxes, chartArea, params, stacks) {\n    const refitBoxes = [];\n    let i, ilen, layout, box, refit, changed;\n    for(i = 0, ilen = boxes.length, refit = 0; i < ilen; ++i){\n        layout = boxes[i];\n        box = layout.box;\n        box.update(layout.width || chartArea.w, layout.height || chartArea.h, getMargins(layout.horizontal, chartArea));\n        const { same , other  } = updateDims(chartArea, params, layout, stacks);\n        refit |= same && refitBoxes.length;\n        changed = changed || other;\n        if (!box.fullSize) {\n            refitBoxes.push(layout);\n        }\n    }\n    return refit && fitBoxes(refitBoxes, chartArea, params, stacks) || changed;\n}\nfunction setBoxDims(box, left, top, width, height) {\n    box.top = top;\n    box.left = left;\n    box.right = left + width;\n    box.bottom = top + height;\n    box.width = width;\n    box.height = height;\n}\nfunction placeBoxes(boxes, chartArea, params, stacks) {\n    const userPadding = params.padding;\n    let { x , y  } = chartArea;\n    for (const layout of boxes){\n        const box = layout.box;\n        const stack = stacks[layout.stack] || {\n            count: 1,\n            placed: 0,\n            weight: 1\n        };\n        const weight = layout.stackWeight / stack.weight || 1;\n        if (layout.horizontal) {\n            const width = chartArea.w * weight;\n            const height = stack.size || box.height;\n            if (defined(stack.start)) {\n                y = stack.start;\n            }\n            if (box.fullSize) {\n                setBoxDims(box, userPadding.left, y, params.outerWidth - userPadding.right - userPadding.left, height);\n            } else {\n                setBoxDims(box, chartArea.left + stack.placed, y, width, height);\n            }\n            stack.start = y;\n            stack.placed += width;\n            y = box.bottom;\n        } else {\n            const height = chartArea.h * weight;\n            const width = stack.size || box.width;\n            if (defined(stack.start)) {\n                x = stack.start;\n            }\n            if (box.fullSize) {\n                setBoxDims(box, x, userPadding.top, width, params.outerHeight - userPadding.bottom - userPadding.top);\n            } else {\n                setBoxDims(box, x, chartArea.top + stack.placed, width, height);\n            }\n            stack.start = x;\n            stack.placed += height;\n            x = box.right;\n        }\n    }\n    chartArea.x = x;\n    chartArea.y = y;\n}\nvar layouts = {\n addBox (chart, item) {\n        if (!chart.boxes) {\n            chart.boxes = [];\n        }\n        item.fullSize = item.fullSize || false;\n        item.position = item.position || 'top';\n        item.weight = item.weight || 0;\n        item._layers = item._layers || function() {\n            return [\n                {\n                    z: 0,\n                    draw (chartArea) {\n                        item.draw(chartArea);\n                    }\n                }\n            ];\n        };\n        chart.boxes.push(item);\n    },\n removeBox (chart, layoutItem) {\n        const index = chart.boxes ? chart.boxes.indexOf(layoutItem) : -1;\n        if (index !== -1) {\n            chart.boxes.splice(index, 1);\n        }\n    },\n configure (chart, item, options) {\n        item.fullSize = options.fullSize;\n        item.position = options.position;\n        item.weight = options.weight;\n    },\n update (chart, width, height, minPadding) {\n        if (!chart) {\n            return;\n        }\n        const padding = toPadding(chart.options.layout.padding);\n        const availableWidth = Math.max(width - padding.width, 0);\n        const availableHeight = Math.max(height - padding.height, 0);\n        const boxes = buildLayoutBoxes(chart.boxes);\n        const verticalBoxes = boxes.vertical;\n        const horizontalBoxes = boxes.horizontal;\n        each(chart.boxes, (box)=>{\n            if (typeof box.beforeLayout === 'function') {\n                box.beforeLayout();\n            }\n        });\n        const visibleVerticalBoxCount = verticalBoxes.reduce((total, wrap)=>wrap.box.options && wrap.box.options.display === false ? total : total + 1, 0) || 1;\n        const params = Object.freeze({\n            outerWidth: width,\n            outerHeight: height,\n            padding,\n            availableWidth,\n            availableHeight,\n            vBoxMaxWidth: availableWidth / 2 / visibleVerticalBoxCount,\n            hBoxMaxHeight: availableHeight / 2\n        });\n        const maxPadding = Object.assign({}, padding);\n        updateMaxPadding(maxPadding, toPadding(minPadding));\n        const chartArea = Object.assign({\n            maxPadding,\n            w: availableWidth,\n            h: availableHeight,\n            x: padding.left,\n            y: padding.top\n        }, padding);\n        const stacks = setLayoutDims(verticalBoxes.concat(horizontalBoxes), params);\n        fitBoxes(boxes.fullSize, chartArea, params, stacks);\n        fitBoxes(verticalBoxes, chartArea, params, stacks);\n        if (fitBoxes(horizontalBoxes, chartArea, params, stacks)) {\n            fitBoxes(verticalBoxes, chartArea, params, stacks);\n        }\n        handleMaxPadding(chartArea);\n        placeBoxes(boxes.leftAndTop, chartArea, params, stacks);\n        chartArea.x += chartArea.w;\n        chartArea.y += chartArea.h;\n        placeBoxes(boxes.rightAndBottom, chartArea, params, stacks);\n        chart.chartArea = {\n            left: chartArea.left,\n            top: chartArea.top,\n            right: chartArea.left + chartArea.w,\n            bottom: chartArea.top + chartArea.h,\n            height: chartArea.h,\n            width: chartArea.w\n        };\n        each(boxes.chartArea, (layout)=>{\n            const box = layout.box;\n            Object.assign(box, chart.chartArea);\n            box.update(chartArea.w, chartArea.h, {\n                left: 0,\n                top: 0,\n                right: 0,\n                bottom: 0\n            });\n        });\n    }\n};\n\nclass BasePlatform {\n acquireContext(canvas, aspectRatio) {}\n releaseContext(context) {\n        return false;\n    }\n addEventListener(chart, type, listener) {}\n removeEventListener(chart, type, listener) {}\n getDevicePixelRatio() {\n        return 1;\n    }\n getMaximumSize(element, width, height, aspectRatio) {\n        width = Math.max(0, width || element.width);\n        height = height || element.height;\n        return {\n            width,\n            height: Math.max(0, aspectRatio ? Math.floor(width / aspectRatio) : height)\n        };\n    }\n isAttached(canvas) {\n        return true;\n    }\n updateConfig(config) {\n    }\n}\n\nclass BasicPlatform extends BasePlatform {\n    acquireContext(item) {\n        return item && item.getContext && item.getContext('2d') || null;\n    }\n    updateConfig(config) {\n        config.options.animation = false;\n    }\n}\n\nconst EXPANDO_KEY = '$chartjs';\n const EVENT_TYPES = {\n    touchstart: 'mousedown',\n    touchmove: 'mousemove',\n    touchend: 'mouseup',\n    pointerenter: 'mouseenter',\n    pointerdown: 'mousedown',\n    pointermove: 'mousemove',\n    pointerup: 'mouseup',\n    pointerleave: 'mouseout',\n    pointerout: 'mouseout'\n};\nconst isNullOrEmpty = (value)=>value === null || value === '';\n function initCanvas(canvas, aspectRatio) {\n    const style = canvas.style;\n    const renderHeight = canvas.getAttribute('height');\n    const renderWidth = canvas.getAttribute('width');\n    canvas[EXPANDO_KEY] = {\n        initial: {\n            height: renderHeight,\n            width: renderWidth,\n            style: {\n                display: style.display,\n                height: style.height,\n                width: style.width\n            }\n        }\n    };\n    style.display = style.display || 'block';\n    style.boxSizing = style.boxSizing || 'border-box';\n    if (isNullOrEmpty(renderWidth)) {\n        const displayWidth = readUsedSize(canvas, 'width');\n        if (displayWidth !== undefined) {\n            canvas.width = displayWidth;\n        }\n    }\n    if (isNullOrEmpty(renderHeight)) {\n        if (canvas.style.height === '') {\n            canvas.height = canvas.width / (aspectRatio || 2);\n        } else {\n            const displayHeight = readUsedSize(canvas, 'height');\n            if (displayHeight !== undefined) {\n                canvas.height = displayHeight;\n            }\n        }\n    }\n    return canvas;\n}\nconst eventListenerOptions = supportsEventListenerOptions ? {\n    passive: true\n} : false;\nfunction addListener(node, type, listener) {\n    if (node) {\n        node.addEventListener(type, listener, eventListenerOptions);\n    }\n}\nfunction removeListener(chart, type, listener) {\n    if (chart && chart.canvas) {\n        chart.canvas.removeEventListener(type, listener, eventListenerOptions);\n    }\n}\nfunction fromNativeEvent(event, chart) {\n    const type = EVENT_TYPES[event.type] || event.type;\n    const { x , y  } = getRelativePosition(event, chart);\n    return {\n        type,\n        chart,\n        native: event,\n        x: x !== undefined ? x : null,\n        y: y !== undefined ? y : null\n    };\n}\nfunction nodeListContains(nodeList, canvas) {\n    for (const node of nodeList){\n        if (node === canvas || node.contains(canvas)) {\n            return true;\n        }\n    }\n}\nfunction createAttachObserver(chart, type, listener) {\n    const canvas = chart.canvas;\n    const observer = new MutationObserver((entries)=>{\n        let trigger = false;\n        for (const entry of entries){\n            trigger = trigger || nodeListContains(entry.addedNodes, canvas);\n            trigger = trigger && !nodeListContains(entry.removedNodes, canvas);\n        }\n        if (trigger) {\n            listener();\n        }\n    });\n    observer.observe(document, {\n        childList: true,\n        subtree: true\n    });\n    return observer;\n}\nfunction createDetachObserver(chart, type, listener) {\n    const canvas = chart.canvas;\n    const observer = new MutationObserver((entries)=>{\n        let trigger = false;\n        for (const entry of entries){\n            trigger = trigger || nodeListContains(entry.removedNodes, canvas);\n            trigger = trigger && !nodeListContains(entry.addedNodes, canvas);\n        }\n        if (trigger) {\n            listener();\n        }\n    });\n    observer.observe(document, {\n        childList: true,\n        subtree: true\n    });\n    return observer;\n}\nconst drpListeningCharts = new Map();\nlet oldDevicePixelRatio = 0;\nfunction onWindowResize() {\n    const dpr = window.devicePixelRatio;\n    if (dpr === oldDevicePixelRatio) {\n        return;\n    }\n    oldDevicePixelRatio = dpr;\n    drpListeningCharts.forEach((resize, chart)=>{\n        if (chart.currentDevicePixelRatio !== dpr) {\n            resize();\n        }\n    });\n}\nfunction listenDevicePixelRatioChanges(chart, resize) {\n    if (!drpListeningCharts.size) {\n        window.addEventListener('resize', onWindowResize);\n    }\n    drpListeningCharts.set(chart, resize);\n}\nfunction unlistenDevicePixelRatioChanges(chart) {\n    drpListeningCharts.delete(chart);\n    if (!drpListeningCharts.size) {\n        window.removeEventListener('resize', onWindowResize);\n    }\n}\nfunction createResizeObserver(chart, type, listener) {\n    const canvas = chart.canvas;\n    const container = canvas && _getParentNode(canvas);\n    if (!container) {\n        return;\n    }\n    const resize = throttled((width, height)=>{\n        const w = container.clientWidth;\n        listener(width, height);\n        if (w < container.clientWidth) {\n            listener();\n        }\n    }, window);\n    const observer = new ResizeObserver((entries)=>{\n        const entry = entries[0];\n        const width = entry.contentRect.width;\n        const height = entry.contentRect.height;\n        if (width === 0 && height === 0) {\n            return;\n        }\n        resize(width, height);\n    });\n    observer.observe(container);\n    listenDevicePixelRatioChanges(chart, resize);\n    return observer;\n}\nfunction releaseObserver(chart, type, observer) {\n    if (observer) {\n        observer.disconnect();\n    }\n    if (type === 'resize') {\n        unlistenDevicePixelRatioChanges(chart);\n    }\n}\nfunction createProxyAndListen(chart, type, listener) {\n    const canvas = chart.canvas;\n    const proxy = throttled((event)=>{\n        if (chart.ctx !== null) {\n            listener(fromNativeEvent(event, chart));\n        }\n    }, chart);\n    addListener(canvas, type, proxy);\n    return proxy;\n}\n class DomPlatform extends BasePlatform {\n acquireContext(canvas, aspectRatio) {\n        const context = canvas && canvas.getContext && canvas.getContext('2d');\n        if (context && context.canvas === canvas) {\n            initCanvas(canvas, aspectRatio);\n            return context;\n        }\n        return null;\n    }\n releaseContext(context) {\n        const canvas = context.canvas;\n        if (!canvas[EXPANDO_KEY]) {\n            return false;\n        }\n        const initial = canvas[EXPANDO_KEY].initial;\n        [\n            'height',\n            'width'\n        ].forEach((prop)=>{\n            const value = initial[prop];\n            if (isNullOrUndef(value)) {\n                canvas.removeAttribute(prop);\n            } else {\n                canvas.setAttribute(prop, value);\n            }\n        });\n        const style = initial.style || {};\n        Object.keys(style).forEach((key)=>{\n            canvas.style[key] = style[key];\n        });\n        canvas.width = canvas.width;\n        delete canvas[EXPANDO_KEY];\n        return true;\n    }\n addEventListener(chart, type, listener) {\n        this.removeEventListener(chart, type);\n        const proxies = chart.$proxies || (chart.$proxies = {});\n        const handlers = {\n            attach: createAttachObserver,\n            detach: createDetachObserver,\n            resize: createResizeObserver\n        };\n        const handler = handlers[type] || createProxyAndListen;\n        proxies[type] = handler(chart, type, listener);\n    }\n removeEventListener(chart, type) {\n        const proxies = chart.$proxies || (chart.$proxies = {});\n        const proxy = proxies[type];\n        if (!proxy) {\n            return;\n        }\n        const handlers = {\n            attach: releaseObserver,\n            detach: releaseObserver,\n            resize: releaseObserver\n        };\n        const handler = handlers[type] || removeListener;\n        handler(chart, type, proxy);\n        proxies[type] = undefined;\n    }\n    getDevicePixelRatio() {\n        return window.devicePixelRatio;\n    }\n getMaximumSize(canvas, width, height, aspectRatio) {\n        return getMaximumSize(canvas, width, height, aspectRatio);\n    }\n isAttached(canvas) {\n        const container = canvas && _getParentNode(canvas);\n        return !!(container && container.isConnected);\n    }\n}\n\nfunction _detectPlatform(canvas) {\n    if (!_isDomSupported() || typeof OffscreenCanvas !== 'undefined' && canvas instanceof OffscreenCanvas) {\n        return BasicPlatform;\n    }\n    return DomPlatform;\n}\n\nclass Element {\n    static defaults = {};\n    static defaultRoutes = undefined;\n    x;\n    y;\n    active = false;\n    options;\n    $animations;\n    tooltipPosition(useFinalPosition) {\n        const { x , y  } = this.getProps([\n            'x',\n            'y'\n        ], useFinalPosition);\n        return {\n            x,\n            y\n        };\n    }\n    hasValue() {\n        return isNumber(this.x) && isNumber(this.y);\n    }\n    getProps(props, final) {\n        const anims = this.$animations;\n        if (!final || !anims) {\n            // let's not create an object, if not needed\n            return this;\n        }\n        const ret = {};\n        props.forEach((prop)=>{\n            ret[prop] = anims[prop] && anims[prop].active() ? anims[prop]._to : this[prop];\n        });\n        return ret;\n    }\n}\n\nfunction autoSkip(scale, ticks) {\n    const tickOpts = scale.options.ticks;\n    const determinedMaxTicks = determineMaxTicks(scale);\n    const ticksLimit = Math.min(tickOpts.maxTicksLimit || determinedMaxTicks, determinedMaxTicks);\n    const majorIndices = tickOpts.major.enabled ? getMajorIndices(ticks) : [];\n    const numMajorIndices = majorIndices.length;\n    const first = majorIndices[0];\n    const last = majorIndices[numMajorIndices - 1];\n    const newTicks = [];\n    if (numMajorIndices > ticksLimit) {\n        skipMajors(ticks, newTicks, majorIndices, numMajorIndices / ticksLimit);\n        return newTicks;\n    }\n    const spacing = calculateSpacing(majorIndices, ticks, ticksLimit);\n    if (numMajorIndices > 0) {\n        let i, ilen;\n        const avgMajorSpacing = numMajorIndices > 1 ? Math.round((last - first) / (numMajorIndices - 1)) : null;\n        skip(ticks, newTicks, spacing, isNullOrUndef(avgMajorSpacing) ? 0 : first - avgMajorSpacing, first);\n        for(i = 0, ilen = numMajorIndices - 1; i < ilen; i++){\n            skip(ticks, newTicks, spacing, majorIndices[i], majorIndices[i + 1]);\n        }\n        skip(ticks, newTicks, spacing, last, isNullOrUndef(avgMajorSpacing) ? ticks.length : last + avgMajorSpacing);\n        return newTicks;\n    }\n    skip(ticks, newTicks, spacing);\n    return newTicks;\n}\nfunction determineMaxTicks(scale) {\n    const offset = scale.options.offset;\n    const tickLength = scale._tickSize();\n    const maxScale = scale._length / tickLength + (offset ? 0 : 1);\n    const maxChart = scale._maxLength / tickLength;\n    return Math.floor(Math.min(maxScale, maxChart));\n}\n function calculateSpacing(majorIndices, ticks, ticksLimit) {\n    const evenMajorSpacing = getEvenSpacing(majorIndices);\n    const spacing = ticks.length / ticksLimit;\n    if (!evenMajorSpacing) {\n        return Math.max(spacing, 1);\n    }\n    const factors = _factorize(evenMajorSpacing);\n    for(let i = 0, ilen = factors.length - 1; i < ilen; i++){\n        const factor = factors[i];\n        if (factor > spacing) {\n            return factor;\n        }\n    }\n    return Math.max(spacing, 1);\n}\n function getMajorIndices(ticks) {\n    const result = [];\n    let i, ilen;\n    for(i = 0, ilen = ticks.length; i < ilen; i++){\n        if (ticks[i].major) {\n            result.push(i);\n        }\n    }\n    return result;\n}\n function skipMajors(ticks, newTicks, majorIndices, spacing) {\n    let count = 0;\n    let next = majorIndices[0];\n    let i;\n    spacing = Math.ceil(spacing);\n    for(i = 0; i < ticks.length; i++){\n        if (i === next) {\n            newTicks.push(ticks[i]);\n            count++;\n            next = majorIndices[count * spacing];\n        }\n    }\n}\n function skip(ticks, newTicks, spacing, majorStart, majorEnd) {\n    const start = valueOrDefault(majorStart, 0);\n    const end = Math.min(valueOrDefault(majorEnd, ticks.length), ticks.length);\n    let count = 0;\n    let length, i, next;\n    spacing = Math.ceil(spacing);\n    if (majorEnd) {\n        length = majorEnd - majorStart;\n        spacing = length / Math.floor(length / spacing);\n    }\n    next = start;\n    while(next < 0){\n        count++;\n        next = Math.round(start + count * spacing);\n    }\n    for(i = Math.max(start, 0); i < end; i++){\n        if (i === next) {\n            newTicks.push(ticks[i]);\n            count++;\n            next = Math.round(start + count * spacing);\n        }\n    }\n}\n function getEvenSpacing(arr) {\n    const len = arr.length;\n    let i, diff;\n    if (len < 2) {\n        return false;\n    }\n    for(diff = arr[0], i = 1; i < len; ++i){\n        if (arr[i] - arr[i - 1] !== diff) {\n            return false;\n        }\n    }\n    return diff;\n}\n\nconst reverseAlign = (align)=>align === 'left' ? 'right' : align === 'right' ? 'left' : align;\nconst offsetFromEdge = (scale, edge, offset)=>edge === 'top' || edge === 'left' ? scale[edge] + offset : scale[edge] - offset;\nconst getTicksLimit = (ticksLength, maxTicksLimit)=>Math.min(maxTicksLimit || ticksLength, ticksLength);\n function sample(arr, numItems) {\n    const result = [];\n    const increment = arr.length / numItems;\n    const len = arr.length;\n    let i = 0;\n    for(; i < len; i += increment){\n        result.push(arr[Math.floor(i)]);\n    }\n    return result;\n}\n function getPixelForGridLine(scale, index, offsetGridLines) {\n    const length = scale.ticks.length;\n    const validIndex = Math.min(index, length - 1);\n    const start = scale._startPixel;\n    const end = scale._endPixel;\n    const epsilon = 1e-6;\n    let lineValue = scale.getPixelForTick(validIndex);\n    let offset;\n    if (offsetGridLines) {\n        if (length === 1) {\n            offset = Math.max(lineValue - start, end - lineValue);\n        } else if (index === 0) {\n            offset = (scale.getPixelForTick(1) - lineValue) / 2;\n        } else {\n            offset = (lineValue - scale.getPixelForTick(validIndex - 1)) / 2;\n        }\n        lineValue += validIndex < index ? offset : -offset;\n        if (lineValue < start - epsilon || lineValue > end + epsilon) {\n            return;\n        }\n    }\n    return lineValue;\n}\n function garbageCollect(caches, length) {\n    each(caches, (cache)=>{\n        const gc = cache.gc;\n        const gcLen = gc.length / 2;\n        let i;\n        if (gcLen > length) {\n            for(i = 0; i < gcLen; ++i){\n                delete cache.data[gc[i]];\n            }\n            gc.splice(0, gcLen);\n        }\n    });\n}\n function getTickMarkLength(options) {\n    return options.drawTicks ? options.tickLength : 0;\n}\n function getTitleHeight(options, fallback) {\n    if (!options.display) {\n        return 0;\n    }\n    const font = toFont(options.font, fallback);\n    const padding = toPadding(options.padding);\n    const lines = isArray(options.text) ? options.text.length : 1;\n    return lines * font.lineHeight + padding.height;\n}\nfunction createScaleContext(parent, scale) {\n    return createContext(parent, {\n        scale,\n        type: 'scale'\n    });\n}\nfunction createTickContext(parent, index, tick) {\n    return createContext(parent, {\n        tick,\n        index,\n        type: 'tick'\n    });\n}\nfunction titleAlign(align, position, reverse) {\n     let ret = _toLeftRightCenter(align);\n    if (reverse && position !== 'right' || !reverse && position === 'right') {\n        ret = reverseAlign(ret);\n    }\n    return ret;\n}\nfunction titleArgs(scale, offset, position, align) {\n    const { top , left , bottom , right , chart  } = scale;\n    const { chartArea , scales  } = chart;\n    let rotation = 0;\n    let maxWidth, titleX, titleY;\n    const height = bottom - top;\n    const width = right - left;\n    if (scale.isHorizontal()) {\n        titleX = _alignStartEnd(align, left, right);\n        if (isObject(position)) {\n            const positionAxisID = Object.keys(position)[0];\n            const value = position[positionAxisID];\n            titleY = scales[positionAxisID].getPixelForValue(value) + height - offset;\n        } else if (position === 'center') {\n            titleY = (chartArea.bottom + chartArea.top) / 2 + height - offset;\n        } else {\n            titleY = offsetFromEdge(scale, position, offset);\n        }\n        maxWidth = right - left;\n    } else {\n        if (isObject(position)) {\n            const positionAxisID = Object.keys(position)[0];\n            const value = position[positionAxisID];\n            titleX = scales[positionAxisID].getPixelForValue(value) - width + offset;\n        } else if (position === 'center') {\n            titleX = (chartArea.left + chartArea.right) / 2 - width + offset;\n        } else {\n            titleX = offsetFromEdge(scale, position, offset);\n        }\n        titleY = _alignStartEnd(align, bottom, top);\n        rotation = position === 'left' ? -HALF_PI : HALF_PI;\n    }\n    return {\n        titleX,\n        titleY,\n        maxWidth,\n        rotation\n    };\n}\nclass Scale extends Element {\n    constructor(cfg){\n        super();\n         this.id = cfg.id;\n         this.type = cfg.type;\n         this.options = undefined;\n         this.ctx = cfg.ctx;\n         this.chart = cfg.chart;\n         this.top = undefined;\n         this.bottom = undefined;\n         this.left = undefined;\n         this.right = undefined;\n         this.width = undefined;\n         this.height = undefined;\n        this._margins = {\n            left: 0,\n            right: 0,\n            top: 0,\n            bottom: 0\n        };\n         this.maxWidth = undefined;\n         this.maxHeight = undefined;\n         this.paddingTop = undefined;\n         this.paddingBottom = undefined;\n         this.paddingLeft = undefined;\n         this.paddingRight = undefined;\n         this.axis = undefined;\n         this.labelRotation = undefined;\n        this.min = undefined;\n        this.max = undefined;\n        this._range = undefined;\n         this.ticks = [];\n         this._gridLineItems = null;\n         this._labelItems = null;\n         this._labelSizes = null;\n        this._length = 0;\n        this._maxLength = 0;\n        this._longestTextCache = {};\n         this._startPixel = undefined;\n         this._endPixel = undefined;\n        this._reversePixels = false;\n        this._userMax = undefined;\n        this._userMin = undefined;\n        this._suggestedMax = undefined;\n        this._suggestedMin = undefined;\n        this._ticksLength = 0;\n        this._borderValue = 0;\n        this._cache = {};\n        this._dataLimitsCached = false;\n        this.$context = undefined;\n    }\n init(options) {\n        this.options = options.setContext(this.getContext());\n        this.axis = options.axis;\n        this._userMin = this.parse(options.min);\n        this._userMax = this.parse(options.max);\n        this._suggestedMin = this.parse(options.suggestedMin);\n        this._suggestedMax = this.parse(options.suggestedMax);\n    }\n parse(raw, index) {\n        return raw;\n    }\n getUserBounds() {\n        let { _userMin , _userMax , _suggestedMin , _suggestedMax  } = this;\n        _userMin = finiteOrDefault(_userMin, Number.POSITIVE_INFINITY);\n        _userMax = finiteOrDefault(_userMax, Number.NEGATIVE_INFINITY);\n        _suggestedMin = finiteOrDefault(_suggestedMin, Number.POSITIVE_INFINITY);\n        _suggestedMax = finiteOrDefault(_suggestedMax, Number.NEGATIVE_INFINITY);\n        return {\n            min: finiteOrDefault(_userMin, _suggestedMin),\n            max: finiteOrDefault(_userMax, _suggestedMax),\n            minDefined: isNumberFinite(_userMin),\n            maxDefined: isNumberFinite(_userMax)\n        };\n    }\n getMinMax(canStack) {\n        let { min , max , minDefined , maxDefined  } = this.getUserBounds();\n        let range;\n        if (minDefined && maxDefined) {\n            return {\n                min,\n                max\n            };\n        }\n        const metas = this.getMatchingVisibleMetas();\n        for(let i = 0, ilen = metas.length; i < ilen; ++i){\n            range = metas[i].controller.getMinMax(this, canStack);\n            if (!minDefined) {\n                min = Math.min(min, range.min);\n            }\n            if (!maxDefined) {\n                max = Math.max(max, range.max);\n            }\n        }\n        min = maxDefined && min > max ? max : min;\n        max = minDefined && min > max ? min : max;\n        return {\n            min: finiteOrDefault(min, finiteOrDefault(max, min)),\n            max: finiteOrDefault(max, finiteOrDefault(min, max))\n        };\n    }\n getPadding() {\n        return {\n            left: this.paddingLeft || 0,\n            top: this.paddingTop || 0,\n            right: this.paddingRight || 0,\n            bottom: this.paddingBottom || 0\n        };\n    }\n getTicks() {\n        return this.ticks;\n    }\n getLabels() {\n        const data = this.chart.data;\n        return this.options.labels || (this.isHorizontal() ? data.xLabels : data.yLabels) || data.labels || [];\n    }\n getLabelItems(chartArea = this.chart.chartArea) {\n        const items = this._labelItems || (this._labelItems = this._computeLabelItems(chartArea));\n        return items;\n    }\n    beforeLayout() {\n        this._cache = {};\n        this._dataLimitsCached = false;\n    }\n    beforeUpdate() {\n        callback(this.options.beforeUpdate, [\n            this\n        ]);\n    }\n update(maxWidth, maxHeight, margins) {\n        const { beginAtZero , grace , ticks: tickOpts  } = this.options;\n        const sampleSize = tickOpts.sampleSize;\n        this.beforeUpdate();\n        this.maxWidth = maxWidth;\n        this.maxHeight = maxHeight;\n        this._margins = margins = Object.assign({\n            left: 0,\n            right: 0,\n            top: 0,\n            bottom: 0\n        }, margins);\n        this.ticks = null;\n        this._labelSizes = null;\n        this._gridLineItems = null;\n        this._labelItems = null;\n        this.beforeSetDimensions();\n        this.setDimensions();\n        this.afterSetDimensions();\n        this._maxLength = this.isHorizontal() ? this.width + margins.left + margins.right : this.height + margins.top + margins.bottom;\n        if (!this._dataLimitsCached) {\n            this.beforeDataLimits();\n            this.determineDataLimits();\n            this.afterDataLimits();\n            this._range = _addGrace(this, grace, beginAtZero);\n            this._dataLimitsCached = true;\n        }\n        this.beforeBuildTicks();\n        this.ticks = this.buildTicks() || [];\n        this.afterBuildTicks();\n        const samplingEnabled = sampleSize < this.ticks.length;\n        this._convertTicksToLabels(samplingEnabled ? sample(this.ticks, sampleSize) : this.ticks);\n        this.configure();\n        this.beforeCalculateLabelRotation();\n        this.calculateLabelRotation();\n        this.afterCalculateLabelRotation();\n        if (tickOpts.display && (tickOpts.autoSkip || tickOpts.source === 'auto')) {\n            this.ticks = autoSkip(this, this.ticks);\n            this._labelSizes = null;\n            this.afterAutoSkip();\n        }\n        if (samplingEnabled) {\n            this._convertTicksToLabels(this.ticks);\n        }\n        this.beforeFit();\n        this.fit();\n        this.afterFit();\n        this.afterUpdate();\n    }\n configure() {\n        let reversePixels = this.options.reverse;\n        let startPixel, endPixel;\n        if (this.isHorizontal()) {\n            startPixel = this.left;\n            endPixel = this.right;\n        } else {\n            startPixel = this.top;\n            endPixel = this.bottom;\n            reversePixels = !reversePixels;\n        }\n        this._startPixel = startPixel;\n        this._endPixel = endPixel;\n        this._reversePixels = reversePixels;\n        this._length = endPixel - startPixel;\n        this._alignToPixels = this.options.alignToPixels;\n    }\n    afterUpdate() {\n        callback(this.options.afterUpdate, [\n            this\n        ]);\n    }\n    beforeSetDimensions() {\n        callback(this.options.beforeSetDimensions, [\n            this\n        ]);\n    }\n    setDimensions() {\n        if (this.isHorizontal()) {\n            this.width = this.maxWidth;\n            this.left = 0;\n            this.right = this.width;\n        } else {\n            this.height = this.maxHeight;\n            this.top = 0;\n            this.bottom = this.height;\n        }\n        this.paddingLeft = 0;\n        this.paddingTop = 0;\n        this.paddingRight = 0;\n        this.paddingBottom = 0;\n    }\n    afterSetDimensions() {\n        callback(this.options.afterSetDimensions, [\n            this\n        ]);\n    }\n    _callHooks(name) {\n        this.chart.notifyPlugins(name, this.getContext());\n        callback(this.options[name], [\n            this\n        ]);\n    }\n    beforeDataLimits() {\n        this._callHooks('beforeDataLimits');\n    }\n    determineDataLimits() {}\n    afterDataLimits() {\n        this._callHooks('afterDataLimits');\n    }\n    beforeBuildTicks() {\n        this._callHooks('beforeBuildTicks');\n    }\n buildTicks() {\n        return [];\n    }\n    afterBuildTicks() {\n        this._callHooks('afterBuildTicks');\n    }\n    beforeTickToLabelConversion() {\n        callback(this.options.beforeTickToLabelConversion, [\n            this\n        ]);\n    }\n generateTickLabels(ticks) {\n        const tickOpts = this.options.ticks;\n        let i, ilen, tick;\n        for(i = 0, ilen = ticks.length; i < ilen; i++){\n            tick = ticks[i];\n            tick.label = callback(tickOpts.callback, [\n                tick.value,\n                i,\n                ticks\n            ], this);\n        }\n    }\n    afterTickToLabelConversion() {\n        callback(this.options.afterTickToLabelConversion, [\n            this\n        ]);\n    }\n    beforeCalculateLabelRotation() {\n        callback(this.options.beforeCalculateLabelRotation, [\n            this\n        ]);\n    }\n    calculateLabelRotation() {\n        const options = this.options;\n        const tickOpts = options.ticks;\n        const numTicks = getTicksLimit(this.ticks.length, options.ticks.maxTicksLimit);\n        const minRotation = tickOpts.minRotation || 0;\n        const maxRotation = tickOpts.maxRotation;\n        let labelRotation = minRotation;\n        let tickWidth, maxHeight, maxLabelDiagonal;\n        if (!this._isVisible() || !tickOpts.display || minRotation >= maxRotation || numTicks <= 1 || !this.isHorizontal()) {\n            this.labelRotation = minRotation;\n            return;\n        }\n        const labelSizes = this._getLabelSizes();\n        const maxLabelWidth = labelSizes.widest.width;\n        const maxLabelHeight = labelSizes.highest.height;\n        const maxWidth = _limitValue(this.chart.width - maxLabelWidth, 0, this.maxWidth);\n        tickWidth = options.offset ? this.maxWidth / numTicks : maxWidth / (numTicks - 1);\n        if (maxLabelWidth + 6 > tickWidth) {\n            tickWidth = maxWidth / (numTicks - (options.offset ? 0.5 : 1));\n            maxHeight = this.maxHeight - getTickMarkLength(options.grid) - tickOpts.padding - getTitleHeight(options.title, this.chart.options.font);\n            maxLabelDiagonal = Math.sqrt(maxLabelWidth * maxLabelWidth + maxLabelHeight * maxLabelHeight);\n            labelRotation = toDegrees(Math.min(Math.asin(_limitValue((labelSizes.highest.height + 6) / tickWidth, -1, 1)), Math.asin(_limitValue(maxHeight / maxLabelDiagonal, -1, 1)) - Math.asin(_limitValue(maxLabelHeight / maxLabelDiagonal, -1, 1))));\n            labelRotation = Math.max(minRotation, Math.min(maxRotation, labelRotation));\n        }\n        this.labelRotation = labelRotation;\n    }\n    afterCalculateLabelRotation() {\n        callback(this.options.afterCalculateLabelRotation, [\n            this\n        ]);\n    }\n    afterAutoSkip() {}\n    beforeFit() {\n        callback(this.options.beforeFit, [\n            this\n        ]);\n    }\n    fit() {\n        const minSize = {\n            width: 0,\n            height: 0\n        };\n        const { chart , options: { ticks: tickOpts , title: titleOpts , grid: gridOpts  }  } = this;\n        const display = this._isVisible();\n        const isHorizontal = this.isHorizontal();\n        if (display) {\n            const titleHeight = getTitleHeight(titleOpts, chart.options.font);\n            if (isHorizontal) {\n                minSize.width = this.maxWidth;\n                minSize.height = getTickMarkLength(gridOpts) + titleHeight;\n            } else {\n                minSize.height = this.maxHeight;\n                minSize.width = getTickMarkLength(gridOpts) + titleHeight;\n            }\n            if (tickOpts.display && this.ticks.length) {\n                const { first , last , widest , highest  } = this._getLabelSizes();\n                const tickPadding = tickOpts.padding * 2;\n                const angleRadians = toRadians(this.labelRotation);\n                const cos = Math.cos(angleRadians);\n                const sin = Math.sin(angleRadians);\n                if (isHorizontal) {\n                    const labelHeight = tickOpts.mirror ? 0 : sin * widest.width + cos * highest.height;\n                    minSize.height = Math.min(this.maxHeight, minSize.height + labelHeight + tickPadding);\n                } else {\n                    const labelWidth = tickOpts.mirror ? 0 : cos * widest.width + sin * highest.height;\n                    minSize.width = Math.min(this.maxWidth, minSize.width + labelWidth + tickPadding);\n                }\n                this._calculatePadding(first, last, sin, cos);\n            }\n        }\n        this._handleMargins();\n        if (isHorizontal) {\n            this.width = this._length = chart.width - this._margins.left - this._margins.right;\n            this.height = minSize.height;\n        } else {\n            this.width = minSize.width;\n            this.height = this._length = chart.height - this._margins.top - this._margins.bottom;\n        }\n    }\n    _calculatePadding(first, last, sin, cos) {\n        const { ticks: { align , padding  } , position  } = this.options;\n        const isRotated = this.labelRotation !== 0;\n        const labelsBelowTicks = position !== 'top' && this.axis === 'x';\n        if (this.isHorizontal()) {\n            const offsetLeft = this.getPixelForTick(0) - this.left;\n            const offsetRight = this.right - this.getPixelForTick(this.ticks.length - 1);\n            let paddingLeft = 0;\n            let paddingRight = 0;\n            if (isRotated) {\n                if (labelsBelowTicks) {\n                    paddingLeft = cos * first.width;\n                    paddingRight = sin * last.height;\n                } else {\n                    paddingLeft = sin * first.height;\n                    paddingRight = cos * last.width;\n                }\n            } else if (align === 'start') {\n                paddingRight = last.width;\n            } else if (align === 'end') {\n                paddingLeft = first.width;\n            } else if (align !== 'inner') {\n                paddingLeft = first.width / 2;\n                paddingRight = last.width / 2;\n            }\n            this.paddingLeft = Math.max((paddingLeft - offsetLeft + padding) * this.width / (this.width - offsetLeft), 0);\n            this.paddingRight = Math.max((paddingRight - offsetRight + padding) * this.width / (this.width - offsetRight), 0);\n        } else {\n            let paddingTop = last.height / 2;\n            let paddingBottom = first.height / 2;\n            if (align === 'start') {\n                paddingTop = 0;\n                paddingBottom = first.height;\n            } else if (align === 'end') {\n                paddingTop = last.height;\n                paddingBottom = 0;\n            }\n            this.paddingTop = paddingTop + padding;\n            this.paddingBottom = paddingBottom + padding;\n        }\n    }\n _handleMargins() {\n        if (this._margins) {\n            this._margins.left = Math.max(this.paddingLeft, this._margins.left);\n            this._margins.top = Math.max(this.paddingTop, this._margins.top);\n            this._margins.right = Math.max(this.paddingRight, this._margins.right);\n            this._margins.bottom = Math.max(this.paddingBottom, this._margins.bottom);\n        }\n    }\n    afterFit() {\n        callback(this.options.afterFit, [\n            this\n        ]);\n    }\n isHorizontal() {\n        const { axis , position  } = this.options;\n        return position === 'top' || position === 'bottom' || axis === 'x';\n    }\n isFullSize() {\n        return this.options.fullSize;\n    }\n _convertTicksToLabels(ticks) {\n        this.beforeTickToLabelConversion();\n        this.generateTickLabels(ticks);\n        let i, ilen;\n        for(i = 0, ilen = ticks.length; i < ilen; i++){\n            if (isNullOrUndef(ticks[i].label)) {\n                ticks.splice(i, 1);\n                ilen--;\n                i--;\n            }\n        }\n        this.afterTickToLabelConversion();\n    }\n _getLabelSizes() {\n        let labelSizes = this._labelSizes;\n        if (!labelSizes) {\n            const sampleSize = this.options.ticks.sampleSize;\n            let ticks = this.ticks;\n            if (sampleSize < ticks.length) {\n                ticks = sample(ticks, sampleSize);\n            }\n            this._labelSizes = labelSizes = this._computeLabelSizes(ticks, ticks.length, this.options.ticks.maxTicksLimit);\n        }\n        return labelSizes;\n    }\n _computeLabelSizes(ticks, length, maxTicksLimit) {\n        const { ctx , _longestTextCache: caches  } = this;\n        const widths = [];\n        const heights = [];\n        const increment = Math.floor(length / getTicksLimit(length, maxTicksLimit));\n        let widestLabelSize = 0;\n        let highestLabelSize = 0;\n        let i, j, jlen, label, tickFont, fontString, cache, lineHeight, width, height, nestedLabel;\n        for(i = 0; i < length; i += increment){\n            label = ticks[i].label;\n            tickFont = this._resolveTickFontOptions(i);\n            ctx.font = fontString = tickFont.string;\n            cache = caches[fontString] = caches[fontString] || {\n                data: {},\n                gc: []\n            };\n            lineHeight = tickFont.lineHeight;\n            width = height = 0;\n            if (!isNullOrUndef(label) && !isArray(label)) {\n                width = _measureText(ctx, cache.data, cache.gc, width, label);\n                height = lineHeight;\n            } else if (isArray(label)) {\n                for(j = 0, jlen = label.length; j < jlen; ++j){\n                    nestedLabel =  label[j];\n                    if (!isNullOrUndef(nestedLabel) && !isArray(nestedLabel)) {\n                        width = _measureText(ctx, cache.data, cache.gc, width, nestedLabel);\n                        height += lineHeight;\n                    }\n                }\n            }\n            widths.push(width);\n            heights.push(height);\n            widestLabelSize = Math.max(width, widestLabelSize);\n            highestLabelSize = Math.max(height, highestLabelSize);\n        }\n        garbageCollect(caches, length);\n        const widest = widths.indexOf(widestLabelSize);\n        const highest = heights.indexOf(highestLabelSize);\n        const valueAt = (idx)=>({\n                width: widths[idx] || 0,\n                height: heights[idx] || 0\n            });\n        return {\n            first: valueAt(0),\n            last: valueAt(length - 1),\n            widest: valueAt(widest),\n            highest: valueAt(highest),\n            widths,\n            heights\n        };\n    }\n getLabelForValue(value) {\n        return value;\n    }\n getPixelForValue(value, index) {\n        return NaN;\n    }\n getValueForPixel(pixel) {}\n getPixelForTick(index) {\n        const ticks = this.ticks;\n        if (index < 0 || index > ticks.length - 1) {\n            return null;\n        }\n        return this.getPixelForValue(ticks[index].value);\n    }\n getPixelForDecimal(decimal) {\n        if (this._reversePixels) {\n            decimal = 1 - decimal;\n        }\n        const pixel = this._startPixel + decimal * this._length;\n        return _int16Range(this._alignToPixels ? _alignPixel(this.chart, pixel, 0) : pixel);\n    }\n getDecimalForPixel(pixel) {\n        const decimal = (pixel - this._startPixel) / this._length;\n        return this._reversePixels ? 1 - decimal : decimal;\n    }\n getBasePixel() {\n        return this.getPixelForValue(this.getBaseValue());\n    }\n getBaseValue() {\n        const { min , max  } = this;\n        return min < 0 && max < 0 ? max : min > 0 && max > 0 ? min : 0;\n    }\n getContext(index) {\n        const ticks = this.ticks || [];\n        if (index >= 0 && index < ticks.length) {\n            const tick = ticks[index];\n            return tick.$context || (tick.$context = createTickContext(this.getContext(), index, tick));\n        }\n        return this.$context || (this.$context = createScaleContext(this.chart.getContext(), this));\n    }\n _tickSize() {\n        const optionTicks = this.options.ticks;\n        const rot = toRadians(this.labelRotation);\n        const cos = Math.abs(Math.cos(rot));\n        const sin = Math.abs(Math.sin(rot));\n        const labelSizes = this._getLabelSizes();\n        const padding = optionTicks.autoSkipPadding || 0;\n        const w = labelSizes ? labelSizes.widest.width + padding : 0;\n        const h = labelSizes ? labelSizes.highest.height + padding : 0;\n        return this.isHorizontal() ? h * cos > w * sin ? w / cos : h / sin : h * sin < w * cos ? h / cos : w / sin;\n    }\n _isVisible() {\n        const display = this.options.display;\n        if (display !== 'auto') {\n            return !!display;\n        }\n        return this.getMatchingVisibleMetas().length > 0;\n    }\n _computeGridLineItems(chartArea) {\n        const axis = this.axis;\n        const chart = this.chart;\n        const options = this.options;\n        const { grid , position , border  } = options;\n        const offset = grid.offset;\n        const isHorizontal = this.isHorizontal();\n        const ticks = this.ticks;\n        const ticksLength = ticks.length + (offset ? 1 : 0);\n        const tl = getTickMarkLength(grid);\n        const items = [];\n        const borderOpts = border.setContext(this.getContext());\n        const axisWidth = borderOpts.display ? borderOpts.width : 0;\n        const axisHalfWidth = axisWidth / 2;\n        const alignBorderValue = function(pixel) {\n            return _alignPixel(chart, pixel, axisWidth);\n        };\n        let borderValue, i, lineValue, alignedLineValue;\n        let tx1, ty1, tx2, ty2, x1, y1, x2, y2;\n        if (position === 'top') {\n            borderValue = alignBorderValue(this.bottom);\n            ty1 = this.bottom - tl;\n            ty2 = borderValue - axisHalfWidth;\n            y1 = alignBorderValue(chartArea.top) + axisHalfWidth;\n            y2 = chartArea.bottom;\n        } else if (position === 'bottom') {\n            borderValue = alignBorderValue(this.top);\n            y1 = chartArea.top;\n            y2 = alignBorderValue(chartArea.bottom) - axisHalfWidth;\n            ty1 = borderValue + axisHalfWidth;\n            ty2 = this.top + tl;\n        } else if (position === 'left') {\n            borderValue = alignBorderValue(this.right);\n            tx1 = this.right - tl;\n            tx2 = borderValue - axisHalfWidth;\n            x1 = alignBorderValue(chartArea.left) + axisHalfWidth;\n            x2 = chartArea.right;\n        } else if (position === 'right') {\n            borderValue = alignBorderValue(this.left);\n            x1 = chartArea.left;\n            x2 = alignBorderValue(chartArea.right) - axisHalfWidth;\n            tx1 = borderValue + axisHalfWidth;\n            tx2 = this.left + tl;\n        } else if (axis === 'x') {\n            if (position === 'center') {\n                borderValue = alignBorderValue((chartArea.top + chartArea.bottom) / 2 + 0.5);\n            } else if (isObject(position)) {\n                const positionAxisID = Object.keys(position)[0];\n                const value = position[positionAxisID];\n                borderValue = alignBorderValue(this.chart.scales[positionAxisID].getPixelForValue(value));\n            }\n            y1 = chartArea.top;\n            y2 = chartArea.bottom;\n            ty1 = borderValue + axisHalfWidth;\n            ty2 = ty1 + tl;\n        } else if (axis === 'y') {\n            if (position === 'center') {\n                borderValue = alignBorderValue((chartArea.left + chartArea.right) / 2);\n            } else if (isObject(position)) {\n                const positionAxisID = Object.keys(position)[0];\n                const value = position[positionAxisID];\n                borderValue = alignBorderValue(this.chart.scales[positionAxisID].getPixelForValue(value));\n            }\n            tx1 = borderValue - axisHalfWidth;\n            tx2 = tx1 - tl;\n            x1 = chartArea.left;\n            x2 = chartArea.right;\n        }\n        const limit = valueOrDefault(options.ticks.maxTicksLimit, ticksLength);\n        const step = Math.max(1, Math.ceil(ticksLength / limit));\n        for(i = 0; i < ticksLength; i += step){\n            const context = this.getContext(i);\n            const optsAtIndex = grid.setContext(context);\n            const optsAtIndexBorder = border.setContext(context);\n            const lineWidth = optsAtIndex.lineWidth;\n            const lineColor = optsAtIndex.color;\n            const borderDash = optsAtIndexBorder.dash || [];\n            const borderDashOffset = optsAtIndexBorder.dashOffset;\n            const tickWidth = optsAtIndex.tickWidth;\n            const tickColor = optsAtIndex.tickColor;\n            const tickBorderDash = optsAtIndex.tickBorderDash || [];\n            const tickBorderDashOffset = optsAtIndex.tickBorderDashOffset;\n            lineValue = getPixelForGridLine(this, i, offset);\n            if (lineValue === undefined) {\n                continue;\n            }\n            alignedLineValue = _alignPixel(chart, lineValue, lineWidth);\n            if (isHorizontal) {\n                tx1 = tx2 = x1 = x2 = alignedLineValue;\n            } else {\n                ty1 = ty2 = y1 = y2 = alignedLineValue;\n            }\n            items.push({\n                tx1,\n                ty1,\n                tx2,\n                ty2,\n                x1,\n                y1,\n                x2,\n                y2,\n                width: lineWidth,\n                color: lineColor,\n                borderDash,\n                borderDashOffset,\n                tickWidth,\n                tickColor,\n                tickBorderDash,\n                tickBorderDashOffset\n            });\n        }\n        this._ticksLength = ticksLength;\n        this._borderValue = borderValue;\n        return items;\n    }\n _computeLabelItems(chartArea) {\n        const axis = this.axis;\n        const options = this.options;\n        const { position , ticks: optionTicks  } = options;\n        const isHorizontal = this.isHorizontal();\n        const ticks = this.ticks;\n        const { align , crossAlign , padding , mirror  } = optionTicks;\n        const tl = getTickMarkLength(options.grid);\n        const tickAndPadding = tl + padding;\n        const hTickAndPadding = mirror ? -padding : tickAndPadding;\n        const rotation = -toRadians(this.labelRotation);\n        const items = [];\n        let i, ilen, tick, label, x, y, textAlign, pixel, font, lineHeight, lineCount, textOffset;\n        let textBaseline = 'middle';\n        if (position === 'top') {\n            y = this.bottom - hTickAndPadding;\n            textAlign = this._getXAxisLabelAlignment();\n        } else if (position === 'bottom') {\n            y = this.top + hTickAndPadding;\n            textAlign = this._getXAxisLabelAlignment();\n        } else if (position === 'left') {\n            const ret = this._getYAxisLabelAlignment(tl);\n            textAlign = ret.textAlign;\n            x = ret.x;\n        } else if (position === 'right') {\n            const ret = this._getYAxisLabelAlignment(tl);\n            textAlign = ret.textAlign;\n            x = ret.x;\n        } else if (axis === 'x') {\n            if (position === 'center') {\n                y = (chartArea.top + chartArea.bottom) / 2 + tickAndPadding;\n            } else if (isObject(position)) {\n                const positionAxisID = Object.keys(position)[0];\n                const value = position[positionAxisID];\n                y = this.chart.scales[positionAxisID].getPixelForValue(value) + tickAndPadding;\n            }\n            textAlign = this._getXAxisLabelAlignment();\n        } else if (axis === 'y') {\n            if (position === 'center') {\n                x = (chartArea.left + chartArea.right) / 2 - tickAndPadding;\n            } else if (isObject(position)) {\n                const positionAxisID = Object.keys(position)[0];\n                const value = position[positionAxisID];\n                x = this.chart.scales[positionAxisID].getPixelForValue(value);\n            }\n            textAlign = this._getYAxisLabelAlignment(tl).textAlign;\n        }\n        if (axis === 'y') {\n            if (align === 'start') {\n                textBaseline = 'top';\n            } else if (align === 'end') {\n                textBaseline = 'bottom';\n            }\n        }\n        const labelSizes = this._getLabelSizes();\n        for(i = 0, ilen = ticks.length; i < ilen; ++i){\n            tick = ticks[i];\n            label = tick.label;\n            const optsAtIndex = optionTicks.setContext(this.getContext(i));\n            pixel = this.getPixelForTick(i) + optionTicks.labelOffset;\n            font = this._resolveTickFontOptions(i);\n            lineHeight = font.lineHeight;\n            lineCount = isArray(label) ? label.length : 1;\n            const halfCount = lineCount / 2;\n            const color = optsAtIndex.color;\n            const strokeColor = optsAtIndex.textStrokeColor;\n            const strokeWidth = optsAtIndex.textStrokeWidth;\n            let tickTextAlign = textAlign;\n            if (isHorizontal) {\n                x = pixel;\n                if (textAlign === 'inner') {\n                    if (i === ilen - 1) {\n                        tickTextAlign = !this.options.reverse ? 'right' : 'left';\n                    } else if (i === 0) {\n                        tickTextAlign = !this.options.reverse ? 'left' : 'right';\n                    } else {\n                        tickTextAlign = 'center';\n                    }\n                }\n                if (position === 'top') {\n                    if (crossAlign === 'near' || rotation !== 0) {\n                        textOffset = -lineCount * lineHeight + lineHeight / 2;\n                    } else if (crossAlign === 'center') {\n                        textOffset = -labelSizes.highest.height / 2 - halfCount * lineHeight + lineHeight;\n                    } else {\n                        textOffset = -labelSizes.highest.height + lineHeight / 2;\n                    }\n                } else {\n                    if (crossAlign === 'near' || rotation !== 0) {\n                        textOffset = lineHeight / 2;\n                    } else if (crossAlign === 'center') {\n                        textOffset = labelSizes.highest.height / 2 - halfCount * lineHeight;\n                    } else {\n                        textOffset = labelSizes.highest.height - lineCount * lineHeight;\n                    }\n                }\n                if (mirror) {\n                    textOffset *= -1;\n                }\n                if (rotation !== 0 && !optsAtIndex.showLabelBackdrop) {\n                    x += lineHeight / 2 * Math.sin(rotation);\n                }\n            } else {\n                y = pixel;\n                textOffset = (1 - lineCount) * lineHeight / 2;\n            }\n            let backdrop;\n            if (optsAtIndex.showLabelBackdrop) {\n                const labelPadding = toPadding(optsAtIndex.backdropPadding);\n                const height = labelSizes.heights[i];\n                const width = labelSizes.widths[i];\n                let top = textOffset - labelPadding.top;\n                let left = 0 - labelPadding.left;\n                switch(textBaseline){\n                    case 'middle':\n                        top -= height / 2;\n                        break;\n                    case 'bottom':\n                        top -= height;\n                        break;\n                }\n                switch(textAlign){\n                    case 'center':\n                        left -= width / 2;\n                        break;\n                    case 'right':\n                        left -= width;\n                        break;\n                    case 'inner':\n                        if (i === ilen - 1) {\n                            left -= width;\n                        } else if (i > 0) {\n                            left -= width / 2;\n                        }\n                        break;\n                }\n                backdrop = {\n                    left,\n                    top,\n                    width: width + labelPadding.width,\n                    height: height + labelPadding.height,\n                    color: optsAtIndex.backdropColor\n                };\n            }\n            items.push({\n                label,\n                font,\n                textOffset,\n                options: {\n                    rotation,\n                    color,\n                    strokeColor,\n                    strokeWidth,\n                    textAlign: tickTextAlign,\n                    textBaseline,\n                    translation: [\n                        x,\n                        y\n                    ],\n                    backdrop\n                }\n            });\n        }\n        return items;\n    }\n    _getXAxisLabelAlignment() {\n        const { position , ticks  } = this.options;\n        const rotation = -toRadians(this.labelRotation);\n        if (rotation) {\n            return position === 'top' ? 'left' : 'right';\n        }\n        let align = 'center';\n        if (ticks.align === 'start') {\n            align = 'left';\n        } else if (ticks.align === 'end') {\n            align = 'right';\n        } else if (ticks.align === 'inner') {\n            align = 'inner';\n        }\n        return align;\n    }\n    _getYAxisLabelAlignment(tl) {\n        const { position , ticks: { crossAlign , mirror , padding  }  } = this.options;\n        const labelSizes = this._getLabelSizes();\n        const tickAndPadding = tl + padding;\n        const widest = labelSizes.widest.width;\n        let textAlign;\n        let x;\n        if (position === 'left') {\n            if (mirror) {\n                x = this.right + padding;\n                if (crossAlign === 'near') {\n                    textAlign = 'left';\n                } else if (crossAlign === 'center') {\n                    textAlign = 'center';\n                    x += widest / 2;\n                } else {\n                    textAlign = 'right';\n                    x += widest;\n                }\n            } else {\n                x = this.right - tickAndPadding;\n                if (crossAlign === 'near') {\n                    textAlign = 'right';\n                } else if (crossAlign === 'center') {\n                    textAlign = 'center';\n                    x -= widest / 2;\n                } else {\n                    textAlign = 'left';\n                    x = this.left;\n                }\n            }\n        } else if (position === 'right') {\n            if (mirror) {\n                x = this.left + padding;\n                if (crossAlign === 'near') {\n                    textAlign = 'right';\n                } else if (crossAlign === 'center') {\n                    textAlign = 'center';\n                    x -= widest / 2;\n                } else {\n                    textAlign = 'left';\n                    x -= widest;\n                }\n            } else {\n                x = this.left + tickAndPadding;\n                if (crossAlign === 'near') {\n                    textAlign = 'left';\n                } else if (crossAlign === 'center') {\n                    textAlign = 'center';\n                    x += widest / 2;\n                } else {\n                    textAlign = 'right';\n                    x = this.right;\n                }\n            }\n        } else {\n            textAlign = 'right';\n        }\n        return {\n            textAlign,\n            x\n        };\n    }\n _computeLabelArea() {\n        if (this.options.ticks.mirror) {\n            return;\n        }\n        const chart = this.chart;\n        const position = this.options.position;\n        if (position === 'left' || position === 'right') {\n            return {\n                top: 0,\n                left: this.left,\n                bottom: chart.height,\n                right: this.right\n            };\n        }\n        if (position === 'top' || position === 'bottom') {\n            return {\n                top: this.top,\n                left: 0,\n                bottom: this.bottom,\n                right: chart.width\n            };\n        }\n    }\n drawBackground() {\n        const { ctx , options: { backgroundColor  } , left , top , width , height  } = this;\n        if (backgroundColor) {\n            ctx.save();\n            ctx.fillStyle = backgroundColor;\n            ctx.fillRect(left, top, width, height);\n            ctx.restore();\n        }\n    }\n    getLineWidthForValue(value) {\n        const grid = this.options.grid;\n        if (!this._isVisible() || !grid.display) {\n            return 0;\n        }\n        const ticks = this.ticks;\n        const index = ticks.findIndex((t)=>t.value === value);\n        if (index >= 0) {\n            const opts = grid.setContext(this.getContext(index));\n            return opts.lineWidth;\n        }\n        return 0;\n    }\n drawGrid(chartArea) {\n        const grid = this.options.grid;\n        const ctx = this.ctx;\n        const items = this._gridLineItems || (this._gridLineItems = this._computeGridLineItems(chartArea));\n        let i, ilen;\n        const drawLine = (p1, p2, style)=>{\n            if (!style.width || !style.color) {\n                return;\n            }\n            ctx.save();\n            ctx.lineWidth = style.width;\n            ctx.strokeStyle = style.color;\n            ctx.setLineDash(style.borderDash || []);\n            ctx.lineDashOffset = style.borderDashOffset;\n            ctx.beginPath();\n            ctx.moveTo(p1.x, p1.y);\n            ctx.lineTo(p2.x, p2.y);\n            ctx.stroke();\n            ctx.restore();\n        };\n        if (grid.display) {\n            for(i = 0, ilen = items.length; i < ilen; ++i){\n                const item = items[i];\n                if (grid.drawOnChartArea) {\n                    drawLine({\n                        x: item.x1,\n                        y: item.y1\n                    }, {\n                        x: item.x2,\n                        y: item.y2\n                    }, item);\n                }\n                if (grid.drawTicks) {\n                    drawLine({\n                        x: item.tx1,\n                        y: item.ty1\n                    }, {\n                        x: item.tx2,\n                        y: item.ty2\n                    }, {\n                        color: item.tickColor,\n                        width: item.tickWidth,\n                        borderDash: item.tickBorderDash,\n                        borderDashOffset: item.tickBorderDashOffset\n                    });\n                }\n            }\n        }\n    }\n drawBorder() {\n        const { chart , ctx , options: { border , grid  }  } = this;\n        const borderOpts = border.setContext(this.getContext());\n        const axisWidth = border.display ? borderOpts.width : 0;\n        if (!axisWidth) {\n            return;\n        }\n        const lastLineWidth = grid.setContext(this.getContext(0)).lineWidth;\n        const borderValue = this._borderValue;\n        let x1, x2, y1, y2;\n        if (this.isHorizontal()) {\n            x1 = _alignPixel(chart, this.left, axisWidth) - axisWidth / 2;\n            x2 = _alignPixel(chart, this.right, lastLineWidth) + lastLineWidth / 2;\n            y1 = y2 = borderValue;\n        } else {\n            y1 = _alignPixel(chart, this.top, axisWidth) - axisWidth / 2;\n            y2 = _alignPixel(chart, this.bottom, lastLineWidth) + lastLineWidth / 2;\n            x1 = x2 = borderValue;\n        }\n        ctx.save();\n        ctx.lineWidth = borderOpts.width;\n        ctx.strokeStyle = borderOpts.color;\n        ctx.beginPath();\n        ctx.moveTo(x1, y1);\n        ctx.lineTo(x2, y2);\n        ctx.stroke();\n        ctx.restore();\n    }\n drawLabels(chartArea) {\n        const optionTicks = this.options.ticks;\n        if (!optionTicks.display) {\n            return;\n        }\n        const ctx = this.ctx;\n        const area = this._computeLabelArea();\n        if (area) {\n            clipArea(ctx, area);\n        }\n        const items = this.getLabelItems(chartArea);\n        for (const item of items){\n            const renderTextOptions = item.options;\n            const tickFont = item.font;\n            const label = item.label;\n            const y = item.textOffset;\n            renderText(ctx, label, 0, y, tickFont, renderTextOptions);\n        }\n        if (area) {\n            unclipArea(ctx);\n        }\n    }\n drawTitle() {\n        const { ctx , options: { position , title , reverse  }  } = this;\n        if (!title.display) {\n            return;\n        }\n        const font = toFont(title.font);\n        const padding = toPadding(title.padding);\n        const align = title.align;\n        let offset = font.lineHeight / 2;\n        if (position === 'bottom' || position === 'center' || isObject(position)) {\n            offset += padding.bottom;\n            if (isArray(title.text)) {\n                offset += font.lineHeight * (title.text.length - 1);\n            }\n        } else {\n            offset += padding.top;\n        }\n        const { titleX , titleY , maxWidth , rotation  } = titleArgs(this, offset, position, align);\n        renderText(ctx, title.text, 0, 0, font, {\n            color: title.color,\n            maxWidth,\n            rotation,\n            textAlign: titleAlign(align, position, reverse),\n            textBaseline: 'middle',\n            translation: [\n                titleX,\n                titleY\n            ]\n        });\n    }\n    draw(chartArea) {\n        if (!this._isVisible()) {\n            return;\n        }\n        this.drawBackground();\n        this.drawGrid(chartArea);\n        this.drawBorder();\n        this.drawTitle();\n        this.drawLabels(chartArea);\n    }\n _layers() {\n        const opts = this.options;\n        const tz = opts.ticks && opts.ticks.z || 0;\n        const gz = valueOrDefault(opts.grid && opts.grid.z, -1);\n        const bz = valueOrDefault(opts.border && opts.border.z, 0);\n        if (!this._isVisible() || this.draw !== Scale.prototype.draw) {\n            return [\n                {\n                    z: tz,\n                    draw: (chartArea)=>{\n                        this.draw(chartArea);\n                    }\n                }\n            ];\n        }\n        return [\n            {\n                z: gz,\n                draw: (chartArea)=>{\n                    this.drawBackground();\n                    this.drawGrid(chartArea);\n                    this.drawTitle();\n                }\n            },\n            {\n                z: bz,\n                draw: ()=>{\n                    this.drawBorder();\n                }\n            },\n            {\n                z: tz,\n                draw: (chartArea)=>{\n                    this.drawLabels(chartArea);\n                }\n            }\n        ];\n    }\n getMatchingVisibleMetas(type) {\n        const metas = this.chart.getSortedVisibleDatasetMetas();\n        const axisID = this.axis + 'AxisID';\n        const result = [];\n        let i, ilen;\n        for(i = 0, ilen = metas.length; i < ilen; ++i){\n            const meta = metas[i];\n            if (meta[axisID] === this.id && (!type || meta.type === type)) {\n                result.push(meta);\n            }\n        }\n        return result;\n    }\n _resolveTickFontOptions(index) {\n        const opts = this.options.ticks.setContext(this.getContext(index));\n        return toFont(opts.font);\n    }\n _maxDigits() {\n        const fontSize = this._resolveTickFontOptions(0).lineHeight;\n        return (this.isHorizontal() ? this.width : this.height) / fontSize;\n    }\n}\n\nclass TypedRegistry {\n    constructor(type, scope, override){\n        this.type = type;\n        this.scope = scope;\n        this.override = override;\n        this.items = Object.create(null);\n    }\n    isForType(type) {\n        return Object.prototype.isPrototypeOf.call(this.type.prototype, type.prototype);\n    }\n register(item) {\n        const proto = Object.getPrototypeOf(item);\n        let parentScope;\n        if (isIChartComponent(proto)) {\n            parentScope = this.register(proto);\n        }\n        const items = this.items;\n        const id = item.id;\n        const scope = this.scope + '.' + id;\n        if (!id) {\n            throw new Error('class does not have id: ' + item);\n        }\n        if (id in items) {\n            return scope;\n        }\n        items[id] = item;\n        registerDefaults(item, scope, parentScope);\n        if (this.override) {\n            defaults.override(item.id, item.overrides);\n        }\n        return scope;\n    }\n get(id) {\n        return this.items[id];\n    }\n unregister(item) {\n        const items = this.items;\n        const id = item.id;\n        const scope = this.scope;\n        if (id in items) {\n            delete items[id];\n        }\n        if (scope && id in defaults[scope]) {\n            delete defaults[scope][id];\n            if (this.override) {\n                delete overrides[id];\n            }\n        }\n    }\n}\nfunction registerDefaults(item, scope, parentScope) {\n    const itemDefaults = merge(Object.create(null), [\n        parentScope ? defaults.get(parentScope) : {},\n        defaults.get(scope),\n        item.defaults\n    ]);\n    defaults.set(scope, itemDefaults);\n    if (item.defaultRoutes) {\n        routeDefaults(scope, item.defaultRoutes);\n    }\n    if (item.descriptors) {\n        defaults.describe(scope, item.descriptors);\n    }\n}\nfunction routeDefaults(scope, routes) {\n    Object.keys(routes).forEach((property)=>{\n        const propertyParts = property.split('.');\n        const sourceName = propertyParts.pop();\n        const sourceScope = [\n            scope\n        ].concat(propertyParts).join('.');\n        const parts = routes[property].split('.');\n        const targetName = parts.pop();\n        const targetScope = parts.join('.');\n        defaults.route(sourceScope, sourceName, targetScope, targetName);\n    });\n}\nfunction isIChartComponent(proto) {\n    return 'id' in proto && 'defaults' in proto;\n}\n\nclass Registry {\n    constructor(){\n        this.controllers = new TypedRegistry(DatasetController, 'datasets', true);\n        this.elements = new TypedRegistry(Element, 'elements');\n        this.plugins = new TypedRegistry(Object, 'plugins');\n        this.scales = new TypedRegistry(Scale, 'scales');\n        this._typedRegistries = [\n            this.controllers,\n            this.scales,\n            this.elements\n        ];\n    }\n add(...args) {\n        this._each('register', args);\n    }\n    remove(...args) {\n        this._each('unregister', args);\n    }\n addControllers(...args) {\n        this._each('register', args, this.controllers);\n    }\n addElements(...args) {\n        this._each('register', args, this.elements);\n    }\n addPlugins(...args) {\n        this._each('register', args, this.plugins);\n    }\n addScales(...args) {\n        this._each('register', args, this.scales);\n    }\n getController(id) {\n        return this._get(id, this.controllers, 'controller');\n    }\n getElement(id) {\n        return this._get(id, this.elements, 'element');\n    }\n getPlugin(id) {\n        return this._get(id, this.plugins, 'plugin');\n    }\n getScale(id) {\n        return this._get(id, this.scales, 'scale');\n    }\n removeControllers(...args) {\n        this._each('unregister', args, this.controllers);\n    }\n removeElements(...args) {\n        this._each('unregister', args, this.elements);\n    }\n removePlugins(...args) {\n        this._each('unregister', args, this.plugins);\n    }\n removeScales(...args) {\n        this._each('unregister', args, this.scales);\n    }\n _each(method, args, typedRegistry) {\n        [\n            ...args\n        ].forEach((arg)=>{\n            const reg = typedRegistry || this._getRegistryForType(arg);\n            if (typedRegistry || reg.isForType(arg) || reg === this.plugins && arg.id) {\n                this._exec(method, reg, arg);\n            } else {\n                each(arg, (item)=>{\n                    const itemReg = typedRegistry || this._getRegistryForType(item);\n                    this._exec(method, itemReg, item);\n                });\n            }\n        });\n    }\n _exec(method, registry, component) {\n        const camelMethod = _capitalize(method);\n        callback(component['before' + camelMethod], [], component);\n        registry[method](component);\n        callback(component['after' + camelMethod], [], component);\n    }\n _getRegistryForType(type) {\n        for(let i = 0; i < this._typedRegistries.length; i++){\n            const reg = this._typedRegistries[i];\n            if (reg.isForType(type)) {\n                return reg;\n            }\n        }\n        return this.plugins;\n    }\n _get(id, typedRegistry, type) {\n        const item = typedRegistry.get(id);\n        if (item === undefined) {\n            throw new Error('\"' + id + '\" is not a registered ' + type + '.');\n        }\n        return item;\n    }\n}\nvar registry = /* #__PURE__ */ new Registry();\n\nclass PluginService {\n    constructor(){\n        this._init = [];\n    }\n notify(chart, hook, args, filter) {\n        if (hook === 'beforeInit') {\n            this._init = this._createDescriptors(chart, true);\n            this._notify(this._init, chart, 'install');\n        }\n        const descriptors = filter ? this._descriptors(chart).filter(filter) : this._descriptors(chart);\n        const result = this._notify(descriptors, chart, hook, args);\n        if (hook === 'afterDestroy') {\n            this._notify(descriptors, chart, 'stop');\n            this._notify(this._init, chart, 'uninstall');\n        }\n        return result;\n    }\n _notify(descriptors, chart, hook, args) {\n        args = args || {};\n        for (const descriptor of descriptors){\n            const plugin = descriptor.plugin;\n            const method = plugin[hook];\n            const params = [\n                chart,\n                args,\n                descriptor.options\n            ];\n            if (callback(method, params, plugin) === false && args.cancelable) {\n                return false;\n            }\n        }\n        return true;\n    }\n    invalidate() {\n        if (!isNullOrUndef(this._cache)) {\n            this._oldCache = this._cache;\n            this._cache = undefined;\n        }\n    }\n _descriptors(chart) {\n        if (this._cache) {\n            return this._cache;\n        }\n        const descriptors = this._cache = this._createDescriptors(chart);\n        this._notifyStateChanges(chart);\n        return descriptors;\n    }\n    _createDescriptors(chart, all) {\n        const config = chart && chart.config;\n        const options = valueOrDefault(config.options && config.options.plugins, {});\n        const plugins = allPlugins(config);\n        return options === false && !all ? [] : createDescriptors(chart, plugins, options, all);\n    }\n _notifyStateChanges(chart) {\n        const previousDescriptors = this._oldCache || [];\n        const descriptors = this._cache;\n        const diff = (a, b)=>a.filter((x)=>!b.some((y)=>x.plugin.id === y.plugin.id));\n        this._notify(diff(previousDescriptors, descriptors), chart, 'stop');\n        this._notify(diff(descriptors, previousDescriptors), chart, 'start');\n    }\n}\n function allPlugins(config) {\n    const localIds = {};\n    const plugins = [];\n    const keys = Object.keys(registry.plugins.items);\n    for(let i = 0; i < keys.length; i++){\n        plugins.push(registry.getPlugin(keys[i]));\n    }\n    const local = config.plugins || [];\n    for(let i = 0; i < local.length; i++){\n        const plugin = local[i];\n        if (plugins.indexOf(plugin) === -1) {\n            plugins.push(plugin);\n            localIds[plugin.id] = true;\n        }\n    }\n    return {\n        plugins,\n        localIds\n    };\n}\nfunction getOpts(options, all) {\n    if (!all && options === false) {\n        return null;\n    }\n    if (options === true) {\n        return {};\n    }\n    return options;\n}\nfunction createDescriptors(chart, { plugins , localIds  }, options, all) {\n    const result = [];\n    const context = chart.getContext();\n    for (const plugin of plugins){\n        const id = plugin.id;\n        const opts = getOpts(options[id], all);\n        if (opts === null) {\n            continue;\n        }\n        result.push({\n            plugin,\n            options: pluginOpts(chart.config, {\n                plugin,\n                local: localIds[id]\n            }, opts, context)\n        });\n    }\n    return result;\n}\nfunction pluginOpts(config, { plugin , local  }, opts, context) {\n    const keys = config.pluginScopeKeys(plugin);\n    const scopes = config.getOptionScopes(opts, keys);\n    if (local && plugin.defaults) {\n        scopes.push(plugin.defaults);\n    }\n    return config.createResolver(scopes, context, [\n        ''\n    ], {\n        scriptable: false,\n        indexable: false,\n        allKeys: true\n    });\n}\n\nfunction getIndexAxis(type, options) {\n    const datasetDefaults = defaults.datasets[type] || {};\n    const datasetOptions = (options.datasets || {})[type] || {};\n    return datasetOptions.indexAxis || options.indexAxis || datasetDefaults.indexAxis || 'x';\n}\nfunction getAxisFromDefaultScaleID(id, indexAxis) {\n    let axis = id;\n    if (id === '_index_') {\n        axis = indexAxis;\n    } else if (id === '_value_') {\n        axis = indexAxis === 'x' ? 'y' : 'x';\n    }\n    return axis;\n}\nfunction getDefaultScaleIDFromAxis(axis, indexAxis) {\n    return axis === indexAxis ? '_index_' : '_value_';\n}\nfunction idMatchesAxis(id) {\n    if (id === 'x' || id === 'y' || id === 'r') {\n        return id;\n    }\n}\nfunction axisFromPosition(position) {\n    if (position === 'top' || position === 'bottom') {\n        return 'x';\n    }\n    if (position === 'left' || position === 'right') {\n        return 'y';\n    }\n}\nfunction determineAxis(id, ...scaleOptions) {\n    if (idMatchesAxis(id)) {\n        return id;\n    }\n    for (const opts of scaleOptions){\n        const axis = opts.axis || axisFromPosition(opts.position) || id.length > 1 && idMatchesAxis(id[0].toLowerCase());\n        if (axis) {\n            return axis;\n        }\n    }\n    throw new Error(`Cannot determine type of '${id}' axis. Please provide 'axis' or 'position' option.`);\n}\nfunction getAxisFromDataset(id, axis, dataset) {\n    if (dataset[axis + 'AxisID'] === id) {\n        return {\n            axis\n        };\n    }\n}\nfunction retrieveAxisFromDatasets(id, config) {\n    if (config.data && config.data.datasets) {\n        const boundDs = config.data.datasets.filter((d)=>d.xAxisID === id || d.yAxisID === id);\n        if (boundDs.length) {\n            return getAxisFromDataset(id, 'x', boundDs[0]) || getAxisFromDataset(id, 'y', boundDs[0]);\n        }\n    }\n    return {};\n}\nfunction mergeScaleConfig(config, options) {\n    const chartDefaults = overrides[config.type] || {\n        scales: {}\n    };\n    const configScales = options.scales || {};\n    const chartIndexAxis = getIndexAxis(config.type, options);\n    const scales = Object.create(null);\n    Object.keys(configScales).forEach((id)=>{\n        const scaleConf = configScales[id];\n        if (!isObject(scaleConf)) {\n            return console.error(`Invalid scale configuration for scale: ${id}`);\n        }\n        if (scaleConf._proxy) {\n            return console.warn(`Ignoring resolver passed as options for scale: ${id}`);\n        }\n        const axis = determineAxis(id, scaleConf, retrieveAxisFromDatasets(id, config), defaults.scales[scaleConf.type]);\n        const defaultId = getDefaultScaleIDFromAxis(axis, chartIndexAxis);\n        const defaultScaleOptions = chartDefaults.scales || {};\n        scales[id] = mergeIf(Object.create(null), [\n            {\n                axis\n            },\n            scaleConf,\n            defaultScaleOptions[axis],\n            defaultScaleOptions[defaultId]\n        ]);\n    });\n    config.data.datasets.forEach((dataset)=>{\n        const type = dataset.type || config.type;\n        const indexAxis = dataset.indexAxis || getIndexAxis(type, options);\n        const datasetDefaults = overrides[type] || {};\n        const defaultScaleOptions = datasetDefaults.scales || {};\n        Object.keys(defaultScaleOptions).forEach((defaultID)=>{\n            const axis = getAxisFromDefaultScaleID(defaultID, indexAxis);\n            const id = dataset[axis + 'AxisID'] || axis;\n            scales[id] = scales[id] || Object.create(null);\n            mergeIf(scales[id], [\n                {\n                    axis\n                },\n                configScales[id],\n                defaultScaleOptions[defaultID]\n            ]);\n        });\n    });\n    Object.keys(scales).forEach((key)=>{\n        const scale = scales[key];\n        mergeIf(scale, [\n            defaults.scales[scale.type],\n            defaults.scale\n        ]);\n    });\n    return scales;\n}\nfunction initOptions(config) {\n    const options = config.options || (config.options = {});\n    options.plugins = valueOrDefault(options.plugins, {});\n    options.scales = mergeScaleConfig(config, options);\n}\nfunction initData(data) {\n    data = data || {};\n    data.datasets = data.datasets || [];\n    data.labels = data.labels || [];\n    return data;\n}\nfunction initConfig(config) {\n    config = config || {};\n    config.data = initData(config.data);\n    initOptions(config);\n    return config;\n}\nconst keyCache = new Map();\nconst keysCached = new Set();\nfunction cachedKeys(cacheKey, generate) {\n    let keys = keyCache.get(cacheKey);\n    if (!keys) {\n        keys = generate();\n        keyCache.set(cacheKey, keys);\n        keysCached.add(keys);\n    }\n    return keys;\n}\nconst addIfFound = (set, obj, key)=>{\n    const opts = resolveObjectKey(obj, key);\n    if (opts !== undefined) {\n        set.add(opts);\n    }\n};\nclass Config {\n    constructor(config){\n        this._config = initConfig(config);\n        this._scopeCache = new Map();\n        this._resolverCache = new Map();\n    }\n    get platform() {\n        return this._config.platform;\n    }\n    get type() {\n        return this._config.type;\n    }\n    set type(type) {\n        this._config.type = type;\n    }\n    get data() {\n        return this._config.data;\n    }\n    set data(data) {\n        this._config.data = initData(data);\n    }\n    get options() {\n        return this._config.options;\n    }\n    set options(options) {\n        this._config.options = options;\n    }\n    get plugins() {\n        return this._config.plugins;\n    }\n    update() {\n        const config = this._config;\n        this.clearCache();\n        initOptions(config);\n    }\n    clearCache() {\n        this._scopeCache.clear();\n        this._resolverCache.clear();\n    }\n datasetScopeKeys(datasetType) {\n        return cachedKeys(datasetType, ()=>[\n                [\n                    `datasets.${datasetType}`,\n                    ''\n                ]\n            ]);\n    }\n datasetAnimationScopeKeys(datasetType, transition) {\n        return cachedKeys(`${datasetType}.transition.${transition}`, ()=>[\n                [\n                    `datasets.${datasetType}.transitions.${transition}`,\n                    `transitions.${transition}`\n                ],\n                [\n                    `datasets.${datasetType}`,\n                    ''\n                ]\n            ]);\n    }\n datasetElementScopeKeys(datasetType, elementType) {\n        return cachedKeys(`${datasetType}-${elementType}`, ()=>[\n                [\n                    `datasets.${datasetType}.elements.${elementType}`,\n                    `datasets.${datasetType}`,\n                    `elements.${elementType}`,\n                    ''\n                ]\n            ]);\n    }\n pluginScopeKeys(plugin) {\n        const id = plugin.id;\n        const type = this.type;\n        return cachedKeys(`${type}-plugin-${id}`, ()=>[\n                [\n                    `plugins.${id}`,\n                    ...plugin.additionalOptionScopes || []\n                ]\n            ]);\n    }\n _cachedScopes(mainScope, resetCache) {\n        const _scopeCache = this._scopeCache;\n        let cache = _scopeCache.get(mainScope);\n        if (!cache || resetCache) {\n            cache = new Map();\n            _scopeCache.set(mainScope, cache);\n        }\n        return cache;\n    }\n getOptionScopes(mainScope, keyLists, resetCache) {\n        const { options , type  } = this;\n        const cache = this._cachedScopes(mainScope, resetCache);\n        const cached = cache.get(keyLists);\n        if (cached) {\n            return cached;\n        }\n        const scopes = new Set();\n        keyLists.forEach((keys)=>{\n            if (mainScope) {\n                scopes.add(mainScope);\n                keys.forEach((key)=>addIfFound(scopes, mainScope, key));\n            }\n            keys.forEach((key)=>addIfFound(scopes, options, key));\n            keys.forEach((key)=>addIfFound(scopes, overrides[type] || {}, key));\n            keys.forEach((key)=>addIfFound(scopes, defaults, key));\n            keys.forEach((key)=>addIfFound(scopes, descriptors, key));\n        });\n        const array = Array.from(scopes);\n        if (array.length === 0) {\n            array.push(Object.create(null));\n        }\n        if (keysCached.has(keyLists)) {\n            cache.set(keyLists, array);\n        }\n        return array;\n    }\n chartOptionScopes() {\n        const { options , type  } = this;\n        return [\n            options,\n            overrides[type] || {},\n            defaults.datasets[type] || {},\n            {\n                type\n            },\n            defaults,\n            descriptors\n        ];\n    }\n resolveNamedOptions(scopes, names, context, prefixes = [\n        ''\n    ]) {\n        const result = {\n            $shared: true\n        };\n        const { resolver , subPrefixes  } = getResolver(this._resolverCache, scopes, prefixes);\n        let options = resolver;\n        if (needContext(resolver, names)) {\n            result.$shared = false;\n            context = isFunction(context) ? context() : context;\n            const subResolver = this.createResolver(scopes, context, subPrefixes);\n            options = _attachContext(resolver, context, subResolver);\n        }\n        for (const prop of names){\n            result[prop] = options[prop];\n        }\n        return result;\n    }\n createResolver(scopes, context, prefixes = [\n        ''\n    ], descriptorDefaults) {\n        const { resolver  } = getResolver(this._resolverCache, scopes, prefixes);\n        return isObject(context) ? _attachContext(resolver, context, undefined, descriptorDefaults) : resolver;\n    }\n}\nfunction getResolver(resolverCache, scopes, prefixes) {\n    let cache = resolverCache.get(scopes);\n    if (!cache) {\n        cache = new Map();\n        resolverCache.set(scopes, cache);\n    }\n    const cacheKey = prefixes.join();\n    let cached = cache.get(cacheKey);\n    if (!cached) {\n        const resolver = _createResolver(scopes, prefixes);\n        cached = {\n            resolver,\n            subPrefixes: prefixes.filter((p)=>!p.toLowerCase().includes('hover'))\n        };\n        cache.set(cacheKey, cached);\n    }\n    return cached;\n}\nconst hasFunction = (value)=>isObject(value) && Object.getOwnPropertyNames(value).some((key)=>isFunction(value[key]));\nfunction needContext(proxy, names) {\n    const { isScriptable , isIndexable  } = _descriptors(proxy);\n    for (const prop of names){\n        const scriptable = isScriptable(prop);\n        const indexable = isIndexable(prop);\n        const value = (indexable || scriptable) && proxy[prop];\n        if (scriptable && (isFunction(value) || hasFunction(value)) || indexable && isArray(value)) {\n            return true;\n        }\n    }\n    return false;\n}\n\nvar version = \"4.4.5\";\n\nconst KNOWN_POSITIONS = [\n    'top',\n    'bottom',\n    'left',\n    'right',\n    'chartArea'\n];\nfunction positionIsHorizontal(position, axis) {\n    return position === 'top' || position === 'bottom' || KNOWN_POSITIONS.indexOf(position) === -1 && axis === 'x';\n}\nfunction compare2Level(l1, l2) {\n    return function(a, b) {\n        return a[l1] === b[l1] ? a[l2] - b[l2] : a[l1] - b[l1];\n    };\n}\nfunction onAnimationsComplete(context) {\n    const chart = context.chart;\n    const animationOptions = chart.options.animation;\n    chart.notifyPlugins('afterRender');\n    callback(animationOptions && animationOptions.onComplete, [\n        context\n    ], chart);\n}\nfunction onAnimationProgress(context) {\n    const chart = context.chart;\n    const animationOptions = chart.options.animation;\n    callback(animationOptions && animationOptions.onProgress, [\n        context\n    ], chart);\n}\n function getCanvas(item) {\n    if (_isDomSupported() && typeof item === 'string') {\n        item = document.getElementById(item);\n    } else if (item && item.length) {\n        item = item[0];\n    }\n    if (item && item.canvas) {\n        item = item.canvas;\n    }\n    return item;\n}\nconst instances = {};\nconst getChart = (key)=>{\n    const canvas = getCanvas(key);\n    return Object.values(instances).filter((c)=>c.canvas === canvas).pop();\n};\nfunction moveNumericKeys(obj, start, move) {\n    const keys = Object.keys(obj);\n    for (const key of keys){\n        const intKey = +key;\n        if (intKey >= start) {\n            const value = obj[key];\n            delete obj[key];\n            if (move > 0 || intKey > start) {\n                obj[intKey + move] = value;\n            }\n        }\n    }\n}\n function determineLastEvent(e, lastEvent, inChartArea, isClick) {\n    if (!inChartArea || e.type === 'mouseout') {\n        return null;\n    }\n    if (isClick) {\n        return lastEvent;\n    }\n    return e;\n}\nfunction getSizeForArea(scale, chartArea, field) {\n    return scale.options.clip ? scale[field] : chartArea[field];\n}\nfunction getDatasetArea(meta, chartArea) {\n    const { xScale , yScale  } = meta;\n    if (xScale && yScale) {\n        return {\n            left: getSizeForArea(xScale, chartArea, 'left'),\n            right: getSizeForArea(xScale, chartArea, 'right'),\n            top: getSizeForArea(yScale, chartArea, 'top'),\n            bottom: getSizeForArea(yScale, chartArea, 'bottom')\n        };\n    }\n    return chartArea;\n}\nclass Chart {\n    static defaults = defaults;\n    static instances = instances;\n    static overrides = overrides;\n    static registry = registry;\n    static version = version;\n    static getChart = getChart;\n    static register(...items) {\n        registry.add(...items);\n        invalidatePlugins();\n    }\n    static unregister(...items) {\n        registry.remove(...items);\n        invalidatePlugins();\n    }\n    constructor(item, userConfig){\n        const config = this.config = new Config(userConfig);\n        const initialCanvas = getCanvas(item);\n        const existingChart = getChart(initialCanvas);\n        if (existingChart) {\n            throw new Error('Canvas is already in use. Chart with ID \\'' + existingChart.id + '\\'' + ' must be destroyed before the canvas with ID \\'' + existingChart.canvas.id + '\\' can be reused.');\n        }\n        const options = config.createResolver(config.chartOptionScopes(), this.getContext());\n        this.platform = new (config.platform || _detectPlatform(initialCanvas))();\n        this.platform.updateConfig(config);\n        const context = this.platform.acquireContext(initialCanvas, options.aspectRatio);\n        const canvas = context && context.canvas;\n        const height = canvas && canvas.height;\n        const width = canvas && canvas.width;\n        this.id = uid();\n        this.ctx = context;\n        this.canvas = canvas;\n        this.width = width;\n        this.height = height;\n        this._options = options;\n        this._aspectRatio = this.aspectRatio;\n        this._layers = [];\n        this._metasets = [];\n        this._stacks = undefined;\n        this.boxes = [];\n        this.currentDevicePixelRatio = undefined;\n        this.chartArea = undefined;\n        this._active = [];\n        this._lastEvent = undefined;\n        this._listeners = {};\n         this._responsiveListeners = undefined;\n        this._sortedMetasets = [];\n        this.scales = {};\n        this._plugins = new PluginService();\n        this.$proxies = {};\n        this._hiddenIndices = {};\n        this.attached = false;\n        this._animationsDisabled = undefined;\n        this.$context = undefined;\n        this._doResize = debounce((mode)=>this.update(mode), options.resizeDelay || 0);\n        this._dataChanges = [];\n        instances[this.id] = this;\n        if (!context || !canvas) {\n            console.error(\"Failed to create chart: can't acquire context from the given item\");\n            return;\n        }\n        animator.listen(this, 'complete', onAnimationsComplete);\n        animator.listen(this, 'progress', onAnimationProgress);\n        this._initialize();\n        if (this.attached) {\n            this.update();\n        }\n    }\n    get aspectRatio() {\n        const { options: { aspectRatio , maintainAspectRatio  } , width , height , _aspectRatio  } = this;\n        if (!isNullOrUndef(aspectRatio)) {\n            return aspectRatio;\n        }\n        if (maintainAspectRatio && _aspectRatio) {\n            return _aspectRatio;\n        }\n        return height ? width / height : null;\n    }\n    get data() {\n        return this.config.data;\n    }\n    set data(data) {\n        this.config.data = data;\n    }\n    get options() {\n        return this._options;\n    }\n    set options(options) {\n        this.config.options = options;\n    }\n    get registry() {\n        return registry;\n    }\n _initialize() {\n        this.notifyPlugins('beforeInit');\n        if (this.options.responsive) {\n            this.resize();\n        } else {\n            retinaScale(this, this.options.devicePixelRatio);\n        }\n        this.bindEvents();\n        this.notifyPlugins('afterInit');\n        return this;\n    }\n    clear() {\n        clearCanvas(this.canvas, this.ctx);\n        return this;\n    }\n    stop() {\n        animator.stop(this);\n        return this;\n    }\n resize(width, height) {\n        if (!animator.running(this)) {\n            this._resize(width, height);\n        } else {\n            this._resizeBeforeDraw = {\n                width,\n                height\n            };\n        }\n    }\n    _resize(width, height) {\n        const options = this.options;\n        const canvas = this.canvas;\n        const aspectRatio = options.maintainAspectRatio && this.aspectRatio;\n        const newSize = this.platform.getMaximumSize(canvas, width, height, aspectRatio);\n        const newRatio = options.devicePixelRatio || this.platform.getDevicePixelRatio();\n        const mode = this.width ? 'resize' : 'attach';\n        this.width = newSize.width;\n        this.height = newSize.height;\n        this._aspectRatio = this.aspectRatio;\n        if (!retinaScale(this, newRatio, true)) {\n            return;\n        }\n        this.notifyPlugins('resize', {\n            size: newSize\n        });\n        callback(options.onResize, [\n            this,\n            newSize\n        ], this);\n        if (this.attached) {\n            if (this._doResize(mode)) {\n                this.render();\n            }\n        }\n    }\n    ensureScalesHaveIDs() {\n        const options = this.options;\n        const scalesOptions = options.scales || {};\n        each(scalesOptions, (axisOptions, axisID)=>{\n            axisOptions.id = axisID;\n        });\n    }\n buildOrUpdateScales() {\n        const options = this.options;\n        const scaleOpts = options.scales;\n        const scales = this.scales;\n        const updated = Object.keys(scales).reduce((obj, id)=>{\n            obj[id] = false;\n            return obj;\n        }, {});\n        let items = [];\n        if (scaleOpts) {\n            items = items.concat(Object.keys(scaleOpts).map((id)=>{\n                const scaleOptions = scaleOpts[id];\n                const axis = determineAxis(id, scaleOptions);\n                const isRadial = axis === 'r';\n                const isHorizontal = axis === 'x';\n                return {\n                    options: scaleOptions,\n                    dposition: isRadial ? 'chartArea' : isHorizontal ? 'bottom' : 'left',\n                    dtype: isRadial ? 'radialLinear' : isHorizontal ? 'category' : 'linear'\n                };\n            }));\n        }\n        each(items, (item)=>{\n            const scaleOptions = item.options;\n            const id = scaleOptions.id;\n            const axis = determineAxis(id, scaleOptions);\n            const scaleType = valueOrDefault(scaleOptions.type, item.dtype);\n            if (scaleOptions.position === undefined || positionIsHorizontal(scaleOptions.position, axis) !== positionIsHorizontal(item.dposition)) {\n                scaleOptions.position = item.dposition;\n            }\n            updated[id] = true;\n            let scale = null;\n            if (id in scales && scales[id].type === scaleType) {\n                scale = scales[id];\n            } else {\n                const scaleClass = registry.getScale(scaleType);\n                scale = new scaleClass({\n                    id,\n                    type: scaleType,\n                    ctx: this.ctx,\n                    chart: this\n                });\n                scales[scale.id] = scale;\n            }\n            scale.init(scaleOptions, options);\n        });\n        each(updated, (hasUpdated, id)=>{\n            if (!hasUpdated) {\n                delete scales[id];\n            }\n        });\n        each(scales, (scale)=>{\n            layouts.configure(this, scale, scale.options);\n            layouts.addBox(this, scale);\n        });\n    }\n _updateMetasets() {\n        const metasets = this._metasets;\n        const numData = this.data.datasets.length;\n        const numMeta = metasets.length;\n        metasets.sort((a, b)=>a.index - b.index);\n        if (numMeta > numData) {\n            for(let i = numData; i < numMeta; ++i){\n                this._destroyDatasetMeta(i);\n            }\n            metasets.splice(numData, numMeta - numData);\n        }\n        this._sortedMetasets = metasets.slice(0).sort(compare2Level('order', 'index'));\n    }\n _removeUnreferencedMetasets() {\n        const { _metasets: metasets , data: { datasets  }  } = this;\n        if (metasets.length > datasets.length) {\n            delete this._stacks;\n        }\n        metasets.forEach((meta, index)=>{\n            if (datasets.filter((x)=>x === meta._dataset).length === 0) {\n                this._destroyDatasetMeta(index);\n            }\n        });\n    }\n    buildOrUpdateControllers() {\n        const newControllers = [];\n        const datasets = this.data.datasets;\n        let i, ilen;\n        this._removeUnreferencedMetasets();\n        for(i = 0, ilen = datasets.length; i < ilen; i++){\n            const dataset = datasets[i];\n            let meta = this.getDatasetMeta(i);\n            const type = dataset.type || this.config.type;\n            if (meta.type && meta.type !== type) {\n                this._destroyDatasetMeta(i);\n                meta = this.getDatasetMeta(i);\n            }\n            meta.type = type;\n            meta.indexAxis = dataset.indexAxis || getIndexAxis(type, this.options);\n            meta.order = dataset.order || 0;\n            meta.index = i;\n            meta.label = '' + dataset.label;\n            meta.visible = this.isDatasetVisible(i);\n            if (meta.controller) {\n                meta.controller.updateIndex(i);\n                meta.controller.linkScales();\n            } else {\n                const ControllerClass = registry.getController(type);\n                const { datasetElementType , dataElementType  } = defaults.datasets[type];\n                Object.assign(ControllerClass, {\n                    dataElementType: registry.getElement(dataElementType),\n                    datasetElementType: datasetElementType && registry.getElement(datasetElementType)\n                });\n                meta.controller = new ControllerClass(this, i);\n                newControllers.push(meta.controller);\n            }\n        }\n        this._updateMetasets();\n        return newControllers;\n    }\n _resetElements() {\n        each(this.data.datasets, (dataset, datasetIndex)=>{\n            this.getDatasetMeta(datasetIndex).controller.reset();\n        }, this);\n    }\n reset() {\n        this._resetElements();\n        this.notifyPlugins('reset');\n    }\n    update(mode) {\n        const config = this.config;\n        config.update();\n        const options = this._options = config.createResolver(config.chartOptionScopes(), this.getContext());\n        const animsDisabled = this._animationsDisabled = !options.animation;\n        this._updateScales();\n        this._checkEventBindings();\n        this._updateHiddenIndices();\n        this._plugins.invalidate();\n        if (this.notifyPlugins('beforeUpdate', {\n            mode,\n            cancelable: true\n        }) === false) {\n            return;\n        }\n        const newControllers = this.buildOrUpdateControllers();\n        this.notifyPlugins('beforeElementsUpdate');\n        let minPadding = 0;\n        for(let i = 0, ilen = this.data.datasets.length; i < ilen; i++){\n            const { controller  } = this.getDatasetMeta(i);\n            const reset = !animsDisabled && newControllers.indexOf(controller) === -1;\n            controller.buildOrUpdateElements(reset);\n            minPadding = Math.max(+controller.getMaxOverflow(), minPadding);\n        }\n        minPadding = this._minPadding = options.layout.autoPadding ? minPadding : 0;\n        this._updateLayout(minPadding);\n        if (!animsDisabled) {\n            each(newControllers, (controller)=>{\n                controller.reset();\n            });\n        }\n        this._updateDatasets(mode);\n        this.notifyPlugins('afterUpdate', {\n            mode\n        });\n        this._layers.sort(compare2Level('z', '_idx'));\n        const { _active , _lastEvent  } = this;\n        if (_lastEvent) {\n            this._eventHandler(_lastEvent, true);\n        } else if (_active.length) {\n            this._updateHoverStyles(_active, _active, true);\n        }\n        this.render();\n    }\n _updateScales() {\n        each(this.scales, (scale)=>{\n            layouts.removeBox(this, scale);\n        });\n        this.ensureScalesHaveIDs();\n        this.buildOrUpdateScales();\n    }\n _checkEventBindings() {\n        const options = this.options;\n        const existingEvents = new Set(Object.keys(this._listeners));\n        const newEvents = new Set(options.events);\n        if (!setsEqual(existingEvents, newEvents) || !!this._responsiveListeners !== options.responsive) {\n            this.unbindEvents();\n            this.bindEvents();\n        }\n    }\n _updateHiddenIndices() {\n        const { _hiddenIndices  } = this;\n        const changes = this._getUniformDataChanges() || [];\n        for (const { method , start , count  } of changes){\n            const move = method === '_removeElements' ? -count : count;\n            moveNumericKeys(_hiddenIndices, start, move);\n        }\n    }\n _getUniformDataChanges() {\n        const _dataChanges = this._dataChanges;\n        if (!_dataChanges || !_dataChanges.length) {\n            return;\n        }\n        this._dataChanges = [];\n        const datasetCount = this.data.datasets.length;\n        const makeSet = (idx)=>new Set(_dataChanges.filter((c)=>c[0] === idx).map((c, i)=>i + ',' + c.splice(1).join(',')));\n        const changeSet = makeSet(0);\n        for(let i = 1; i < datasetCount; i++){\n            if (!setsEqual(changeSet, makeSet(i))) {\n                return;\n            }\n        }\n        return Array.from(changeSet).map((c)=>c.split(',')).map((a)=>({\n                method: a[1],\n                start: +a[2],\n                count: +a[3]\n            }));\n    }\n _updateLayout(minPadding) {\n        if (this.notifyPlugins('beforeLayout', {\n            cancelable: true\n        }) === false) {\n            return;\n        }\n        layouts.update(this, this.width, this.height, minPadding);\n        const area = this.chartArea;\n        const noArea = area.width <= 0 || area.height <= 0;\n        this._layers = [];\n        each(this.boxes, (box)=>{\n            if (noArea && box.position === 'chartArea') {\n                return;\n            }\n            if (box.configure) {\n                box.configure();\n            }\n            this._layers.push(...box._layers());\n        }, this);\n        this._layers.forEach((item, index)=>{\n            item._idx = index;\n        });\n        this.notifyPlugins('afterLayout');\n    }\n _updateDatasets(mode) {\n        if (this.notifyPlugins('beforeDatasetsUpdate', {\n            mode,\n            cancelable: true\n        }) === false) {\n            return;\n        }\n        for(let i = 0, ilen = this.data.datasets.length; i < ilen; ++i){\n            this.getDatasetMeta(i).controller.configure();\n        }\n        for(let i = 0, ilen = this.data.datasets.length; i < ilen; ++i){\n            this._updateDataset(i, isFunction(mode) ? mode({\n                datasetIndex: i\n            }) : mode);\n        }\n        this.notifyPlugins('afterDatasetsUpdate', {\n            mode\n        });\n    }\n _updateDataset(index, mode) {\n        const meta = this.getDatasetMeta(index);\n        const args = {\n            meta,\n            index,\n            mode,\n            cancelable: true\n        };\n        if (this.notifyPlugins('beforeDatasetUpdate', args) === false) {\n            return;\n        }\n        meta.controller._update(mode);\n        args.cancelable = false;\n        this.notifyPlugins('afterDatasetUpdate', args);\n    }\n    render() {\n        if (this.notifyPlugins('beforeRender', {\n            cancelable: true\n        }) === false) {\n            return;\n        }\n        if (animator.has(this)) {\n            if (this.attached && !animator.running(this)) {\n                animator.start(this);\n            }\n        } else {\n            this.draw();\n            onAnimationsComplete({\n                chart: this\n            });\n        }\n    }\n    draw() {\n        let i;\n        if (this._resizeBeforeDraw) {\n            const { width , height  } = this._resizeBeforeDraw;\n            this._resizeBeforeDraw = null;\n            this._resize(width, height);\n        }\n        this.clear();\n        if (this.width <= 0 || this.height <= 0) {\n            return;\n        }\n        if (this.notifyPlugins('beforeDraw', {\n            cancelable: true\n        }) === false) {\n            return;\n        }\n        const layers = this._layers;\n        for(i = 0; i < layers.length && layers[i].z <= 0; ++i){\n            layers[i].draw(this.chartArea);\n        }\n        this._drawDatasets();\n        for(; i < layers.length; ++i){\n            layers[i].draw(this.chartArea);\n        }\n        this.notifyPlugins('afterDraw');\n    }\n _getSortedDatasetMetas(filterVisible) {\n        const metasets = this._sortedMetasets;\n        const result = [];\n        let i, ilen;\n        for(i = 0, ilen = metasets.length; i < ilen; ++i){\n            const meta = metasets[i];\n            if (!filterVisible || meta.visible) {\n                result.push(meta);\n            }\n        }\n        return result;\n    }\n getSortedVisibleDatasetMetas() {\n        return this._getSortedDatasetMetas(true);\n    }\n _drawDatasets() {\n        if (this.notifyPlugins('beforeDatasetsDraw', {\n            cancelable: true\n        }) === false) {\n            return;\n        }\n        const metasets = this.getSortedVisibleDatasetMetas();\n        for(let i = metasets.length - 1; i >= 0; --i){\n            this._drawDataset(metasets[i]);\n        }\n        this.notifyPlugins('afterDatasetsDraw');\n    }\n _drawDataset(meta) {\n        const ctx = this.ctx;\n        const clip = meta._clip;\n        const useClip = !clip.disabled;\n        const area = getDatasetArea(meta, this.chartArea);\n        const args = {\n            meta,\n            index: meta.index,\n            cancelable: true\n        };\n        if (this.notifyPlugins('beforeDatasetDraw', args) === false) {\n            return;\n        }\n        if (useClip) {\n            clipArea(ctx, {\n                left: clip.left === false ? 0 : area.left - clip.left,\n                right: clip.right === false ? this.width : area.right + clip.right,\n                top: clip.top === false ? 0 : area.top - clip.top,\n                bottom: clip.bottom === false ? this.height : area.bottom + clip.bottom\n            });\n        }\n        meta.controller.draw();\n        if (useClip) {\n            unclipArea(ctx);\n        }\n        args.cancelable = false;\n        this.notifyPlugins('afterDatasetDraw', args);\n    }\n isPointInArea(point) {\n        return _isPointInArea(point, this.chartArea, this._minPadding);\n    }\n    getElementsAtEventForMode(e, mode, options, useFinalPosition) {\n        const method = Interaction.modes[mode];\n        if (typeof method === 'function') {\n            return method(this, e, options, useFinalPosition);\n        }\n        return [];\n    }\n    getDatasetMeta(datasetIndex) {\n        const dataset = this.data.datasets[datasetIndex];\n        const metasets = this._metasets;\n        let meta = metasets.filter((x)=>x && x._dataset === dataset).pop();\n        if (!meta) {\n            meta = {\n                type: null,\n                data: [],\n                dataset: null,\n                controller: null,\n                hidden: null,\n                xAxisID: null,\n                yAxisID: null,\n                order: dataset && dataset.order || 0,\n                index: datasetIndex,\n                _dataset: dataset,\n                _parsed: [],\n                _sorted: false\n            };\n            metasets.push(meta);\n        }\n        return meta;\n    }\n    getContext() {\n        return this.$context || (this.$context = createContext(null, {\n            chart: this,\n            type: 'chart'\n        }));\n    }\n    getVisibleDatasetCount() {\n        return this.getSortedVisibleDatasetMetas().length;\n    }\n    isDatasetVisible(datasetIndex) {\n        const dataset = this.data.datasets[datasetIndex];\n        if (!dataset) {\n            return false;\n        }\n        const meta = this.getDatasetMeta(datasetIndex);\n        return typeof meta.hidden === 'boolean' ? !meta.hidden : !dataset.hidden;\n    }\n    setDatasetVisibility(datasetIndex, visible) {\n        const meta = this.getDatasetMeta(datasetIndex);\n        meta.hidden = !visible;\n    }\n    toggleDataVisibility(index) {\n        this._hiddenIndices[index] = !this._hiddenIndices[index];\n    }\n    getDataVisibility(index) {\n        return !this._hiddenIndices[index];\n    }\n _updateVisibility(datasetIndex, dataIndex, visible) {\n        const mode = visible ? 'show' : 'hide';\n        const meta = this.getDatasetMeta(datasetIndex);\n        const anims = meta.controller._resolveAnimations(undefined, mode);\n        if (defined(dataIndex)) {\n            meta.data[dataIndex].hidden = !visible;\n            this.update();\n        } else {\n            this.setDatasetVisibility(datasetIndex, visible);\n            anims.update(meta, {\n                visible\n            });\n            this.update((ctx)=>ctx.datasetIndex === datasetIndex ? mode : undefined);\n        }\n    }\n    hide(datasetIndex, dataIndex) {\n        this._updateVisibility(datasetIndex, dataIndex, false);\n    }\n    show(datasetIndex, dataIndex) {\n        this._updateVisibility(datasetIndex, dataIndex, true);\n    }\n _destroyDatasetMeta(datasetIndex) {\n        const meta = this._metasets[datasetIndex];\n        if (meta && meta.controller) {\n            meta.controller._destroy();\n        }\n        delete this._metasets[datasetIndex];\n    }\n    _stop() {\n        let i, ilen;\n        this.stop();\n        animator.remove(this);\n        for(i = 0, ilen = this.data.datasets.length; i < ilen; ++i){\n            this._destroyDatasetMeta(i);\n        }\n    }\n    destroy() {\n        this.notifyPlugins('beforeDestroy');\n        const { canvas , ctx  } = this;\n        this._stop();\n        this.config.clearCache();\n        if (canvas) {\n            this.unbindEvents();\n            clearCanvas(canvas, ctx);\n            this.platform.releaseContext(ctx);\n            this.canvas = null;\n            this.ctx = null;\n        }\n        delete instances[this.id];\n        this.notifyPlugins('afterDestroy');\n    }\n    toBase64Image(...args) {\n        return this.canvas.toDataURL(...args);\n    }\n bindEvents() {\n        this.bindUserEvents();\n        if (this.options.responsive) {\n            this.bindResponsiveEvents();\n        } else {\n            this.attached = true;\n        }\n    }\n bindUserEvents() {\n        const listeners = this._listeners;\n        const platform = this.platform;\n        const _add = (type, listener)=>{\n            platform.addEventListener(this, type, listener);\n            listeners[type] = listener;\n        };\n        const listener = (e, x, y)=>{\n            e.offsetX = x;\n            e.offsetY = y;\n            this._eventHandler(e);\n        };\n        each(this.options.events, (type)=>_add(type, listener));\n    }\n bindResponsiveEvents() {\n        if (!this._responsiveListeners) {\n            this._responsiveListeners = {};\n        }\n        const listeners = this._responsiveListeners;\n        const platform = this.platform;\n        const _add = (type, listener)=>{\n            platform.addEventListener(this, type, listener);\n            listeners[type] = listener;\n        };\n        const _remove = (type, listener)=>{\n            if (listeners[type]) {\n                platform.removeEventListener(this, type, listener);\n                delete listeners[type];\n            }\n        };\n        const listener = (width, height)=>{\n            if (this.canvas) {\n                this.resize(width, height);\n            }\n        };\n        let detached;\n        const attached = ()=>{\n            _remove('attach', attached);\n            this.attached = true;\n            this.resize();\n            _add('resize', listener);\n            _add('detach', detached);\n        };\n        detached = ()=>{\n            this.attached = false;\n            _remove('resize', listener);\n            this._stop();\n            this._resize(0, 0);\n            _add('attach', attached);\n        };\n        if (platform.isAttached(this.canvas)) {\n            attached();\n        } else {\n            detached();\n        }\n    }\n unbindEvents() {\n        each(this._listeners, (listener, type)=>{\n            this.platform.removeEventListener(this, type, listener);\n        });\n        this._listeners = {};\n        each(this._responsiveListeners, (listener, type)=>{\n            this.platform.removeEventListener(this, type, listener);\n        });\n        this._responsiveListeners = undefined;\n    }\n    updateHoverStyle(items, mode, enabled) {\n        const prefix = enabled ? 'set' : 'remove';\n        let meta, item, i, ilen;\n        if (mode === 'dataset') {\n            meta = this.getDatasetMeta(items[0].datasetIndex);\n            meta.controller['_' + prefix + 'DatasetHoverStyle']();\n        }\n        for(i = 0, ilen = items.length; i < ilen; ++i){\n            item = items[i];\n            const controller = item && this.getDatasetMeta(item.datasetIndex).controller;\n            if (controller) {\n                controller[prefix + 'HoverStyle'](item.element, item.datasetIndex, item.index);\n            }\n        }\n    }\n getActiveElements() {\n        return this._active || [];\n    }\n setActiveElements(activeElements) {\n        const lastActive = this._active || [];\n        const active = activeElements.map(({ datasetIndex , index  })=>{\n            const meta = this.getDatasetMeta(datasetIndex);\n            if (!meta) {\n                throw new Error('No dataset found at index ' + datasetIndex);\n            }\n            return {\n                datasetIndex,\n                element: meta.data[index],\n                index\n            };\n        });\n        const changed = !_elementsEqual(active, lastActive);\n        if (changed) {\n            this._active = active;\n            this._lastEvent = null;\n            this._updateHoverStyles(active, lastActive);\n        }\n    }\n notifyPlugins(hook, args, filter) {\n        return this._plugins.notify(this, hook, args, filter);\n    }\n isPluginEnabled(pluginId) {\n        return this._plugins._cache.filter((p)=>p.plugin.id === pluginId).length === 1;\n    }\n _updateHoverStyles(active, lastActive, replay) {\n        const hoverOptions = this.options.hover;\n        const diff = (a, b)=>a.filter((x)=>!b.some((y)=>x.datasetIndex === y.datasetIndex && x.index === y.index));\n        const deactivated = diff(lastActive, active);\n        const activated = replay ? active : diff(active, lastActive);\n        if (deactivated.length) {\n            this.updateHoverStyle(deactivated, hoverOptions.mode, false);\n        }\n        if (activated.length && hoverOptions.mode) {\n            this.updateHoverStyle(activated, hoverOptions.mode, true);\n        }\n    }\n _eventHandler(e, replay) {\n        const args = {\n            event: e,\n            replay,\n            cancelable: true,\n            inChartArea: this.isPointInArea(e)\n        };\n        const eventFilter = (plugin)=>(plugin.options.events || this.options.events).includes(e.native.type);\n        if (this.notifyPlugins('beforeEvent', args, eventFilter) === false) {\n            return;\n        }\n        const changed = this._handleEvent(e, replay, args.inChartArea);\n        args.cancelable = false;\n        this.notifyPlugins('afterEvent', args, eventFilter);\n        if (changed || args.changed) {\n            this.render();\n        }\n        return this;\n    }\n _handleEvent(e, replay, inChartArea) {\n        const { _active: lastActive = [] , options  } = this;\n        const useFinalPosition = replay;\n        const active = this._getActiveElements(e, lastActive, inChartArea, useFinalPosition);\n        const isClick = _isClickEvent(e);\n        const lastEvent = determineLastEvent(e, this._lastEvent, inChartArea, isClick);\n        if (inChartArea) {\n            this._lastEvent = null;\n            callback(options.onHover, [\n                e,\n                active,\n                this\n            ], this);\n            if (isClick) {\n                callback(options.onClick, [\n                    e,\n                    active,\n                    this\n                ], this);\n            }\n        }\n        const changed = !_elementsEqual(active, lastActive);\n        if (changed || replay) {\n            this._active = active;\n            this._updateHoverStyles(active, lastActive, replay);\n        }\n        this._lastEvent = lastEvent;\n        return changed;\n    }\n _getActiveElements(e, lastActive, inChartArea, useFinalPosition) {\n        if (e.type === 'mouseout') {\n            return [];\n        }\n        if (!inChartArea) {\n            return lastActive;\n        }\n        const hoverOptions = this.options.hover;\n        return this.getElementsAtEventForMode(e, hoverOptions.mode, hoverOptions, useFinalPosition);\n    }\n}\nfunction invalidatePlugins() {\n    return each(Chart.instances, (chart)=>chart._plugins.invalidate());\n}\n\nfunction clipArc(ctx, element, endAngle) {\n    const { startAngle , pixelMargin , x , y , outerRadius , innerRadius  } = element;\n    let angleMargin = pixelMargin / outerRadius;\n    // Draw an inner border by clipping the arc and drawing a double-width border\n    // Enlarge the clipping arc by 0.33 pixels to eliminate glitches between borders\n    ctx.beginPath();\n    ctx.arc(x, y, outerRadius, startAngle - angleMargin, endAngle + angleMargin);\n    if (innerRadius > pixelMargin) {\n        angleMargin = pixelMargin / innerRadius;\n        ctx.arc(x, y, innerRadius, endAngle + angleMargin, startAngle - angleMargin, true);\n    } else {\n        ctx.arc(x, y, pixelMargin, endAngle + HALF_PI, startAngle - HALF_PI);\n    }\n    ctx.closePath();\n    ctx.clip();\n}\nfunction toRadiusCorners(value) {\n    return _readValueToProps(value, [\n        'outerStart',\n        'outerEnd',\n        'innerStart',\n        'innerEnd'\n    ]);\n}\n/**\n * Parse border radius from the provided options\n */ function parseBorderRadius$1(arc, innerRadius, outerRadius, angleDelta) {\n    const o = toRadiusCorners(arc.options.borderRadius);\n    const halfThickness = (outerRadius - innerRadius) / 2;\n    const innerLimit = Math.min(halfThickness, angleDelta * innerRadius / 2);\n    // Outer limits are complicated. We want to compute the available angular distance at\n    // a radius of outerRadius - borderRadius because for small angular distances, this term limits.\n    // We compute at r = outerRadius - borderRadius because this circle defines the center of the border corners.\n    //\n    // If the borderRadius is large, that value can become negative.\n    // This causes the outer borders to lose their radius entirely, which is rather unexpected. To solve that, if borderRadius > outerRadius\n    // we know that the thickness term will dominate and compute the limits at that point\n    const computeOuterLimit = (val)=>{\n        const outerArcLimit = (outerRadius - Math.min(halfThickness, val)) * angleDelta / 2;\n        return _limitValue(val, 0, Math.min(halfThickness, outerArcLimit));\n    };\n    return {\n        outerStart: computeOuterLimit(o.outerStart),\n        outerEnd: computeOuterLimit(o.outerEnd),\n        innerStart: _limitValue(o.innerStart, 0, innerLimit),\n        innerEnd: _limitValue(o.innerEnd, 0, innerLimit)\n    };\n}\n/**\n * Convert (r, 𝜃) to (x, y)\n */ function rThetaToXY(r, theta, x, y) {\n    return {\n        x: x + r * Math.cos(theta),\n        y: y + r * Math.sin(theta)\n    };\n}\n/**\n * Path the arc, respecting border radius by separating into left and right halves.\n *\n *   Start      End\n *\n *    1--->a--->2    Outer\n *   /           \\\n *   8           3\n *   |           |\n *   |           |\n *   7           4\n *   \\           /\n *    6<---b<---5    Inner\n */ function pathArc(ctx, element, offset, spacing, end, circular) {\n    const { x , y , startAngle: start , pixelMargin , innerRadius: innerR  } = element;\n    const outerRadius = Math.max(element.outerRadius + spacing + offset - pixelMargin, 0);\n    const innerRadius = innerR > 0 ? innerR + spacing + offset + pixelMargin : 0;\n    let spacingOffset = 0;\n    const alpha = end - start;\n    if (spacing) {\n        // When spacing is present, it is the same for all items\n        // So we adjust the start and end angle of the arc such that\n        // the distance is the same as it would be without the spacing\n        const noSpacingInnerRadius = innerR > 0 ? innerR - spacing : 0;\n        const noSpacingOuterRadius = outerRadius > 0 ? outerRadius - spacing : 0;\n        const avNogSpacingRadius = (noSpacingInnerRadius + noSpacingOuterRadius) / 2;\n        const adjustedAngle = avNogSpacingRadius !== 0 ? alpha * avNogSpacingRadius / (avNogSpacingRadius + spacing) : alpha;\n        spacingOffset = (alpha - adjustedAngle) / 2;\n    }\n    const beta = Math.max(0.001, alpha * outerRadius - offset / PI) / outerRadius;\n    const angleOffset = (alpha - beta) / 2;\n    const startAngle = start + angleOffset + spacingOffset;\n    const endAngle = end - angleOffset - spacingOffset;\n    const { outerStart , outerEnd , innerStart , innerEnd  } = parseBorderRadius$1(element, innerRadius, outerRadius, endAngle - startAngle);\n    const outerStartAdjustedRadius = outerRadius - outerStart;\n    const outerEndAdjustedRadius = outerRadius - outerEnd;\n    const outerStartAdjustedAngle = startAngle + outerStart / outerStartAdjustedRadius;\n    const outerEndAdjustedAngle = endAngle - outerEnd / outerEndAdjustedRadius;\n    const innerStartAdjustedRadius = innerRadius + innerStart;\n    const innerEndAdjustedRadius = innerRadius + innerEnd;\n    const innerStartAdjustedAngle = startAngle + innerStart / innerStartAdjustedRadius;\n    const innerEndAdjustedAngle = endAngle - innerEnd / innerEndAdjustedRadius;\n    ctx.beginPath();\n    if (circular) {\n        // The first arc segments from point 1 to point a to point 2\n        const outerMidAdjustedAngle = (outerStartAdjustedAngle + outerEndAdjustedAngle) / 2;\n        ctx.arc(x, y, outerRadius, outerStartAdjustedAngle, outerMidAdjustedAngle);\n        ctx.arc(x, y, outerRadius, outerMidAdjustedAngle, outerEndAdjustedAngle);\n        // The corner segment from point 2 to point 3\n        if (outerEnd > 0) {\n            const pCenter = rThetaToXY(outerEndAdjustedRadius, outerEndAdjustedAngle, x, y);\n            ctx.arc(pCenter.x, pCenter.y, outerEnd, outerEndAdjustedAngle, endAngle + HALF_PI);\n        }\n        // The line from point 3 to point 4\n        const p4 = rThetaToXY(innerEndAdjustedRadius, endAngle, x, y);\n        ctx.lineTo(p4.x, p4.y);\n        // The corner segment from point 4 to point 5\n        if (innerEnd > 0) {\n            const pCenter = rThetaToXY(innerEndAdjustedRadius, innerEndAdjustedAngle, x, y);\n            ctx.arc(pCenter.x, pCenter.y, innerEnd, endAngle + HALF_PI, innerEndAdjustedAngle + Math.PI);\n        }\n        // The inner arc from point 5 to point b to point 6\n        const innerMidAdjustedAngle = (endAngle - innerEnd / innerRadius + (startAngle + innerStart / innerRadius)) / 2;\n        ctx.arc(x, y, innerRadius, endAngle - innerEnd / innerRadius, innerMidAdjustedAngle, true);\n        ctx.arc(x, y, innerRadius, innerMidAdjustedAngle, startAngle + innerStart / innerRadius, true);\n        // The corner segment from point 6 to point 7\n        if (innerStart > 0) {\n            const pCenter = rThetaToXY(innerStartAdjustedRadius, innerStartAdjustedAngle, x, y);\n            ctx.arc(pCenter.x, pCenter.y, innerStart, innerStartAdjustedAngle + Math.PI, startAngle - HALF_PI);\n        }\n        // The line from point 7 to point 8\n        const p8 = rThetaToXY(outerStartAdjustedRadius, startAngle, x, y);\n        ctx.lineTo(p8.x, p8.y);\n        // The corner segment from point 8 to point 1\n        if (outerStart > 0) {\n            const pCenter = rThetaToXY(outerStartAdjustedRadius, outerStartAdjustedAngle, x, y);\n            ctx.arc(pCenter.x, pCenter.y, outerStart, startAngle - HALF_PI, outerStartAdjustedAngle);\n        }\n    } else {\n        ctx.moveTo(x, y);\n        const outerStartX = Math.cos(outerStartAdjustedAngle) * outerRadius + x;\n        const outerStartY = Math.sin(outerStartAdjustedAngle) * outerRadius + y;\n        ctx.lineTo(outerStartX, outerStartY);\n        const outerEndX = Math.cos(outerEndAdjustedAngle) * outerRadius + x;\n        const outerEndY = Math.sin(outerEndAdjustedAngle) * outerRadius + y;\n        ctx.lineTo(outerEndX, outerEndY);\n    }\n    ctx.closePath();\n}\nfunction drawArc(ctx, element, offset, spacing, circular) {\n    const { fullCircles , startAngle , circumference  } = element;\n    let endAngle = element.endAngle;\n    if (fullCircles) {\n        pathArc(ctx, element, offset, spacing, endAngle, circular);\n        for(let i = 0; i < fullCircles; ++i){\n            ctx.fill();\n        }\n        if (!isNaN(circumference)) {\n            endAngle = startAngle + (circumference % TAU || TAU);\n        }\n    }\n    pathArc(ctx, element, offset, spacing, endAngle, circular);\n    ctx.fill();\n    return endAngle;\n}\nfunction drawBorder(ctx, element, offset, spacing, circular) {\n    const { fullCircles , startAngle , circumference , options  } = element;\n    const { borderWidth , borderJoinStyle , borderDash , borderDashOffset  } = options;\n    const inner = options.borderAlign === 'inner';\n    if (!borderWidth) {\n        return;\n    }\n    ctx.setLineDash(borderDash || []);\n    ctx.lineDashOffset = borderDashOffset;\n    if (inner) {\n        ctx.lineWidth = borderWidth * 2;\n        ctx.lineJoin = borderJoinStyle || 'round';\n    } else {\n        ctx.lineWidth = borderWidth;\n        ctx.lineJoin = borderJoinStyle || 'bevel';\n    }\n    let endAngle = element.endAngle;\n    if (fullCircles) {\n        pathArc(ctx, element, offset, spacing, endAngle, circular);\n        for(let i = 0; i < fullCircles; ++i){\n            ctx.stroke();\n        }\n        if (!isNaN(circumference)) {\n            endAngle = startAngle + (circumference % TAU || TAU);\n        }\n    }\n    if (inner) {\n        clipArc(ctx, element, endAngle);\n    }\n    if (!fullCircles) {\n        pathArc(ctx, element, offset, spacing, endAngle, circular);\n        ctx.stroke();\n    }\n}\nclass ArcElement extends Element {\n    static id = 'arc';\n    static defaults = {\n        borderAlign: 'center',\n        borderColor: '#fff',\n        borderDash: [],\n        borderDashOffset: 0,\n        borderJoinStyle: undefined,\n        borderRadius: 0,\n        borderWidth: 2,\n        offset: 0,\n        spacing: 0,\n        angle: undefined,\n        circular: true\n    };\n    static defaultRoutes = {\n        backgroundColor: 'backgroundColor'\n    };\n    static descriptors = {\n        _scriptable: true,\n        _indexable: (name)=>name !== 'borderDash'\n    };\n    circumference;\n    endAngle;\n    fullCircles;\n    innerRadius;\n    outerRadius;\n    pixelMargin;\n    startAngle;\n    constructor(cfg){\n        super();\n        this.options = undefined;\n        this.circumference = undefined;\n        this.startAngle = undefined;\n        this.endAngle = undefined;\n        this.innerRadius = undefined;\n        this.outerRadius = undefined;\n        this.pixelMargin = 0;\n        this.fullCircles = 0;\n        if (cfg) {\n            Object.assign(this, cfg);\n        }\n    }\n    inRange(chartX, chartY, useFinalPosition) {\n        const point = this.getProps([\n            'x',\n            'y'\n        ], useFinalPosition);\n        const { angle , distance  } = getAngleFromPoint(point, {\n            x: chartX,\n            y: chartY\n        });\n        const { startAngle , endAngle , innerRadius , outerRadius , circumference  } = this.getProps([\n            'startAngle',\n            'endAngle',\n            'innerRadius',\n            'outerRadius',\n            'circumference'\n        ], useFinalPosition);\n        const rAdjust = (this.options.spacing + this.options.borderWidth) / 2;\n        const _circumference = valueOrDefault(circumference, endAngle - startAngle);\n        const nonZeroBetween = _angleBetween(angle, startAngle, endAngle) && startAngle !== endAngle;\n        const betweenAngles = _circumference >= TAU || nonZeroBetween;\n        const withinRadius = _isBetween(distance, innerRadius + rAdjust, outerRadius + rAdjust);\n        return betweenAngles && withinRadius;\n    }\n    getCenterPoint(useFinalPosition) {\n        const { x , y , startAngle , endAngle , innerRadius , outerRadius  } = this.getProps([\n            'x',\n            'y',\n            'startAngle',\n            'endAngle',\n            'innerRadius',\n            'outerRadius'\n        ], useFinalPosition);\n        const { offset , spacing  } = this.options;\n        const halfAngle = (startAngle + endAngle) / 2;\n        const halfRadius = (innerRadius + outerRadius + spacing + offset) / 2;\n        return {\n            x: x + Math.cos(halfAngle) * halfRadius,\n            y: y + Math.sin(halfAngle) * halfRadius\n        };\n    }\n    tooltipPosition(useFinalPosition) {\n        return this.getCenterPoint(useFinalPosition);\n    }\n    draw(ctx) {\n        const { options , circumference  } = this;\n        const offset = (options.offset || 0) / 4;\n        const spacing = (options.spacing || 0) / 2;\n        const circular = options.circular;\n        this.pixelMargin = options.borderAlign === 'inner' ? 0.33 : 0;\n        this.fullCircles = circumference > TAU ? Math.floor(circumference / TAU) : 0;\n        if (circumference === 0 || this.innerRadius < 0 || this.outerRadius < 0) {\n            return;\n        }\n        ctx.save();\n        const halfAngle = (this.startAngle + this.endAngle) / 2;\n        ctx.translate(Math.cos(halfAngle) * offset, Math.sin(halfAngle) * offset);\n        const fix = 1 - Math.sin(Math.min(PI, circumference || 0));\n        const radiusOffset = offset * fix;\n        ctx.fillStyle = options.backgroundColor;\n        ctx.strokeStyle = options.borderColor;\n        drawArc(ctx, this, radiusOffset, spacing, circular);\n        drawBorder(ctx, this, radiusOffset, spacing, circular);\n        ctx.restore();\n    }\n}\n\nfunction setStyle(ctx, options, style = options) {\n    ctx.lineCap = valueOrDefault(style.borderCapStyle, options.borderCapStyle);\n    ctx.setLineDash(valueOrDefault(style.borderDash, options.borderDash));\n    ctx.lineDashOffset = valueOrDefault(style.borderDashOffset, options.borderDashOffset);\n    ctx.lineJoin = valueOrDefault(style.borderJoinStyle, options.borderJoinStyle);\n    ctx.lineWidth = valueOrDefault(style.borderWidth, options.borderWidth);\n    ctx.strokeStyle = valueOrDefault(style.borderColor, options.borderColor);\n}\nfunction lineTo(ctx, previous, target) {\n    ctx.lineTo(target.x, target.y);\n}\n function getLineMethod(options) {\n    if (options.stepped) {\n        return _steppedLineTo;\n    }\n    if (options.tension || options.cubicInterpolationMode === 'monotone') {\n        return _bezierCurveTo;\n    }\n    return lineTo;\n}\nfunction pathVars(points, segment, params = {}) {\n    const count = points.length;\n    const { start: paramsStart = 0 , end: paramsEnd = count - 1  } = params;\n    const { start: segmentStart , end: segmentEnd  } = segment;\n    const start = Math.max(paramsStart, segmentStart);\n    const end = Math.min(paramsEnd, segmentEnd);\n    const outside = paramsStart < segmentStart && paramsEnd < segmentStart || paramsStart > segmentEnd && paramsEnd > segmentEnd;\n    return {\n        count,\n        start,\n        loop: segment.loop,\n        ilen: end < start && !outside ? count + end - start : end - start\n    };\n}\n function pathSegment(ctx, line, segment, params) {\n    const { points , options  } = line;\n    const { count , start , loop , ilen  } = pathVars(points, segment, params);\n    const lineMethod = getLineMethod(options);\n    let { move =true , reverse  } = params || {};\n    let i, point, prev;\n    for(i = 0; i <= ilen; ++i){\n        point = points[(start + (reverse ? ilen - i : i)) % count];\n        if (point.skip) {\n            continue;\n        } else if (move) {\n            ctx.moveTo(point.x, point.y);\n            move = false;\n        } else {\n            lineMethod(ctx, prev, point, reverse, options.stepped);\n        }\n        prev = point;\n    }\n    if (loop) {\n        point = points[(start + (reverse ? ilen : 0)) % count];\n        lineMethod(ctx, prev, point, reverse, options.stepped);\n    }\n    return !!loop;\n}\n function fastPathSegment(ctx, line, segment, params) {\n    const points = line.points;\n    const { count , start , ilen  } = pathVars(points, segment, params);\n    const { move =true , reverse  } = params || {};\n    let avgX = 0;\n    let countX = 0;\n    let i, point, prevX, minY, maxY, lastY;\n    const pointIndex = (index)=>(start + (reverse ? ilen - index : index)) % count;\n    const drawX = ()=>{\n        if (minY !== maxY) {\n            ctx.lineTo(avgX, maxY);\n            ctx.lineTo(avgX, minY);\n            ctx.lineTo(avgX, lastY);\n        }\n    };\n    if (move) {\n        point = points[pointIndex(0)];\n        ctx.moveTo(point.x, point.y);\n    }\n    for(i = 0; i <= ilen; ++i){\n        point = points[pointIndex(i)];\n        if (point.skip) {\n            continue;\n        }\n        const x = point.x;\n        const y = point.y;\n        const truncX = x | 0;\n        if (truncX === prevX) {\n            if (y < minY) {\n                minY = y;\n            } else if (y > maxY) {\n                maxY = y;\n            }\n            avgX = (countX * avgX + x) / ++countX;\n        } else {\n            drawX();\n            ctx.lineTo(x, y);\n            prevX = truncX;\n            countX = 0;\n            minY = maxY = y;\n        }\n        lastY = y;\n    }\n    drawX();\n}\n function _getSegmentMethod(line) {\n    const opts = line.options;\n    const borderDash = opts.borderDash && opts.borderDash.length;\n    const useFastPath = !line._decimated && !line._loop && !opts.tension && opts.cubicInterpolationMode !== 'monotone' && !opts.stepped && !borderDash;\n    return useFastPath ? fastPathSegment : pathSegment;\n}\n function _getInterpolationMethod(options) {\n    if (options.stepped) {\n        return _steppedInterpolation;\n    }\n    if (options.tension || options.cubicInterpolationMode === 'monotone') {\n        return _bezierInterpolation;\n    }\n    return _pointInLine;\n}\nfunction strokePathWithCache(ctx, line, start, count) {\n    let path = line._path;\n    if (!path) {\n        path = line._path = new Path2D();\n        if (line.path(path, start, count)) {\n            path.closePath();\n        }\n    }\n    setStyle(ctx, line.options);\n    ctx.stroke(path);\n}\nfunction strokePathDirect(ctx, line, start, count) {\n    const { segments , options  } = line;\n    const segmentMethod = _getSegmentMethod(line);\n    for (const segment of segments){\n        setStyle(ctx, options, segment.style);\n        ctx.beginPath();\n        if (segmentMethod(ctx, line, segment, {\n            start,\n            end: start + count - 1\n        })) {\n            ctx.closePath();\n        }\n        ctx.stroke();\n    }\n}\nconst usePath2D = typeof Path2D === 'function';\nfunction draw(ctx, line, start, count) {\n    if (usePath2D && !line.options.segment) {\n        strokePathWithCache(ctx, line, start, count);\n    } else {\n        strokePathDirect(ctx, line, start, count);\n    }\n}\nclass LineElement extends Element {\n    static id = 'line';\n static defaults = {\n        borderCapStyle: 'butt',\n        borderDash: [],\n        borderDashOffset: 0,\n        borderJoinStyle: 'miter',\n        borderWidth: 3,\n        capBezierPoints: true,\n        cubicInterpolationMode: 'default',\n        fill: false,\n        spanGaps: false,\n        stepped: false,\n        tension: 0\n    };\n static defaultRoutes = {\n        backgroundColor: 'backgroundColor',\n        borderColor: 'borderColor'\n    };\n    static descriptors = {\n        _scriptable: true,\n        _indexable: (name)=>name !== 'borderDash' && name !== 'fill'\n    };\n    constructor(cfg){\n        super();\n        this.animated = true;\n        this.options = undefined;\n        this._chart = undefined;\n        this._loop = undefined;\n        this._fullLoop = undefined;\n        this._path = undefined;\n        this._points = undefined;\n        this._segments = undefined;\n        this._decimated = false;\n        this._pointsUpdated = false;\n        this._datasetIndex = undefined;\n        if (cfg) {\n            Object.assign(this, cfg);\n        }\n    }\n    updateControlPoints(chartArea, indexAxis) {\n        const options = this.options;\n        if ((options.tension || options.cubicInterpolationMode === 'monotone') && !options.stepped && !this._pointsUpdated) {\n            const loop = options.spanGaps ? this._loop : this._fullLoop;\n            _updateBezierControlPoints(this._points, options, chartArea, loop, indexAxis);\n            this._pointsUpdated = true;\n        }\n    }\n    set points(points) {\n        this._points = points;\n        delete this._segments;\n        delete this._path;\n        this._pointsUpdated = false;\n    }\n    get points() {\n        return this._points;\n    }\n    get segments() {\n        return this._segments || (this._segments = _computeSegments(this, this.options.segment));\n    }\n first() {\n        const segments = this.segments;\n        const points = this.points;\n        return segments.length && points[segments[0].start];\n    }\n last() {\n        const segments = this.segments;\n        const points = this.points;\n        const count = segments.length;\n        return count && points[segments[count - 1].end];\n    }\n interpolate(point, property) {\n        const options = this.options;\n        const value = point[property];\n        const points = this.points;\n        const segments = _boundSegments(this, {\n            property,\n            start: value,\n            end: value\n        });\n        if (!segments.length) {\n            return;\n        }\n        const result = [];\n        const _interpolate = _getInterpolationMethod(options);\n        let i, ilen;\n        for(i = 0, ilen = segments.length; i < ilen; ++i){\n            const { start , end  } = segments[i];\n            const p1 = points[start];\n            const p2 = points[end];\n            if (p1 === p2) {\n                result.push(p1);\n                continue;\n            }\n            const t = Math.abs((value - p1[property]) / (p2[property] - p1[property]));\n            const interpolated = _interpolate(p1, p2, t, options.stepped);\n            interpolated[property] = point[property];\n            result.push(interpolated);\n        }\n        return result.length === 1 ? result[0] : result;\n    }\n pathSegment(ctx, segment, params) {\n        const segmentMethod = _getSegmentMethod(this);\n        return segmentMethod(ctx, this, segment, params);\n    }\n path(ctx, start, count) {\n        const segments = this.segments;\n        const segmentMethod = _getSegmentMethod(this);\n        let loop = this._loop;\n        start = start || 0;\n        count = count || this.points.length - start;\n        for (const segment of segments){\n            loop &= segmentMethod(ctx, this, segment, {\n                start,\n                end: start + count - 1\n            });\n        }\n        return !!loop;\n    }\n draw(ctx, chartArea, start, count) {\n        const options = this.options || {};\n        const points = this.points || [];\n        if (points.length && options.borderWidth) {\n            ctx.save();\n            draw(ctx, this, start, count);\n            ctx.restore();\n        }\n        if (this.animated) {\n            this._pointsUpdated = false;\n            this._path = undefined;\n        }\n    }\n}\n\nfunction inRange$1(el, pos, axis, useFinalPosition) {\n    const options = el.options;\n    const { [axis]: value  } = el.getProps([\n        axis\n    ], useFinalPosition);\n    return Math.abs(pos - value) < options.radius + options.hitRadius;\n}\nclass PointElement extends Element {\n    static id = 'point';\n    parsed;\n    skip;\n    stop;\n    /**\n   * @type {any}\n   */ static defaults = {\n        borderWidth: 1,\n        hitRadius: 1,\n        hoverBorderWidth: 1,\n        hoverRadius: 4,\n        pointStyle: 'circle',\n        radius: 3,\n        rotation: 0\n    };\n    /**\n   * @type {any}\n   */ static defaultRoutes = {\n        backgroundColor: 'backgroundColor',\n        borderColor: 'borderColor'\n    };\n    constructor(cfg){\n        super();\n        this.options = undefined;\n        this.parsed = undefined;\n        this.skip = undefined;\n        this.stop = undefined;\n        if (cfg) {\n            Object.assign(this, cfg);\n        }\n    }\n    inRange(mouseX, mouseY, useFinalPosition) {\n        const options = this.options;\n        const { x , y  } = this.getProps([\n            'x',\n            'y'\n        ], useFinalPosition);\n        return Math.pow(mouseX - x, 2) + Math.pow(mouseY - y, 2) < Math.pow(options.hitRadius + options.radius, 2);\n    }\n    inXRange(mouseX, useFinalPosition) {\n        return inRange$1(this, mouseX, 'x', useFinalPosition);\n    }\n    inYRange(mouseY, useFinalPosition) {\n        return inRange$1(this, mouseY, 'y', useFinalPosition);\n    }\n    getCenterPoint(useFinalPosition) {\n        const { x , y  } = this.getProps([\n            'x',\n            'y'\n        ], useFinalPosition);\n        return {\n            x,\n            y\n        };\n    }\n    size(options) {\n        options = options || this.options || {};\n        let radius = options.radius || 0;\n        radius = Math.max(radius, radius && options.hoverRadius || 0);\n        const borderWidth = radius && options.borderWidth || 0;\n        return (radius + borderWidth) * 2;\n    }\n    draw(ctx, area) {\n        const options = this.options;\n        if (this.skip || options.radius < 0.1 || !_isPointInArea(this, area, this.size(options) / 2)) {\n            return;\n        }\n        ctx.strokeStyle = options.borderColor;\n        ctx.lineWidth = options.borderWidth;\n        ctx.fillStyle = options.backgroundColor;\n        drawPoint(ctx, options, this.x, this.y);\n    }\n    getRange() {\n        const options = this.options || {};\n        // @ts-expect-error Fallbacks should never be hit in practice\n        return options.radius + options.hitRadius;\n    }\n}\n\nfunction getBarBounds(bar, useFinalPosition) {\n    const { x , y , base , width , height  } =  bar.getProps([\n        'x',\n        'y',\n        'base',\n        'width',\n        'height'\n    ], useFinalPosition);\n    let left, right, top, bottom, half;\n    if (bar.horizontal) {\n        half = height / 2;\n        left = Math.min(x, base);\n        right = Math.max(x, base);\n        top = y - half;\n        bottom = y + half;\n    } else {\n        half = width / 2;\n        left = x - half;\n        right = x + half;\n        top = Math.min(y, base);\n        bottom = Math.max(y, base);\n    }\n    return {\n        left,\n        top,\n        right,\n        bottom\n    };\n}\nfunction skipOrLimit(skip, value, min, max) {\n    return skip ? 0 : _limitValue(value, min, max);\n}\nfunction parseBorderWidth(bar, maxW, maxH) {\n    const value = bar.options.borderWidth;\n    const skip = bar.borderSkipped;\n    const o = toTRBL(value);\n    return {\n        t: skipOrLimit(skip.top, o.top, 0, maxH),\n        r: skipOrLimit(skip.right, o.right, 0, maxW),\n        b: skipOrLimit(skip.bottom, o.bottom, 0, maxH),\n        l: skipOrLimit(skip.left, o.left, 0, maxW)\n    };\n}\nfunction parseBorderRadius(bar, maxW, maxH) {\n    const { enableBorderRadius  } = bar.getProps([\n        'enableBorderRadius'\n    ]);\n    const value = bar.options.borderRadius;\n    const o = toTRBLCorners(value);\n    const maxR = Math.min(maxW, maxH);\n    const skip = bar.borderSkipped;\n    const enableBorder = enableBorderRadius || isObject(value);\n    return {\n        topLeft: skipOrLimit(!enableBorder || skip.top || skip.left, o.topLeft, 0, maxR),\n        topRight: skipOrLimit(!enableBorder || skip.top || skip.right, o.topRight, 0, maxR),\n        bottomLeft: skipOrLimit(!enableBorder || skip.bottom || skip.left, o.bottomLeft, 0, maxR),\n        bottomRight: skipOrLimit(!enableBorder || skip.bottom || skip.right, o.bottomRight, 0, maxR)\n    };\n}\nfunction boundingRects(bar) {\n    const bounds = getBarBounds(bar);\n    const width = bounds.right - bounds.left;\n    const height = bounds.bottom - bounds.top;\n    const border = parseBorderWidth(bar, width / 2, height / 2);\n    const radius = parseBorderRadius(bar, width / 2, height / 2);\n    return {\n        outer: {\n            x: bounds.left,\n            y: bounds.top,\n            w: width,\n            h: height,\n            radius\n        },\n        inner: {\n            x: bounds.left + border.l,\n            y: bounds.top + border.t,\n            w: width - border.l - border.r,\n            h: height - border.t - border.b,\n            radius: {\n                topLeft: Math.max(0, radius.topLeft - Math.max(border.t, border.l)),\n                topRight: Math.max(0, radius.topRight - Math.max(border.t, border.r)),\n                bottomLeft: Math.max(0, radius.bottomLeft - Math.max(border.b, border.l)),\n                bottomRight: Math.max(0, radius.bottomRight - Math.max(border.b, border.r))\n            }\n        }\n    };\n}\nfunction inRange(bar, x, y, useFinalPosition) {\n    const skipX = x === null;\n    const skipY = y === null;\n    const skipBoth = skipX && skipY;\n    const bounds = bar && !skipBoth && getBarBounds(bar, useFinalPosition);\n    return bounds && (skipX || _isBetween(x, bounds.left, bounds.right)) && (skipY || _isBetween(y, bounds.top, bounds.bottom));\n}\nfunction hasRadius(radius) {\n    return radius.topLeft || radius.topRight || radius.bottomLeft || radius.bottomRight;\n}\n function addNormalRectPath(ctx, rect) {\n    ctx.rect(rect.x, rect.y, rect.w, rect.h);\n}\nfunction inflateRect(rect, amount, refRect = {}) {\n    const x = rect.x !== refRect.x ? -amount : 0;\n    const y = rect.y !== refRect.y ? -amount : 0;\n    const w = (rect.x + rect.w !== refRect.x + refRect.w ? amount : 0) - x;\n    const h = (rect.y + rect.h !== refRect.y + refRect.h ? amount : 0) - y;\n    return {\n        x: rect.x + x,\n        y: rect.y + y,\n        w: rect.w + w,\n        h: rect.h + h,\n        radius: rect.radius\n    };\n}\nclass BarElement extends Element {\n    static id = 'bar';\n static defaults = {\n        borderSkipped: 'start',\n        borderWidth: 0,\n        borderRadius: 0,\n        inflateAmount: 'auto',\n        pointStyle: undefined\n    };\n static defaultRoutes = {\n        backgroundColor: 'backgroundColor',\n        borderColor: 'borderColor'\n    };\n    constructor(cfg){\n        super();\n        this.options = undefined;\n        this.horizontal = undefined;\n        this.base = undefined;\n        this.width = undefined;\n        this.height = undefined;\n        this.inflateAmount = undefined;\n        if (cfg) {\n            Object.assign(this, cfg);\n        }\n    }\n    draw(ctx) {\n        const { inflateAmount , options: { borderColor , backgroundColor  }  } = this;\n        const { inner , outer  } = boundingRects(this);\n        const addRectPath = hasRadius(outer.radius) ? addRoundedRectPath : addNormalRectPath;\n        ctx.save();\n        if (outer.w !== inner.w || outer.h !== inner.h) {\n            ctx.beginPath();\n            addRectPath(ctx, inflateRect(outer, inflateAmount, inner));\n            ctx.clip();\n            addRectPath(ctx, inflateRect(inner, -inflateAmount, outer));\n            ctx.fillStyle = borderColor;\n            ctx.fill('evenodd');\n        }\n        ctx.beginPath();\n        addRectPath(ctx, inflateRect(inner, inflateAmount));\n        ctx.fillStyle = backgroundColor;\n        ctx.fill();\n        ctx.restore();\n    }\n    inRange(mouseX, mouseY, useFinalPosition) {\n        return inRange(this, mouseX, mouseY, useFinalPosition);\n    }\n    inXRange(mouseX, useFinalPosition) {\n        return inRange(this, mouseX, null, useFinalPosition);\n    }\n    inYRange(mouseY, useFinalPosition) {\n        return inRange(this, null, mouseY, useFinalPosition);\n    }\n    getCenterPoint(useFinalPosition) {\n        const { x , y , base , horizontal  } =  this.getProps([\n            'x',\n            'y',\n            'base',\n            'horizontal'\n        ], useFinalPosition);\n        return {\n            x: horizontal ? (x + base) / 2 : x,\n            y: horizontal ? y : (y + base) / 2\n        };\n    }\n    getRange(axis) {\n        return axis === 'x' ? this.width / 2 : this.height / 2;\n    }\n}\n\nvar elements = /*#__PURE__*/Object.freeze({\n__proto__: null,\nArcElement: ArcElement,\nBarElement: BarElement,\nLineElement: LineElement,\nPointElement: PointElement\n});\n\nconst BORDER_COLORS = [\n    'rgb(54, 162, 235)',\n    'rgb(255, 99, 132)',\n    'rgb(255, 159, 64)',\n    'rgb(255, 205, 86)',\n    'rgb(75, 192, 192)',\n    'rgb(153, 102, 255)',\n    'rgb(201, 203, 207)' // grey\n];\n// Border colors with 50% transparency\nconst BACKGROUND_COLORS = /* #__PURE__ */ BORDER_COLORS.map((color)=>color.replace('rgb(', 'rgba(').replace(')', ', 0.5)'));\nfunction getBorderColor(i) {\n    return BORDER_COLORS[i % BORDER_COLORS.length];\n}\nfunction getBackgroundColor(i) {\n    return BACKGROUND_COLORS[i % BACKGROUND_COLORS.length];\n}\nfunction colorizeDefaultDataset(dataset, i) {\n    dataset.borderColor = getBorderColor(i);\n    dataset.backgroundColor = getBackgroundColor(i);\n    return ++i;\n}\nfunction colorizeDoughnutDataset(dataset, i) {\n    dataset.backgroundColor = dataset.data.map(()=>getBorderColor(i++));\n    return i;\n}\nfunction colorizePolarAreaDataset(dataset, i) {\n    dataset.backgroundColor = dataset.data.map(()=>getBackgroundColor(i++));\n    return i;\n}\nfunction getColorizer(chart) {\n    let i = 0;\n    return (dataset, datasetIndex)=>{\n        const controller = chart.getDatasetMeta(datasetIndex).controller;\n        if (controller instanceof DoughnutController) {\n            i = colorizeDoughnutDataset(dataset, i);\n        } else if (controller instanceof PolarAreaController) {\n            i = colorizePolarAreaDataset(dataset, i);\n        } else if (controller) {\n            i = colorizeDefaultDataset(dataset, i);\n        }\n    };\n}\nfunction containsColorsDefinitions(descriptors) {\n    let k;\n    for(k in descriptors){\n        if (descriptors[k].borderColor || descriptors[k].backgroundColor) {\n            return true;\n        }\n    }\n    return false;\n}\nfunction containsColorsDefinition(descriptor) {\n    return descriptor && (descriptor.borderColor || descriptor.backgroundColor);\n}\nfunction containsDefaultColorsDefenitions() {\n    return defaults.borderColor !== 'rgba(0,0,0,0.1)' || defaults.backgroundColor !== 'rgba(0,0,0,0.1)';\n}\nvar plugin_colors = {\n    id: 'colors',\n    defaults: {\n        enabled: true,\n        forceOverride: false\n    },\n    beforeLayout (chart, _args, options) {\n        if (!options.enabled) {\n            return;\n        }\n        const { data: { datasets  } , options: chartOptions  } = chart.config;\n        const { elements  } = chartOptions;\n        const containsColorDefenition = containsColorsDefinitions(datasets) || containsColorsDefinition(chartOptions) || elements && containsColorsDefinitions(elements) || containsDefaultColorsDefenitions();\n        if (!options.forceOverride && containsColorDefenition) {\n            return;\n        }\n        const colorizer = getColorizer(chart);\n        datasets.forEach(colorizer);\n    }\n};\n\nfunction lttbDecimation(data, start, count, availableWidth, options) {\n const samples = options.samples || availableWidth;\n    if (samples >= count) {\n        return data.slice(start, start + count);\n    }\n    const decimated = [];\n    const bucketWidth = (count - 2) / (samples - 2);\n    let sampledIndex = 0;\n    const endIndex = start + count - 1;\n    let a = start;\n    let i, maxAreaPoint, maxArea, area, nextA;\n    decimated[sampledIndex++] = data[a];\n    for(i = 0; i < samples - 2; i++){\n        let avgX = 0;\n        let avgY = 0;\n        let j;\n        const avgRangeStart = Math.floor((i + 1) * bucketWidth) + 1 + start;\n        const avgRangeEnd = Math.min(Math.floor((i + 2) * bucketWidth) + 1, count) + start;\n        const avgRangeLength = avgRangeEnd - avgRangeStart;\n        for(j = avgRangeStart; j < avgRangeEnd; j++){\n            avgX += data[j].x;\n            avgY += data[j].y;\n        }\n        avgX /= avgRangeLength;\n        avgY /= avgRangeLength;\n        const rangeOffs = Math.floor(i * bucketWidth) + 1 + start;\n        const rangeTo = Math.min(Math.floor((i + 1) * bucketWidth) + 1, count) + start;\n        const { x: pointAx , y: pointAy  } = data[a];\n        maxArea = area = -1;\n        for(j = rangeOffs; j < rangeTo; j++){\n            area = 0.5 * Math.abs((pointAx - avgX) * (data[j].y - pointAy) - (pointAx - data[j].x) * (avgY - pointAy));\n            if (area > maxArea) {\n                maxArea = area;\n                maxAreaPoint = data[j];\n                nextA = j;\n            }\n        }\n        decimated[sampledIndex++] = maxAreaPoint;\n        a = nextA;\n    }\n    decimated[sampledIndex++] = data[endIndex];\n    return decimated;\n}\nfunction minMaxDecimation(data, start, count, availableWidth) {\n    let avgX = 0;\n    let countX = 0;\n    let i, point, x, y, prevX, minIndex, maxIndex, startIndex, minY, maxY;\n    const decimated = [];\n    const endIndex = start + count - 1;\n    const xMin = data[start].x;\n    const xMax = data[endIndex].x;\n    const dx = xMax - xMin;\n    for(i = start; i < start + count; ++i){\n        point = data[i];\n        x = (point.x - xMin) / dx * availableWidth;\n        y = point.y;\n        const truncX = x | 0;\n        if (truncX === prevX) {\n            if (y < minY) {\n                minY = y;\n                minIndex = i;\n            } else if (y > maxY) {\n                maxY = y;\n                maxIndex = i;\n            }\n            avgX = (countX * avgX + point.x) / ++countX;\n        } else {\n            const lastIndex = i - 1;\n            if (!isNullOrUndef(minIndex) && !isNullOrUndef(maxIndex)) {\n                const intermediateIndex1 = Math.min(minIndex, maxIndex);\n                const intermediateIndex2 = Math.max(minIndex, maxIndex);\n                if (intermediateIndex1 !== startIndex && intermediateIndex1 !== lastIndex) {\n                    decimated.push({\n                        ...data[intermediateIndex1],\n                        x: avgX\n                    });\n                }\n                if (intermediateIndex2 !== startIndex && intermediateIndex2 !== lastIndex) {\n                    decimated.push({\n                        ...data[intermediateIndex2],\n                        x: avgX\n                    });\n                }\n            }\n            if (i > 0 && lastIndex !== startIndex) {\n                decimated.push(data[lastIndex]);\n            }\n            decimated.push(point);\n            prevX = truncX;\n            countX = 0;\n            minY = maxY = y;\n            minIndex = maxIndex = startIndex = i;\n        }\n    }\n    return decimated;\n}\nfunction cleanDecimatedDataset(dataset) {\n    if (dataset._decimated) {\n        const data = dataset._data;\n        delete dataset._decimated;\n        delete dataset._data;\n        Object.defineProperty(dataset, 'data', {\n            configurable: true,\n            enumerable: true,\n            writable: true,\n            value: data\n        });\n    }\n}\nfunction cleanDecimatedData(chart) {\n    chart.data.datasets.forEach((dataset)=>{\n        cleanDecimatedDataset(dataset);\n    });\n}\nfunction getStartAndCountOfVisiblePointsSimplified(meta, points) {\n    const pointCount = points.length;\n    let start = 0;\n    let count;\n    const { iScale  } = meta;\n    const { min , max , minDefined , maxDefined  } = iScale.getUserBounds();\n    if (minDefined) {\n        start = _limitValue(_lookupByKey(points, iScale.axis, min).lo, 0, pointCount - 1);\n    }\n    if (maxDefined) {\n        count = _limitValue(_lookupByKey(points, iScale.axis, max).hi + 1, start, pointCount) - start;\n    } else {\n        count = pointCount - start;\n    }\n    return {\n        start,\n        count\n    };\n}\nvar plugin_decimation = {\n    id: 'decimation',\n    defaults: {\n        algorithm: 'min-max',\n        enabled: false\n    },\n    beforeElementsUpdate: (chart, args, options)=>{\n        if (!options.enabled) {\n            cleanDecimatedData(chart);\n            return;\n        }\n        const availableWidth = chart.width;\n        chart.data.datasets.forEach((dataset, datasetIndex)=>{\n            const { _data , indexAxis  } = dataset;\n            const meta = chart.getDatasetMeta(datasetIndex);\n            const data = _data || dataset.data;\n            if (resolve([\n                indexAxis,\n                chart.options.indexAxis\n            ]) === 'y') {\n                return;\n            }\n            if (!meta.controller.supportsDecimation) {\n                return;\n            }\n            const xAxis = chart.scales[meta.xAxisID];\n            if (xAxis.type !== 'linear' && xAxis.type !== 'time') {\n                return;\n            }\n            if (chart.options.parsing) {\n                return;\n            }\n            let { start , count  } = getStartAndCountOfVisiblePointsSimplified(meta, data);\n            const threshold = options.threshold || 4 * availableWidth;\n            if (count <= threshold) {\n                cleanDecimatedDataset(dataset);\n                return;\n            }\n            if (isNullOrUndef(_data)) {\n                dataset._data = data;\n                delete dataset.data;\n                Object.defineProperty(dataset, 'data', {\n                    configurable: true,\n                    enumerable: true,\n                    get: function() {\n                        return this._decimated;\n                    },\n                    set: function(d) {\n                        this._data = d;\n                    }\n                });\n            }\n            let decimated;\n            switch(options.algorithm){\n                case 'lttb':\n                    decimated = lttbDecimation(data, start, count, availableWidth, options);\n                    break;\n                case 'min-max':\n                    decimated = minMaxDecimation(data, start, count, availableWidth);\n                    break;\n                default:\n                    throw new Error(`Unsupported decimation algorithm '${options.algorithm}'`);\n            }\n            dataset._decimated = decimated;\n        });\n    },\n    destroy (chart) {\n        cleanDecimatedData(chart);\n    }\n};\n\nfunction _segments(line, target, property) {\n    const segments = line.segments;\n    const points = line.points;\n    const tpoints = target.points;\n    const parts = [];\n    for (const segment of segments){\n        let { start , end  } = segment;\n        end = _findSegmentEnd(start, end, points);\n        const bounds = _getBounds(property, points[start], points[end], segment.loop);\n        if (!target.segments) {\n            parts.push({\n                source: segment,\n                target: bounds,\n                start: points[start],\n                end: points[end]\n            });\n            continue;\n        }\n        const targetSegments = _boundSegments(target, bounds);\n        for (const tgt of targetSegments){\n            const subBounds = _getBounds(property, tpoints[tgt.start], tpoints[tgt.end], tgt.loop);\n            const fillSources = _boundSegment(segment, points, subBounds);\n            for (const fillSource of fillSources){\n                parts.push({\n                    source: fillSource,\n                    target: tgt,\n                    start: {\n                        [property]: _getEdge(bounds, subBounds, 'start', Math.max)\n                    },\n                    end: {\n                        [property]: _getEdge(bounds, subBounds, 'end', Math.min)\n                    }\n                });\n            }\n        }\n    }\n    return parts;\n}\nfunction _getBounds(property, first, last, loop) {\n    if (loop) {\n        return;\n    }\n    let start = first[property];\n    let end = last[property];\n    if (property === 'angle') {\n        start = _normalizeAngle(start);\n        end = _normalizeAngle(end);\n    }\n    return {\n        property,\n        start,\n        end\n    };\n}\nfunction _pointsFromSegments(boundary, line) {\n    const { x =null , y =null  } = boundary || {};\n    const linePoints = line.points;\n    const points = [];\n    line.segments.forEach(({ start , end  })=>{\n        end = _findSegmentEnd(start, end, linePoints);\n        const first = linePoints[start];\n        const last = linePoints[end];\n        if (y !== null) {\n            points.push({\n                x: first.x,\n                y\n            });\n            points.push({\n                x: last.x,\n                y\n            });\n        } else if (x !== null) {\n            points.push({\n                x,\n                y: first.y\n            });\n            points.push({\n                x,\n                y: last.y\n            });\n        }\n    });\n    return points;\n}\nfunction _findSegmentEnd(start, end, points) {\n    for(; end > start; end--){\n        const point = points[end];\n        if (!isNaN(point.x) && !isNaN(point.y)) {\n            break;\n        }\n    }\n    return end;\n}\nfunction _getEdge(a, b, prop, fn) {\n    if (a && b) {\n        return fn(a[prop], b[prop]);\n    }\n    return a ? a[prop] : b ? b[prop] : 0;\n}\n\nfunction _createBoundaryLine(boundary, line) {\n    let points = [];\n    let _loop = false;\n    if (isArray(boundary)) {\n        _loop = true;\n        points = boundary;\n    } else {\n        points = _pointsFromSegments(boundary, line);\n    }\n    return points.length ? new LineElement({\n        points,\n        options: {\n            tension: 0\n        },\n        _loop,\n        _fullLoop: _loop\n    }) : null;\n}\nfunction _shouldApplyFill(source) {\n    return source && source.fill !== false;\n}\n\nfunction _resolveTarget(sources, index, propagate) {\n    const source = sources[index];\n    let fill = source.fill;\n    const visited = [\n        index\n    ];\n    let target;\n    if (!propagate) {\n        return fill;\n    }\n    while(fill !== false && visited.indexOf(fill) === -1){\n        if (!isNumberFinite(fill)) {\n            return fill;\n        }\n        target = sources[fill];\n        if (!target) {\n            return false;\n        }\n        if (target.visible) {\n            return fill;\n        }\n        visited.push(fill);\n        fill = target.fill;\n    }\n    return false;\n}\n function _decodeFill(line, index, count) {\n     const fill = parseFillOption(line);\n    if (isObject(fill)) {\n        return isNaN(fill.value) ? false : fill;\n    }\n    let target = parseFloat(fill);\n    if (isNumberFinite(target) && Math.floor(target) === target) {\n        return decodeTargetIndex(fill[0], index, target, count);\n    }\n    return [\n        'origin',\n        'start',\n        'end',\n        'stack',\n        'shape'\n    ].indexOf(fill) >= 0 && fill;\n}\nfunction decodeTargetIndex(firstCh, index, target, count) {\n    if (firstCh === '-' || firstCh === '+') {\n        target = index + target;\n    }\n    if (target === index || target < 0 || target >= count) {\n        return false;\n    }\n    return target;\n}\n function _getTargetPixel(fill, scale) {\n    let pixel = null;\n    if (fill === 'start') {\n        pixel = scale.bottom;\n    } else if (fill === 'end') {\n        pixel = scale.top;\n    } else if (isObject(fill)) {\n        pixel = scale.getPixelForValue(fill.value);\n    } else if (scale.getBasePixel) {\n        pixel = scale.getBasePixel();\n    }\n    return pixel;\n}\n function _getTargetValue(fill, scale, startValue) {\n    let value;\n    if (fill === 'start') {\n        value = startValue;\n    } else if (fill === 'end') {\n        value = scale.options.reverse ? scale.min : scale.max;\n    } else if (isObject(fill)) {\n        value = fill.value;\n    } else {\n        value = scale.getBaseValue();\n    }\n    return value;\n}\n function parseFillOption(line) {\n    const options = line.options;\n    const fillOption = options.fill;\n    let fill = valueOrDefault(fillOption && fillOption.target, fillOption);\n    if (fill === undefined) {\n        fill = !!options.backgroundColor;\n    }\n    if (fill === false || fill === null) {\n        return false;\n    }\n    if (fill === true) {\n        return 'origin';\n    }\n    return fill;\n}\n\nfunction _buildStackLine(source) {\n    const { scale , index , line  } = source;\n    const points = [];\n    const segments = line.segments;\n    const sourcePoints = line.points;\n    const linesBelow = getLinesBelow(scale, index);\n    linesBelow.push(_createBoundaryLine({\n        x: null,\n        y: scale.bottom\n    }, line));\n    for(let i = 0; i < segments.length; i++){\n        const segment = segments[i];\n        for(let j = segment.start; j <= segment.end; j++){\n            addPointsBelow(points, sourcePoints[j], linesBelow);\n        }\n    }\n    return new LineElement({\n        points,\n        options: {}\n    });\n}\n function getLinesBelow(scale, index) {\n    const below = [];\n    const metas = scale.getMatchingVisibleMetas('line');\n    for(let i = 0; i < metas.length; i++){\n        const meta = metas[i];\n        if (meta.index === index) {\n            break;\n        }\n        if (!meta.hidden) {\n            below.unshift(meta.dataset);\n        }\n    }\n    return below;\n}\n function addPointsBelow(points, sourcePoint, linesBelow) {\n    const postponed = [];\n    for(let j = 0; j < linesBelow.length; j++){\n        const line = linesBelow[j];\n        const { first , last , point  } = findPoint(line, sourcePoint, 'x');\n        if (!point || first && last) {\n            continue;\n        }\n        if (first) {\n            postponed.unshift(point);\n        } else {\n            points.push(point);\n            if (!last) {\n                break;\n            }\n        }\n    }\n    points.push(...postponed);\n}\n function findPoint(line, sourcePoint, property) {\n    const point = line.interpolate(sourcePoint, property);\n    if (!point) {\n        return {};\n    }\n    const pointValue = point[property];\n    const segments = line.segments;\n    const linePoints = line.points;\n    let first = false;\n    let last = false;\n    for(let i = 0; i < segments.length; i++){\n        const segment = segments[i];\n        const firstValue = linePoints[segment.start][property];\n        const lastValue = linePoints[segment.end][property];\n        if (_isBetween(pointValue, firstValue, lastValue)) {\n            first = pointValue === firstValue;\n            last = pointValue === lastValue;\n            break;\n        }\n    }\n    return {\n        first,\n        last,\n        point\n    };\n}\n\nclass simpleArc {\n    constructor(opts){\n        this.x = opts.x;\n        this.y = opts.y;\n        this.radius = opts.radius;\n    }\n    pathSegment(ctx, bounds, opts) {\n        const { x , y , radius  } = this;\n        bounds = bounds || {\n            start: 0,\n            end: TAU\n        };\n        ctx.arc(x, y, radius, bounds.end, bounds.start, true);\n        return !opts.bounds;\n    }\n    interpolate(point) {\n        const { x , y , radius  } = this;\n        const angle = point.angle;\n        return {\n            x: x + Math.cos(angle) * radius,\n            y: y + Math.sin(angle) * radius,\n            angle\n        };\n    }\n}\n\nfunction _getTarget(source) {\n    const { chart , fill , line  } = source;\n    if (isNumberFinite(fill)) {\n        return getLineByIndex(chart, fill);\n    }\n    if (fill === 'stack') {\n        return _buildStackLine(source);\n    }\n    if (fill === 'shape') {\n        return true;\n    }\n    const boundary = computeBoundary(source);\n    if (boundary instanceof simpleArc) {\n        return boundary;\n    }\n    return _createBoundaryLine(boundary, line);\n}\n function getLineByIndex(chart, index) {\n    const meta = chart.getDatasetMeta(index);\n    const visible = meta && chart.isDatasetVisible(index);\n    return visible ? meta.dataset : null;\n}\nfunction computeBoundary(source) {\n    const scale = source.scale || {};\n    if (scale.getPointPositionForValue) {\n        return computeCircularBoundary(source);\n    }\n    return computeLinearBoundary(source);\n}\nfunction computeLinearBoundary(source) {\n    const { scale ={} , fill  } = source;\n    const pixel = _getTargetPixel(fill, scale);\n    if (isNumberFinite(pixel)) {\n        const horizontal = scale.isHorizontal();\n        return {\n            x: horizontal ? pixel : null,\n            y: horizontal ? null : pixel\n        };\n    }\n    return null;\n}\nfunction computeCircularBoundary(source) {\n    const { scale , fill  } = source;\n    const options = scale.options;\n    const length = scale.getLabels().length;\n    const start = options.reverse ? scale.max : scale.min;\n    const value = _getTargetValue(fill, scale, start);\n    const target = [];\n    if (options.grid.circular) {\n        const center = scale.getPointPositionForValue(0, start);\n        return new simpleArc({\n            x: center.x,\n            y: center.y,\n            radius: scale.getDistanceFromCenterForValue(value)\n        });\n    }\n    for(let i = 0; i < length; ++i){\n        target.push(scale.getPointPositionForValue(i, value));\n    }\n    return target;\n}\n\nfunction _drawfill(ctx, source, area) {\n    const target = _getTarget(source);\n    const { line , scale , axis  } = source;\n    const lineOpts = line.options;\n    const fillOption = lineOpts.fill;\n    const color = lineOpts.backgroundColor;\n    const { above =color , below =color  } = fillOption || {};\n    if (target && line.points.length) {\n        clipArea(ctx, area);\n        doFill(ctx, {\n            line,\n            target,\n            above,\n            below,\n            area,\n            scale,\n            axis\n        });\n        unclipArea(ctx);\n    }\n}\nfunction doFill(ctx, cfg) {\n    const { line , target , above , below , area , scale  } = cfg;\n    const property = line._loop ? 'angle' : cfg.axis;\n    ctx.save();\n    if (property === 'x' && below !== above) {\n        clipVertical(ctx, target, area.top);\n        fill(ctx, {\n            line,\n            target,\n            color: above,\n            scale,\n            property\n        });\n        ctx.restore();\n        ctx.save();\n        clipVertical(ctx, target, area.bottom);\n    }\n    fill(ctx, {\n        line,\n        target,\n        color: below,\n        scale,\n        property\n    });\n    ctx.restore();\n}\nfunction clipVertical(ctx, target, clipY) {\n    const { segments , points  } = target;\n    let first = true;\n    let lineLoop = false;\n    ctx.beginPath();\n    for (const segment of segments){\n        const { start , end  } = segment;\n        const firstPoint = points[start];\n        const lastPoint = points[_findSegmentEnd(start, end, points)];\n        if (first) {\n            ctx.moveTo(firstPoint.x, firstPoint.y);\n            first = false;\n        } else {\n            ctx.lineTo(firstPoint.x, clipY);\n            ctx.lineTo(firstPoint.x, firstPoint.y);\n        }\n        lineLoop = !!target.pathSegment(ctx, segment, {\n            move: lineLoop\n        });\n        if (lineLoop) {\n            ctx.closePath();\n        } else {\n            ctx.lineTo(lastPoint.x, clipY);\n        }\n    }\n    ctx.lineTo(target.first().x, clipY);\n    ctx.closePath();\n    ctx.clip();\n}\nfunction fill(ctx, cfg) {\n    const { line , target , property , color , scale  } = cfg;\n    const segments = _segments(line, target, property);\n    for (const { source: src , target: tgt , start , end  } of segments){\n        const { style: { backgroundColor =color  } = {}  } = src;\n        const notShape = target !== true;\n        ctx.save();\n        ctx.fillStyle = backgroundColor;\n        clipBounds(ctx, scale, notShape && _getBounds(property, start, end));\n        ctx.beginPath();\n        const lineLoop = !!line.pathSegment(ctx, src);\n        let loop;\n        if (notShape) {\n            if (lineLoop) {\n                ctx.closePath();\n            } else {\n                interpolatedLineTo(ctx, target, end, property);\n            }\n            const targetLoop = !!target.pathSegment(ctx, tgt, {\n                move: lineLoop,\n                reverse: true\n            });\n            loop = lineLoop && targetLoop;\n            if (!loop) {\n                interpolatedLineTo(ctx, target, start, property);\n            }\n        }\n        ctx.closePath();\n        ctx.fill(loop ? 'evenodd' : 'nonzero');\n        ctx.restore();\n    }\n}\nfunction clipBounds(ctx, scale, bounds) {\n    const { top , bottom  } = scale.chart.chartArea;\n    const { property , start , end  } = bounds || {};\n    if (property === 'x') {\n        ctx.beginPath();\n        ctx.rect(start, top, end - start, bottom - top);\n        ctx.clip();\n    }\n}\nfunction interpolatedLineTo(ctx, target, point, property) {\n    const interpolatedPoint = target.interpolate(point, property);\n    if (interpolatedPoint) {\n        ctx.lineTo(interpolatedPoint.x, interpolatedPoint.y);\n    }\n}\n\nvar index = {\n    id: 'filler',\n    afterDatasetsUpdate (chart, _args, options) {\n        const count = (chart.data.datasets || []).length;\n        const sources = [];\n        let meta, i, line, source;\n        for(i = 0; i < count; ++i){\n            meta = chart.getDatasetMeta(i);\n            line = meta.dataset;\n            source = null;\n            if (line && line.options && line instanceof LineElement) {\n                source = {\n                    visible: chart.isDatasetVisible(i),\n                    index: i,\n                    fill: _decodeFill(line, i, count),\n                    chart,\n                    axis: meta.controller.options.indexAxis,\n                    scale: meta.vScale,\n                    line\n                };\n            }\n            meta.$filler = source;\n            sources.push(source);\n        }\n        for(i = 0; i < count; ++i){\n            source = sources[i];\n            if (!source || source.fill === false) {\n                continue;\n            }\n            source.fill = _resolveTarget(sources, i, options.propagate);\n        }\n    },\n    beforeDraw (chart, _args, options) {\n        const draw = options.drawTime === 'beforeDraw';\n        const metasets = chart.getSortedVisibleDatasetMetas();\n        const area = chart.chartArea;\n        for(let i = metasets.length - 1; i >= 0; --i){\n            const source = metasets[i].$filler;\n            if (!source) {\n                continue;\n            }\n            source.line.updateControlPoints(area, source.axis);\n            if (draw && source.fill) {\n                _drawfill(chart.ctx, source, area);\n            }\n        }\n    },\n    beforeDatasetsDraw (chart, _args, options) {\n        if (options.drawTime !== 'beforeDatasetsDraw') {\n            return;\n        }\n        const metasets = chart.getSortedVisibleDatasetMetas();\n        for(let i = metasets.length - 1; i >= 0; --i){\n            const source = metasets[i].$filler;\n            if (_shouldApplyFill(source)) {\n                _drawfill(chart.ctx, source, chart.chartArea);\n            }\n        }\n    },\n    beforeDatasetDraw (chart, args, options) {\n        const source = args.meta.$filler;\n        if (!_shouldApplyFill(source) || options.drawTime !== 'beforeDatasetDraw') {\n            return;\n        }\n        _drawfill(chart.ctx, source, chart.chartArea);\n    },\n    defaults: {\n        propagate: true,\n        drawTime: 'beforeDatasetDraw'\n    }\n};\n\nconst getBoxSize = (labelOpts, fontSize)=>{\n    let { boxHeight =fontSize , boxWidth =fontSize  } = labelOpts;\n    if (labelOpts.usePointStyle) {\n        boxHeight = Math.min(boxHeight, fontSize);\n        boxWidth = labelOpts.pointStyleWidth || Math.min(boxWidth, fontSize);\n    }\n    return {\n        boxWidth,\n        boxHeight,\n        itemHeight: Math.max(fontSize, boxHeight)\n    };\n};\nconst itemsEqual = (a, b)=>a !== null && b !== null && a.datasetIndex === b.datasetIndex && a.index === b.index;\nclass Legend extends Element {\n constructor(config){\n        super();\n        this._added = false;\n        this.legendHitBoxes = [];\n this._hoveredItem = null;\n        this.doughnutMode = false;\n        this.chart = config.chart;\n        this.options = config.options;\n        this.ctx = config.ctx;\n        this.legendItems = undefined;\n        this.columnSizes = undefined;\n        this.lineWidths = undefined;\n        this.maxHeight = undefined;\n        this.maxWidth = undefined;\n        this.top = undefined;\n        this.bottom = undefined;\n        this.left = undefined;\n        this.right = undefined;\n        this.height = undefined;\n        this.width = undefined;\n        this._margins = undefined;\n        this.position = undefined;\n        this.weight = undefined;\n        this.fullSize = undefined;\n    }\n    update(maxWidth, maxHeight, margins) {\n        this.maxWidth = maxWidth;\n        this.maxHeight = maxHeight;\n        this._margins = margins;\n        this.setDimensions();\n        this.buildLabels();\n        this.fit();\n    }\n    setDimensions() {\n        if (this.isHorizontal()) {\n            this.width = this.maxWidth;\n            this.left = this._margins.left;\n            this.right = this.width;\n        } else {\n            this.height = this.maxHeight;\n            this.top = this._margins.top;\n            this.bottom = this.height;\n        }\n    }\n    buildLabels() {\n        const labelOpts = this.options.labels || {};\n        let legendItems = callback(labelOpts.generateLabels, [\n            this.chart\n        ], this) || [];\n        if (labelOpts.filter) {\n            legendItems = legendItems.filter((item)=>labelOpts.filter(item, this.chart.data));\n        }\n        if (labelOpts.sort) {\n            legendItems = legendItems.sort((a, b)=>labelOpts.sort(a, b, this.chart.data));\n        }\n        if (this.options.reverse) {\n            legendItems.reverse();\n        }\n        this.legendItems = legendItems;\n    }\n    fit() {\n        const { options , ctx  } = this;\n        if (!options.display) {\n            this.width = this.height = 0;\n            return;\n        }\n        const labelOpts = options.labels;\n        const labelFont = toFont(labelOpts.font);\n        const fontSize = labelFont.size;\n        const titleHeight = this._computeTitleHeight();\n        const { boxWidth , itemHeight  } = getBoxSize(labelOpts, fontSize);\n        let width, height;\n        ctx.font = labelFont.string;\n        if (this.isHorizontal()) {\n            width = this.maxWidth;\n            height = this._fitRows(titleHeight, fontSize, boxWidth, itemHeight) + 10;\n        } else {\n            height = this.maxHeight;\n            width = this._fitCols(titleHeight, labelFont, boxWidth, itemHeight) + 10;\n        }\n        this.width = Math.min(width, options.maxWidth || this.maxWidth);\n        this.height = Math.min(height, options.maxHeight || this.maxHeight);\n    }\n _fitRows(titleHeight, fontSize, boxWidth, itemHeight) {\n        const { ctx , maxWidth , options: { labels: { padding  }  }  } = this;\n        const hitboxes = this.legendHitBoxes = [];\n        const lineWidths = this.lineWidths = [\n            0\n        ];\n        const lineHeight = itemHeight + padding;\n        let totalHeight = titleHeight;\n        ctx.textAlign = 'left';\n        ctx.textBaseline = 'middle';\n        let row = -1;\n        let top = -lineHeight;\n        this.legendItems.forEach((legendItem, i)=>{\n            const itemWidth = boxWidth + fontSize / 2 + ctx.measureText(legendItem.text).width;\n            if (i === 0 || lineWidths[lineWidths.length - 1] + itemWidth + 2 * padding > maxWidth) {\n                totalHeight += lineHeight;\n                lineWidths[lineWidths.length - (i > 0 ? 0 : 1)] = 0;\n                top += lineHeight;\n                row++;\n            }\n            hitboxes[i] = {\n                left: 0,\n                top,\n                row,\n                width: itemWidth,\n                height: itemHeight\n            };\n            lineWidths[lineWidths.length - 1] += itemWidth + padding;\n        });\n        return totalHeight;\n    }\n    _fitCols(titleHeight, labelFont, boxWidth, _itemHeight) {\n        const { ctx , maxHeight , options: { labels: { padding  }  }  } = this;\n        const hitboxes = this.legendHitBoxes = [];\n        const columnSizes = this.columnSizes = [];\n        const heightLimit = maxHeight - titleHeight;\n        let totalWidth = padding;\n        let currentColWidth = 0;\n        let currentColHeight = 0;\n        let left = 0;\n        let col = 0;\n        this.legendItems.forEach((legendItem, i)=>{\n            const { itemWidth , itemHeight  } = calculateItemSize(boxWidth, labelFont, ctx, legendItem, _itemHeight);\n            if (i > 0 && currentColHeight + itemHeight + 2 * padding > heightLimit) {\n                totalWidth += currentColWidth + padding;\n                columnSizes.push({\n                    width: currentColWidth,\n                    height: currentColHeight\n                });\n                left += currentColWidth + padding;\n                col++;\n                currentColWidth = currentColHeight = 0;\n            }\n            hitboxes[i] = {\n                left,\n                top: currentColHeight,\n                col,\n                width: itemWidth,\n                height: itemHeight\n            };\n            currentColWidth = Math.max(currentColWidth, itemWidth);\n            currentColHeight += itemHeight + padding;\n        });\n        totalWidth += currentColWidth;\n        columnSizes.push({\n            width: currentColWidth,\n            height: currentColHeight\n        });\n        return totalWidth;\n    }\n    adjustHitBoxes() {\n        if (!this.options.display) {\n            return;\n        }\n        const titleHeight = this._computeTitleHeight();\n        const { legendHitBoxes: hitboxes , options: { align , labels: { padding  } , rtl  }  } = this;\n        const rtlHelper = getRtlAdapter(rtl, this.left, this.width);\n        if (this.isHorizontal()) {\n            let row = 0;\n            let left = _alignStartEnd(align, this.left + padding, this.right - this.lineWidths[row]);\n            for (const hitbox of hitboxes){\n                if (row !== hitbox.row) {\n                    row = hitbox.row;\n                    left = _alignStartEnd(align, this.left + padding, this.right - this.lineWidths[row]);\n                }\n                hitbox.top += this.top + titleHeight + padding;\n                hitbox.left = rtlHelper.leftForLtr(rtlHelper.x(left), hitbox.width);\n                left += hitbox.width + padding;\n            }\n        } else {\n            let col = 0;\n            let top = _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - this.columnSizes[col].height);\n            for (const hitbox of hitboxes){\n                if (hitbox.col !== col) {\n                    col = hitbox.col;\n                    top = _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - this.columnSizes[col].height);\n                }\n                hitbox.top = top;\n                hitbox.left += this.left + padding;\n                hitbox.left = rtlHelper.leftForLtr(rtlHelper.x(hitbox.left), hitbox.width);\n                top += hitbox.height + padding;\n            }\n        }\n    }\n    isHorizontal() {\n        return this.options.position === 'top' || this.options.position === 'bottom';\n    }\n    draw() {\n        if (this.options.display) {\n            const ctx = this.ctx;\n            clipArea(ctx, this);\n            this._draw();\n            unclipArea(ctx);\n        }\n    }\n _draw() {\n        const { options: opts , columnSizes , lineWidths , ctx  } = this;\n        const { align , labels: labelOpts  } = opts;\n        const defaultColor = defaults.color;\n        const rtlHelper = getRtlAdapter(opts.rtl, this.left, this.width);\n        const labelFont = toFont(labelOpts.font);\n        const { padding  } = labelOpts;\n        const fontSize = labelFont.size;\n        const halfFontSize = fontSize / 2;\n        let cursor;\n        this.drawTitle();\n        ctx.textAlign = rtlHelper.textAlign('left');\n        ctx.textBaseline = 'middle';\n        ctx.lineWidth = 0.5;\n        ctx.font = labelFont.string;\n        const { boxWidth , boxHeight , itemHeight  } = getBoxSize(labelOpts, fontSize);\n        const drawLegendBox = function(x, y, legendItem) {\n            if (isNaN(boxWidth) || boxWidth <= 0 || isNaN(boxHeight) || boxHeight < 0) {\n                return;\n            }\n            ctx.save();\n            const lineWidth = valueOrDefault(legendItem.lineWidth, 1);\n            ctx.fillStyle = valueOrDefault(legendItem.fillStyle, defaultColor);\n            ctx.lineCap = valueOrDefault(legendItem.lineCap, 'butt');\n            ctx.lineDashOffset = valueOrDefault(legendItem.lineDashOffset, 0);\n            ctx.lineJoin = valueOrDefault(legendItem.lineJoin, 'miter');\n            ctx.lineWidth = lineWidth;\n            ctx.strokeStyle = valueOrDefault(legendItem.strokeStyle, defaultColor);\n            ctx.setLineDash(valueOrDefault(legendItem.lineDash, []));\n            if (labelOpts.usePointStyle) {\n                const drawOptions = {\n                    radius: boxHeight * Math.SQRT2 / 2,\n                    pointStyle: legendItem.pointStyle,\n                    rotation: legendItem.rotation,\n                    borderWidth: lineWidth\n                };\n                const centerX = rtlHelper.xPlus(x, boxWidth / 2);\n                const centerY = y + halfFontSize;\n                drawPointLegend(ctx, drawOptions, centerX, centerY, labelOpts.pointStyleWidth && boxWidth);\n            } else {\n                const yBoxTop = y + Math.max((fontSize - boxHeight) / 2, 0);\n                const xBoxLeft = rtlHelper.leftForLtr(x, boxWidth);\n                const borderRadius = toTRBLCorners(legendItem.borderRadius);\n                ctx.beginPath();\n                if (Object.values(borderRadius).some((v)=>v !== 0)) {\n                    addRoundedRectPath(ctx, {\n                        x: xBoxLeft,\n                        y: yBoxTop,\n                        w: boxWidth,\n                        h: boxHeight,\n                        radius: borderRadius\n                    });\n                } else {\n                    ctx.rect(xBoxLeft, yBoxTop, boxWidth, boxHeight);\n                }\n                ctx.fill();\n                if (lineWidth !== 0) {\n                    ctx.stroke();\n                }\n            }\n            ctx.restore();\n        };\n        const fillText = function(x, y, legendItem) {\n            renderText(ctx, legendItem.text, x, y + itemHeight / 2, labelFont, {\n                strikethrough: legendItem.hidden,\n                textAlign: rtlHelper.textAlign(legendItem.textAlign)\n            });\n        };\n        const isHorizontal = this.isHorizontal();\n        const titleHeight = this._computeTitleHeight();\n        if (isHorizontal) {\n            cursor = {\n                x: _alignStartEnd(align, this.left + padding, this.right - lineWidths[0]),\n                y: this.top + padding + titleHeight,\n                line: 0\n            };\n        } else {\n            cursor = {\n                x: this.left + padding,\n                y: _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - columnSizes[0].height),\n                line: 0\n            };\n        }\n        overrideTextDirection(this.ctx, opts.textDirection);\n        const lineHeight = itemHeight + padding;\n        this.legendItems.forEach((legendItem, i)=>{\n            ctx.strokeStyle = legendItem.fontColor;\n            ctx.fillStyle = legendItem.fontColor;\n            const textWidth = ctx.measureText(legendItem.text).width;\n            const textAlign = rtlHelper.textAlign(legendItem.textAlign || (legendItem.textAlign = labelOpts.textAlign));\n            const width = boxWidth + halfFontSize + textWidth;\n            let x = cursor.x;\n            let y = cursor.y;\n            rtlHelper.setWidth(this.width);\n            if (isHorizontal) {\n                if (i > 0 && x + width + padding > this.right) {\n                    y = cursor.y += lineHeight;\n                    cursor.line++;\n                    x = cursor.x = _alignStartEnd(align, this.left + padding, this.right - lineWidths[cursor.line]);\n                }\n            } else if (i > 0 && y + lineHeight > this.bottom) {\n                x = cursor.x = x + columnSizes[cursor.line].width + padding;\n                cursor.line++;\n                y = cursor.y = _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - columnSizes[cursor.line].height);\n            }\n            const realX = rtlHelper.x(x);\n            drawLegendBox(realX, y, legendItem);\n            x = _textX(textAlign, x + boxWidth + halfFontSize, isHorizontal ? x + width : this.right, opts.rtl);\n            fillText(rtlHelper.x(x), y, legendItem);\n            if (isHorizontal) {\n                cursor.x += width + padding;\n            } else if (typeof legendItem.text !== 'string') {\n                const fontLineHeight = labelFont.lineHeight;\n                cursor.y += calculateLegendItemHeight(legendItem, fontLineHeight) + padding;\n            } else {\n                cursor.y += lineHeight;\n            }\n        });\n        restoreTextDirection(this.ctx, opts.textDirection);\n    }\n drawTitle() {\n        const opts = this.options;\n        const titleOpts = opts.title;\n        const titleFont = toFont(titleOpts.font);\n        const titlePadding = toPadding(titleOpts.padding);\n        if (!titleOpts.display) {\n            return;\n        }\n        const rtlHelper = getRtlAdapter(opts.rtl, this.left, this.width);\n        const ctx = this.ctx;\n        const position = titleOpts.position;\n        const halfFontSize = titleFont.size / 2;\n        const topPaddingPlusHalfFontSize = titlePadding.top + halfFontSize;\n        let y;\n        let left = this.left;\n        let maxWidth = this.width;\n        if (this.isHorizontal()) {\n            maxWidth = Math.max(...this.lineWidths);\n            y = this.top + topPaddingPlusHalfFontSize;\n            left = _alignStartEnd(opts.align, left, this.right - maxWidth);\n        } else {\n            const maxHeight = this.columnSizes.reduce((acc, size)=>Math.max(acc, size.height), 0);\n            y = topPaddingPlusHalfFontSize + _alignStartEnd(opts.align, this.top, this.bottom - maxHeight - opts.labels.padding - this._computeTitleHeight());\n        }\n        const x = _alignStartEnd(position, left, left + maxWidth);\n        ctx.textAlign = rtlHelper.textAlign(_toLeftRightCenter(position));\n        ctx.textBaseline = 'middle';\n        ctx.strokeStyle = titleOpts.color;\n        ctx.fillStyle = titleOpts.color;\n        ctx.font = titleFont.string;\n        renderText(ctx, titleOpts.text, x, y, titleFont);\n    }\n _computeTitleHeight() {\n        const titleOpts = this.options.title;\n        const titleFont = toFont(titleOpts.font);\n        const titlePadding = toPadding(titleOpts.padding);\n        return titleOpts.display ? titleFont.lineHeight + titlePadding.height : 0;\n    }\n _getLegendItemAt(x, y) {\n        let i, hitBox, lh;\n        if (_isBetween(x, this.left, this.right) && _isBetween(y, this.top, this.bottom)) {\n            lh = this.legendHitBoxes;\n            for(i = 0; i < lh.length; ++i){\n                hitBox = lh[i];\n                if (_isBetween(x, hitBox.left, hitBox.left + hitBox.width) && _isBetween(y, hitBox.top, hitBox.top + hitBox.height)) {\n                    return this.legendItems[i];\n                }\n            }\n        }\n        return null;\n    }\n handleEvent(e) {\n        const opts = this.options;\n        if (!isListened(e.type, opts)) {\n            return;\n        }\n        const hoveredItem = this._getLegendItemAt(e.x, e.y);\n        if (e.type === 'mousemove' || e.type === 'mouseout') {\n            const previous = this._hoveredItem;\n            const sameItem = itemsEqual(previous, hoveredItem);\n            if (previous && !sameItem) {\n                callback(opts.onLeave, [\n                    e,\n                    previous,\n                    this\n                ], this);\n            }\n            this._hoveredItem = hoveredItem;\n            if (hoveredItem && !sameItem) {\n                callback(opts.onHover, [\n                    e,\n                    hoveredItem,\n                    this\n                ], this);\n            }\n        } else if (hoveredItem) {\n            callback(opts.onClick, [\n                e,\n                hoveredItem,\n                this\n            ], this);\n        }\n    }\n}\nfunction calculateItemSize(boxWidth, labelFont, ctx, legendItem, _itemHeight) {\n    const itemWidth = calculateItemWidth(legendItem, boxWidth, labelFont, ctx);\n    const itemHeight = calculateItemHeight(_itemHeight, legendItem, labelFont.lineHeight);\n    return {\n        itemWidth,\n        itemHeight\n    };\n}\nfunction calculateItemWidth(legendItem, boxWidth, labelFont, ctx) {\n    let legendItemText = legendItem.text;\n    if (legendItemText && typeof legendItemText !== 'string') {\n        legendItemText = legendItemText.reduce((a, b)=>a.length > b.length ? a : b);\n    }\n    return boxWidth + labelFont.size / 2 + ctx.measureText(legendItemText).width;\n}\nfunction calculateItemHeight(_itemHeight, legendItem, fontLineHeight) {\n    let itemHeight = _itemHeight;\n    if (typeof legendItem.text !== 'string') {\n        itemHeight = calculateLegendItemHeight(legendItem, fontLineHeight);\n    }\n    return itemHeight;\n}\nfunction calculateLegendItemHeight(legendItem, fontLineHeight) {\n    const labelHeight = legendItem.text ? legendItem.text.length : 0;\n    return fontLineHeight * labelHeight;\n}\nfunction isListened(type, opts) {\n    if ((type === 'mousemove' || type === 'mouseout') && (opts.onHover || opts.onLeave)) {\n        return true;\n    }\n    if (opts.onClick && (type === 'click' || type === 'mouseup')) {\n        return true;\n    }\n    return false;\n}\nvar plugin_legend = {\n    id: 'legend',\n _element: Legend,\n    start (chart, _args, options) {\n        const legend = chart.legend = new Legend({\n            ctx: chart.ctx,\n            options,\n            chart\n        });\n        layouts.configure(chart, legend, options);\n        layouts.addBox(chart, legend);\n    },\n    stop (chart) {\n        layouts.removeBox(chart, chart.legend);\n        delete chart.legend;\n    },\n    beforeUpdate (chart, _args, options) {\n        const legend = chart.legend;\n        layouts.configure(chart, legend, options);\n        legend.options = options;\n    },\n    afterUpdate (chart) {\n        const legend = chart.legend;\n        legend.buildLabels();\n        legend.adjustHitBoxes();\n    },\n    afterEvent (chart, args) {\n        if (!args.replay) {\n            chart.legend.handleEvent(args.event);\n        }\n    },\n    defaults: {\n        display: true,\n        position: 'top',\n        align: 'center',\n        fullSize: true,\n        reverse: false,\n        weight: 1000,\n        onClick (e, legendItem, legend) {\n            const index = legendItem.datasetIndex;\n            const ci = legend.chart;\n            if (ci.isDatasetVisible(index)) {\n                ci.hide(index);\n                legendItem.hidden = true;\n            } else {\n                ci.show(index);\n                legendItem.hidden = false;\n            }\n        },\n        onHover: null,\n        onLeave: null,\n        labels: {\n            color: (ctx)=>ctx.chart.options.color,\n            boxWidth: 40,\n            padding: 10,\n            generateLabels (chart) {\n                const datasets = chart.data.datasets;\n                const { labels: { usePointStyle , pointStyle , textAlign , color , useBorderRadius , borderRadius  }  } = chart.legend.options;\n                return chart._getSortedDatasetMetas().map((meta)=>{\n                    const style = meta.controller.getStyle(usePointStyle ? 0 : undefined);\n                    const borderWidth = toPadding(style.borderWidth);\n                    return {\n                        text: datasets[meta.index].label,\n                        fillStyle: style.backgroundColor,\n                        fontColor: color,\n                        hidden: !meta.visible,\n                        lineCap: style.borderCapStyle,\n                        lineDash: style.borderDash,\n                        lineDashOffset: style.borderDashOffset,\n                        lineJoin: style.borderJoinStyle,\n                        lineWidth: (borderWidth.width + borderWidth.height) / 4,\n                        strokeStyle: style.borderColor,\n                        pointStyle: pointStyle || style.pointStyle,\n                        rotation: style.rotation,\n                        textAlign: textAlign || style.textAlign,\n                        borderRadius: useBorderRadius && (borderRadius || style.borderRadius),\n                        datasetIndex: meta.index\n                    };\n                }, this);\n            }\n        },\n        title: {\n            color: (ctx)=>ctx.chart.options.color,\n            display: false,\n            position: 'center',\n            text: ''\n        }\n    },\n    descriptors: {\n        _scriptable: (name)=>!name.startsWith('on'),\n        labels: {\n            _scriptable: (name)=>![\n                    'generateLabels',\n                    'filter',\n                    'sort'\n                ].includes(name)\n        }\n    }\n};\n\nclass Title extends Element {\n constructor(config){\n        super();\n        this.chart = config.chart;\n        this.options = config.options;\n        this.ctx = config.ctx;\n        this._padding = undefined;\n        this.top = undefined;\n        this.bottom = undefined;\n        this.left = undefined;\n        this.right = undefined;\n        this.width = undefined;\n        this.height = undefined;\n        this.position = undefined;\n        this.weight = undefined;\n        this.fullSize = undefined;\n    }\n    update(maxWidth, maxHeight) {\n        const opts = this.options;\n        this.left = 0;\n        this.top = 0;\n        if (!opts.display) {\n            this.width = this.height = this.right = this.bottom = 0;\n            return;\n        }\n        this.width = this.right = maxWidth;\n        this.height = this.bottom = maxHeight;\n        const lineCount = isArray(opts.text) ? opts.text.length : 1;\n        this._padding = toPadding(opts.padding);\n        const textSize = lineCount * toFont(opts.font).lineHeight + this._padding.height;\n        if (this.isHorizontal()) {\n            this.height = textSize;\n        } else {\n            this.width = textSize;\n        }\n    }\n    isHorizontal() {\n        const pos = this.options.position;\n        return pos === 'top' || pos === 'bottom';\n    }\n    _drawArgs(offset) {\n        const { top , left , bottom , right , options  } = this;\n        const align = options.align;\n        let rotation = 0;\n        let maxWidth, titleX, titleY;\n        if (this.isHorizontal()) {\n            titleX = _alignStartEnd(align, left, right);\n            titleY = top + offset;\n            maxWidth = right - left;\n        } else {\n            if (options.position === 'left') {\n                titleX = left + offset;\n                titleY = _alignStartEnd(align, bottom, top);\n                rotation = PI * -0.5;\n            } else {\n                titleX = right - offset;\n                titleY = _alignStartEnd(align, top, bottom);\n                rotation = PI * 0.5;\n            }\n            maxWidth = bottom - top;\n        }\n        return {\n            titleX,\n            titleY,\n            maxWidth,\n            rotation\n        };\n    }\n    draw() {\n        const ctx = this.ctx;\n        const opts = this.options;\n        if (!opts.display) {\n            return;\n        }\n        const fontOpts = toFont(opts.font);\n        const lineHeight = fontOpts.lineHeight;\n        const offset = lineHeight / 2 + this._padding.top;\n        const { titleX , titleY , maxWidth , rotation  } = this._drawArgs(offset);\n        renderText(ctx, opts.text, 0, 0, fontOpts, {\n            color: opts.color,\n            maxWidth,\n            rotation,\n            textAlign: _toLeftRightCenter(opts.align),\n            textBaseline: 'middle',\n            translation: [\n                titleX,\n                titleY\n            ]\n        });\n    }\n}\nfunction createTitle(chart, titleOpts) {\n    const title = new Title({\n        ctx: chart.ctx,\n        options: titleOpts,\n        chart\n    });\n    layouts.configure(chart, title, titleOpts);\n    layouts.addBox(chart, title);\n    chart.titleBlock = title;\n}\nvar plugin_title = {\n    id: 'title',\n _element: Title,\n    start (chart, _args, options) {\n        createTitle(chart, options);\n    },\n    stop (chart) {\n        const titleBlock = chart.titleBlock;\n        layouts.removeBox(chart, titleBlock);\n        delete chart.titleBlock;\n    },\n    beforeUpdate (chart, _args, options) {\n        const title = chart.titleBlock;\n        layouts.configure(chart, title, options);\n        title.options = options;\n    },\n    defaults: {\n        align: 'center',\n        display: false,\n        font: {\n            weight: 'bold'\n        },\n        fullSize: true,\n        padding: 10,\n        position: 'top',\n        text: '',\n        weight: 2000\n    },\n    defaultRoutes: {\n        color: 'color'\n    },\n    descriptors: {\n        _scriptable: true,\n        _indexable: false\n    }\n};\n\nconst map = new WeakMap();\nvar plugin_subtitle = {\n    id: 'subtitle',\n    start (chart, _args, options) {\n        const title = new Title({\n            ctx: chart.ctx,\n            options,\n            chart\n        });\n        layouts.configure(chart, title, options);\n        layouts.addBox(chart, title);\n        map.set(chart, title);\n    },\n    stop (chart) {\n        layouts.removeBox(chart, map.get(chart));\n        map.delete(chart);\n    },\n    beforeUpdate (chart, _args, options) {\n        const title = map.get(chart);\n        layouts.configure(chart, title, options);\n        title.options = options;\n    },\n    defaults: {\n        align: 'center',\n        display: false,\n        font: {\n            weight: 'normal'\n        },\n        fullSize: true,\n        padding: 0,\n        position: 'top',\n        text: '',\n        weight: 1500\n    },\n    defaultRoutes: {\n        color: 'color'\n    },\n    descriptors: {\n        _scriptable: true,\n        _indexable: false\n    }\n};\n\nconst positioners = {\n average (items) {\n        if (!items.length) {\n            return false;\n        }\n        let i, len;\n        let xSet = new Set();\n        let y = 0;\n        let count = 0;\n        for(i = 0, len = items.length; i < len; ++i){\n            const el = items[i].element;\n            if (el && el.hasValue()) {\n                const pos = el.tooltipPosition();\n                xSet.add(pos.x);\n                y += pos.y;\n                ++count;\n            }\n        }\n        if (count === 0 || xSet.size === 0) {\n            return false;\n        }\n        const xAverage = [\n            ...xSet\n        ].reduce((a, b)=>a + b) / xSet.size;\n        return {\n            x: xAverage,\n            y: y / count\n        };\n    },\n nearest (items, eventPosition) {\n        if (!items.length) {\n            return false;\n        }\n        let x = eventPosition.x;\n        let y = eventPosition.y;\n        let minDistance = Number.POSITIVE_INFINITY;\n        let i, len, nearestElement;\n        for(i = 0, len = items.length; i < len; ++i){\n            const el = items[i].element;\n            if (el && el.hasValue()) {\n                const center = el.getCenterPoint();\n                const d = distanceBetweenPoints(eventPosition, center);\n                if (d < minDistance) {\n                    minDistance = d;\n                    nearestElement = el;\n                }\n            }\n        }\n        if (nearestElement) {\n            const tp = nearestElement.tooltipPosition();\n            x = tp.x;\n            y = tp.y;\n        }\n        return {\n            x,\n            y\n        };\n    }\n};\nfunction pushOrConcat(base, toPush) {\n    if (toPush) {\n        if (isArray(toPush)) {\n            Array.prototype.push.apply(base, toPush);\n        } else {\n            base.push(toPush);\n        }\n    }\n    return base;\n}\n function splitNewlines(str) {\n    if ((typeof str === 'string' || str instanceof String) && str.indexOf('\\n') > -1) {\n        return str.split('\\n');\n    }\n    return str;\n}\n function createTooltipItem(chart, item) {\n    const { element , datasetIndex , index  } = item;\n    const controller = chart.getDatasetMeta(datasetIndex).controller;\n    const { label , value  } = controller.getLabelAndValue(index);\n    return {\n        chart,\n        label,\n        parsed: controller.getParsed(index),\n        raw: chart.data.datasets[datasetIndex].data[index],\n        formattedValue: value,\n        dataset: controller.getDataset(),\n        dataIndex: index,\n        datasetIndex,\n        element\n    };\n}\n function getTooltipSize(tooltip, options) {\n    const ctx = tooltip.chart.ctx;\n    const { body , footer , title  } = tooltip;\n    const { boxWidth , boxHeight  } = options;\n    const bodyFont = toFont(options.bodyFont);\n    const titleFont = toFont(options.titleFont);\n    const footerFont = toFont(options.footerFont);\n    const titleLineCount = title.length;\n    const footerLineCount = footer.length;\n    const bodyLineItemCount = body.length;\n    const padding = toPadding(options.padding);\n    let height = padding.height;\n    let width = 0;\n    let combinedBodyLength = body.reduce((count, bodyItem)=>count + bodyItem.before.length + bodyItem.lines.length + bodyItem.after.length, 0);\n    combinedBodyLength += tooltip.beforeBody.length + tooltip.afterBody.length;\n    if (titleLineCount) {\n        height += titleLineCount * titleFont.lineHeight + (titleLineCount - 1) * options.titleSpacing + options.titleMarginBottom;\n    }\n    if (combinedBodyLength) {\n        const bodyLineHeight = options.displayColors ? Math.max(boxHeight, bodyFont.lineHeight) : bodyFont.lineHeight;\n        height += bodyLineItemCount * bodyLineHeight + (combinedBodyLength - bodyLineItemCount) * bodyFont.lineHeight + (combinedBodyLength - 1) * options.bodySpacing;\n    }\n    if (footerLineCount) {\n        height += options.footerMarginTop + footerLineCount * footerFont.lineHeight + (footerLineCount - 1) * options.footerSpacing;\n    }\n    let widthPadding = 0;\n    const maxLineWidth = function(line) {\n        width = Math.max(width, ctx.measureText(line).width + widthPadding);\n    };\n    ctx.save();\n    ctx.font = titleFont.string;\n    each(tooltip.title, maxLineWidth);\n    ctx.font = bodyFont.string;\n    each(tooltip.beforeBody.concat(tooltip.afterBody), maxLineWidth);\n    widthPadding = options.displayColors ? boxWidth + 2 + options.boxPadding : 0;\n    each(body, (bodyItem)=>{\n        each(bodyItem.before, maxLineWidth);\n        each(bodyItem.lines, maxLineWidth);\n        each(bodyItem.after, maxLineWidth);\n    });\n    widthPadding = 0;\n    ctx.font = footerFont.string;\n    each(tooltip.footer, maxLineWidth);\n    ctx.restore();\n    width += padding.width;\n    return {\n        width,\n        height\n    };\n}\nfunction determineYAlign(chart, size) {\n    const { y , height  } = size;\n    if (y < height / 2) {\n        return 'top';\n    } else if (y > chart.height - height / 2) {\n        return 'bottom';\n    }\n    return 'center';\n}\nfunction doesNotFitWithAlign(xAlign, chart, options, size) {\n    const { x , width  } = size;\n    const caret = options.caretSize + options.caretPadding;\n    if (xAlign === 'left' && x + width + caret > chart.width) {\n        return true;\n    }\n    if (xAlign === 'right' && x - width - caret < 0) {\n        return true;\n    }\n}\nfunction determineXAlign(chart, options, size, yAlign) {\n    const { x , width  } = size;\n    const { width: chartWidth , chartArea: { left , right  }  } = chart;\n    let xAlign = 'center';\n    if (yAlign === 'center') {\n        xAlign = x <= (left + right) / 2 ? 'left' : 'right';\n    } else if (x <= width / 2) {\n        xAlign = 'left';\n    } else if (x >= chartWidth - width / 2) {\n        xAlign = 'right';\n    }\n    if (doesNotFitWithAlign(xAlign, chart, options, size)) {\n        xAlign = 'center';\n    }\n    return xAlign;\n}\n function determineAlignment(chart, options, size) {\n    const yAlign = size.yAlign || options.yAlign || determineYAlign(chart, size);\n    return {\n        xAlign: size.xAlign || options.xAlign || determineXAlign(chart, options, size, yAlign),\n        yAlign\n    };\n}\nfunction alignX(size, xAlign) {\n    let { x , width  } = size;\n    if (xAlign === 'right') {\n        x -= width;\n    } else if (xAlign === 'center') {\n        x -= width / 2;\n    }\n    return x;\n}\nfunction alignY(size, yAlign, paddingAndSize) {\n    let { y , height  } = size;\n    if (yAlign === 'top') {\n        y += paddingAndSize;\n    } else if (yAlign === 'bottom') {\n        y -= height + paddingAndSize;\n    } else {\n        y -= height / 2;\n    }\n    return y;\n}\n function getBackgroundPoint(options, size, alignment, chart) {\n    const { caretSize , caretPadding , cornerRadius  } = options;\n    const { xAlign , yAlign  } = alignment;\n    const paddingAndSize = caretSize + caretPadding;\n    const { topLeft , topRight , bottomLeft , bottomRight  } = toTRBLCorners(cornerRadius);\n    let x = alignX(size, xAlign);\n    const y = alignY(size, yAlign, paddingAndSize);\n    if (yAlign === 'center') {\n        if (xAlign === 'left') {\n            x += paddingAndSize;\n        } else if (xAlign === 'right') {\n            x -= paddingAndSize;\n        }\n    } else if (xAlign === 'left') {\n        x -= Math.max(topLeft, bottomLeft) + caretSize;\n    } else if (xAlign === 'right') {\n        x += Math.max(topRight, bottomRight) + caretSize;\n    }\n    return {\n        x: _limitValue(x, 0, chart.width - size.width),\n        y: _limitValue(y, 0, chart.height - size.height)\n    };\n}\nfunction getAlignedX(tooltip, align, options) {\n    const padding = toPadding(options.padding);\n    return align === 'center' ? tooltip.x + tooltip.width / 2 : align === 'right' ? tooltip.x + tooltip.width - padding.right : tooltip.x + padding.left;\n}\n function getBeforeAfterBodyLines(callback) {\n    return pushOrConcat([], splitNewlines(callback));\n}\nfunction createTooltipContext(parent, tooltip, tooltipItems) {\n    return createContext(parent, {\n        tooltip,\n        tooltipItems,\n        type: 'tooltip'\n    });\n}\nfunction overrideCallbacks(callbacks, context) {\n    const override = context && context.dataset && context.dataset.tooltip && context.dataset.tooltip.callbacks;\n    return override ? callbacks.override(override) : callbacks;\n}\nconst defaultCallbacks = {\n    beforeTitle: noop,\n    title (tooltipItems) {\n        if (tooltipItems.length > 0) {\n            const item = tooltipItems[0];\n            const labels = item.chart.data.labels;\n            const labelCount = labels ? labels.length : 0;\n            if (this && this.options && this.options.mode === 'dataset') {\n                return item.dataset.label || '';\n            } else if (item.label) {\n                return item.label;\n            } else if (labelCount > 0 && item.dataIndex < labelCount) {\n                return labels[item.dataIndex];\n            }\n        }\n        return '';\n    },\n    afterTitle: noop,\n    beforeBody: noop,\n    beforeLabel: noop,\n    label (tooltipItem) {\n        if (this && this.options && this.options.mode === 'dataset') {\n            return tooltipItem.label + ': ' + tooltipItem.formattedValue || tooltipItem.formattedValue;\n        }\n        let label = tooltipItem.dataset.label || '';\n        if (label) {\n            label += ': ';\n        }\n        const value = tooltipItem.formattedValue;\n        if (!isNullOrUndef(value)) {\n            label += value;\n        }\n        return label;\n    },\n    labelColor (tooltipItem) {\n        const meta = tooltipItem.chart.getDatasetMeta(tooltipItem.datasetIndex);\n        const options = meta.controller.getStyle(tooltipItem.dataIndex);\n        return {\n            borderColor: options.borderColor,\n            backgroundColor: options.backgroundColor,\n            borderWidth: options.borderWidth,\n            borderDash: options.borderDash,\n            borderDashOffset: options.borderDashOffset,\n            borderRadius: 0\n        };\n    },\n    labelTextColor () {\n        return this.options.bodyColor;\n    },\n    labelPointStyle (tooltipItem) {\n        const meta = tooltipItem.chart.getDatasetMeta(tooltipItem.datasetIndex);\n        const options = meta.controller.getStyle(tooltipItem.dataIndex);\n        return {\n            pointStyle: options.pointStyle,\n            rotation: options.rotation\n        };\n    },\n    afterLabel: noop,\n    afterBody: noop,\n    beforeFooter: noop,\n    footer: noop,\n    afterFooter: noop\n};\n function invokeCallbackWithFallback(callbacks, name, ctx, arg) {\n    const result = callbacks[name].call(ctx, arg);\n    if (typeof result === 'undefined') {\n        return defaultCallbacks[name].call(ctx, arg);\n    }\n    return result;\n}\nclass Tooltip extends Element {\n static positioners = positioners;\n    constructor(config){\n        super();\n        this.opacity = 0;\n        this._active = [];\n        this._eventPosition = undefined;\n        this._size = undefined;\n        this._cachedAnimations = undefined;\n        this._tooltipItems = [];\n        this.$animations = undefined;\n        this.$context = undefined;\n        this.chart = config.chart;\n        this.options = config.options;\n        this.dataPoints = undefined;\n        this.title = undefined;\n        this.beforeBody = undefined;\n        this.body = undefined;\n        this.afterBody = undefined;\n        this.footer = undefined;\n        this.xAlign = undefined;\n        this.yAlign = undefined;\n        this.x = undefined;\n        this.y = undefined;\n        this.height = undefined;\n        this.width = undefined;\n        this.caretX = undefined;\n        this.caretY = undefined;\n        this.labelColors = undefined;\n        this.labelPointStyles = undefined;\n        this.labelTextColors = undefined;\n    }\n    initialize(options) {\n        this.options = options;\n        this._cachedAnimations = undefined;\n        this.$context = undefined;\n    }\n _resolveAnimations() {\n        const cached = this._cachedAnimations;\n        if (cached) {\n            return cached;\n        }\n        const chart = this.chart;\n        const options = this.options.setContext(this.getContext());\n        const opts = options.enabled && chart.options.animation && options.animations;\n        const animations = new Animations(this.chart, opts);\n        if (opts._cacheable) {\n            this._cachedAnimations = Object.freeze(animations);\n        }\n        return animations;\n    }\n getContext() {\n        return this.$context || (this.$context = createTooltipContext(this.chart.getContext(), this, this._tooltipItems));\n    }\n    getTitle(context, options) {\n        const { callbacks  } = options;\n        const beforeTitle = invokeCallbackWithFallback(callbacks, 'beforeTitle', this, context);\n        const title = invokeCallbackWithFallback(callbacks, 'title', this, context);\n        const afterTitle = invokeCallbackWithFallback(callbacks, 'afterTitle', this, context);\n        let lines = [];\n        lines = pushOrConcat(lines, splitNewlines(beforeTitle));\n        lines = pushOrConcat(lines, splitNewlines(title));\n        lines = pushOrConcat(lines, splitNewlines(afterTitle));\n        return lines;\n    }\n    getBeforeBody(tooltipItems, options) {\n        return getBeforeAfterBodyLines(invokeCallbackWithFallback(options.callbacks, 'beforeBody', this, tooltipItems));\n    }\n    getBody(tooltipItems, options) {\n        const { callbacks  } = options;\n        const bodyItems = [];\n        each(tooltipItems, (context)=>{\n            const bodyItem = {\n                before: [],\n                lines: [],\n                after: []\n            };\n            const scoped = overrideCallbacks(callbacks, context);\n            pushOrConcat(bodyItem.before, splitNewlines(invokeCallbackWithFallback(scoped, 'beforeLabel', this, context)));\n            pushOrConcat(bodyItem.lines, invokeCallbackWithFallback(scoped, 'label', this, context));\n            pushOrConcat(bodyItem.after, splitNewlines(invokeCallbackWithFallback(scoped, 'afterLabel', this, context)));\n            bodyItems.push(bodyItem);\n        });\n        return bodyItems;\n    }\n    getAfterBody(tooltipItems, options) {\n        return getBeforeAfterBodyLines(invokeCallbackWithFallback(options.callbacks, 'afterBody', this, tooltipItems));\n    }\n    getFooter(tooltipItems, options) {\n        const { callbacks  } = options;\n        const beforeFooter = invokeCallbackWithFallback(callbacks, 'beforeFooter', this, tooltipItems);\n        const footer = invokeCallbackWithFallback(callbacks, 'footer', this, tooltipItems);\n        const afterFooter = invokeCallbackWithFallback(callbacks, 'afterFooter', this, tooltipItems);\n        let lines = [];\n        lines = pushOrConcat(lines, splitNewlines(beforeFooter));\n        lines = pushOrConcat(lines, splitNewlines(footer));\n        lines = pushOrConcat(lines, splitNewlines(afterFooter));\n        return lines;\n    }\n _createItems(options) {\n        const active = this._active;\n        const data = this.chart.data;\n        const labelColors = [];\n        const labelPointStyles = [];\n        const labelTextColors = [];\n        let tooltipItems = [];\n        let i, len;\n        for(i = 0, len = active.length; i < len; ++i){\n            tooltipItems.push(createTooltipItem(this.chart, active[i]));\n        }\n        if (options.filter) {\n            tooltipItems = tooltipItems.filter((element, index, array)=>options.filter(element, index, array, data));\n        }\n        if (options.itemSort) {\n            tooltipItems = tooltipItems.sort((a, b)=>options.itemSort(a, b, data));\n        }\n        each(tooltipItems, (context)=>{\n            const scoped = overrideCallbacks(options.callbacks, context);\n            labelColors.push(invokeCallbackWithFallback(scoped, 'labelColor', this, context));\n            labelPointStyles.push(invokeCallbackWithFallback(scoped, 'labelPointStyle', this, context));\n            labelTextColors.push(invokeCallbackWithFallback(scoped, 'labelTextColor', this, context));\n        });\n        this.labelColors = labelColors;\n        this.labelPointStyles = labelPointStyles;\n        this.labelTextColors = labelTextColors;\n        this.dataPoints = tooltipItems;\n        return tooltipItems;\n    }\n    update(changed, replay) {\n        const options = this.options.setContext(this.getContext());\n        const active = this._active;\n        let properties;\n        let tooltipItems = [];\n        if (!active.length) {\n            if (this.opacity !== 0) {\n                properties = {\n                    opacity: 0\n                };\n            }\n        } else {\n            const position = positioners[options.position].call(this, active, this._eventPosition);\n            tooltipItems = this._createItems(options);\n            this.title = this.getTitle(tooltipItems, options);\n            this.beforeBody = this.getBeforeBody(tooltipItems, options);\n            this.body = this.getBody(tooltipItems, options);\n            this.afterBody = this.getAfterBody(tooltipItems, options);\n            this.footer = this.getFooter(tooltipItems, options);\n            const size = this._size = getTooltipSize(this, options);\n            const positionAndSize = Object.assign({}, position, size);\n            const alignment = determineAlignment(this.chart, options, positionAndSize);\n            const backgroundPoint = getBackgroundPoint(options, positionAndSize, alignment, this.chart);\n            this.xAlign = alignment.xAlign;\n            this.yAlign = alignment.yAlign;\n            properties = {\n                opacity: 1,\n                x: backgroundPoint.x,\n                y: backgroundPoint.y,\n                width: size.width,\n                height: size.height,\n                caretX: position.x,\n                caretY: position.y\n            };\n        }\n        this._tooltipItems = tooltipItems;\n        this.$context = undefined;\n        if (properties) {\n            this._resolveAnimations().update(this, properties);\n        }\n        if (changed && options.external) {\n            options.external.call(this, {\n                chart: this.chart,\n                tooltip: this,\n                replay\n            });\n        }\n    }\n    drawCaret(tooltipPoint, ctx, size, options) {\n        const caretPosition = this.getCaretPosition(tooltipPoint, size, options);\n        ctx.lineTo(caretPosition.x1, caretPosition.y1);\n        ctx.lineTo(caretPosition.x2, caretPosition.y2);\n        ctx.lineTo(caretPosition.x3, caretPosition.y3);\n    }\n    getCaretPosition(tooltipPoint, size, options) {\n        const { xAlign , yAlign  } = this;\n        const { caretSize , cornerRadius  } = options;\n        const { topLeft , topRight , bottomLeft , bottomRight  } = toTRBLCorners(cornerRadius);\n        const { x: ptX , y: ptY  } = tooltipPoint;\n        const { width , height  } = size;\n        let x1, x2, x3, y1, y2, y3;\n        if (yAlign === 'center') {\n            y2 = ptY + height / 2;\n            if (xAlign === 'left') {\n                x1 = ptX;\n                x2 = x1 - caretSize;\n                y1 = y2 + caretSize;\n                y3 = y2 - caretSize;\n            } else {\n                x1 = ptX + width;\n                x2 = x1 + caretSize;\n                y1 = y2 - caretSize;\n                y3 = y2 + caretSize;\n            }\n            x3 = x1;\n        } else {\n            if (xAlign === 'left') {\n                x2 = ptX + Math.max(topLeft, bottomLeft) + caretSize;\n            } else if (xAlign === 'right') {\n                x2 = ptX + width - Math.max(topRight, bottomRight) - caretSize;\n            } else {\n                x2 = this.caretX;\n            }\n            if (yAlign === 'top') {\n                y1 = ptY;\n                y2 = y1 - caretSize;\n                x1 = x2 - caretSize;\n                x3 = x2 + caretSize;\n            } else {\n                y1 = ptY + height;\n                y2 = y1 + caretSize;\n                x1 = x2 + caretSize;\n                x3 = x2 - caretSize;\n            }\n            y3 = y1;\n        }\n        return {\n            x1,\n            x2,\n            x3,\n            y1,\n            y2,\n            y3\n        };\n    }\n    drawTitle(pt, ctx, options) {\n        const title = this.title;\n        const length = title.length;\n        let titleFont, titleSpacing, i;\n        if (length) {\n            const rtlHelper = getRtlAdapter(options.rtl, this.x, this.width);\n            pt.x = getAlignedX(this, options.titleAlign, options);\n            ctx.textAlign = rtlHelper.textAlign(options.titleAlign);\n            ctx.textBaseline = 'middle';\n            titleFont = toFont(options.titleFont);\n            titleSpacing = options.titleSpacing;\n            ctx.fillStyle = options.titleColor;\n            ctx.font = titleFont.string;\n            for(i = 0; i < length; ++i){\n                ctx.fillText(title[i], rtlHelper.x(pt.x), pt.y + titleFont.lineHeight / 2);\n                pt.y += titleFont.lineHeight + titleSpacing;\n                if (i + 1 === length) {\n                    pt.y += options.titleMarginBottom - titleSpacing;\n                }\n            }\n        }\n    }\n _drawColorBox(ctx, pt, i, rtlHelper, options) {\n        const labelColor = this.labelColors[i];\n        const labelPointStyle = this.labelPointStyles[i];\n        const { boxHeight , boxWidth  } = options;\n        const bodyFont = toFont(options.bodyFont);\n        const colorX = getAlignedX(this, 'left', options);\n        const rtlColorX = rtlHelper.x(colorX);\n        const yOffSet = boxHeight < bodyFont.lineHeight ? (bodyFont.lineHeight - boxHeight) / 2 : 0;\n        const colorY = pt.y + yOffSet;\n        if (options.usePointStyle) {\n            const drawOptions = {\n                radius: Math.min(boxWidth, boxHeight) / 2,\n                pointStyle: labelPointStyle.pointStyle,\n                rotation: labelPointStyle.rotation,\n                borderWidth: 1\n            };\n            const centerX = rtlHelper.leftForLtr(rtlColorX, boxWidth) + boxWidth / 2;\n            const centerY = colorY + boxHeight / 2;\n            ctx.strokeStyle = options.multiKeyBackground;\n            ctx.fillStyle = options.multiKeyBackground;\n            drawPoint(ctx, drawOptions, centerX, centerY);\n            ctx.strokeStyle = labelColor.borderColor;\n            ctx.fillStyle = labelColor.backgroundColor;\n            drawPoint(ctx, drawOptions, centerX, centerY);\n        } else {\n            ctx.lineWidth = isObject(labelColor.borderWidth) ? Math.max(...Object.values(labelColor.borderWidth)) : labelColor.borderWidth || 1;\n            ctx.strokeStyle = labelColor.borderColor;\n            ctx.setLineDash(labelColor.borderDash || []);\n            ctx.lineDashOffset = labelColor.borderDashOffset || 0;\n            const outerX = rtlHelper.leftForLtr(rtlColorX, boxWidth);\n            const innerX = rtlHelper.leftForLtr(rtlHelper.xPlus(rtlColorX, 1), boxWidth - 2);\n            const borderRadius = toTRBLCorners(labelColor.borderRadius);\n            if (Object.values(borderRadius).some((v)=>v !== 0)) {\n                ctx.beginPath();\n                ctx.fillStyle = options.multiKeyBackground;\n                addRoundedRectPath(ctx, {\n                    x: outerX,\n                    y: colorY,\n                    w: boxWidth,\n                    h: boxHeight,\n                    radius: borderRadius\n                });\n                ctx.fill();\n                ctx.stroke();\n                ctx.fillStyle = labelColor.backgroundColor;\n                ctx.beginPath();\n                addRoundedRectPath(ctx, {\n                    x: innerX,\n                    y: colorY + 1,\n                    w: boxWidth - 2,\n                    h: boxHeight - 2,\n                    radius: borderRadius\n                });\n                ctx.fill();\n            } else {\n                ctx.fillStyle = options.multiKeyBackground;\n                ctx.fillRect(outerX, colorY, boxWidth, boxHeight);\n                ctx.strokeRect(outerX, colorY, boxWidth, boxHeight);\n                ctx.fillStyle = labelColor.backgroundColor;\n                ctx.fillRect(innerX, colorY + 1, boxWidth - 2, boxHeight - 2);\n            }\n        }\n        ctx.fillStyle = this.labelTextColors[i];\n    }\n    drawBody(pt, ctx, options) {\n        const { body  } = this;\n        const { bodySpacing , bodyAlign , displayColors , boxHeight , boxWidth , boxPadding  } = options;\n        const bodyFont = toFont(options.bodyFont);\n        let bodyLineHeight = bodyFont.lineHeight;\n        let xLinePadding = 0;\n        const rtlHelper = getRtlAdapter(options.rtl, this.x, this.width);\n        const fillLineOfText = function(line) {\n            ctx.fillText(line, rtlHelper.x(pt.x + xLinePadding), pt.y + bodyLineHeight / 2);\n            pt.y += bodyLineHeight + bodySpacing;\n        };\n        const bodyAlignForCalculation = rtlHelper.textAlign(bodyAlign);\n        let bodyItem, textColor, lines, i, j, ilen, jlen;\n        ctx.textAlign = bodyAlign;\n        ctx.textBaseline = 'middle';\n        ctx.font = bodyFont.string;\n        pt.x = getAlignedX(this, bodyAlignForCalculation, options);\n        ctx.fillStyle = options.bodyColor;\n        each(this.beforeBody, fillLineOfText);\n        xLinePadding = displayColors && bodyAlignForCalculation !== 'right' ? bodyAlign === 'center' ? boxWidth / 2 + boxPadding : boxWidth + 2 + boxPadding : 0;\n        for(i = 0, ilen = body.length; i < ilen; ++i){\n            bodyItem = body[i];\n            textColor = this.labelTextColors[i];\n            ctx.fillStyle = textColor;\n            each(bodyItem.before, fillLineOfText);\n            lines = bodyItem.lines;\n            if (displayColors && lines.length) {\n                this._drawColorBox(ctx, pt, i, rtlHelper, options);\n                bodyLineHeight = Math.max(bodyFont.lineHeight, boxHeight);\n            }\n            for(j = 0, jlen = lines.length; j < jlen; ++j){\n                fillLineOfText(lines[j]);\n                bodyLineHeight = bodyFont.lineHeight;\n            }\n            each(bodyItem.after, fillLineOfText);\n        }\n        xLinePadding = 0;\n        bodyLineHeight = bodyFont.lineHeight;\n        each(this.afterBody, fillLineOfText);\n        pt.y -= bodySpacing;\n    }\n    drawFooter(pt, ctx, options) {\n        const footer = this.footer;\n        const length = footer.length;\n        let footerFont, i;\n        if (length) {\n            const rtlHelper = getRtlAdapter(options.rtl, this.x, this.width);\n            pt.x = getAlignedX(this, options.footerAlign, options);\n            pt.y += options.footerMarginTop;\n            ctx.textAlign = rtlHelper.textAlign(options.footerAlign);\n            ctx.textBaseline = 'middle';\n            footerFont = toFont(options.footerFont);\n            ctx.fillStyle = options.footerColor;\n            ctx.font = footerFont.string;\n            for(i = 0; i < length; ++i){\n                ctx.fillText(footer[i], rtlHelper.x(pt.x), pt.y + footerFont.lineHeight / 2);\n                pt.y += footerFont.lineHeight + options.footerSpacing;\n            }\n        }\n    }\n    drawBackground(pt, ctx, tooltipSize, options) {\n        const { xAlign , yAlign  } = this;\n        const { x , y  } = pt;\n        const { width , height  } = tooltipSize;\n        const { topLeft , topRight , bottomLeft , bottomRight  } = toTRBLCorners(options.cornerRadius);\n        ctx.fillStyle = options.backgroundColor;\n        ctx.strokeStyle = options.borderColor;\n        ctx.lineWidth = options.borderWidth;\n        ctx.beginPath();\n        ctx.moveTo(x + topLeft, y);\n        if (yAlign === 'top') {\n            this.drawCaret(pt, ctx, tooltipSize, options);\n        }\n        ctx.lineTo(x + width - topRight, y);\n        ctx.quadraticCurveTo(x + width, y, x + width, y + topRight);\n        if (yAlign === 'center' && xAlign === 'right') {\n            this.drawCaret(pt, ctx, tooltipSize, options);\n        }\n        ctx.lineTo(x + width, y + height - bottomRight);\n        ctx.quadraticCurveTo(x + width, y + height, x + width - bottomRight, y + height);\n        if (yAlign === 'bottom') {\n            this.drawCaret(pt, ctx, tooltipSize, options);\n        }\n        ctx.lineTo(x + bottomLeft, y + height);\n        ctx.quadraticCurveTo(x, y + height, x, y + height - bottomLeft);\n        if (yAlign === 'center' && xAlign === 'left') {\n            this.drawCaret(pt, ctx, tooltipSize, options);\n        }\n        ctx.lineTo(x, y + topLeft);\n        ctx.quadraticCurveTo(x, y, x + topLeft, y);\n        ctx.closePath();\n        ctx.fill();\n        if (options.borderWidth > 0) {\n            ctx.stroke();\n        }\n    }\n _updateAnimationTarget(options) {\n        const chart = this.chart;\n        const anims = this.$animations;\n        const animX = anims && anims.x;\n        const animY = anims && anims.y;\n        if (animX || animY) {\n            const position = positioners[options.position].call(this, this._active, this._eventPosition);\n            if (!position) {\n                return;\n            }\n            const size = this._size = getTooltipSize(this, options);\n            const positionAndSize = Object.assign({}, position, this._size);\n            const alignment = determineAlignment(chart, options, positionAndSize);\n            const point = getBackgroundPoint(options, positionAndSize, alignment, chart);\n            if (animX._to !== point.x || animY._to !== point.y) {\n                this.xAlign = alignment.xAlign;\n                this.yAlign = alignment.yAlign;\n                this.width = size.width;\n                this.height = size.height;\n                this.caretX = position.x;\n                this.caretY = position.y;\n                this._resolveAnimations().update(this, point);\n            }\n        }\n    }\n _willRender() {\n        return !!this.opacity;\n    }\n    draw(ctx) {\n        const options = this.options.setContext(this.getContext());\n        let opacity = this.opacity;\n        if (!opacity) {\n            return;\n        }\n        this._updateAnimationTarget(options);\n        const tooltipSize = {\n            width: this.width,\n            height: this.height\n        };\n        const pt = {\n            x: this.x,\n            y: this.y\n        };\n        opacity = Math.abs(opacity) < 1e-3 ? 0 : opacity;\n        const padding = toPadding(options.padding);\n        const hasTooltipContent = this.title.length || this.beforeBody.length || this.body.length || this.afterBody.length || this.footer.length;\n        if (options.enabled && hasTooltipContent) {\n            ctx.save();\n            ctx.globalAlpha = opacity;\n            this.drawBackground(pt, ctx, tooltipSize, options);\n            overrideTextDirection(ctx, options.textDirection);\n            pt.y += padding.top;\n            this.drawTitle(pt, ctx, options);\n            this.drawBody(pt, ctx, options);\n            this.drawFooter(pt, ctx, options);\n            restoreTextDirection(ctx, options.textDirection);\n            ctx.restore();\n        }\n    }\n getActiveElements() {\n        return this._active || [];\n    }\n setActiveElements(activeElements, eventPosition) {\n        const lastActive = this._active;\n        const active = activeElements.map(({ datasetIndex , index  })=>{\n            const meta = this.chart.getDatasetMeta(datasetIndex);\n            if (!meta) {\n                throw new Error('Cannot find a dataset at index ' + datasetIndex);\n            }\n            return {\n                datasetIndex,\n                element: meta.data[index],\n                index\n            };\n        });\n        const changed = !_elementsEqual(lastActive, active);\n        const positionChanged = this._positionChanged(active, eventPosition);\n        if (changed || positionChanged) {\n            this._active = active;\n            this._eventPosition = eventPosition;\n            this._ignoreReplayEvents = true;\n            this.update(true);\n        }\n    }\n handleEvent(e, replay, inChartArea = true) {\n        if (replay && this._ignoreReplayEvents) {\n            return false;\n        }\n        this._ignoreReplayEvents = false;\n        const options = this.options;\n        const lastActive = this._active || [];\n        const active = this._getActiveElements(e, lastActive, replay, inChartArea);\n        const positionChanged = this._positionChanged(active, e);\n        const changed = replay || !_elementsEqual(active, lastActive) || positionChanged;\n        if (changed) {\n            this._active = active;\n            if (options.enabled || options.external) {\n                this._eventPosition = {\n                    x: e.x,\n                    y: e.y\n                };\n                this.update(true, replay);\n            }\n        }\n        return changed;\n    }\n _getActiveElements(e, lastActive, replay, inChartArea) {\n        const options = this.options;\n        if (e.type === 'mouseout') {\n            return [];\n        }\n        if (!inChartArea) {\n            return lastActive.filter((i)=>this.chart.data.datasets[i.datasetIndex] && this.chart.getDatasetMeta(i.datasetIndex).controller.getParsed(i.index) !== undefined);\n        }\n        const active = this.chart.getElementsAtEventForMode(e, options.mode, options, replay);\n        if (options.reverse) {\n            active.reverse();\n        }\n        return active;\n    }\n _positionChanged(active, e) {\n        const { caretX , caretY , options  } = this;\n        const position = positioners[options.position].call(this, active, e);\n        return position !== false && (caretX !== position.x || caretY !== position.y);\n    }\n}\nvar plugin_tooltip = {\n    id: 'tooltip',\n    _element: Tooltip,\n    positioners,\n    afterInit (chart, _args, options) {\n        if (options) {\n            chart.tooltip = new Tooltip({\n                chart,\n                options\n            });\n        }\n    },\n    beforeUpdate (chart, _args, options) {\n        if (chart.tooltip) {\n            chart.tooltip.initialize(options);\n        }\n    },\n    reset (chart, _args, options) {\n        if (chart.tooltip) {\n            chart.tooltip.initialize(options);\n        }\n    },\n    afterDraw (chart) {\n        const tooltip = chart.tooltip;\n        if (tooltip && tooltip._willRender()) {\n            const args = {\n                tooltip\n            };\n            if (chart.notifyPlugins('beforeTooltipDraw', {\n                ...args,\n                cancelable: true\n            }) === false) {\n                return;\n            }\n            tooltip.draw(chart.ctx);\n            chart.notifyPlugins('afterTooltipDraw', args);\n        }\n    },\n    afterEvent (chart, args) {\n        if (chart.tooltip) {\n            const useFinalPosition = args.replay;\n            if (chart.tooltip.handleEvent(args.event, useFinalPosition, args.inChartArea)) {\n                args.changed = true;\n            }\n        }\n    },\n    defaults: {\n        enabled: true,\n        external: null,\n        position: 'average',\n        backgroundColor: 'rgba(0,0,0,0.8)',\n        titleColor: '#fff',\n        titleFont: {\n            weight: 'bold'\n        },\n        titleSpacing: 2,\n        titleMarginBottom: 6,\n        titleAlign: 'left',\n        bodyColor: '#fff',\n        bodySpacing: 2,\n        bodyFont: {},\n        bodyAlign: 'left',\n        footerColor: '#fff',\n        footerSpacing: 2,\n        footerMarginTop: 6,\n        footerFont: {\n            weight: 'bold'\n        },\n        footerAlign: 'left',\n        padding: 6,\n        caretPadding: 2,\n        caretSize: 5,\n        cornerRadius: 6,\n        boxHeight: (ctx, opts)=>opts.bodyFont.size,\n        boxWidth: (ctx, opts)=>opts.bodyFont.size,\n        multiKeyBackground: '#fff',\n        displayColors: true,\n        boxPadding: 0,\n        borderColor: 'rgba(0,0,0,0)',\n        borderWidth: 0,\n        animation: {\n            duration: 400,\n            easing: 'easeOutQuart'\n        },\n        animations: {\n            numbers: {\n                type: 'number',\n                properties: [\n                    'x',\n                    'y',\n                    'width',\n                    'height',\n                    'caretX',\n                    'caretY'\n                ]\n            },\n            opacity: {\n                easing: 'linear',\n                duration: 200\n            }\n        },\n        callbacks: defaultCallbacks\n    },\n    defaultRoutes: {\n        bodyFont: 'font',\n        footerFont: 'font',\n        titleFont: 'font'\n    },\n    descriptors: {\n        _scriptable: (name)=>name !== 'filter' && name !== 'itemSort' && name !== 'external',\n        _indexable: false,\n        callbacks: {\n            _scriptable: false,\n            _indexable: false\n        },\n        animation: {\n            _fallback: false\n        },\n        animations: {\n            _fallback: 'animation'\n        }\n    },\n    additionalOptionScopes: [\n        'interaction'\n    ]\n};\n\nvar plugins = /*#__PURE__*/Object.freeze({\n__proto__: null,\nColors: plugin_colors,\nDecimation: plugin_decimation,\nFiller: index,\nLegend: plugin_legend,\nSubTitle: plugin_subtitle,\nTitle: plugin_title,\nTooltip: plugin_tooltip\n});\n\nconst addIfString = (labels, raw, index, addedLabels)=>{\n    if (typeof raw === 'string') {\n        index = labels.push(raw) - 1;\n        addedLabels.unshift({\n            index,\n            label: raw\n        });\n    } else if (isNaN(raw)) {\n        index = null;\n    }\n    return index;\n};\nfunction findOrAddLabel(labels, raw, index, addedLabels) {\n    const first = labels.indexOf(raw);\n    if (first === -1) {\n        return addIfString(labels, raw, index, addedLabels);\n    }\n    const last = labels.lastIndexOf(raw);\n    return first !== last ? index : first;\n}\nconst validIndex = (index, max)=>index === null ? null : _limitValue(Math.round(index), 0, max);\nfunction _getLabelForValue(value) {\n    const labels = this.getLabels();\n    if (value >= 0 && value < labels.length) {\n        return labels[value];\n    }\n    return value;\n}\nclass CategoryScale extends Scale {\n    static id = 'category';\n static defaults = {\n        ticks: {\n            callback: _getLabelForValue\n        }\n    };\n    constructor(cfg){\n        super(cfg);\n         this._startValue = undefined;\n        this._valueRange = 0;\n        this._addedLabels = [];\n    }\n    init(scaleOptions) {\n        const added = this._addedLabels;\n        if (added.length) {\n            const labels = this.getLabels();\n            for (const { index , label  } of added){\n                if (labels[index] === label) {\n                    labels.splice(index, 1);\n                }\n            }\n            this._addedLabels = [];\n        }\n        super.init(scaleOptions);\n    }\n    parse(raw, index) {\n        if (isNullOrUndef(raw)) {\n            return null;\n        }\n        const labels = this.getLabels();\n        index = isFinite(index) && labels[index] === raw ? index : findOrAddLabel(labels, raw, valueOrDefault(index, raw), this._addedLabels);\n        return validIndex(index, labels.length - 1);\n    }\n    determineDataLimits() {\n        const { minDefined , maxDefined  } = this.getUserBounds();\n        let { min , max  } = this.getMinMax(true);\n        if (this.options.bounds === 'ticks') {\n            if (!minDefined) {\n                min = 0;\n            }\n            if (!maxDefined) {\n                max = this.getLabels().length - 1;\n            }\n        }\n        this.min = min;\n        this.max = max;\n    }\n    buildTicks() {\n        const min = this.min;\n        const max = this.max;\n        const offset = this.options.offset;\n        const ticks = [];\n        let labels = this.getLabels();\n        labels = min === 0 && max === labels.length - 1 ? labels : labels.slice(min, max + 1);\n        this._valueRange = Math.max(labels.length - (offset ? 0 : 1), 1);\n        this._startValue = this.min - (offset ? 0.5 : 0);\n        for(let value = min; value <= max; value++){\n            ticks.push({\n                value\n            });\n        }\n        return ticks;\n    }\n    getLabelForValue(value) {\n        return _getLabelForValue.call(this, value);\n    }\n configure() {\n        super.configure();\n        if (!this.isHorizontal()) {\n            this._reversePixels = !this._reversePixels;\n        }\n    }\n    getPixelForValue(value) {\n        if (typeof value !== 'number') {\n            value = this.parse(value);\n        }\n        return value === null ? NaN : this.getPixelForDecimal((value - this._startValue) / this._valueRange);\n    }\n    getPixelForTick(index) {\n        const ticks = this.ticks;\n        if (index < 0 || index > ticks.length - 1) {\n            return null;\n        }\n        return this.getPixelForValue(ticks[index].value);\n    }\n    getValueForPixel(pixel) {\n        return Math.round(this._startValue + this.getDecimalForPixel(pixel) * this._valueRange);\n    }\n    getBasePixel() {\n        return this.bottom;\n    }\n}\n\nfunction generateTicks$1(generationOptions, dataRange) {\n    const ticks = [];\n    const MIN_SPACING = 1e-14;\n    const { bounds , step , min , max , precision , count , maxTicks , maxDigits , includeBounds  } = generationOptions;\n    const unit = step || 1;\n    const maxSpaces = maxTicks - 1;\n    const { min: rmin , max: rmax  } = dataRange;\n    const minDefined = !isNullOrUndef(min);\n    const maxDefined = !isNullOrUndef(max);\n    const countDefined = !isNullOrUndef(count);\n    const minSpacing = (rmax - rmin) / (maxDigits + 1);\n    let spacing = niceNum((rmax - rmin) / maxSpaces / unit) * unit;\n    let factor, niceMin, niceMax, numSpaces;\n    if (spacing < MIN_SPACING && !minDefined && !maxDefined) {\n        return [\n            {\n                value: rmin\n            },\n            {\n                value: rmax\n            }\n        ];\n    }\n    numSpaces = Math.ceil(rmax / spacing) - Math.floor(rmin / spacing);\n    if (numSpaces > maxSpaces) {\n        spacing = niceNum(numSpaces * spacing / maxSpaces / unit) * unit;\n    }\n    if (!isNullOrUndef(precision)) {\n        factor = Math.pow(10, precision);\n        spacing = Math.ceil(spacing * factor) / factor;\n    }\n    if (bounds === 'ticks') {\n        niceMin = Math.floor(rmin / spacing) * spacing;\n        niceMax = Math.ceil(rmax / spacing) * spacing;\n    } else {\n        niceMin = rmin;\n        niceMax = rmax;\n    }\n    if (minDefined && maxDefined && step && almostWhole((max - min) / step, spacing / 1000)) {\n        numSpaces = Math.round(Math.min((max - min) / spacing, maxTicks));\n        spacing = (max - min) / numSpaces;\n        niceMin = min;\n        niceMax = max;\n    } else if (countDefined) {\n        niceMin = minDefined ? min : niceMin;\n        niceMax = maxDefined ? max : niceMax;\n        numSpaces = count - 1;\n        spacing = (niceMax - niceMin) / numSpaces;\n    } else {\n        numSpaces = (niceMax - niceMin) / spacing;\n        if (almostEquals(numSpaces, Math.round(numSpaces), spacing / 1000)) {\n            numSpaces = Math.round(numSpaces);\n        } else {\n            numSpaces = Math.ceil(numSpaces);\n        }\n    }\n    const decimalPlaces = Math.max(_decimalPlaces(spacing), _decimalPlaces(niceMin));\n    factor = Math.pow(10, isNullOrUndef(precision) ? decimalPlaces : precision);\n    niceMin = Math.round(niceMin * factor) / factor;\n    niceMax = Math.round(niceMax * factor) / factor;\n    let j = 0;\n    if (minDefined) {\n        if (includeBounds && niceMin !== min) {\n            ticks.push({\n                value: min\n            });\n            if (niceMin < min) {\n                j++;\n            }\n            if (almostEquals(Math.round((niceMin + j * spacing) * factor) / factor, min, relativeLabelSize(min, minSpacing, generationOptions))) {\n                j++;\n            }\n        } else if (niceMin < min) {\n            j++;\n        }\n    }\n    for(; j < numSpaces; ++j){\n        const tickValue = Math.round((niceMin + j * spacing) * factor) / factor;\n        if (maxDefined && tickValue > max) {\n            break;\n        }\n        ticks.push({\n            value: tickValue\n        });\n    }\n    if (maxDefined && includeBounds && niceMax !== max) {\n        if (ticks.length && almostEquals(ticks[ticks.length - 1].value, max, relativeLabelSize(max, minSpacing, generationOptions))) {\n            ticks[ticks.length - 1].value = max;\n        } else {\n            ticks.push({\n                value: max\n            });\n        }\n    } else if (!maxDefined || niceMax === max) {\n        ticks.push({\n            value: niceMax\n        });\n    }\n    return ticks;\n}\nfunction relativeLabelSize(value, minSpacing, { horizontal , minRotation  }) {\n    const rad = toRadians(minRotation);\n    const ratio = (horizontal ? Math.sin(rad) : Math.cos(rad)) || 0.001;\n    const length = 0.75 * minSpacing * ('' + value).length;\n    return Math.min(minSpacing / ratio, length);\n}\nclass LinearScaleBase extends Scale {\n    constructor(cfg){\n        super(cfg);\n         this.start = undefined;\n         this.end = undefined;\n         this._startValue = undefined;\n         this._endValue = undefined;\n        this._valueRange = 0;\n    }\n    parse(raw, index) {\n        if (isNullOrUndef(raw)) {\n            return null;\n        }\n        if ((typeof raw === 'number' || raw instanceof Number) && !isFinite(+raw)) {\n            return null;\n        }\n        return +raw;\n    }\n    handleTickRangeOptions() {\n        const { beginAtZero  } = this.options;\n        const { minDefined , maxDefined  } = this.getUserBounds();\n        let { min , max  } = this;\n        const setMin = (v)=>min = minDefined ? min : v;\n        const setMax = (v)=>max = maxDefined ? max : v;\n        if (beginAtZero) {\n            const minSign = sign(min);\n            const maxSign = sign(max);\n            if (minSign < 0 && maxSign < 0) {\n                setMax(0);\n            } else if (minSign > 0 && maxSign > 0) {\n                setMin(0);\n            }\n        }\n        if (min === max) {\n            let offset = max === 0 ? 1 : Math.abs(max * 0.05);\n            setMax(max + offset);\n            if (!beginAtZero) {\n                setMin(min - offset);\n            }\n        }\n        this.min = min;\n        this.max = max;\n    }\n    getTickLimit() {\n        const tickOpts = this.options.ticks;\n        let { maxTicksLimit , stepSize  } = tickOpts;\n        let maxTicks;\n        if (stepSize) {\n            maxTicks = Math.ceil(this.max / stepSize) - Math.floor(this.min / stepSize) + 1;\n            if (maxTicks > 1000) {\n                console.warn(`scales.${this.id}.ticks.stepSize: ${stepSize} would result generating up to ${maxTicks} ticks. Limiting to 1000.`);\n                maxTicks = 1000;\n            }\n        } else {\n            maxTicks = this.computeTickLimit();\n            maxTicksLimit = maxTicksLimit || 11;\n        }\n        if (maxTicksLimit) {\n            maxTicks = Math.min(maxTicksLimit, maxTicks);\n        }\n        return maxTicks;\n    }\n computeTickLimit() {\n        return Number.POSITIVE_INFINITY;\n    }\n    buildTicks() {\n        const opts = this.options;\n        const tickOpts = opts.ticks;\n        let maxTicks = this.getTickLimit();\n        maxTicks = Math.max(2, maxTicks);\n        const numericGeneratorOptions = {\n            maxTicks,\n            bounds: opts.bounds,\n            min: opts.min,\n            max: opts.max,\n            precision: tickOpts.precision,\n            step: tickOpts.stepSize,\n            count: tickOpts.count,\n            maxDigits: this._maxDigits(),\n            horizontal: this.isHorizontal(),\n            minRotation: tickOpts.minRotation || 0,\n            includeBounds: tickOpts.includeBounds !== false\n        };\n        const dataRange = this._range || this;\n        const ticks = generateTicks$1(numericGeneratorOptions, dataRange);\n        if (opts.bounds === 'ticks') {\n            _setMinAndMaxByKey(ticks, this, 'value');\n        }\n        if (opts.reverse) {\n            ticks.reverse();\n            this.start = this.max;\n            this.end = this.min;\n        } else {\n            this.start = this.min;\n            this.end = this.max;\n        }\n        return ticks;\n    }\n configure() {\n        const ticks = this.ticks;\n        let start = this.min;\n        let end = this.max;\n        super.configure();\n        if (this.options.offset && ticks.length) {\n            const offset = (end - start) / Math.max(ticks.length - 1, 1) / 2;\n            start -= offset;\n            end += offset;\n        }\n        this._startValue = start;\n        this._endValue = end;\n        this._valueRange = end - start;\n    }\n    getLabelForValue(value) {\n        return formatNumber(value, this.chart.options.locale, this.options.ticks.format);\n    }\n}\n\nclass LinearScale extends LinearScaleBase {\n    static id = 'linear';\n static defaults = {\n        ticks: {\n            callback: Ticks.formatters.numeric\n        }\n    };\n    determineDataLimits() {\n        const { min , max  } = this.getMinMax(true);\n        this.min = isNumberFinite(min) ? min : 0;\n        this.max = isNumberFinite(max) ? max : 1;\n        this.handleTickRangeOptions();\n    }\n computeTickLimit() {\n        const horizontal = this.isHorizontal();\n        const length = horizontal ? this.width : this.height;\n        const minRotation = toRadians(this.options.ticks.minRotation);\n        const ratio = (horizontal ? Math.sin(minRotation) : Math.cos(minRotation)) || 0.001;\n        const tickFont = this._resolveTickFontOptions(0);\n        return Math.ceil(length / Math.min(40, tickFont.lineHeight / ratio));\n    }\n    getPixelForValue(value) {\n        return value === null ? NaN : this.getPixelForDecimal((value - this._startValue) / this._valueRange);\n    }\n    getValueForPixel(pixel) {\n        return this._startValue + this.getDecimalForPixel(pixel) * this._valueRange;\n    }\n}\n\nconst log10Floor = (v)=>Math.floor(log10(v));\nconst changeExponent = (v, m)=>Math.pow(10, log10Floor(v) + m);\nfunction isMajor(tickVal) {\n    const remain = tickVal / Math.pow(10, log10Floor(tickVal));\n    return remain === 1;\n}\nfunction steps(min, max, rangeExp) {\n    const rangeStep = Math.pow(10, rangeExp);\n    const start = Math.floor(min / rangeStep);\n    const end = Math.ceil(max / rangeStep);\n    return end - start;\n}\nfunction startExp(min, max) {\n    const range = max - min;\n    let rangeExp = log10Floor(range);\n    while(steps(min, max, rangeExp) > 10){\n        rangeExp++;\n    }\n    while(steps(min, max, rangeExp) < 10){\n        rangeExp--;\n    }\n    return Math.min(rangeExp, log10Floor(min));\n}\n function generateTicks(generationOptions, { min , max  }) {\n    min = finiteOrDefault(generationOptions.min, min);\n    const ticks = [];\n    const minExp = log10Floor(min);\n    let exp = startExp(min, max);\n    let precision = exp < 0 ? Math.pow(10, Math.abs(exp)) : 1;\n    const stepSize = Math.pow(10, exp);\n    const base = minExp > exp ? Math.pow(10, minExp) : 0;\n    const start = Math.round((min - base) * precision) / precision;\n    const offset = Math.floor((min - base) / stepSize / 10) * stepSize * 10;\n    let significand = Math.floor((start - offset) / Math.pow(10, exp));\n    let value = finiteOrDefault(generationOptions.min, Math.round((base + offset + significand * Math.pow(10, exp)) * precision) / precision);\n    while(value < max){\n        ticks.push({\n            value,\n            major: isMajor(value),\n            significand\n        });\n        if (significand >= 10) {\n            significand = significand < 15 ? 15 : 20;\n        } else {\n            significand++;\n        }\n        if (significand >= 20) {\n            exp++;\n            significand = 2;\n            precision = exp >= 0 ? 1 : precision;\n        }\n        value = Math.round((base + offset + significand * Math.pow(10, exp)) * precision) / precision;\n    }\n    const lastTick = finiteOrDefault(generationOptions.max, value);\n    ticks.push({\n        value: lastTick,\n        major: isMajor(lastTick),\n        significand\n    });\n    return ticks;\n}\nclass LogarithmicScale extends Scale {\n    static id = 'logarithmic';\n static defaults = {\n        ticks: {\n            callback: Ticks.formatters.logarithmic,\n            major: {\n                enabled: true\n            }\n        }\n    };\n    constructor(cfg){\n        super(cfg);\n         this.start = undefined;\n         this.end = undefined;\n         this._startValue = undefined;\n        this._valueRange = 0;\n    }\n    parse(raw, index) {\n        const value = LinearScaleBase.prototype.parse.apply(this, [\n            raw,\n            index\n        ]);\n        if (value === 0) {\n            this._zero = true;\n            return undefined;\n        }\n        return isNumberFinite(value) && value > 0 ? value : null;\n    }\n    determineDataLimits() {\n        const { min , max  } = this.getMinMax(true);\n        this.min = isNumberFinite(min) ? Math.max(0, min) : null;\n        this.max = isNumberFinite(max) ? Math.max(0, max) : null;\n        if (this.options.beginAtZero) {\n            this._zero = true;\n        }\n        if (this._zero && this.min !== this._suggestedMin && !isNumberFinite(this._userMin)) {\n            this.min = min === changeExponent(this.min, 0) ? changeExponent(this.min, -1) : changeExponent(this.min, 0);\n        }\n        this.handleTickRangeOptions();\n    }\n    handleTickRangeOptions() {\n        const { minDefined , maxDefined  } = this.getUserBounds();\n        let min = this.min;\n        let max = this.max;\n        const setMin = (v)=>min = minDefined ? min : v;\n        const setMax = (v)=>max = maxDefined ? max : v;\n        if (min === max) {\n            if (min <= 0) {\n                setMin(1);\n                setMax(10);\n            } else {\n                setMin(changeExponent(min, -1));\n                setMax(changeExponent(max, +1));\n            }\n        }\n        if (min <= 0) {\n            setMin(changeExponent(max, -1));\n        }\n        if (max <= 0) {\n            setMax(changeExponent(min, +1));\n        }\n        this.min = min;\n        this.max = max;\n    }\n    buildTicks() {\n        const opts = this.options;\n        const generationOptions = {\n            min: this._userMin,\n            max: this._userMax\n        };\n        const ticks = generateTicks(generationOptions, this);\n        if (opts.bounds === 'ticks') {\n            _setMinAndMaxByKey(ticks, this, 'value');\n        }\n        if (opts.reverse) {\n            ticks.reverse();\n            this.start = this.max;\n            this.end = this.min;\n        } else {\n            this.start = this.min;\n            this.end = this.max;\n        }\n        return ticks;\n    }\n getLabelForValue(value) {\n        return value === undefined ? '0' : formatNumber(value, this.chart.options.locale, this.options.ticks.format);\n    }\n configure() {\n        const start = this.min;\n        super.configure();\n        this._startValue = log10(start);\n        this._valueRange = log10(this.max) - log10(start);\n    }\n    getPixelForValue(value) {\n        if (value === undefined || value === 0) {\n            value = this.min;\n        }\n        if (value === null || isNaN(value)) {\n            return NaN;\n        }\n        return this.getPixelForDecimal(value === this.min ? 0 : (log10(value) - this._startValue) / this._valueRange);\n    }\n    getValueForPixel(pixel) {\n        const decimal = this.getDecimalForPixel(pixel);\n        return Math.pow(10, this._startValue + decimal * this._valueRange);\n    }\n}\n\nfunction getTickBackdropHeight(opts) {\n    const tickOpts = opts.ticks;\n    if (tickOpts.display && opts.display) {\n        const padding = toPadding(tickOpts.backdropPadding);\n        return valueOrDefault(tickOpts.font && tickOpts.font.size, defaults.font.size) + padding.height;\n    }\n    return 0;\n}\nfunction measureLabelSize(ctx, font, label) {\n    label = isArray(label) ? label : [\n        label\n    ];\n    return {\n        w: _longestText(ctx, font.string, label),\n        h: label.length * font.lineHeight\n    };\n}\nfunction determineLimits(angle, pos, size, min, max) {\n    if (angle === min || angle === max) {\n        return {\n            start: pos - size / 2,\n            end: pos + size / 2\n        };\n    } else if (angle < min || angle > max) {\n        return {\n            start: pos - size,\n            end: pos\n        };\n    }\n    return {\n        start: pos,\n        end: pos + size\n    };\n}\n function fitWithPointLabels(scale) {\n    const orig = {\n        l: scale.left + scale._padding.left,\n        r: scale.right - scale._padding.right,\n        t: scale.top + scale._padding.top,\n        b: scale.bottom - scale._padding.bottom\n    };\n    const limits = Object.assign({}, orig);\n    const labelSizes = [];\n    const padding = [];\n    const valueCount = scale._pointLabels.length;\n    const pointLabelOpts = scale.options.pointLabels;\n    const additionalAngle = pointLabelOpts.centerPointLabels ? PI / valueCount : 0;\n    for(let i = 0; i < valueCount; i++){\n        const opts = pointLabelOpts.setContext(scale.getPointLabelContext(i));\n        padding[i] = opts.padding;\n        const pointPosition = scale.getPointPosition(i, scale.drawingArea + padding[i], additionalAngle);\n        const plFont = toFont(opts.font);\n        const textSize = measureLabelSize(scale.ctx, plFont, scale._pointLabels[i]);\n        labelSizes[i] = textSize;\n        const angleRadians = _normalizeAngle(scale.getIndexAngle(i) + additionalAngle);\n        const angle = Math.round(toDegrees(angleRadians));\n        const hLimits = determineLimits(angle, pointPosition.x, textSize.w, 0, 180);\n        const vLimits = determineLimits(angle, pointPosition.y, textSize.h, 90, 270);\n        updateLimits(limits, orig, angleRadians, hLimits, vLimits);\n    }\n    scale.setCenterPoint(orig.l - limits.l, limits.r - orig.r, orig.t - limits.t, limits.b - orig.b);\n    scale._pointLabelItems = buildPointLabelItems(scale, labelSizes, padding);\n}\nfunction updateLimits(limits, orig, angle, hLimits, vLimits) {\n    const sin = Math.abs(Math.sin(angle));\n    const cos = Math.abs(Math.cos(angle));\n    let x = 0;\n    let y = 0;\n    if (hLimits.start < orig.l) {\n        x = (orig.l - hLimits.start) / sin;\n        limits.l = Math.min(limits.l, orig.l - x);\n    } else if (hLimits.end > orig.r) {\n        x = (hLimits.end - orig.r) / sin;\n        limits.r = Math.max(limits.r, orig.r + x);\n    }\n    if (vLimits.start < orig.t) {\n        y = (orig.t - vLimits.start) / cos;\n        limits.t = Math.min(limits.t, orig.t - y);\n    } else if (vLimits.end > orig.b) {\n        y = (vLimits.end - orig.b) / cos;\n        limits.b = Math.max(limits.b, orig.b + y);\n    }\n}\nfunction createPointLabelItem(scale, index, itemOpts) {\n    const outerDistance = scale.drawingArea;\n    const { extra , additionalAngle , padding , size  } = itemOpts;\n    const pointLabelPosition = scale.getPointPosition(index, outerDistance + extra + padding, additionalAngle);\n    const angle = Math.round(toDegrees(_normalizeAngle(pointLabelPosition.angle + HALF_PI)));\n    const y = yForAngle(pointLabelPosition.y, size.h, angle);\n    const textAlign = getTextAlignForAngle(angle);\n    const left = leftForTextAlign(pointLabelPosition.x, size.w, textAlign);\n    return {\n        visible: true,\n        x: pointLabelPosition.x,\n        y,\n        textAlign,\n        left,\n        top: y,\n        right: left + size.w,\n        bottom: y + size.h\n    };\n}\nfunction isNotOverlapped(item, area) {\n    if (!area) {\n        return true;\n    }\n    const { left , top , right , bottom  } = item;\n    const apexesInArea = _isPointInArea({\n        x: left,\n        y: top\n    }, area) || _isPointInArea({\n        x: left,\n        y: bottom\n    }, area) || _isPointInArea({\n        x: right,\n        y: top\n    }, area) || _isPointInArea({\n        x: right,\n        y: bottom\n    }, area);\n    return !apexesInArea;\n}\nfunction buildPointLabelItems(scale, labelSizes, padding) {\n    const items = [];\n    const valueCount = scale._pointLabels.length;\n    const opts = scale.options;\n    const { centerPointLabels , display  } = opts.pointLabels;\n    const itemOpts = {\n        extra: getTickBackdropHeight(opts) / 2,\n        additionalAngle: centerPointLabels ? PI / valueCount : 0\n    };\n    let area;\n    for(let i = 0; i < valueCount; i++){\n        itemOpts.padding = padding[i];\n        itemOpts.size = labelSizes[i];\n        const item = createPointLabelItem(scale, i, itemOpts);\n        items.push(item);\n        if (display === 'auto') {\n            item.visible = isNotOverlapped(item, area);\n            if (item.visible) {\n                area = item;\n            }\n        }\n    }\n    return items;\n}\nfunction getTextAlignForAngle(angle) {\n    if (angle === 0 || angle === 180) {\n        return 'center';\n    } else if (angle < 180) {\n        return 'left';\n    }\n    return 'right';\n}\nfunction leftForTextAlign(x, w, align) {\n    if (align === 'right') {\n        x -= w;\n    } else if (align === 'center') {\n        x -= w / 2;\n    }\n    return x;\n}\nfunction yForAngle(y, h, angle) {\n    if (angle === 90 || angle === 270) {\n        y -= h / 2;\n    } else if (angle > 270 || angle < 90) {\n        y -= h;\n    }\n    return y;\n}\nfunction drawPointLabelBox(ctx, opts, item) {\n    const { left , top , right , bottom  } = item;\n    const { backdropColor  } = opts;\n    if (!isNullOrUndef(backdropColor)) {\n        const borderRadius = toTRBLCorners(opts.borderRadius);\n        const padding = toPadding(opts.backdropPadding);\n        ctx.fillStyle = backdropColor;\n        const backdropLeft = left - padding.left;\n        const backdropTop = top - padding.top;\n        const backdropWidth = right - left + padding.width;\n        const backdropHeight = bottom - top + padding.height;\n        if (Object.values(borderRadius).some((v)=>v !== 0)) {\n            ctx.beginPath();\n            addRoundedRectPath(ctx, {\n                x: backdropLeft,\n                y: backdropTop,\n                w: backdropWidth,\n                h: backdropHeight,\n                radius: borderRadius\n            });\n            ctx.fill();\n        } else {\n            ctx.fillRect(backdropLeft, backdropTop, backdropWidth, backdropHeight);\n        }\n    }\n}\nfunction drawPointLabels(scale, labelCount) {\n    const { ctx , options: { pointLabels  }  } = scale;\n    for(let i = labelCount - 1; i >= 0; i--){\n        const item = scale._pointLabelItems[i];\n        if (!item.visible) {\n            continue;\n        }\n        const optsAtIndex = pointLabels.setContext(scale.getPointLabelContext(i));\n        drawPointLabelBox(ctx, optsAtIndex, item);\n        const plFont = toFont(optsAtIndex.font);\n        const { x , y , textAlign  } = item;\n        renderText(ctx, scale._pointLabels[i], x, y + plFont.lineHeight / 2, plFont, {\n            color: optsAtIndex.color,\n            textAlign: textAlign,\n            textBaseline: 'middle'\n        });\n    }\n}\nfunction pathRadiusLine(scale, radius, circular, labelCount) {\n    const { ctx  } = scale;\n    if (circular) {\n        ctx.arc(scale.xCenter, scale.yCenter, radius, 0, TAU);\n    } else {\n        let pointPosition = scale.getPointPosition(0, radius);\n        ctx.moveTo(pointPosition.x, pointPosition.y);\n        for(let i = 1; i < labelCount; i++){\n            pointPosition = scale.getPointPosition(i, radius);\n            ctx.lineTo(pointPosition.x, pointPosition.y);\n        }\n    }\n}\nfunction drawRadiusLine(scale, gridLineOpts, radius, labelCount, borderOpts) {\n    const ctx = scale.ctx;\n    const circular = gridLineOpts.circular;\n    const { color , lineWidth  } = gridLineOpts;\n    if (!circular && !labelCount || !color || !lineWidth || radius < 0) {\n        return;\n    }\n    ctx.save();\n    ctx.strokeStyle = color;\n    ctx.lineWidth = lineWidth;\n    ctx.setLineDash(borderOpts.dash || []);\n    ctx.lineDashOffset = borderOpts.dashOffset;\n    ctx.beginPath();\n    pathRadiusLine(scale, radius, circular, labelCount);\n    ctx.closePath();\n    ctx.stroke();\n    ctx.restore();\n}\nfunction createPointLabelContext(parent, index, label) {\n    return createContext(parent, {\n        label,\n        index,\n        type: 'pointLabel'\n    });\n}\nclass RadialLinearScale extends LinearScaleBase {\n    static id = 'radialLinear';\n static defaults = {\n        display: true,\n        animate: true,\n        position: 'chartArea',\n        angleLines: {\n            display: true,\n            lineWidth: 1,\n            borderDash: [],\n            borderDashOffset: 0.0\n        },\n        grid: {\n            circular: false\n        },\n        startAngle: 0,\n        ticks: {\n            showLabelBackdrop: true,\n            callback: Ticks.formatters.numeric\n        },\n        pointLabels: {\n            backdropColor: undefined,\n            backdropPadding: 2,\n            display: true,\n            font: {\n                size: 10\n            },\n            callback (label) {\n                return label;\n            },\n            padding: 5,\n            centerPointLabels: false\n        }\n    };\n    static defaultRoutes = {\n        'angleLines.color': 'borderColor',\n        'pointLabels.color': 'color',\n        'ticks.color': 'color'\n    };\n    static descriptors = {\n        angleLines: {\n            _fallback: 'grid'\n        }\n    };\n    constructor(cfg){\n        super(cfg);\n         this.xCenter = undefined;\n         this.yCenter = undefined;\n         this.drawingArea = undefined;\n         this._pointLabels = [];\n        this._pointLabelItems = [];\n    }\n    setDimensions() {\n        const padding = this._padding = toPadding(getTickBackdropHeight(this.options) / 2);\n        const w = this.width = this.maxWidth - padding.width;\n        const h = this.height = this.maxHeight - padding.height;\n        this.xCenter = Math.floor(this.left + w / 2 + padding.left);\n        this.yCenter = Math.floor(this.top + h / 2 + padding.top);\n        this.drawingArea = Math.floor(Math.min(w, h) / 2);\n    }\n    determineDataLimits() {\n        const { min , max  } = this.getMinMax(false);\n        this.min = isNumberFinite(min) && !isNaN(min) ? min : 0;\n        this.max = isNumberFinite(max) && !isNaN(max) ? max : 0;\n        this.handleTickRangeOptions();\n    }\n computeTickLimit() {\n        return Math.ceil(this.drawingArea / getTickBackdropHeight(this.options));\n    }\n    generateTickLabels(ticks) {\n        LinearScaleBase.prototype.generateTickLabels.call(this, ticks);\n        this._pointLabels = this.getLabels().map((value, index)=>{\n            const label = callback(this.options.pointLabels.callback, [\n                value,\n                index\n            ], this);\n            return label || label === 0 ? label : '';\n        }).filter((v, i)=>this.chart.getDataVisibility(i));\n    }\n    fit() {\n        const opts = this.options;\n        if (opts.display && opts.pointLabels.display) {\n            fitWithPointLabels(this);\n        } else {\n            this.setCenterPoint(0, 0, 0, 0);\n        }\n    }\n    setCenterPoint(leftMovement, rightMovement, topMovement, bottomMovement) {\n        this.xCenter += Math.floor((leftMovement - rightMovement) / 2);\n        this.yCenter += Math.floor((topMovement - bottomMovement) / 2);\n        this.drawingArea -= Math.min(this.drawingArea / 2, Math.max(leftMovement, rightMovement, topMovement, bottomMovement));\n    }\n    getIndexAngle(index) {\n        const angleMultiplier = TAU / (this._pointLabels.length || 1);\n        const startAngle = this.options.startAngle || 0;\n        return _normalizeAngle(index * angleMultiplier + toRadians(startAngle));\n    }\n    getDistanceFromCenterForValue(value) {\n        if (isNullOrUndef(value)) {\n            return NaN;\n        }\n        const scalingFactor = this.drawingArea / (this.max - this.min);\n        if (this.options.reverse) {\n            return (this.max - value) * scalingFactor;\n        }\n        return (value - this.min) * scalingFactor;\n    }\n    getValueForDistanceFromCenter(distance) {\n        if (isNullOrUndef(distance)) {\n            return NaN;\n        }\n        const scaledDistance = distance / (this.drawingArea / (this.max - this.min));\n        return this.options.reverse ? this.max - scaledDistance : this.min + scaledDistance;\n    }\n    getPointLabelContext(index) {\n        const pointLabels = this._pointLabels || [];\n        if (index >= 0 && index < pointLabels.length) {\n            const pointLabel = pointLabels[index];\n            return createPointLabelContext(this.getContext(), index, pointLabel);\n        }\n    }\n    getPointPosition(index, distanceFromCenter, additionalAngle = 0) {\n        const angle = this.getIndexAngle(index) - HALF_PI + additionalAngle;\n        return {\n            x: Math.cos(angle) * distanceFromCenter + this.xCenter,\n            y: Math.sin(angle) * distanceFromCenter + this.yCenter,\n            angle\n        };\n    }\n    getPointPositionForValue(index, value) {\n        return this.getPointPosition(index, this.getDistanceFromCenterForValue(value));\n    }\n    getBasePosition(index) {\n        return this.getPointPositionForValue(index || 0, this.getBaseValue());\n    }\n    getPointLabelPosition(index) {\n        const { left , top , right , bottom  } = this._pointLabelItems[index];\n        return {\n            left,\n            top,\n            right,\n            bottom\n        };\n    }\n drawBackground() {\n        const { backgroundColor , grid: { circular  }  } = this.options;\n        if (backgroundColor) {\n            const ctx = this.ctx;\n            ctx.save();\n            ctx.beginPath();\n            pathRadiusLine(this, this.getDistanceFromCenterForValue(this._endValue), circular, this._pointLabels.length);\n            ctx.closePath();\n            ctx.fillStyle = backgroundColor;\n            ctx.fill();\n            ctx.restore();\n        }\n    }\n drawGrid() {\n        const ctx = this.ctx;\n        const opts = this.options;\n        const { angleLines , grid , border  } = opts;\n        const labelCount = this._pointLabels.length;\n        let i, offset, position;\n        if (opts.pointLabels.display) {\n            drawPointLabels(this, labelCount);\n        }\n        if (grid.display) {\n            this.ticks.forEach((tick, index)=>{\n                if (index !== 0 || index === 0 && this.min < 0) {\n                    offset = this.getDistanceFromCenterForValue(tick.value);\n                    const context = this.getContext(index);\n                    const optsAtIndex = grid.setContext(context);\n                    const optsAtIndexBorder = border.setContext(context);\n                    drawRadiusLine(this, optsAtIndex, offset, labelCount, optsAtIndexBorder);\n                }\n            });\n        }\n        if (angleLines.display) {\n            ctx.save();\n            for(i = labelCount - 1; i >= 0; i--){\n                const optsAtIndex = angleLines.setContext(this.getPointLabelContext(i));\n                const { color , lineWidth  } = optsAtIndex;\n                if (!lineWidth || !color) {\n                    continue;\n                }\n                ctx.lineWidth = lineWidth;\n                ctx.strokeStyle = color;\n                ctx.setLineDash(optsAtIndex.borderDash);\n                ctx.lineDashOffset = optsAtIndex.borderDashOffset;\n                offset = this.getDistanceFromCenterForValue(opts.reverse ? this.min : this.max);\n                position = this.getPointPosition(i, offset);\n                ctx.beginPath();\n                ctx.moveTo(this.xCenter, this.yCenter);\n                ctx.lineTo(position.x, position.y);\n                ctx.stroke();\n            }\n            ctx.restore();\n        }\n    }\n drawBorder() {}\n drawLabels() {\n        const ctx = this.ctx;\n        const opts = this.options;\n        const tickOpts = opts.ticks;\n        if (!tickOpts.display) {\n            return;\n        }\n        const startAngle = this.getIndexAngle(0);\n        let offset, width;\n        ctx.save();\n        ctx.translate(this.xCenter, this.yCenter);\n        ctx.rotate(startAngle);\n        ctx.textAlign = 'center';\n        ctx.textBaseline = 'middle';\n        this.ticks.forEach((tick, index)=>{\n            if (index === 0 && this.min >= 0 && !opts.reverse) {\n                return;\n            }\n            const optsAtIndex = tickOpts.setContext(this.getContext(index));\n            const tickFont = toFont(optsAtIndex.font);\n            offset = this.getDistanceFromCenterForValue(this.ticks[index].value);\n            if (optsAtIndex.showLabelBackdrop) {\n                ctx.font = tickFont.string;\n                width = ctx.measureText(tick.label).width;\n                ctx.fillStyle = optsAtIndex.backdropColor;\n                const padding = toPadding(optsAtIndex.backdropPadding);\n                ctx.fillRect(-width / 2 - padding.left, -offset - tickFont.size / 2 - padding.top, width + padding.width, tickFont.size + padding.height);\n            }\n            renderText(ctx, tick.label, 0, -offset, tickFont, {\n                color: optsAtIndex.color,\n                strokeColor: optsAtIndex.textStrokeColor,\n                strokeWidth: optsAtIndex.textStrokeWidth\n            });\n        });\n        ctx.restore();\n    }\n drawTitle() {}\n}\n\nconst INTERVALS = {\n    millisecond: {\n        common: true,\n        size: 1,\n        steps: 1000\n    },\n    second: {\n        common: true,\n        size: 1000,\n        steps: 60\n    },\n    minute: {\n        common: true,\n        size: 60000,\n        steps: 60\n    },\n    hour: {\n        common: true,\n        size: 3600000,\n        steps: 24\n    },\n    day: {\n        common: true,\n        size: 86400000,\n        steps: 30\n    },\n    week: {\n        common: false,\n        size: 604800000,\n        steps: 4\n    },\n    month: {\n        common: true,\n        size: 2.628e9,\n        steps: 12\n    },\n    quarter: {\n        common: false,\n        size: 7.884e9,\n        steps: 4\n    },\n    year: {\n        common: true,\n        size: 3.154e10\n    }\n};\n const UNITS =  /* #__PURE__ */ Object.keys(INTERVALS);\n function sorter(a, b) {\n    return a - b;\n}\n function parse(scale, input) {\n    if (isNullOrUndef(input)) {\n        return null;\n    }\n    const adapter = scale._adapter;\n    const { parser , round , isoWeekday  } = scale._parseOpts;\n    let value = input;\n    if (typeof parser === 'function') {\n        value = parser(value);\n    }\n    if (!isNumberFinite(value)) {\n        value = typeof parser === 'string' ? adapter.parse(value,  parser) : adapter.parse(value);\n    }\n    if (value === null) {\n        return null;\n    }\n    if (round) {\n        value = round === 'week' && (isNumber(isoWeekday) || isoWeekday === true) ? adapter.startOf(value, 'isoWeek', isoWeekday) : adapter.startOf(value, round);\n    }\n    return +value;\n}\n function determineUnitForAutoTicks(minUnit, min, max, capacity) {\n    const ilen = UNITS.length;\n    for(let i = UNITS.indexOf(minUnit); i < ilen - 1; ++i){\n        const interval = INTERVALS[UNITS[i]];\n        const factor = interval.steps ? interval.steps : Number.MAX_SAFE_INTEGER;\n        if (interval.common && Math.ceil((max - min) / (factor * interval.size)) <= capacity) {\n            return UNITS[i];\n        }\n    }\n    return UNITS[ilen - 1];\n}\n function determineUnitForFormatting(scale, numTicks, minUnit, min, max) {\n    for(let i = UNITS.length - 1; i >= UNITS.indexOf(minUnit); i--){\n        const unit = UNITS[i];\n        if (INTERVALS[unit].common && scale._adapter.diff(max, min, unit) >= numTicks - 1) {\n            return unit;\n        }\n    }\n    return UNITS[minUnit ? UNITS.indexOf(minUnit) : 0];\n}\n function determineMajorUnit(unit) {\n    for(let i = UNITS.indexOf(unit) + 1, ilen = UNITS.length; i < ilen; ++i){\n        if (INTERVALS[UNITS[i]].common) {\n            return UNITS[i];\n        }\n    }\n}\n function addTick(ticks, time, timestamps) {\n    if (!timestamps) {\n        ticks[time] = true;\n    } else if (timestamps.length) {\n        const { lo , hi  } = _lookup(timestamps, time);\n        const timestamp = timestamps[lo] >= time ? timestamps[lo] : timestamps[hi];\n        ticks[timestamp] = true;\n    }\n}\n function setMajorTicks(scale, ticks, map, majorUnit) {\n    const adapter = scale._adapter;\n    const first = +adapter.startOf(ticks[0].value, majorUnit);\n    const last = ticks[ticks.length - 1].value;\n    let major, index;\n    for(major = first; major <= last; major = +adapter.add(major, 1, majorUnit)){\n        index = map[major];\n        if (index >= 0) {\n            ticks[index].major = true;\n        }\n    }\n    return ticks;\n}\n function ticksFromTimestamps(scale, values, majorUnit) {\n    const ticks = [];\n     const map = {};\n    const ilen = values.length;\n    let i, value;\n    for(i = 0; i < ilen; ++i){\n        value = values[i];\n        map[value] = i;\n        ticks.push({\n            value,\n            major: false\n        });\n    }\n    return ilen === 0 || !majorUnit ? ticks : setMajorTicks(scale, ticks, map, majorUnit);\n}\nclass TimeScale extends Scale {\n    static id = 'time';\n static defaults = {\n bounds: 'data',\n        adapters: {},\n        time: {\n            parser: false,\n            unit: false,\n            round: false,\n            isoWeekday: false,\n            minUnit: 'millisecond',\n            displayFormats: {}\n        },\n        ticks: {\n source: 'auto',\n            callback: false,\n            major: {\n                enabled: false\n            }\n        }\n    };\n constructor(props){\n        super(props);\n         this._cache = {\n            data: [],\n            labels: [],\n            all: []\n        };\n         this._unit = 'day';\n         this._majorUnit = undefined;\n        this._offsets = {};\n        this._normalized = false;\n        this._parseOpts = undefined;\n    }\n    init(scaleOpts, opts = {}) {\n        const time = scaleOpts.time || (scaleOpts.time = {});\n         const adapter = this._adapter = new adapters._date(scaleOpts.adapters.date);\n        adapter.init(opts);\n        mergeIf(time.displayFormats, adapter.formats());\n        this._parseOpts = {\n            parser: time.parser,\n            round: time.round,\n            isoWeekday: time.isoWeekday\n        };\n        super.init(scaleOpts);\n        this._normalized = opts.normalized;\n    }\n parse(raw, index) {\n        if (raw === undefined) {\n            return null;\n        }\n        return parse(this, raw);\n    }\n    beforeLayout() {\n        super.beforeLayout();\n        this._cache = {\n            data: [],\n            labels: [],\n            all: []\n        };\n    }\n    determineDataLimits() {\n        const options = this.options;\n        const adapter = this._adapter;\n        const unit = options.time.unit || 'day';\n        let { min , max , minDefined , maxDefined  } = this.getUserBounds();\n function _applyBounds(bounds) {\n            if (!minDefined && !isNaN(bounds.min)) {\n                min = Math.min(min, bounds.min);\n            }\n            if (!maxDefined && !isNaN(bounds.max)) {\n                max = Math.max(max, bounds.max);\n            }\n        }\n        if (!minDefined || !maxDefined) {\n            _applyBounds(this._getLabelBounds());\n            if (options.bounds !== 'ticks' || options.ticks.source !== 'labels') {\n                _applyBounds(this.getMinMax(false));\n            }\n        }\n        min = isNumberFinite(min) && !isNaN(min) ? min : +adapter.startOf(Date.now(), unit);\n        max = isNumberFinite(max) && !isNaN(max) ? max : +adapter.endOf(Date.now(), unit) + 1;\n        this.min = Math.min(min, max - 1);\n        this.max = Math.max(min + 1, max);\n    }\n _getLabelBounds() {\n        const arr = this.getLabelTimestamps();\n        let min = Number.POSITIVE_INFINITY;\n        let max = Number.NEGATIVE_INFINITY;\n        if (arr.length) {\n            min = arr[0];\n            max = arr[arr.length - 1];\n        }\n        return {\n            min,\n            max\n        };\n    }\n buildTicks() {\n        const options = this.options;\n        const timeOpts = options.time;\n        const tickOpts = options.ticks;\n        const timestamps = tickOpts.source === 'labels' ? this.getLabelTimestamps() : this._generate();\n        if (options.bounds === 'ticks' && timestamps.length) {\n            this.min = this._userMin || timestamps[0];\n            this.max = this._userMax || timestamps[timestamps.length - 1];\n        }\n        const min = this.min;\n        const max = this.max;\n        const ticks = _filterBetween(timestamps, min, max);\n        this._unit = timeOpts.unit || (tickOpts.autoSkip ? determineUnitForAutoTicks(timeOpts.minUnit, this.min, this.max, this._getLabelCapacity(min)) : determineUnitForFormatting(this, ticks.length, timeOpts.minUnit, this.min, this.max));\n        this._majorUnit = !tickOpts.major.enabled || this._unit === 'year' ? undefined : determineMajorUnit(this._unit);\n        this.initOffsets(timestamps);\n        if (options.reverse) {\n            ticks.reverse();\n        }\n        return ticksFromTimestamps(this, ticks, this._majorUnit);\n    }\n    afterAutoSkip() {\n        if (this.options.offsetAfterAutoskip) {\n            this.initOffsets(this.ticks.map((tick)=>+tick.value));\n        }\n    }\n initOffsets(timestamps = []) {\n        let start = 0;\n        let end = 0;\n        let first, last;\n        if (this.options.offset && timestamps.length) {\n            first = this.getDecimalForValue(timestamps[0]);\n            if (timestamps.length === 1) {\n                start = 1 - first;\n            } else {\n                start = (this.getDecimalForValue(timestamps[1]) - first) / 2;\n            }\n            last = this.getDecimalForValue(timestamps[timestamps.length - 1]);\n            if (timestamps.length === 1) {\n                end = last;\n            } else {\n                end = (last - this.getDecimalForValue(timestamps[timestamps.length - 2])) / 2;\n            }\n        }\n        const limit = timestamps.length < 3 ? 0.5 : 0.25;\n        start = _limitValue(start, 0, limit);\n        end = _limitValue(end, 0, limit);\n        this._offsets = {\n            start,\n            end,\n            factor: 1 / (start + 1 + end)\n        };\n    }\n _generate() {\n        const adapter = this._adapter;\n        const min = this.min;\n        const max = this.max;\n        const options = this.options;\n        const timeOpts = options.time;\n        const minor = timeOpts.unit || determineUnitForAutoTicks(timeOpts.minUnit, min, max, this._getLabelCapacity(min));\n        const stepSize = valueOrDefault(options.ticks.stepSize, 1);\n        const weekday = minor === 'week' ? timeOpts.isoWeekday : false;\n        const hasWeekday = isNumber(weekday) || weekday === true;\n        const ticks = {};\n        let first = min;\n        let time, count;\n        if (hasWeekday) {\n            first = +adapter.startOf(first, 'isoWeek', weekday);\n        }\n        first = +adapter.startOf(first, hasWeekday ? 'day' : minor);\n        if (adapter.diff(max, min, minor) > 100000 * stepSize) {\n            throw new Error(min + ' and ' + max + ' are too far apart with stepSize of ' + stepSize + ' ' + minor);\n        }\n        const timestamps = options.ticks.source === 'data' && this.getDataTimestamps();\n        for(time = first, count = 0; time < max; time = +adapter.add(time, stepSize, minor), count++){\n            addTick(ticks, time, timestamps);\n        }\n        if (time === max || options.bounds === 'ticks' || count === 1) {\n            addTick(ticks, time, timestamps);\n        }\n        return Object.keys(ticks).sort(sorter).map((x)=>+x);\n    }\n getLabelForValue(value) {\n        const adapter = this._adapter;\n        const timeOpts = this.options.time;\n        if (timeOpts.tooltipFormat) {\n            return adapter.format(value, timeOpts.tooltipFormat);\n        }\n        return adapter.format(value, timeOpts.displayFormats.datetime);\n    }\n format(value, format) {\n        const options = this.options;\n        const formats = options.time.displayFormats;\n        const unit = this._unit;\n        const fmt = format || formats[unit];\n        return this._adapter.format(value, fmt);\n    }\n _tickFormatFunction(time, index, ticks, format) {\n        const options = this.options;\n        const formatter = options.ticks.callback;\n        if (formatter) {\n            return callback(formatter, [\n                time,\n                index,\n                ticks\n            ], this);\n        }\n        const formats = options.time.displayFormats;\n        const unit = this._unit;\n        const majorUnit = this._majorUnit;\n        const minorFormat = unit && formats[unit];\n        const majorFormat = majorUnit && formats[majorUnit];\n        const tick = ticks[index];\n        const major = majorUnit && majorFormat && tick && tick.major;\n        return this._adapter.format(time, format || (major ? majorFormat : minorFormat));\n    }\n generateTickLabels(ticks) {\n        let i, ilen, tick;\n        for(i = 0, ilen = ticks.length; i < ilen; ++i){\n            tick = ticks[i];\n            tick.label = this._tickFormatFunction(tick.value, i, ticks);\n        }\n    }\n getDecimalForValue(value) {\n        return value === null ? NaN : (value - this.min) / (this.max - this.min);\n    }\n getPixelForValue(value) {\n        const offsets = this._offsets;\n        const pos = this.getDecimalForValue(value);\n        return this.getPixelForDecimal((offsets.start + pos) * offsets.factor);\n    }\n getValueForPixel(pixel) {\n        const offsets = this._offsets;\n        const pos = this.getDecimalForPixel(pixel) / offsets.factor - offsets.end;\n        return this.min + pos * (this.max - this.min);\n    }\n _getLabelSize(label) {\n        const ticksOpts = this.options.ticks;\n        const tickLabelWidth = this.ctx.measureText(label).width;\n        const angle = toRadians(this.isHorizontal() ? ticksOpts.maxRotation : ticksOpts.minRotation);\n        const cosRotation = Math.cos(angle);\n        const sinRotation = Math.sin(angle);\n        const tickFontSize = this._resolveTickFontOptions(0).size;\n        return {\n            w: tickLabelWidth * cosRotation + tickFontSize * sinRotation,\n            h: tickLabelWidth * sinRotation + tickFontSize * cosRotation\n        };\n    }\n _getLabelCapacity(exampleTime) {\n        const timeOpts = this.options.time;\n        const displayFormats = timeOpts.displayFormats;\n        const format = displayFormats[timeOpts.unit] || displayFormats.millisecond;\n        const exampleLabel = this._tickFormatFunction(exampleTime, 0, ticksFromTimestamps(this, [\n            exampleTime\n        ], this._majorUnit), format);\n        const size = this._getLabelSize(exampleLabel);\n        const capacity = Math.floor(this.isHorizontal() ? this.width / size.w : this.height / size.h) - 1;\n        return capacity > 0 ? capacity : 1;\n    }\n getDataTimestamps() {\n        let timestamps = this._cache.data || [];\n        let i, ilen;\n        if (timestamps.length) {\n            return timestamps;\n        }\n        const metas = this.getMatchingVisibleMetas();\n        if (this._normalized && metas.length) {\n            return this._cache.data = metas[0].controller.getAllParsedValues(this);\n        }\n        for(i = 0, ilen = metas.length; i < ilen; ++i){\n            timestamps = timestamps.concat(metas[i].controller.getAllParsedValues(this));\n        }\n        return this._cache.data = this.normalize(timestamps);\n    }\n getLabelTimestamps() {\n        const timestamps = this._cache.labels || [];\n        let i, ilen;\n        if (timestamps.length) {\n            return timestamps;\n        }\n        const labels = this.getLabels();\n        for(i = 0, ilen = labels.length; i < ilen; ++i){\n            timestamps.push(parse(this, labels[i]));\n        }\n        return this._cache.labels = this._normalized ? timestamps : this.normalize(timestamps);\n    }\n normalize(values) {\n        return _arrayUnique(values.sort(sorter));\n    }\n}\n\nfunction interpolate(table, val, reverse) {\n    let lo = 0;\n    let hi = table.length - 1;\n    let prevSource, nextSource, prevTarget, nextTarget;\n    if (reverse) {\n        if (val >= table[lo].pos && val <= table[hi].pos) {\n            ({ lo , hi  } = _lookupByKey(table, 'pos', val));\n        }\n        ({ pos: prevSource , time: prevTarget  } = table[lo]);\n        ({ pos: nextSource , time: nextTarget  } = table[hi]);\n    } else {\n        if (val >= table[lo].time && val <= table[hi].time) {\n            ({ lo , hi  } = _lookupByKey(table, 'time', val));\n        }\n        ({ time: prevSource , pos: prevTarget  } = table[lo]);\n        ({ time: nextSource , pos: nextTarget  } = table[hi]);\n    }\n    const span = nextSource - prevSource;\n    return span ? prevTarget + (nextTarget - prevTarget) * (val - prevSource) / span : prevTarget;\n}\nclass TimeSeriesScale extends TimeScale {\n    static id = 'timeseries';\n static defaults = TimeScale.defaults;\n constructor(props){\n        super(props);\n         this._table = [];\n         this._minPos = undefined;\n         this._tableRange = undefined;\n    }\n initOffsets() {\n        const timestamps = this._getTimestampsForTable();\n        const table = this._table = this.buildLookupTable(timestamps);\n        this._minPos = interpolate(table, this.min);\n        this._tableRange = interpolate(table, this.max) - this._minPos;\n        super.initOffsets(timestamps);\n    }\n buildLookupTable(timestamps) {\n        const { min , max  } = this;\n        const items = [];\n        const table = [];\n        let i, ilen, prev, curr, next;\n        for(i = 0, ilen = timestamps.length; i < ilen; ++i){\n            curr = timestamps[i];\n            if (curr >= min && curr <= max) {\n                items.push(curr);\n            }\n        }\n        if (items.length < 2) {\n            return [\n                {\n                    time: min,\n                    pos: 0\n                },\n                {\n                    time: max,\n                    pos: 1\n                }\n            ];\n        }\n        for(i = 0, ilen = items.length; i < ilen; ++i){\n            next = items[i + 1];\n            prev = items[i - 1];\n            curr = items[i];\n            if (Math.round((next + prev) / 2) !== curr) {\n                table.push({\n                    time: curr,\n                    pos: i / (ilen - 1)\n                });\n            }\n        }\n        return table;\n    }\n _generate() {\n        const min = this.min;\n        const max = this.max;\n        let timestamps = super.getDataTimestamps();\n        if (!timestamps.includes(min) || !timestamps.length) {\n            timestamps.splice(0, 0, min);\n        }\n        if (!timestamps.includes(max) || timestamps.length === 1) {\n            timestamps.push(max);\n        }\n        return timestamps.sort((a, b)=>a - b);\n    }\n _getTimestampsForTable() {\n        let timestamps = this._cache.all || [];\n        if (timestamps.length) {\n            return timestamps;\n        }\n        const data = this.getDataTimestamps();\n        const label = this.getLabelTimestamps();\n        if (data.length && label.length) {\n            timestamps = this.normalize(data.concat(label));\n        } else {\n            timestamps = data.length ? data : label;\n        }\n        timestamps = this._cache.all = timestamps;\n        return timestamps;\n    }\n getDecimalForValue(value) {\n        return (interpolate(this._table, value) - this._minPos) / this._tableRange;\n    }\n getValueForPixel(pixel) {\n        const offsets = this._offsets;\n        const decimal = this.getDecimalForPixel(pixel) / offsets.factor - offsets.end;\n        return interpolate(this._table, decimal * this._tableRange + this._minPos, true);\n    }\n}\n\nvar scales = /*#__PURE__*/Object.freeze({\n__proto__: null,\nCategoryScale: CategoryScale,\nLinearScale: LinearScale,\nLogarithmicScale: LogarithmicScale,\nRadialLinearScale: RadialLinearScale,\nTimeScale: TimeScale,\nTimeSeriesScale: TimeSeriesScale\n});\n\nconst registerables = [\n    controllers,\n    elements,\n    plugins,\n    scales\n];\n\nexport { Animation, Animations, ArcElement, BarController, BarElement, BasePlatform, BasicPlatform, BubbleController, CategoryScale, Chart, plugin_colors as Colors, DatasetController, plugin_decimation as Decimation, DomPlatform, DoughnutController, Element, index as Filler, Interaction, plugin_legend as Legend, LineController, LineElement, LinearScale, LogarithmicScale, PieController, PointElement, PolarAreaController, RadarController, RadialLinearScale, Scale, ScatterController, plugin_subtitle as SubTitle, Ticks, TimeScale, TimeSeriesScale, plugin_title as Title, plugin_tooltip as Tooltip, adapters as _adapters, _detectPlatform, animator, controllers, defaults, elements, layouts, plugins, registerables, registry, scales };\n//# sourceMappingURL=chart.js.map\n","import {requestAnimFrame} from '../helpers/helpers.extras.js';\n\n/**\n * @typedef { import('./core.animation.js').default } Animation\n * @typedef { import('./core.controller.js').default } Chart\n */\n\n/**\n * Please use the module's default export which provides a singleton instance\n * Note: class is export for typedoc\n */\nexport class Animator {\n  constructor() {\n    this._request = null;\n    this._charts = new Map();\n    this._running = false;\n    this._lastDate = undefined;\n  }\n\n  /**\n\t * @private\n\t */\n  _notify(chart, anims, date, type) {\n    const callbacks = anims.listeners[type];\n    const numSteps = anims.duration;\n\n    callbacks.forEach(fn => fn({\n      chart,\n      initial: anims.initial,\n      numSteps,\n      currentStep: Math.min(date - anims.start, numSteps)\n    }));\n  }\n\n  /**\n\t * @private\n\t */\n  _refresh() {\n    if (this._request) {\n      return;\n    }\n    this._running = true;\n\n    this._request = requestAnimFrame.call(window, () => {\n      this._update();\n      this._request = null;\n\n      if (this._running) {\n        this._refresh();\n      }\n    });\n  }\n\n  /**\n\t * @private\n\t */\n  _update(date = Date.now()) {\n    let remaining = 0;\n\n    this._charts.forEach((anims, chart) => {\n      if (!anims.running || !anims.items.length) {\n        return;\n      }\n      const items = anims.items;\n      let i = items.length - 1;\n      let draw = false;\n      let item;\n\n      for (; i >= 0; --i) {\n        item = items[i];\n\n        if (item._active) {\n          if (item._total > anims.duration) {\n            // if the animation has been updated and its duration prolonged,\n            // update to total duration of current animations run (for progress event)\n            anims.duration = item._total;\n          }\n          item.tick(date);\n          draw = true;\n        } else {\n          // Remove the item by replacing it with last item and removing the last\n          // A lot faster than splice.\n          items[i] = items[items.length - 1];\n          items.pop();\n        }\n      }\n\n      if (draw) {\n        chart.draw();\n        this._notify(chart, anims, date, 'progress');\n      }\n\n      if (!items.length) {\n        anims.running = false;\n        this._notify(chart, anims, date, 'complete');\n        anims.initial = false;\n      }\n\n      remaining += items.length;\n    });\n\n    this._lastDate = date;\n\n    if (remaining === 0) {\n      this._running = false;\n    }\n  }\n\n  /**\n\t * @private\n\t */\n  _getAnims(chart) {\n    const charts = this._charts;\n    let anims = charts.get(chart);\n    if (!anims) {\n      anims = {\n        running: false,\n        initial: true,\n        items: [],\n        listeners: {\n          complete: [],\n          progress: []\n        }\n      };\n      charts.set(chart, anims);\n    }\n    return anims;\n  }\n\n  /**\n\t * @param {Chart} chart\n\t * @param {string} event - event name\n\t * @param {Function} cb - callback\n\t */\n  listen(chart, event, cb) {\n    this._getAnims(chart).listeners[event].push(cb);\n  }\n\n  /**\n\t * Add animations\n\t * @param {Chart} chart\n\t * @param {Animation[]} items - animations\n\t */\n  add(chart, items) {\n    if (!items || !items.length) {\n      return;\n    }\n    this._getAnims(chart).items.push(...items);\n  }\n\n  /**\n\t * Counts number of active animations for the chart\n\t * @param {Chart} chart\n\t */\n  has(chart) {\n    return this._getAnims(chart).items.length > 0;\n  }\n\n  /**\n\t * Start animating (all charts)\n\t * @param {Chart} chart\n\t */\n  start(chart) {\n    const anims = this._charts.get(chart);\n    if (!anims) {\n      return;\n    }\n    anims.running = true;\n    anims.start = Date.now();\n    anims.duration = anims.items.reduce((acc, cur) => Math.max(acc, cur._duration), 0);\n    this._refresh();\n  }\n\n  running(chart) {\n    if (!this._running) {\n      return false;\n    }\n    const anims = this._charts.get(chart);\n    if (!anims || !anims.running || !anims.items.length) {\n      return false;\n    }\n    return true;\n  }\n\n  /**\n\t * Stop all animations for the chart\n\t * @param {Chart} chart\n\t */\n  stop(chart) {\n    const anims = this._charts.get(chart);\n    if (!anims || !anims.items.length) {\n      return;\n    }\n    const items = anims.items;\n    let i = items.length - 1;\n\n    for (; i >= 0; --i) {\n      items[i].cancel();\n    }\n    anims.items = [];\n    this._notify(chart, anims, Date.now(), 'complete');\n  }\n\n  /**\n\t * Remove chart from Animator\n\t * @param {Chart} chart\n\t */\n  remove(chart) {\n    return this._charts.delete(chart);\n  }\n}\n\n// singleton instance\nexport default /* #__PURE__ */ new Animator();\n","import effects from '../helpers/helpers.easing.js';\nimport {resolve} from '../helpers/helpers.options.js';\nimport {color as helpersColor} from '../helpers/helpers.color.js';\n\nconst transparent = 'transparent';\nconst interpolators = {\n  boolean(from, to, factor) {\n    return factor > 0.5 ? to : from;\n  },\n  /**\n   * @param {string} from\n   * @param {string} to\n   * @param {number} factor\n   */\n  color(from, to, factor) {\n    const c0 = helpersColor(from || transparent);\n    const c1 = c0.valid && helpersColor(to || transparent);\n    return c1 && c1.valid\n      ? c1.mix(c0, factor).hexString()\n      : to;\n  },\n  number(from, to, factor) {\n    return from + (to - from) * factor;\n  }\n};\n\nexport default class Animation {\n  constructor(cfg, target, prop, to) {\n    const currentValue = target[prop];\n\n    to = resolve([cfg.to, to, currentValue, cfg.from]);\n    const from = resolve([cfg.from, currentValue, to]);\n\n    this._active = true;\n    this._fn = cfg.fn || interpolators[cfg.type || typeof from];\n    this._easing = effects[cfg.easing] || effects.linear;\n    this._start = Math.floor(Date.now() + (cfg.delay || 0));\n    this._duration = this._total = Math.floor(cfg.duration);\n    this._loop = !!cfg.loop;\n    this._target = target;\n    this._prop = prop;\n    this._from = from;\n    this._to = to;\n    this._promises = undefined;\n  }\n\n  active() {\n    return this._active;\n  }\n\n  update(cfg, to, date) {\n    if (this._active) {\n      this._notify(false);\n\n      const currentValue = this._target[this._prop];\n      const elapsed = date - this._start;\n      const remain = this._duration - elapsed;\n      this._start = date;\n      this._duration = Math.floor(Math.max(remain, cfg.duration));\n      this._total += elapsed;\n      this._loop = !!cfg.loop;\n      this._to = resolve([cfg.to, to, currentValue, cfg.from]);\n      this._from = resolve([cfg.from, currentValue, to]);\n    }\n  }\n\n  cancel() {\n    if (this._active) {\n      // update current evaluated value, for smoother animations\n      this.tick(Date.now());\n      this._active = false;\n      this._notify(false);\n    }\n  }\n\n  tick(date) {\n    const elapsed = date - this._start;\n    const duration = this._duration;\n    const prop = this._prop;\n    const from = this._from;\n    const loop = this._loop;\n    const to = this._to;\n    let factor;\n\n    this._active = from !== to && (loop || (elapsed < duration));\n\n    if (!this._active) {\n      this._target[prop] = to;\n      this._notify(true);\n      return;\n    }\n\n    if (elapsed < 0) {\n      this._target[prop] = from;\n      return;\n    }\n\n    factor = (elapsed / duration) % 2;\n    factor = loop && factor > 1 ? 2 - factor : factor;\n    factor = this._easing(Math.min(1, Math.max(0, factor)));\n\n    this._target[prop] = this._fn(from, to, factor);\n  }\n\n  wait() {\n    const promises = this._promises || (this._promises = []);\n    return new Promise((res, rej) => {\n      promises.push({res, rej});\n    });\n  }\n\n  _notify(resolved) {\n    const method = resolved ? 'res' : 'rej';\n    const promises = this._promises || [];\n    for (let i = 0; i < promises.length; i++) {\n      promises[i][method]();\n    }\n  }\n}\n","import animator from './core.animator.js';\nimport Animation from './core.animation.js';\nimport defaults from './core.defaults.js';\nimport {isArray, isObject} from '../helpers/helpers.core.js';\n\nexport default class Animations {\n  constructor(chart, config) {\n    this._chart = chart;\n    this._properties = new Map();\n    this.configure(config);\n  }\n\n  configure(config) {\n    if (!isObject(config)) {\n      return;\n    }\n\n    const animationOptions = Object.keys(defaults.animation);\n    const animatedProps = this._properties;\n\n    Object.getOwnPropertyNames(config).forEach(key => {\n      const cfg = config[key];\n      if (!isObject(cfg)) {\n        return;\n      }\n      const resolved = {};\n      for (const option of animationOptions) {\n        resolved[option] = cfg[option];\n      }\n\n      (isArray(cfg.properties) && cfg.properties || [key]).forEach((prop) => {\n        if (prop === key || !animatedProps.has(prop)) {\n          animatedProps.set(prop, resolved);\n        }\n      });\n    });\n  }\n\n  /**\n\t * Utility to handle animation of `options`.\n\t * @private\n\t */\n  _animateOptions(target, values) {\n    const newOptions = values.options;\n    const options = resolveTargetOptions(target, newOptions);\n    if (!options) {\n      return [];\n    }\n\n    const animations = this._createAnimations(options, newOptions);\n    if (newOptions.$shared) {\n      // Going to shared options:\n      // After all animations are done, assign the shared options object to the element\n      // So any new updates to the shared options are observed\n      awaitAll(target.options.$animations, newOptions).then(() => {\n        target.options = newOptions;\n      }, () => {\n        // rejected, noop\n      });\n    }\n\n    return animations;\n  }\n\n  /**\n\t * @private\n\t */\n  _createAnimations(target, values) {\n    const animatedProps = this._properties;\n    const animations = [];\n    const running = target.$animations || (target.$animations = {});\n    const props = Object.keys(values);\n    const date = Date.now();\n    let i;\n\n    for (i = props.length - 1; i >= 0; --i) {\n      const prop = props[i];\n      if (prop.charAt(0) === '$') {\n        continue;\n      }\n\n      if (prop === 'options') {\n        animations.push(...this._animateOptions(target, values));\n        continue;\n      }\n      const value = values[prop];\n      let animation = running[prop];\n      const cfg = animatedProps.get(prop);\n\n      if (animation) {\n        if (cfg && animation.active()) {\n          // There is an existing active animation, let's update that\n          animation.update(cfg, value, date);\n          continue;\n        } else {\n          animation.cancel();\n        }\n      }\n      if (!cfg || !cfg.duration) {\n        // not animated, set directly to new value\n        target[prop] = value;\n        continue;\n      }\n\n      running[prop] = animation = new Animation(cfg, target, prop, value);\n      animations.push(animation);\n    }\n    return animations;\n  }\n\n\n  /**\n\t * Update `target` properties to new values, using configured animations\n\t * @param {object} target - object to update\n\t * @param {object} values - new target properties\n\t * @returns {boolean|undefined} - `true` if animations were started\n\t **/\n  update(target, values) {\n    if (this._properties.size === 0) {\n      // Nothing is animated, just apply the new values.\n      Object.assign(target, values);\n      return;\n    }\n\n    const animations = this._createAnimations(target, values);\n\n    if (animations.length) {\n      animator.add(this._chart, animations);\n      return true;\n    }\n  }\n}\n\nfunction awaitAll(animations, properties) {\n  const running = [];\n  const keys = Object.keys(properties);\n  for (let i = 0; i < keys.length; i++) {\n    const anim = animations[keys[i]];\n    if (anim && anim.active()) {\n      running.push(anim.wait());\n    }\n  }\n  // @ts-ignore\n  return Promise.all(running);\n}\n\nfunction resolveTargetOptions(target, newOptions) {\n  if (!newOptions) {\n    return;\n  }\n  let options = target.options;\n  if (!options) {\n    target.options = newOptions;\n    return;\n  }\n  if (options.$shared) {\n    // Going from shared options to distinct one:\n    // Create new options object containing the old shared values and start updating that.\n    target.options = options = Object.assign({}, options, {$shared: false, $animations: {}});\n  }\n  return options;\n}\n","import Animations from './core.animations.js';\nimport defaults from './core.defaults.js';\nimport {isArray, isFinite, isObject, valueOrDefault, resolveObjectKey, defined} from '../helpers/helpers.core.js';\nimport {listenArrayEvents, unlistenArrayEvents} from '../helpers/helpers.collection.js';\nimport {createContext, sign} from '../helpers/index.js';\n\n/**\n * @typedef { import('./core.controller.js').default } Chart\n * @typedef { import('./core.scale.js').default } Scale\n */\n\nfunction scaleClip(scale, allowedOverflow) {\n  const opts = scale && scale.options || {};\n  const reverse = opts.reverse;\n  const min = opts.min === undefined ? allowedOverflow : 0;\n  const max = opts.max === undefined ? allowedOverflow : 0;\n  return {\n    start: reverse ? max : min,\n    end: reverse ? min : max\n  };\n}\n\nfunction defaultClip(xScale, yScale, allowedOverflow) {\n  if (allowedOverflow === false) {\n    return false;\n  }\n  const x = scaleClip(xScale, allowedOverflow);\n  const y = scaleClip(yScale, allowedOverflow);\n\n  return {\n    top: y.end,\n    right: x.end,\n    bottom: y.start,\n    left: x.start\n  };\n}\n\nfunction toClip(value) {\n  let t, r, b, l;\n\n  if (isObject(value)) {\n    t = value.top;\n    r = value.right;\n    b = value.bottom;\n    l = value.left;\n  } else {\n    t = r = b = l = value;\n  }\n\n  return {\n    top: t,\n    right: r,\n    bottom: b,\n    left: l,\n    disabled: value === false\n  };\n}\n\nfunction getSortedDatasetIndices(chart, filterVisible) {\n  const keys = [];\n  const metasets = chart._getSortedDatasetMetas(filterVisible);\n  let i, ilen;\n\n  for (i = 0, ilen = metasets.length; i < ilen; ++i) {\n    keys.push(metasets[i].index);\n  }\n  return keys;\n}\n\nfunction applyStack(stack, value, dsIndex, options = {}) {\n  const keys = stack.keys;\n  const singleMode = options.mode === 'single';\n  let i, ilen, datasetIndex, otherValue;\n\n  if (value === null) {\n    return;\n  }\n\n  for (i = 0, ilen = keys.length; i < ilen; ++i) {\n    datasetIndex = +keys[i];\n    if (datasetIndex === dsIndex) {\n      if (options.all) {\n        continue;\n      }\n      break;\n    }\n    otherValue = stack.values[datasetIndex];\n    if (isFinite(otherValue) && (singleMode || (value === 0 || sign(value) === sign(otherValue)))) {\n      value += otherValue;\n    }\n  }\n  return value;\n}\n\nfunction convertObjectDataToArray(data, meta) {\n  const {iScale, vScale} = meta;\n  const iAxisKey = iScale.axis === 'x' ? 'x' : 'y';\n  const vAxisKey = vScale.axis === 'x' ? 'x' : 'y';\n  const keys = Object.keys(data);\n  const adata = new Array(keys.length);\n  let i, ilen, key;\n  for (i = 0, ilen = keys.length; i < ilen; ++i) {\n    key = keys[i];\n    adata[i] = {\n      [iAxisKey]: key,\n      [vAxisKey]: data[key]\n    };\n  }\n  return adata;\n}\n\nfunction isStacked(scale, meta) {\n  const stacked = scale && scale.options.stacked;\n  return stacked || (stacked === undefined && meta.stack !== undefined);\n}\n\nfunction getStackKey(indexScale, valueScale, meta) {\n  return `${indexScale.id}.${valueScale.id}.${meta.stack || meta.type}`;\n}\n\nfunction getUserBounds(scale) {\n  const {min, max, minDefined, maxDefined} = scale.getUserBounds();\n  return {\n    min: minDefined ? min : Number.NEGATIVE_INFINITY,\n    max: maxDefined ? max : Number.POSITIVE_INFINITY\n  };\n}\n\nfunction getOrCreateStack(stacks, stackKey, indexValue) {\n  const subStack = stacks[stackKey] || (stacks[stackKey] = {});\n  return subStack[indexValue] || (subStack[indexValue] = {});\n}\n\nfunction getLastIndexInStack(stack, vScale, positive, type) {\n  for (const meta of vScale.getMatchingVisibleMetas(type).reverse()) {\n    const value = stack[meta.index];\n    if ((positive && value > 0) || (!positive && value < 0)) {\n      return meta.index;\n    }\n  }\n\n  return null;\n}\n\nfunction updateStacks(controller, parsed) {\n  const {chart, _cachedMeta: meta} = controller;\n  const stacks = chart._stacks || (chart._stacks = {}); // map structure is {stackKey: {datasetIndex: value}}\n  const {iScale, vScale, index: datasetIndex} = meta;\n  const iAxis = iScale.axis;\n  const vAxis = vScale.axis;\n  const key = getStackKey(iScale, vScale, meta);\n  const ilen = parsed.length;\n  let stack;\n\n  for (let i = 0; i < ilen; ++i) {\n    const item = parsed[i];\n    const {[iAxis]: index, [vAxis]: value} = item;\n    const itemStacks = item._stacks || (item._stacks = {});\n    stack = itemStacks[vAxis] = getOrCreateStack(stacks, key, index);\n    stack[datasetIndex] = value;\n\n    stack._top = getLastIndexInStack(stack, vScale, true, meta.type);\n    stack._bottom = getLastIndexInStack(stack, vScale, false, meta.type);\n\n    const visualValues = stack._visualValues || (stack._visualValues = {});\n    visualValues[datasetIndex] = value;\n  }\n}\n\nfunction getFirstScaleId(chart, axis) {\n  const scales = chart.scales;\n  return Object.keys(scales).filter(key => scales[key].axis === axis).shift();\n}\n\nfunction createDatasetContext(parent, index) {\n  return createContext(parent,\n    {\n      active: false,\n      dataset: undefined,\n      datasetIndex: index,\n      index,\n      mode: 'default',\n      type: 'dataset'\n    }\n  );\n}\n\nfunction createDataContext(parent, index, element) {\n  return createContext(parent, {\n    active: false,\n    dataIndex: index,\n    parsed: undefined,\n    raw: undefined,\n    element,\n    index,\n    mode: 'default',\n    type: 'data'\n  });\n}\n\nfunction clearStacks(meta, items) {\n  // Not using meta.index here, because it might be already updated if the dataset changed location\n  const datasetIndex = meta.controller.index;\n  const axis = meta.vScale && meta.vScale.axis;\n  if (!axis) {\n    return;\n  }\n\n  items = items || meta._parsed;\n  for (const parsed of items) {\n    const stacks = parsed._stacks;\n    if (!stacks || stacks[axis] === undefined || stacks[axis][datasetIndex] === undefined) {\n      return;\n    }\n    delete stacks[axis][datasetIndex];\n    if (stacks[axis]._visualValues !== undefined && stacks[axis]._visualValues[datasetIndex] !== undefined) {\n      delete stacks[axis]._visualValues[datasetIndex];\n    }\n  }\n}\n\nconst isDirectUpdateMode = (mode) => mode === 'reset' || mode === 'none';\nconst cloneIfNotShared = (cached, shared) => shared ? cached : Object.assign({}, cached);\nconst createStack = (canStack, meta, chart) => canStack && !meta.hidden && meta._stacked\n  && {keys: getSortedDatasetIndices(chart, true), values: null};\n\nexport default class DatasetController {\n\n  /**\n   * @type {any}\n   */\n  static defaults = {};\n\n  /**\n   * Element type used to generate a meta dataset (e.g. Chart.element.LineElement).\n   */\n  static datasetElementType = null;\n\n  /**\n   * Element type used to generate a meta data (e.g. Chart.element.PointElement).\n   */\n  static dataElementType = null;\n\n  /**\n\t * @param {Chart} chart\n\t * @param {number} datasetIndex\n\t */\n  constructor(chart, datasetIndex) {\n    this.chart = chart;\n    this._ctx = chart.ctx;\n    this.index = datasetIndex;\n    this._cachedDataOpts = {};\n    this._cachedMeta = this.getMeta();\n    this._type = this._cachedMeta.type;\n    this.options = undefined;\n    /** @type {boolean | object} */\n    this._parsing = false;\n    this._data = undefined;\n    this._objectData = undefined;\n    this._sharedOptions = undefined;\n    this._drawStart = undefined;\n    this._drawCount = undefined;\n    this.enableOptionSharing = false;\n    this.supportsDecimation = false;\n    this.$context = undefined;\n    this._syncList = [];\n    this.datasetElementType = new.target.datasetElementType;\n    this.dataElementType = new.target.dataElementType;\n\n    this.initialize();\n  }\n\n  initialize() {\n    const meta = this._cachedMeta;\n    this.configure();\n    this.linkScales();\n    meta._stacked = isStacked(meta.vScale, meta);\n    this.addElements();\n\n    if (this.options.fill && !this.chart.isPluginEnabled('filler')) {\n      console.warn(\"Tried to use the 'fill' option without the 'Filler' plugin enabled. Please import and register the 'Filler' plugin and make sure it is not disabled in the options\");\n    }\n  }\n\n  updateIndex(datasetIndex) {\n    if (this.index !== datasetIndex) {\n      clearStacks(this._cachedMeta);\n    }\n    this.index = datasetIndex;\n  }\n\n  linkScales() {\n    const chart = this.chart;\n    const meta = this._cachedMeta;\n    const dataset = this.getDataset();\n\n    const chooseId = (axis, x, y, r) => axis === 'x' ? x : axis === 'r' ? r : y;\n\n    const xid = meta.xAxisID = valueOrDefault(dataset.xAxisID, getFirstScaleId(chart, 'x'));\n    const yid = meta.yAxisID = valueOrDefault(dataset.yAxisID, getFirstScaleId(chart, 'y'));\n    const rid = meta.rAxisID = valueOrDefault(dataset.rAxisID, getFirstScaleId(chart, 'r'));\n    const indexAxis = meta.indexAxis;\n    const iid = meta.iAxisID = chooseId(indexAxis, xid, yid, rid);\n    const vid = meta.vAxisID = chooseId(indexAxis, yid, xid, rid);\n    meta.xScale = this.getScaleForId(xid);\n    meta.yScale = this.getScaleForId(yid);\n    meta.rScale = this.getScaleForId(rid);\n    meta.iScale = this.getScaleForId(iid);\n    meta.vScale = this.getScaleForId(vid);\n  }\n\n  getDataset() {\n    return this.chart.data.datasets[this.index];\n  }\n\n  getMeta() {\n    return this.chart.getDatasetMeta(this.index);\n  }\n\n  /**\n\t * @param {string} scaleID\n\t * @return {Scale}\n\t */\n  getScaleForId(scaleID) {\n    return this.chart.scales[scaleID];\n  }\n\n  /**\n\t * @private\n\t */\n  _getOtherScale(scale) {\n    const meta = this._cachedMeta;\n    return scale === meta.iScale\n      ? meta.vScale\n      : meta.iScale;\n  }\n\n  reset() {\n    this._update('reset');\n  }\n\n  /**\n\t * @private\n\t */\n  _destroy() {\n    const meta = this._cachedMeta;\n    if (this._data) {\n      unlistenArrayEvents(this._data, this);\n    }\n    if (meta._stacked) {\n      clearStacks(meta);\n    }\n  }\n\n  /**\n\t * @private\n\t */\n  _dataCheck() {\n    const dataset = this.getDataset();\n    const data = dataset.data || (dataset.data = []);\n    const _data = this._data;\n\n    // In order to correctly handle data addition/deletion animation (and thus simulate\n    // real-time charts), we need to monitor these data modifications and synchronize\n    // the internal metadata accordingly.\n\n    if (isObject(data)) {\n      const meta = this._cachedMeta;\n      this._data = convertObjectDataToArray(data, meta);\n    } else if (_data !== data) {\n      if (_data) {\n        // This case happens when the user replaced the data array instance.\n        unlistenArrayEvents(_data, this);\n        // Discard old parsed data and stacks\n        const meta = this._cachedMeta;\n        clearStacks(meta);\n        meta._parsed = [];\n      }\n      if (data && Object.isExtensible(data)) {\n        listenArrayEvents(data, this);\n      }\n      this._syncList = [];\n      this._data = data;\n    }\n  }\n\n  addElements() {\n    const meta = this._cachedMeta;\n\n    this._dataCheck();\n\n    if (this.datasetElementType) {\n      meta.dataset = new this.datasetElementType();\n    }\n  }\n\n  buildOrUpdateElements(resetNewElements) {\n    const meta = this._cachedMeta;\n    const dataset = this.getDataset();\n    let stackChanged = false;\n\n    this._dataCheck();\n\n    // make sure cached _stacked status is current\n    const oldStacked = meta._stacked;\n    meta._stacked = isStacked(meta.vScale, meta);\n\n    // detect change in stack option\n    if (meta.stack !== dataset.stack) {\n      stackChanged = true;\n      // remove values from old stack\n      clearStacks(meta);\n      meta.stack = dataset.stack;\n    }\n\n    // Re-sync meta data in case the user replaced the data array or if we missed\n    // any updates and so make sure that we handle number of datapoints changing.\n    this._resyncElements(resetNewElements);\n\n    // if stack changed, update stack values for the whole dataset\n    if (stackChanged || oldStacked !== meta._stacked) {\n      updateStacks(this, meta._parsed);\n      meta._stacked = isStacked(meta.vScale, meta);\n    }\n  }\n\n  /**\n\t * Merges user-supplied and default dataset-level options\n\t * @private\n\t */\n  configure() {\n    const config = this.chart.config;\n    const scopeKeys = config.datasetScopeKeys(this._type);\n    const scopes = config.getOptionScopes(this.getDataset(), scopeKeys, true);\n    this.options = config.createResolver(scopes, this.getContext());\n    this._parsing = this.options.parsing;\n    this._cachedDataOpts = {};\n  }\n\n  /**\n\t * @param {number} start\n\t * @param {number} count\n\t */\n  parse(start, count) {\n    const {_cachedMeta: meta, _data: data} = this;\n    const {iScale, _stacked} = meta;\n    const iAxis = iScale.axis;\n\n    let sorted = start === 0 && count === data.length ? true : meta._sorted;\n    let prev = start > 0 && meta._parsed[start - 1];\n    let i, cur, parsed;\n\n    if (this._parsing === false) {\n      meta._parsed = data;\n      meta._sorted = true;\n      parsed = data;\n    } else {\n      if (isArray(data[start])) {\n        parsed = this.parseArrayData(meta, data, start, count);\n      } else if (isObject(data[start])) {\n        parsed = this.parseObjectData(meta, data, start, count);\n      } else {\n        parsed = this.parsePrimitiveData(meta, data, start, count);\n      }\n\n      const isNotInOrderComparedToPrev = () => cur[iAxis] === null || (prev && cur[iAxis] < prev[iAxis]);\n      for (i = 0; i < count; ++i) {\n        meta._parsed[i + start] = cur = parsed[i];\n        if (sorted) {\n          if (isNotInOrderComparedToPrev()) {\n            sorted = false;\n          }\n          prev = cur;\n        }\n      }\n      meta._sorted = sorted;\n    }\n\n    if (_stacked) {\n      updateStacks(this, parsed);\n    }\n  }\n\n  /**\n\t * Parse array of primitive values\n\t * @param {object} meta - dataset meta\n\t * @param {array} data - data array. Example [1,3,4]\n\t * @param {number} start - start index\n\t * @param {number} count - number of items to parse\n\t * @returns {object} parsed item - item containing index and a parsed value\n\t * for each scale id.\n\t * Example: {xScale0: 0, yScale0: 1}\n\t * @protected\n\t */\n  parsePrimitiveData(meta, data, start, count) {\n    const {iScale, vScale} = meta;\n    const iAxis = iScale.axis;\n    const vAxis = vScale.axis;\n    const labels = iScale.getLabels();\n    const singleScale = iScale === vScale;\n    const parsed = new Array(count);\n    let i, ilen, index;\n\n    for (i = 0, ilen = count; i < ilen; ++i) {\n      index = i + start;\n      parsed[i] = {\n        [iAxis]: singleScale || iScale.parse(labels[index], index),\n        [vAxis]: vScale.parse(data[index], index)\n      };\n    }\n    return parsed;\n  }\n\n  /**\n\t * Parse array of arrays\n\t * @param {object} meta - dataset meta\n\t * @param {array} data - data array. Example [[1,2],[3,4]]\n\t * @param {number} start - start index\n\t * @param {number} count - number of items to parse\n\t * @returns {object} parsed item - item containing index and a parsed value\n\t * for each scale id.\n\t * Example: {x: 0, y: 1}\n\t * @protected\n\t */\n  parseArrayData(meta, data, start, count) {\n    const {xScale, yScale} = meta;\n    const parsed = new Array(count);\n    let i, ilen, index, item;\n\n    for (i = 0, ilen = count; i < ilen; ++i) {\n      index = i + start;\n      item = data[index];\n      parsed[i] = {\n        x: xScale.parse(item[0], index),\n        y: yScale.parse(item[1], index)\n      };\n    }\n    return parsed;\n  }\n\n  /**\n\t * Parse array of objects\n\t * @param {object} meta - dataset meta\n\t * @param {array} data - data array. Example [{x:1, y:5}, {x:2, y:10}]\n\t * @param {number} start - start index\n\t * @param {number} count - number of items to parse\n\t * @returns {object} parsed item - item containing index and a parsed value\n\t * for each scale id. _custom is optional\n\t * Example: {xScale0: 0, yScale0: 1, _custom: {r: 10, foo: 'bar'}}\n\t * @protected\n\t */\n  parseObjectData(meta, data, start, count) {\n    const {xScale, yScale} = meta;\n    const {xAxisKey = 'x', yAxisKey = 'y'} = this._parsing;\n    const parsed = new Array(count);\n    let i, ilen, index, item;\n\n    for (i = 0, ilen = count; i < ilen; ++i) {\n      index = i + start;\n      item = data[index];\n      parsed[i] = {\n        x: xScale.parse(resolveObjectKey(item, xAxisKey), index),\n        y: yScale.parse(resolveObjectKey(item, yAxisKey), index)\n      };\n    }\n    return parsed;\n  }\n\n  /**\n\t * @protected\n\t */\n  getParsed(index) {\n    return this._cachedMeta._parsed[index];\n  }\n\n  /**\n\t * @protected\n\t */\n  getDataElement(index) {\n    return this._cachedMeta.data[index];\n  }\n\n  /**\n\t * @protected\n\t */\n  applyStack(scale, parsed, mode) {\n    const chart = this.chart;\n    const meta = this._cachedMeta;\n    const value = parsed[scale.axis];\n    const stack = {\n      keys: getSortedDatasetIndices(chart, true),\n      values: parsed._stacks[scale.axis]._visualValues\n    };\n    return applyStack(stack, value, meta.index, {mode});\n  }\n\n  /**\n\t * @protected\n\t */\n  updateRangeFromParsed(range, scale, parsed, stack) {\n    const parsedValue = parsed[scale.axis];\n    let value = parsedValue === null ? NaN : parsedValue;\n    const values = stack && parsed._stacks[scale.axis];\n    if (stack && values) {\n      stack.values = values;\n      value = applyStack(stack, parsedValue, this._cachedMeta.index);\n    }\n    range.min = Math.min(range.min, value);\n    range.max = Math.max(range.max, value);\n  }\n\n  /**\n\t * @protected\n\t */\n  getMinMax(scale, canStack) {\n    const meta = this._cachedMeta;\n    const _parsed = meta._parsed;\n    const sorted = meta._sorted && scale === meta.iScale;\n    const ilen = _parsed.length;\n    const otherScale = this._getOtherScale(scale);\n    const stack = createStack(canStack, meta, this.chart);\n    const range = {min: Number.POSITIVE_INFINITY, max: Number.NEGATIVE_INFINITY};\n    const {min: otherMin, max: otherMax} = getUserBounds(otherScale);\n    let i, parsed;\n\n    function _skip() {\n      parsed = _parsed[i];\n      const otherValue = parsed[otherScale.axis];\n      return !isFinite(parsed[scale.axis]) || otherMin > otherValue || otherMax < otherValue;\n    }\n\n    for (i = 0; i < ilen; ++i) {\n      if (_skip()) {\n        continue;\n      }\n      this.updateRangeFromParsed(range, scale, parsed, stack);\n      if (sorted) {\n        // if the data is sorted, we don't need to check further from this end of array\n        break;\n      }\n    }\n    if (sorted) {\n      // in the sorted case, find first non-skipped value from other end of array\n      for (i = ilen - 1; i >= 0; --i) {\n        if (_skip()) {\n          continue;\n        }\n        this.updateRangeFromParsed(range, scale, parsed, stack);\n        break;\n      }\n    }\n    return range;\n  }\n\n  getAllParsedValues(scale) {\n    const parsed = this._cachedMeta._parsed;\n    const values = [];\n    let i, ilen, value;\n\n    for (i = 0, ilen = parsed.length; i < ilen; ++i) {\n      value = parsed[i][scale.axis];\n      if (isFinite(value)) {\n        values.push(value);\n      }\n    }\n    return values;\n  }\n\n  /**\n\t * @return {number|boolean}\n\t * @protected\n\t */\n  getMaxOverflow() {\n    return false;\n  }\n\n  /**\n\t * @protected\n\t */\n  getLabelAndValue(index) {\n    const meta = this._cachedMeta;\n    const iScale = meta.iScale;\n    const vScale = meta.vScale;\n    const parsed = this.getParsed(index);\n    return {\n      label: iScale ? '' + iScale.getLabelForValue(parsed[iScale.axis]) : '',\n      value: vScale ? '' + vScale.getLabelForValue(parsed[vScale.axis]) : ''\n    };\n  }\n\n  /**\n\t * @private\n\t */\n  _update(mode) {\n    const meta = this._cachedMeta;\n    this.update(mode || 'default');\n    meta._clip = toClip(valueOrDefault(this.options.clip, defaultClip(meta.xScale, meta.yScale, this.getMaxOverflow())));\n  }\n\n  /**\n\t * @param {string} mode\n\t */\n  update(mode) {} // eslint-disable-line no-unused-vars\n\n  draw() {\n    const ctx = this._ctx;\n    const chart = this.chart;\n    const meta = this._cachedMeta;\n    const elements = meta.data || [];\n    const area = chart.chartArea;\n    const active = [];\n    const start = this._drawStart || 0;\n    const count = this._drawCount || (elements.length - start);\n    const drawActiveElementsOnTop = this.options.drawActiveElementsOnTop;\n    let i;\n\n    if (meta.dataset) {\n      meta.dataset.draw(ctx, area, start, count);\n    }\n\n    for (i = start; i < start + count; ++i) {\n      const element = elements[i];\n      if (element.hidden) {\n        continue;\n      }\n      if (element.active && drawActiveElementsOnTop) {\n        active.push(element);\n      } else {\n        element.draw(ctx, area);\n      }\n    }\n\n    for (i = 0; i < active.length; ++i) {\n      active[i].draw(ctx, area);\n    }\n  }\n\n  /**\n\t * Returns a set of predefined style properties that should be used to represent the dataset\n\t * or the data if the index is specified\n\t * @param {number} index - data index\n\t * @param {boolean} [active] - true if hover\n\t * @return {object} style object\n\t */\n  getStyle(index, active) {\n    const mode = active ? 'active' : 'default';\n    return index === undefined && this._cachedMeta.dataset\n      ? this.resolveDatasetElementOptions(mode)\n      : this.resolveDataElementOptions(index || 0, mode);\n  }\n\n  /**\n\t * @protected\n\t */\n  getContext(index, active, mode) {\n    const dataset = this.getDataset();\n    let context;\n    if (index >= 0 && index < this._cachedMeta.data.length) {\n      const element = this._cachedMeta.data[index];\n      context = element.$context ||\n        (element.$context = createDataContext(this.getContext(), index, element));\n      context.parsed = this.getParsed(index);\n      context.raw = dataset.data[index];\n      context.index = context.dataIndex = index;\n    } else {\n      context = this.$context ||\n        (this.$context = createDatasetContext(this.chart.getContext(), this.index));\n      context.dataset = dataset;\n      context.index = context.datasetIndex = this.index;\n    }\n\n    context.active = !!active;\n    context.mode = mode;\n    return context;\n  }\n\n  /**\n\t * @param {string} [mode]\n\t * @protected\n\t */\n  resolveDatasetElementOptions(mode) {\n    return this._resolveElementOptions(this.datasetElementType.id, mode);\n  }\n\n  /**\n\t * @param {number} index\n\t * @param {string} [mode]\n\t * @protected\n\t */\n  resolveDataElementOptions(index, mode) {\n    return this._resolveElementOptions(this.dataElementType.id, mode, index);\n  }\n\n  /**\n\t * @private\n\t */\n  _resolveElementOptions(elementType, mode = 'default', index) {\n    const active = mode === 'active';\n    const cache = this._cachedDataOpts;\n    const cacheKey = elementType + '-' + mode;\n    const cached = cache[cacheKey];\n    const sharing = this.enableOptionSharing && defined(index);\n    if (cached) {\n      return cloneIfNotShared(cached, sharing);\n    }\n    const config = this.chart.config;\n    const scopeKeys = config.datasetElementScopeKeys(this._type, elementType);\n    const prefixes = active ? [`${elementType}Hover`, 'hover', elementType, ''] : [elementType, ''];\n    const scopes = config.getOptionScopes(this.getDataset(), scopeKeys);\n    const names = Object.keys(defaults.elements[elementType]);\n    // context is provided as a function, and is called only if needed,\n    // so we don't create a context for each element if not needed.\n    const context = () => this.getContext(index, active, mode);\n    const values = config.resolveNamedOptions(scopes, names, context, prefixes);\n\n    if (values.$shared) {\n      // `$shared` indicates this set of options can be shared between multiple elements.\n      // Sharing is used to reduce number of properties to change during animation.\n      values.$shared = sharing;\n\n      // We cache options by `mode`, which can be 'active' for example. This enables us\n      // to have the 'active' element options and 'default' options to switch between\n      // when interacting.\n      cache[cacheKey] = Object.freeze(cloneIfNotShared(values, sharing));\n    }\n\n    return values;\n  }\n\n\n  /**\n\t * @private\n\t */\n  _resolveAnimations(index, transition, active) {\n    const chart = this.chart;\n    const cache = this._cachedDataOpts;\n    const cacheKey = `animation-${transition}`;\n    const cached = cache[cacheKey];\n    if (cached) {\n      return cached;\n    }\n    let options;\n    if (chart.options.animation !== false) {\n      const config = this.chart.config;\n      const scopeKeys = config.datasetAnimationScopeKeys(this._type, transition);\n      const scopes = config.getOptionScopes(this.getDataset(), scopeKeys);\n      options = config.createResolver(scopes, this.getContext(index, active, transition));\n    }\n    const animations = new Animations(chart, options && options.animations);\n    if (options && options._cacheable) {\n      cache[cacheKey] = Object.freeze(animations);\n    }\n    return animations;\n  }\n\n  /**\n\t * Utility for getting the options object shared between elements\n\t * @protected\n\t */\n  getSharedOptions(options) {\n    if (!options.$shared) {\n      return;\n    }\n    return this._sharedOptions || (this._sharedOptions = Object.assign({}, options));\n  }\n\n  /**\n\t * Utility for determining if `options` should be included in the updated properties\n\t * @protected\n\t */\n  includeOptions(mode, sharedOptions) {\n    return !sharedOptions || isDirectUpdateMode(mode) || this.chart._animationsDisabled;\n  }\n\n  /**\n   * @todo v4, rename to getSharedOptions and remove excess functions\n   */\n  _getSharedOptions(start, mode) {\n    const firstOpts = this.resolveDataElementOptions(start, mode);\n    const previouslySharedOptions = this._sharedOptions;\n    const sharedOptions = this.getSharedOptions(firstOpts);\n    const includeOptions = this.includeOptions(mode, sharedOptions) || (sharedOptions !== previouslySharedOptions);\n    this.updateSharedOptions(sharedOptions, mode, firstOpts);\n    return {sharedOptions, includeOptions};\n  }\n\n  /**\n\t * Utility for updating an element with new properties, using animations when appropriate.\n\t * @protected\n\t */\n  updateElement(element, index, properties, mode) {\n    if (isDirectUpdateMode(mode)) {\n      Object.assign(element, properties);\n    } else {\n      this._resolveAnimations(index, mode).update(element, properties);\n    }\n  }\n\n  /**\n\t * Utility to animate the shared options, that are potentially affecting multiple elements.\n\t * @protected\n\t */\n  updateSharedOptions(sharedOptions, mode, newOptions) {\n    if (sharedOptions && !isDirectUpdateMode(mode)) {\n      this._resolveAnimations(undefined, mode).update(sharedOptions, newOptions);\n    }\n  }\n\n  /**\n\t * @private\n\t */\n  _setStyle(element, index, mode, active) {\n    element.active = active;\n    const options = this.getStyle(index, active);\n    this._resolveAnimations(index, mode, active).update(element, {\n      // When going from active to inactive, we need to update to the shared options.\n      // This way the once hovered element will end up with the same original shared options instance, after animation.\n      options: (!active && this.getSharedOptions(options)) || options\n    });\n  }\n\n  removeHoverStyle(element, datasetIndex, index) {\n    this._setStyle(element, index, 'active', false);\n  }\n\n  setHoverStyle(element, datasetIndex, index) {\n    this._setStyle(element, index, 'active', true);\n  }\n\n  /**\n\t * @private\n\t */\n  _removeDatasetHoverStyle() {\n    const element = this._cachedMeta.dataset;\n\n    if (element) {\n      this._setStyle(element, undefined, 'active', false);\n    }\n  }\n\n  /**\n\t * @private\n\t */\n  _setDatasetHoverStyle() {\n    const element = this._cachedMeta.dataset;\n\n    if (element) {\n      this._setStyle(element, undefined, 'active', true);\n    }\n  }\n\n  /**\n\t * @private\n\t */\n  _resyncElements(resetNewElements) {\n    const data = this._data;\n    const elements = this._cachedMeta.data;\n\n    // Apply changes detected through array listeners\n    for (const [method, arg1, arg2] of this._syncList) {\n      this[method](arg1, arg2);\n    }\n    this._syncList = [];\n\n    const numMeta = elements.length;\n    const numData = data.length;\n    const count = Math.min(numData, numMeta);\n\n    if (count) {\n      // TODO: It is not optimal to always parse the old data\n      // This is done because we are not detecting direct assignments:\n      // chart.data.datasets[0].data[5] = 10;\n      // chart.data.datasets[0].data[5].y = 10;\n      this.parse(0, count);\n    }\n\n    if (numData > numMeta) {\n      this._insertElements(numMeta, numData - numMeta, resetNewElements);\n    } else if (numData < numMeta) {\n      this._removeElements(numData, numMeta - numData);\n    }\n  }\n\n  /**\n\t * @private\n\t */\n  _insertElements(start, count, resetNewElements = true) {\n    const meta = this._cachedMeta;\n    const data = meta.data;\n    const end = start + count;\n    let i;\n\n    const move = (arr) => {\n      arr.length += count;\n      for (i = arr.length - 1; i >= end; i--) {\n        arr[i] = arr[i - count];\n      }\n    };\n    move(data);\n\n    for (i = start; i < end; ++i) {\n      data[i] = new this.dataElementType();\n    }\n\n    if (this._parsing) {\n      move(meta._parsed);\n    }\n    this.parse(start, count);\n\n    if (resetNewElements) {\n      this.updateElements(data, start, count, 'reset');\n    }\n  }\n\n  updateElements(element, start, count, mode) {} // eslint-disable-line no-unused-vars\n\n  /**\n\t * @private\n\t */\n  _removeElements(start, count) {\n    const meta = this._cachedMeta;\n    if (this._parsing) {\n      const removed = meta._parsed.splice(start, count);\n      if (meta._stacked) {\n        clearStacks(meta, removed);\n      }\n    }\n    meta.data.splice(start, count);\n  }\n\n  /**\n\t * @private\n   */\n  _sync(args) {\n    if (this._parsing) {\n      this._syncList.push(args);\n    } else {\n      const [method, arg1, arg2] = args;\n      this[method](arg1, arg2);\n    }\n    this.chart._dataChanges.push([this.index, ...args]);\n  }\n\n  _onDataPush() {\n    const count = arguments.length;\n    this._sync(['_insertElements', this.getDataset().data.length - count, count]);\n  }\n\n  _onDataPop() {\n    this._sync(['_removeElements', this._cachedMeta.data.length - 1, 1]);\n  }\n\n  _onDataShift() {\n    this._sync(['_removeElements', 0, 1]);\n  }\n\n  _onDataSplice(start, count) {\n    if (count) {\n      this._sync(['_removeElements', start, count]);\n    }\n    const newCount = arguments.length - 2;\n    if (newCount) {\n      this._sync(['_insertElements', start, newCount]);\n    }\n  }\n\n  _onDataUnshift() {\n    this._sync(['_insertElements', 0, arguments.length]);\n  }\n}\n","import DatasetController from '../core/core.datasetController.js';\nimport {\n  _arrayUnique, isArray, isNullOrUndef,\n  valueOrDefault, resolveObjectKey, sign, defined\n} from '../helpers/index.js';\n\nfunction getAllScaleValues(scale, type) {\n  if (!scale._cache.$bar) {\n    const visibleMetas = scale.getMatchingVisibleMetas(type);\n    let values = [];\n\n    for (let i = 0, ilen = visibleMetas.length; i < ilen; i++) {\n      values = values.concat(visibleMetas[i].controller.getAllParsedValues(scale));\n    }\n    scale._cache.$bar = _arrayUnique(values.sort((a, b) => a - b));\n  }\n  return scale._cache.$bar;\n}\n\n/**\n * Computes the \"optimal\" sample size to maintain bars equally sized while preventing overlap.\n * @private\n */\nfunction computeMinSampleSize(meta) {\n  const scale = meta.iScale;\n  const values = getAllScaleValues(scale, meta.type);\n  let min = scale._length;\n  let i, ilen, curr, prev;\n  const updateMinAndPrev = () => {\n    if (curr === 32767 || curr === -32768) {\n      // Ignore truncated pixels\n      return;\n    }\n    if (defined(prev)) {\n      // curr - prev === 0 is ignored\n      min = Math.min(min, Math.abs(curr - prev) || min);\n    }\n    prev = curr;\n  };\n\n  for (i = 0, ilen = values.length; i < ilen; ++i) {\n    curr = scale.getPixelForValue(values[i]);\n    updateMinAndPrev();\n  }\n\n  prev = undefined;\n  for (i = 0, ilen = scale.ticks.length; i < ilen; ++i) {\n    curr = scale.getPixelForTick(i);\n    updateMinAndPrev();\n  }\n\n  return min;\n}\n\n/**\n * Computes an \"ideal\" category based on the absolute bar thickness or, if undefined or null,\n * uses the smallest interval (see computeMinSampleSize) that prevents bar overlapping. This\n * mode currently always generates bars equally sized (until we introduce scriptable options?).\n * @private\n */\nfunction computeFitCategoryTraits(index, ruler, options, stackCount) {\n  const thickness = options.barThickness;\n  let size, ratio;\n\n  if (isNullOrUndef(thickness)) {\n    size = ruler.min * options.categoryPercentage;\n    ratio = options.barPercentage;\n  } else {\n    // When bar thickness is enforced, category and bar percentages are ignored.\n    // Note(SB): we could add support for relative bar thickness (e.g. barThickness: '50%')\n    // and deprecate barPercentage since this value is ignored when thickness is absolute.\n    size = thickness * stackCount;\n    ratio = 1;\n  }\n\n  return {\n    chunk: size / stackCount,\n    ratio,\n    start: ruler.pixels[index] - (size / 2)\n  };\n}\n\n/**\n * Computes an \"optimal\" category that globally arranges bars side by side (no gap when\n * percentage options are 1), based on the previous and following categories. This mode\n * generates bars with different widths when data are not evenly spaced.\n * @private\n */\nfunction computeFlexCategoryTraits(index, ruler, options, stackCount) {\n  const pixels = ruler.pixels;\n  const curr = pixels[index];\n  let prev = index > 0 ? pixels[index - 1] : null;\n  let next = index < pixels.length - 1 ? pixels[index + 1] : null;\n  const percent = options.categoryPercentage;\n\n  if (prev === null) {\n    // first data: its size is double based on the next point or,\n    // if it's also the last data, we use the scale size.\n    prev = curr - (next === null ? ruler.end - ruler.start : next - curr);\n  }\n\n  if (next === null) {\n    // last data: its size is also double based on the previous point.\n    next = curr + curr - prev;\n  }\n\n  const start = curr - (curr - Math.min(prev, next)) / 2 * percent;\n  const size = Math.abs(next - prev) / 2 * percent;\n\n  return {\n    chunk: size / stackCount,\n    ratio: options.barPercentage,\n    start\n  };\n}\n\nfunction parseFloatBar(entry, item, vScale, i) {\n  const startValue = vScale.parse(entry[0], i);\n  const endValue = vScale.parse(entry[1], i);\n  const min = Math.min(startValue, endValue);\n  const max = Math.max(startValue, endValue);\n  let barStart = min;\n  let barEnd = max;\n\n  if (Math.abs(min) > Math.abs(max)) {\n    barStart = max;\n    barEnd = min;\n  }\n\n  // Store `barEnd` (furthest away from origin) as parsed value,\n  // to make stacking straight forward\n  item[vScale.axis] = barEnd;\n\n  item._custom = {\n    barStart,\n    barEnd,\n    start: startValue,\n    end: endValue,\n    min,\n    max\n  };\n}\n\nfunction parseValue(entry, item, vScale, i) {\n  if (isArray(entry)) {\n    parseFloatBar(entry, item, vScale, i);\n  } else {\n    item[vScale.axis] = vScale.parse(entry, i);\n  }\n  return item;\n}\n\nfunction parseArrayOrPrimitive(meta, data, start, count) {\n  const iScale = meta.iScale;\n  const vScale = meta.vScale;\n  const labels = iScale.getLabels();\n  const singleScale = iScale === vScale;\n  const parsed = [];\n  let i, ilen, item, entry;\n\n  for (i = start, ilen = start + count; i < ilen; ++i) {\n    entry = data[i];\n    item = {};\n    item[iScale.axis] = singleScale || iScale.parse(labels[i], i);\n    parsed.push(parseValue(entry, item, vScale, i));\n  }\n  return parsed;\n}\n\nfunction isFloatBar(custom) {\n  return custom && custom.barStart !== undefined && custom.barEnd !== undefined;\n}\n\nfunction barSign(size, vScale, actualBase) {\n  if (size !== 0) {\n    return sign(size);\n  }\n  return (vScale.isHorizontal() ? 1 : -1) * (vScale.min >= actualBase ? 1 : -1);\n}\n\nfunction borderProps(properties) {\n  let reverse, start, end, top, bottom;\n  if (properties.horizontal) {\n    reverse = properties.base > properties.x;\n    start = 'left';\n    end = 'right';\n  } else {\n    reverse = properties.base < properties.y;\n    start = 'bottom';\n    end = 'top';\n  }\n  if (reverse) {\n    top = 'end';\n    bottom = 'start';\n  } else {\n    top = 'start';\n    bottom = 'end';\n  }\n  return {start, end, reverse, top, bottom};\n}\n\nfunction setBorderSkipped(properties, options, stack, index) {\n  let edge = options.borderSkipped;\n  const res = {};\n\n  if (!edge) {\n    properties.borderSkipped = res;\n    return;\n  }\n\n  if (edge === true) {\n    properties.borderSkipped = {top: true, right: true, bottom: true, left: true};\n    return;\n  }\n\n  const {start, end, reverse, top, bottom} = borderProps(properties);\n\n  if (edge === 'middle' && stack) {\n    properties.enableBorderRadius = true;\n    if ((stack._top || 0) === index) {\n      edge = top;\n    } else if ((stack._bottom || 0) === index) {\n      edge = bottom;\n    } else {\n      res[parseEdge(bottom, start, end, reverse)] = true;\n      edge = top;\n    }\n  }\n\n  res[parseEdge(edge, start, end, reverse)] = true;\n  properties.borderSkipped = res;\n}\n\nfunction parseEdge(edge, a, b, reverse) {\n  if (reverse) {\n    edge = swap(edge, a, b);\n    edge = startEnd(edge, b, a);\n  } else {\n    edge = startEnd(edge, a, b);\n  }\n  return edge;\n}\n\nfunction swap(orig, v1, v2) {\n  return orig === v1 ? v2 : orig === v2 ? v1 : orig;\n}\n\nfunction startEnd(v, start, end) {\n  return v === 'start' ? start : v === 'end' ? end : v;\n}\n\nfunction setInflateAmount(properties, {inflateAmount}, ratio) {\n  properties.inflateAmount = inflateAmount === 'auto'\n    ? ratio === 1 ? 0.33 : 0\n    : inflateAmount;\n}\n\nexport default class BarController extends DatasetController {\n\n  static id = 'bar';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    datasetElementType: false,\n    dataElementType: 'bar',\n\n    categoryPercentage: 0.8,\n    barPercentage: 0.9,\n    grouped: true,\n\n    animations: {\n      numbers: {\n        type: 'number',\n        properties: ['x', 'y', 'base', 'width', 'height']\n      }\n    }\n  };\n\n  /**\n   * @type {any}\n   */\n  static overrides = {\n    scales: {\n      _index_: {\n        type: 'category',\n        offset: true,\n        grid: {\n          offset: true\n        }\n      },\n      _value_: {\n        type: 'linear',\n        beginAtZero: true,\n      }\n    }\n  };\n\n\n  /**\n\t * Overriding primitive data parsing since we support mixed primitive/array\n\t * data for float bars\n\t * @protected\n\t */\n  parsePrimitiveData(meta, data, start, count) {\n    return parseArrayOrPrimitive(meta, data, start, count);\n  }\n\n  /**\n\t * Overriding array data parsing since we support mixed primitive/array\n\t * data for float bars\n\t * @protected\n\t */\n  parseArrayData(meta, data, start, count) {\n    return parseArrayOrPrimitive(meta, data, start, count);\n  }\n\n  /**\n\t * Overriding object data parsing since we support mixed primitive/array\n\t * value-scale data for float bars\n\t * @protected\n\t */\n  parseObjectData(meta, data, start, count) {\n    const {iScale, vScale} = meta;\n    const {xAxisKey = 'x', yAxisKey = 'y'} = this._parsing;\n    const iAxisKey = iScale.axis === 'x' ? xAxisKey : yAxisKey;\n    const vAxisKey = vScale.axis === 'x' ? xAxisKey : yAxisKey;\n    const parsed = [];\n    let i, ilen, item, obj;\n    for (i = start, ilen = start + count; i < ilen; ++i) {\n      obj = data[i];\n      item = {};\n      item[iScale.axis] = iScale.parse(resolveObjectKey(obj, iAxisKey), i);\n      parsed.push(parseValue(resolveObjectKey(obj, vAxisKey), item, vScale, i));\n    }\n    return parsed;\n  }\n\n  /**\n\t * @protected\n\t */\n  updateRangeFromParsed(range, scale, parsed, stack) {\n    super.updateRangeFromParsed(range, scale, parsed, stack);\n    const custom = parsed._custom;\n    if (custom && scale === this._cachedMeta.vScale) {\n      // float bar: only one end of the bar is considered by `super`\n      range.min = Math.min(range.min, custom.min);\n      range.max = Math.max(range.max, custom.max);\n    }\n  }\n\n  /**\n\t * @return {number|boolean}\n\t * @protected\n\t */\n  getMaxOverflow() {\n    return 0;\n  }\n\n  /**\n\t * @protected\n\t */\n  getLabelAndValue(index) {\n    const meta = this._cachedMeta;\n    const {iScale, vScale} = meta;\n    const parsed = this.getParsed(index);\n    const custom = parsed._custom;\n    const value = isFloatBar(custom)\n      ? '[' + custom.start + ', ' + custom.end + ']'\n      : '' + vScale.getLabelForValue(parsed[vScale.axis]);\n\n    return {\n      label: '' + iScale.getLabelForValue(parsed[iScale.axis]),\n      value\n    };\n  }\n\n  initialize() {\n    this.enableOptionSharing = true;\n\n    super.initialize();\n\n    const meta = this._cachedMeta;\n    meta.stack = this.getDataset().stack;\n  }\n\n  update(mode) {\n    const meta = this._cachedMeta;\n    this.updateElements(meta.data, 0, meta.data.length, mode);\n  }\n\n  updateElements(bars, start, count, mode) {\n    const reset = mode === 'reset';\n    const {index, _cachedMeta: {vScale}} = this;\n    const base = vScale.getBasePixel();\n    const horizontal = vScale.isHorizontal();\n    const ruler = this._getRuler();\n    const {sharedOptions, includeOptions} = this._getSharedOptions(start, mode);\n\n    for (let i = start; i < start + count; i++) {\n      const parsed = this.getParsed(i);\n      const vpixels = reset || isNullOrUndef(parsed[vScale.axis]) ? {base, head: base} : this._calculateBarValuePixels(i);\n      const ipixels = this._calculateBarIndexPixels(i, ruler);\n      const stack = (parsed._stacks || {})[vScale.axis];\n\n      const properties = {\n        horizontal,\n        base: vpixels.base,\n        enableBorderRadius: !stack || isFloatBar(parsed._custom) || (index === stack._top || index === stack._bottom),\n        x: horizontal ? vpixels.head : ipixels.center,\n        y: horizontal ? ipixels.center : vpixels.head,\n        height: horizontal ? ipixels.size : Math.abs(vpixels.size),\n        width: horizontal ? Math.abs(vpixels.size) : ipixels.size\n      };\n\n      if (includeOptions) {\n        properties.options = sharedOptions || this.resolveDataElementOptions(i, bars[i].active ? 'active' : mode);\n      }\n      const options = properties.options || bars[i].options;\n      setBorderSkipped(properties, options, stack, index);\n      setInflateAmount(properties, options, ruler.ratio);\n      this.updateElement(bars[i], i, properties, mode);\n    }\n  }\n\n  /**\n\t * Returns the stacks based on groups and bar visibility.\n\t * @param {number} [last] - The dataset index\n\t * @param {number} [dataIndex] - The data index of the ruler\n\t * @returns {string[]} The list of stack IDs\n\t * @private\n\t */\n  _getStacks(last, dataIndex) {\n    const {iScale} = this._cachedMeta;\n    const metasets = iScale.getMatchingVisibleMetas(this._type)\n      .filter(meta => meta.controller.options.grouped);\n    const stacked = iScale.options.stacked;\n    const stacks = [];\n    const currentParsed = this._cachedMeta.controller.getParsed(dataIndex);\n    const iScaleValue = currentParsed && currentParsed[iScale.axis];\n\n    const skipNull = (meta) => {\n      const parsed = meta._parsed.find(item => item[iScale.axis] === iScaleValue);\n      const val = parsed && parsed[meta.vScale.axis];\n\n      if (isNullOrUndef(val) || isNaN(val)) {\n        return true;\n      }\n    };\n\n    for (const meta of metasets) {\n      if (dataIndex !== undefined && skipNull(meta)) {\n        continue;\n      }\n\n      // stacked   | meta.stack\n      //           | found | not found | undefined\n      // false     |   x   |     x     |     x\n      // true      |       |     x     |\n      // undefined |       |     x     |     x\n      if (stacked === false || stacks.indexOf(meta.stack) === -1 ||\n\t\t\t\t(stacked === undefined && meta.stack === undefined)) {\n        stacks.push(meta.stack);\n      }\n      if (meta.index === last) {\n        break;\n      }\n    }\n\n    // No stacks? that means there is no visible data. Let's still initialize an `undefined`\n    // stack where possible invisible bars will be located.\n    // https://github.com/chartjs/Chart.js/issues/6368\n    if (!stacks.length) {\n      stacks.push(undefined);\n    }\n\n    return stacks;\n  }\n\n  /**\n\t * Returns the effective number of stacks based on groups and bar visibility.\n\t * @private\n\t */\n  _getStackCount(index) {\n    return this._getStacks(undefined, index).length;\n  }\n\n  /**\n\t * Returns the stack index for the given dataset based on groups and bar visibility.\n\t * @param {number} [datasetIndex] - The dataset index\n\t * @param {string} [name] - The stack name to find\n   * @param {number} [dataIndex]\n\t * @returns {number} The stack index\n\t * @private\n\t */\n  _getStackIndex(datasetIndex, name, dataIndex) {\n    const stacks = this._getStacks(datasetIndex, dataIndex);\n    const index = (name !== undefined)\n      ? stacks.indexOf(name)\n      : -1; // indexOf returns -1 if element is not present\n\n    return (index === -1)\n      ? stacks.length - 1\n      : index;\n  }\n\n  /**\n\t * @private\n\t */\n  _getRuler() {\n    const opts = this.options;\n    const meta = this._cachedMeta;\n    const iScale = meta.iScale;\n    const pixels = [];\n    let i, ilen;\n\n    for (i = 0, ilen = meta.data.length; i < ilen; ++i) {\n      pixels.push(iScale.getPixelForValue(this.getParsed(i)[iScale.axis], i));\n    }\n\n    const barThickness = opts.barThickness;\n    const min = barThickness || computeMinSampleSize(meta);\n\n    return {\n      min,\n      pixels,\n      start: iScale._startPixel,\n      end: iScale._endPixel,\n      stackCount: this._getStackCount(),\n      scale: iScale,\n      grouped: opts.grouped,\n      // bar thickness ratio used for non-grouped bars\n      ratio: barThickness ? 1 : opts.categoryPercentage * opts.barPercentage\n    };\n  }\n\n  /**\n\t * Note: pixel values are not clamped to the scale area.\n\t * @private\n\t */\n  _calculateBarValuePixels(index) {\n    const {_cachedMeta: {vScale, _stacked, index: datasetIndex}, options: {base: baseValue, minBarLength}} = this;\n    const actualBase = baseValue || 0;\n    const parsed = this.getParsed(index);\n    const custom = parsed._custom;\n    const floating = isFloatBar(custom);\n    let value = parsed[vScale.axis];\n    let start = 0;\n    let length = _stacked ? this.applyStack(vScale, parsed, _stacked) : value;\n    let head, size;\n\n    if (length !== value) {\n      start = length - value;\n      length = value;\n    }\n\n    if (floating) {\n      value = custom.barStart;\n      length = custom.barEnd - custom.barStart;\n      // bars crossing origin are not stacked\n      if (value !== 0 && sign(value) !== sign(custom.barEnd)) {\n        start = 0;\n      }\n      start += value;\n    }\n\n    const startValue = !isNullOrUndef(baseValue) && !floating ? baseValue : start;\n    let base = vScale.getPixelForValue(startValue);\n\n    if (this.chart.getDataVisibility(index)) {\n      head = vScale.getPixelForValue(start + length);\n    } else {\n      // When not visible, no height\n      head = base;\n    }\n\n    size = head - base;\n\n    if (Math.abs(size) < minBarLength) {\n      size = barSign(size, vScale, actualBase) * minBarLength;\n      if (value === actualBase) {\n        base -= size / 2;\n      }\n      const startPixel = vScale.getPixelForDecimal(0);\n      const endPixel = vScale.getPixelForDecimal(1);\n      const min = Math.min(startPixel, endPixel);\n      const max = Math.max(startPixel, endPixel);\n      base = Math.max(Math.min(base, max), min);\n      head = base + size;\n\n      if (_stacked && !floating) {\n        // visual data coordinates after applying minBarLength\n        parsed._stacks[vScale.axis]._visualValues[datasetIndex] = vScale.getValueForPixel(head) - vScale.getValueForPixel(base);\n      }\n    }\n\n    if (base === vScale.getPixelForValue(actualBase)) {\n      const halfGrid = sign(size) * vScale.getLineWidthForValue(actualBase) / 2;\n      base += halfGrid;\n      size -= halfGrid;\n    }\n\n    return {\n      size,\n      base,\n      head,\n      center: head + size / 2\n    };\n  }\n\n  /**\n\t * @private\n\t */\n  _calculateBarIndexPixels(index, ruler) {\n    const scale = ruler.scale;\n    const options = this.options;\n    const skipNull = options.skipNull;\n    const maxBarThickness = valueOrDefault(options.maxBarThickness, Infinity);\n    let center, size;\n    if (ruler.grouped) {\n      const stackCount = skipNull ? this._getStackCount(index) : ruler.stackCount;\n      const range = options.barThickness === 'flex'\n        ? computeFlexCategoryTraits(index, ruler, options, stackCount)\n        : computeFitCategoryTraits(index, ruler, options, stackCount);\n\n      const stackIndex = this._getStackIndex(this.index, this._cachedMeta.stack, skipNull ? index : undefined);\n      center = range.start + (range.chunk * stackIndex) + (range.chunk / 2);\n      size = Math.min(maxBarThickness, range.chunk * range.ratio);\n    } else {\n      // For non-grouped bar charts, exact pixel values are used\n      center = scale.getPixelForValue(this.getParsed(index)[scale.axis], index);\n      size = Math.min(maxBarThickness, ruler.min * ruler.ratio);\n    }\n\n    return {\n      base: center - size / 2,\n      head: center + size / 2,\n      center,\n      size\n    };\n  }\n\n  draw() {\n    const meta = this._cachedMeta;\n    const vScale = meta.vScale;\n    const rects = meta.data;\n    const ilen = rects.length;\n    let i = 0;\n\n    for (; i < ilen; ++i) {\n      if (this.getParsed(i)[vScale.axis] !== null && !rects[i].hidden) {\n        rects[i].draw(this._ctx);\n      }\n    }\n  }\n\n}\n","import DatasetController from '../core/core.datasetController.js';\nimport {valueOrDefault} from '../helpers/helpers.core.js';\n\nexport default class BubbleController extends DatasetController {\n\n  static id = 'bubble';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    datasetElementType: false,\n    dataElementType: 'point',\n\n    animations: {\n      numbers: {\n        type: 'number',\n        properties: ['x', 'y', 'borderWidth', 'radius']\n      }\n    }\n  };\n\n  /**\n   * @type {any}\n   */\n  static overrides = {\n    scales: {\n      x: {\n        type: 'linear'\n      },\n      y: {\n        type: 'linear'\n      }\n    }\n  };\n\n  initialize() {\n    this.enableOptionSharing = true;\n    super.initialize();\n  }\n\n  /**\n\t * Parse array of primitive values\n\t * @protected\n\t */\n  parsePrimitiveData(meta, data, start, count) {\n    const parsed = super.parsePrimitiveData(meta, data, start, count);\n    for (let i = 0; i < parsed.length; i++) {\n      parsed[i]._custom = this.resolveDataElementOptions(i + start).radius;\n    }\n    return parsed;\n  }\n\n  /**\n\t * Parse array of arrays\n\t * @protected\n\t */\n  parseArrayData(meta, data, start, count) {\n    const parsed = super.parseArrayData(meta, data, start, count);\n    for (let i = 0; i < parsed.length; i++) {\n      const item = data[start + i];\n      parsed[i]._custom = valueOrDefault(item[2], this.resolveDataElementOptions(i + start).radius);\n    }\n    return parsed;\n  }\n\n  /**\n\t * Parse array of objects\n\t * @protected\n\t */\n  parseObjectData(meta, data, start, count) {\n    const parsed = super.parseObjectData(meta, data, start, count);\n    for (let i = 0; i < parsed.length; i++) {\n      const item = data[start + i];\n      parsed[i]._custom = valueOrDefault(item && item.r && +item.r, this.resolveDataElementOptions(i + start).radius);\n    }\n    return parsed;\n  }\n\n  /**\n\t * @protected\n\t */\n  getMaxOverflow() {\n    const data = this._cachedMeta.data;\n\n    let max = 0;\n    for (let i = data.length - 1; i >= 0; --i) {\n      max = Math.max(max, data[i].size(this.resolveDataElementOptions(i)) / 2);\n    }\n    return max > 0 && max;\n  }\n\n  /**\n\t * @protected\n\t */\n  getLabelAndValue(index) {\n    const meta = this._cachedMeta;\n    const labels = this.chart.data.labels || [];\n    const {xScale, yScale} = meta;\n    const parsed = this.getParsed(index);\n    const x = xScale.getLabelForValue(parsed.x);\n    const y = yScale.getLabelForValue(parsed.y);\n    const r = parsed._custom;\n\n    return {\n      label: labels[index] || '',\n      value: '(' + x + ', ' + y + (r ? ', ' + r : '') + ')'\n    };\n  }\n\n  update(mode) {\n    const points = this._cachedMeta.data;\n\n    // Update Points\n    this.updateElements(points, 0, points.length, mode);\n  }\n\n  updateElements(points, start, count, mode) {\n    const reset = mode === 'reset';\n    const {iScale, vScale} = this._cachedMeta;\n    const {sharedOptions, includeOptions} = this._getSharedOptions(start, mode);\n    const iAxis = iScale.axis;\n    const vAxis = vScale.axis;\n\n    for (let i = start; i < start + count; i++) {\n      const point = points[i];\n      const parsed = !reset && this.getParsed(i);\n      const properties = {};\n      const iPixel = properties[iAxis] = reset ? iScale.getPixelForDecimal(0.5) : iScale.getPixelForValue(parsed[iAxis]);\n      const vPixel = properties[vAxis] = reset ? vScale.getBasePixel() : vScale.getPixelForValue(parsed[vAxis]);\n\n      properties.skip = isNaN(iPixel) || isNaN(vPixel);\n\n      if (includeOptions) {\n        properties.options = sharedOptions || this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n\n        if (reset) {\n          properties.options.radius = 0;\n        }\n      }\n\n      this.updateElement(point, i, properties, mode);\n    }\n  }\n\n  /**\n\t * @param {number} index\n\t * @param {string} [mode]\n\t * @protected\n\t */\n  resolveDataElementOptions(index, mode) {\n    const parsed = this.getParsed(index);\n    let values = super.resolveDataElementOptions(index, mode);\n\n    // In case values were cached (and thus frozen), we need to clone the values\n    if (values.$shared) {\n      values = Object.assign({}, values, {$shared: false});\n    }\n\n    // Custom radius resolution\n    const radius = values.radius;\n    if (mode !== 'active') {\n      values.radius = 0;\n    }\n    values.radius += valueOrDefault(parsed && parsed._custom, radius);\n\n    return values;\n  }\n}\n","import DatasetController from '../core/core.datasetController.js';\nimport {isObject, resolveObjectKey, toPercentage, toDimension, valueOrDefault} from '../helpers/helpers.core.js';\nimport {formatNumber} from '../helpers/helpers.intl.js';\nimport {toRadians, PI, TAU, HALF_PI, _angleBetween} from '../helpers/helpers.math.js';\n\n/**\n * @typedef { import('../core/core.controller.js').default } Chart\n */\n\nfunction getRatioAndOffset(rotation, circumference, cutout) {\n  let ratioX = 1;\n  let ratioY = 1;\n  let offsetX = 0;\n  let offsetY = 0;\n  // If the chart's circumference isn't a full circle, calculate size as a ratio of the width/height of the arc\n  if (circumference < TAU) {\n    const startAngle = rotation;\n    const endAngle = startAngle + circumference;\n    const startX = Math.cos(startAngle);\n    const startY = Math.sin(startAngle);\n    const endX = Math.cos(endAngle);\n    const endY = Math.sin(endAngle);\n    const calcMax = (angle, a, b) => _angleBetween(angle, startAngle, endAngle, true) ? 1 : Math.max(a, a * cutout, b, b * cutout);\n    const calcMin = (angle, a, b) => _angleBetween(angle, startAngle, endAngle, true) ? -1 : Math.min(a, a * cutout, b, b * cutout);\n    const maxX = calcMax(0, startX, endX);\n    const maxY = calcMax(HALF_PI, startY, endY);\n    const minX = calcMin(PI, startX, endX);\n    const minY = calcMin(PI + HALF_PI, startY, endY);\n    ratioX = (maxX - minX) / 2;\n    ratioY = (maxY - minY) / 2;\n    offsetX = -(maxX + minX) / 2;\n    offsetY = -(maxY + minY) / 2;\n  }\n  return {ratioX, ratioY, offsetX, offsetY};\n}\n\nexport default class DoughnutController extends DatasetController {\n\n  static id = 'doughnut';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    datasetElementType: false,\n    dataElementType: 'arc',\n    animation: {\n      // Boolean - Whether we animate the rotation of the Doughnut\n      animateRotate: true,\n      // Boolean - Whether we animate scaling the Doughnut from the centre\n      animateScale: false\n    },\n    animations: {\n      numbers: {\n        type: 'number',\n        properties: ['circumference', 'endAngle', 'innerRadius', 'outerRadius', 'startAngle', 'x', 'y', 'offset', 'borderWidth', 'spacing']\n      },\n    },\n    // The percentage of the chart that we cut out of the middle.\n    cutout: '50%',\n\n    // The rotation of the chart, where the first data arc begins.\n    rotation: 0,\n\n    // The total circumference of the chart.\n    circumference: 360,\n\n    // The outer radius of the chart\n    radius: '100%',\n\n    // Spacing between arcs\n    spacing: 0,\n\n    indexAxis: 'r',\n  };\n\n  static descriptors = {\n    _scriptable: (name) => name !== 'spacing',\n    _indexable: (name) => name !== 'spacing' && !name.startsWith('borderDash') && !name.startsWith('hoverBorderDash'),\n  };\n\n  /**\n   * @type {any}\n   */\n  static overrides = {\n    aspectRatio: 1,\n\n    // Need to override these to give a nice default\n    plugins: {\n      legend: {\n        labels: {\n          generateLabels(chart) {\n            const data = chart.data;\n            if (data.labels.length && data.datasets.length) {\n              const {labels: {pointStyle, color}} = chart.legend.options;\n\n              return data.labels.map((label, i) => {\n                const meta = chart.getDatasetMeta(0);\n                const style = meta.controller.getStyle(i);\n\n                return {\n                  text: label,\n                  fillStyle: style.backgroundColor,\n                  strokeStyle: style.borderColor,\n                  fontColor: color,\n                  lineWidth: style.borderWidth,\n                  pointStyle: pointStyle,\n                  hidden: !chart.getDataVisibility(i),\n\n                  // Extra data used for toggling the correct item\n                  index: i\n                };\n              });\n            }\n            return [];\n          }\n        },\n\n        onClick(e, legendItem, legend) {\n          legend.chart.toggleDataVisibility(legendItem.index);\n          legend.chart.update();\n        }\n      }\n    }\n  };\n\n  constructor(chart, datasetIndex) {\n    super(chart, datasetIndex);\n\n    this.enableOptionSharing = true;\n    this.innerRadius = undefined;\n    this.outerRadius = undefined;\n    this.offsetX = undefined;\n    this.offsetY = undefined;\n  }\n\n  linkScales() {}\n\n  /**\n\t * Override data parsing, since we are not using scales\n\t */\n  parse(start, count) {\n    const data = this.getDataset().data;\n    const meta = this._cachedMeta;\n\n    if (this._parsing === false) {\n      meta._parsed = data;\n    } else {\n      let getter = (i) => +data[i];\n\n      if (isObject(data[start])) {\n        const {key = 'value'} = this._parsing;\n        getter = (i) => +resolveObjectKey(data[i], key);\n      }\n\n      let i, ilen;\n      for (i = start, ilen = start + count; i < ilen; ++i) {\n        meta._parsed[i] = getter(i);\n      }\n    }\n  }\n\n  /**\n\t * @private\n\t */\n  _getRotation() {\n    return toRadians(this.options.rotation - 90);\n  }\n\n  /**\n\t * @private\n\t */\n  _getCircumference() {\n    return toRadians(this.options.circumference);\n  }\n\n  /**\n\t * Get the maximal rotation & circumference extents\n\t * across all visible datasets.\n\t */\n  _getRotationExtents() {\n    let min = TAU;\n    let max = -TAU;\n\n    for (let i = 0; i < this.chart.data.datasets.length; ++i) {\n      if (this.chart.isDatasetVisible(i) && this.chart.getDatasetMeta(i).type === this._type) {\n        const controller = this.chart.getDatasetMeta(i).controller;\n        const rotation = controller._getRotation();\n        const circumference = controller._getCircumference();\n\n        min = Math.min(min, rotation);\n        max = Math.max(max, rotation + circumference);\n      }\n    }\n\n    return {\n      rotation: min,\n      circumference: max - min,\n    };\n  }\n\n  /**\n\t * @param {string} mode\n\t */\n  update(mode) {\n    const chart = this.chart;\n    const {chartArea} = chart;\n    const meta = this._cachedMeta;\n    const arcs = meta.data;\n    const spacing = this.getMaxBorderWidth() + this.getMaxOffset(arcs) + this.options.spacing;\n    const maxSize = Math.max((Math.min(chartArea.width, chartArea.height) - spacing) / 2, 0);\n    const cutout = Math.min(toPercentage(this.options.cutout, maxSize), 1);\n    const chartWeight = this._getRingWeight(this.index);\n\n    // Compute the maximal rotation & circumference limits.\n    // If we only consider our dataset, this can cause problems when two datasets\n    // are both less than a circle with different rotations (starting angles)\n    const {circumference, rotation} = this._getRotationExtents();\n    const {ratioX, ratioY, offsetX, offsetY} = getRatioAndOffset(rotation, circumference, cutout);\n    const maxWidth = (chartArea.width - spacing) / ratioX;\n    const maxHeight = (chartArea.height - spacing) / ratioY;\n    const maxRadius = Math.max(Math.min(maxWidth, maxHeight) / 2, 0);\n    const outerRadius = toDimension(this.options.radius, maxRadius);\n    const innerRadius = Math.max(outerRadius * cutout, 0);\n    const radiusLength = (outerRadius - innerRadius) / this._getVisibleDatasetWeightTotal();\n    this.offsetX = offsetX * outerRadius;\n    this.offsetY = offsetY * outerRadius;\n\n    meta.total = this.calculateTotal();\n\n    this.outerRadius = outerRadius - radiusLength * this._getRingWeightOffset(this.index);\n    this.innerRadius = Math.max(this.outerRadius - radiusLength * chartWeight, 0);\n\n    this.updateElements(arcs, 0, arcs.length, mode);\n  }\n\n  /**\n   * @private\n   */\n  _circumference(i, reset) {\n    const opts = this.options;\n    const meta = this._cachedMeta;\n    const circumference = this._getCircumference();\n    if ((reset && opts.animation.animateRotate) || !this.chart.getDataVisibility(i) || meta._parsed[i] === null || meta.data[i].hidden) {\n      return 0;\n    }\n    return this.calculateCircumference(meta._parsed[i] * circumference / TAU);\n  }\n\n  updateElements(arcs, start, count, mode) {\n    const reset = mode === 'reset';\n    const chart = this.chart;\n    const chartArea = chart.chartArea;\n    const opts = chart.options;\n    const animationOpts = opts.animation;\n    const centerX = (chartArea.left + chartArea.right) / 2;\n    const centerY = (chartArea.top + chartArea.bottom) / 2;\n    const animateScale = reset && animationOpts.animateScale;\n    const innerRadius = animateScale ? 0 : this.innerRadius;\n    const outerRadius = animateScale ? 0 : this.outerRadius;\n    const {sharedOptions, includeOptions} = this._getSharedOptions(start, mode);\n    let startAngle = this._getRotation();\n    let i;\n\n    for (i = 0; i < start; ++i) {\n      startAngle += this._circumference(i, reset);\n    }\n\n    for (i = start; i < start + count; ++i) {\n      const circumference = this._circumference(i, reset);\n      const arc = arcs[i];\n      const properties = {\n        x: centerX + this.offsetX,\n        y: centerY + this.offsetY,\n        startAngle,\n        endAngle: startAngle + circumference,\n        circumference,\n        outerRadius,\n        innerRadius\n      };\n      if (includeOptions) {\n        properties.options = sharedOptions || this.resolveDataElementOptions(i, arc.active ? 'active' : mode);\n      }\n      startAngle += circumference;\n\n      this.updateElement(arc, i, properties, mode);\n    }\n  }\n\n  calculateTotal() {\n    const meta = this._cachedMeta;\n    const metaData = meta.data;\n    let total = 0;\n    let i;\n\n    for (i = 0; i < metaData.length; i++) {\n      const value = meta._parsed[i];\n      if (value !== null && !isNaN(value) && this.chart.getDataVisibility(i) && !metaData[i].hidden) {\n        total += Math.abs(value);\n      }\n    }\n\n    return total;\n  }\n\n  calculateCircumference(value) {\n    const total = this._cachedMeta.total;\n    if (total > 0 && !isNaN(value)) {\n      return TAU * (Math.abs(value) / total);\n    }\n    return 0;\n  }\n\n  getLabelAndValue(index) {\n    const meta = this._cachedMeta;\n    const chart = this.chart;\n    const labels = chart.data.labels || [];\n    const value = formatNumber(meta._parsed[index], chart.options.locale);\n\n    return {\n      label: labels[index] || '',\n      value,\n    };\n  }\n\n  getMaxBorderWidth(arcs) {\n    let max = 0;\n    const chart = this.chart;\n    let i, ilen, meta, controller, options;\n\n    if (!arcs) {\n      // Find the outmost visible dataset\n      for (i = 0, ilen = chart.data.datasets.length; i < ilen; ++i) {\n        if (chart.isDatasetVisible(i)) {\n          meta = chart.getDatasetMeta(i);\n          arcs = meta.data;\n          controller = meta.controller;\n          break;\n        }\n      }\n    }\n\n    if (!arcs) {\n      return 0;\n    }\n\n    for (i = 0, ilen = arcs.length; i < ilen; ++i) {\n      options = controller.resolveDataElementOptions(i);\n      if (options.borderAlign !== 'inner') {\n        max = Math.max(max, options.borderWidth || 0, options.hoverBorderWidth || 0);\n      }\n    }\n    return max;\n  }\n\n  getMaxOffset(arcs) {\n    let max = 0;\n\n    for (let i = 0, ilen = arcs.length; i < ilen; ++i) {\n      const options = this.resolveDataElementOptions(i);\n      max = Math.max(max, options.offset || 0, options.hoverOffset || 0);\n    }\n    return max;\n  }\n\n  /**\n\t * Get radius length offset of the dataset in relation to the visible datasets weights. This allows determining the inner and outer radius correctly\n\t * @private\n\t */\n  _getRingWeightOffset(datasetIndex) {\n    let ringWeightOffset = 0;\n\n    for (let i = 0; i < datasetIndex; ++i) {\n      if (this.chart.isDatasetVisible(i)) {\n        ringWeightOffset += this._getRingWeight(i);\n      }\n    }\n\n    return ringWeightOffset;\n  }\n\n  /**\n\t * @private\n\t */\n  _getRingWeight(datasetIndex) {\n    return Math.max(valueOrDefault(this.chart.data.datasets[datasetIndex].weight, 1), 0);\n  }\n\n  /**\n\t * Returns the sum of all visible data set weights.\n\t * @private\n\t */\n  _getVisibleDatasetWeightTotal() {\n    return this._getRingWeightOffset(this.chart.data.datasets.length) || 1;\n  }\n}\n","import DatasetController from '../core/core.datasetController.js';\nimport {isNullOrUndef} from '../helpers/index.js';\nimport {isNumber} from '../helpers/helpers.math.js';\nimport {_getStartAndCountOfVisiblePoints, _scaleRangesChanged} from '../helpers/helpers.extras.js';\n\nexport default class LineController extends DatasetController {\n\n  static id = 'line';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    datasetElementType: 'line',\n    dataElementType: 'point',\n\n    showLine: true,\n    spanGaps: false,\n  };\n\n  /**\n   * @type {any}\n   */\n  static overrides = {\n    scales: {\n      _index_: {\n        type: 'category',\n      },\n      _value_: {\n        type: 'linear',\n      },\n    }\n  };\n\n  initialize() {\n    this.enableOptionSharing = true;\n    this.supportsDecimation = true;\n    super.initialize();\n  }\n\n  update(mode) {\n    const meta = this._cachedMeta;\n    const {dataset: line, data: points = [], _dataset} = meta;\n    // @ts-ignore\n    const animationsDisabled = this.chart._animationsDisabled;\n    let {start, count} = _getStartAndCountOfVisiblePoints(meta, points, animationsDisabled);\n\n    this._drawStart = start;\n    this._drawCount = count;\n\n    if (_scaleRangesChanged(meta)) {\n      start = 0;\n      count = points.length;\n    }\n\n    // Update Line\n    line._chart = this.chart;\n    line._datasetIndex = this.index;\n    line._decimated = !!_dataset._decimated;\n    line.points = points;\n\n    const options = this.resolveDatasetElementOptions(mode);\n    if (!this.options.showLine) {\n      options.borderWidth = 0;\n    }\n    options.segment = this.options.segment;\n    this.updateElement(line, undefined, {\n      animated: !animationsDisabled,\n      options\n    }, mode);\n\n    // Update Points\n    this.updateElements(points, start, count, mode);\n  }\n\n  updateElements(points, start, count, mode) {\n    const reset = mode === 'reset';\n    const {iScale, vScale, _stacked, _dataset} = this._cachedMeta;\n    const {sharedOptions, includeOptions} = this._getSharedOptions(start, mode);\n    const iAxis = iScale.axis;\n    const vAxis = vScale.axis;\n    const {spanGaps, segment} = this.options;\n    const maxGapLength = isNumber(spanGaps) ? spanGaps : Number.POSITIVE_INFINITY;\n    const directUpdate = this.chart._animationsDisabled || reset || mode === 'none';\n    const end = start + count;\n    const pointsCount = points.length;\n    let prevParsed = start > 0 && this.getParsed(start - 1);\n\n    for (let i = 0; i < pointsCount; ++i) {\n      const point = points[i];\n      const properties = directUpdate ? point : {};\n\n      if (i < start || i >= end) {\n        properties.skip = true;\n        continue;\n      }\n\n      const parsed = this.getParsed(i);\n      const nullData = isNullOrUndef(parsed[vAxis]);\n      const iPixel = properties[iAxis] = iScale.getPixelForValue(parsed[iAxis], i);\n      const vPixel = properties[vAxis] = reset || nullData ? vScale.getBasePixel() : vScale.getPixelForValue(_stacked ? this.applyStack(vScale, parsed, _stacked) : parsed[vAxis], i);\n\n      properties.skip = isNaN(iPixel) || isNaN(vPixel) || nullData;\n      properties.stop = i > 0 && (Math.abs(parsed[iAxis] - prevParsed[iAxis])) > maxGapLength;\n      if (segment) {\n        properties.parsed = parsed;\n        properties.raw = _dataset.data[i];\n      }\n\n      if (includeOptions) {\n        properties.options = sharedOptions || this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n      }\n\n      if (!directUpdate) {\n        this.updateElement(point, i, properties, mode);\n      }\n\n      prevParsed = parsed;\n    }\n  }\n\n  /**\n\t * @protected\n\t */\n  getMaxOverflow() {\n    const meta = this._cachedMeta;\n    const dataset = meta.dataset;\n    const border = dataset.options && dataset.options.borderWidth || 0;\n    const data = meta.data || [];\n    if (!data.length) {\n      return border;\n    }\n    const firstPoint = data[0].size(this.resolveDataElementOptions(0));\n    const lastPoint = data[data.length - 1].size(this.resolveDataElementOptions(data.length - 1));\n    return Math.max(border, firstPoint, lastPoint) / 2;\n  }\n\n  draw() {\n    const meta = this._cachedMeta;\n    meta.dataset.updateControlPoints(this.chart.chartArea, meta.iScale.axis);\n    super.draw();\n  }\n}\n","import DatasetController from '../core/core.datasetController.js';\nimport {toRadians, PI, formatNumber, _parseObjectDataRadialScale} from '../helpers/index.js';\n\nexport default class PolarAreaController extends DatasetController {\n\n  static id = 'polarArea';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    dataElementType: 'arc',\n    animation: {\n      animateRotate: true,\n      animateScale: true\n    },\n    animations: {\n      numbers: {\n        type: 'number',\n        properties: ['x', 'y', 'startAngle', 'endAngle', 'innerRadius', 'outerRadius']\n      },\n    },\n    indexAxis: 'r',\n    startAngle: 0,\n  };\n\n  /**\n   * @type {any}\n   */\n  static overrides = {\n    aspectRatio: 1,\n\n    plugins: {\n      legend: {\n        labels: {\n          generateLabels(chart) {\n            const data = chart.data;\n            if (data.labels.length && data.datasets.length) {\n              const {labels: {pointStyle, color}} = chart.legend.options;\n\n              return data.labels.map((label, i) => {\n                const meta = chart.getDatasetMeta(0);\n                const style = meta.controller.getStyle(i);\n\n                return {\n                  text: label,\n                  fillStyle: style.backgroundColor,\n                  strokeStyle: style.borderColor,\n                  fontColor: color,\n                  lineWidth: style.borderWidth,\n                  pointStyle: pointStyle,\n                  hidden: !chart.getDataVisibility(i),\n\n                  // Extra data used for toggling the correct item\n                  index: i\n                };\n              });\n            }\n            return [];\n          }\n        },\n\n        onClick(e, legendItem, legend) {\n          legend.chart.toggleDataVisibility(legendItem.index);\n          legend.chart.update();\n        }\n      }\n    },\n\n    scales: {\n      r: {\n        type: 'radialLinear',\n        angleLines: {\n          display: false\n        },\n        beginAtZero: true,\n        grid: {\n          circular: true\n        },\n        pointLabels: {\n          display: false\n        },\n        startAngle: 0\n      }\n    }\n  };\n\n  constructor(chart, datasetIndex) {\n    super(chart, datasetIndex);\n\n    this.innerRadius = undefined;\n    this.outerRadius = undefined;\n  }\n\n  getLabelAndValue(index) {\n    const meta = this._cachedMeta;\n    const chart = this.chart;\n    const labels = chart.data.labels || [];\n    const value = formatNumber(meta._parsed[index].r, chart.options.locale);\n\n    return {\n      label: labels[index] || '',\n      value,\n    };\n  }\n\n  parseObjectData(meta, data, start, count) {\n    return _parseObjectDataRadialScale.bind(this)(meta, data, start, count);\n  }\n\n  update(mode) {\n    const arcs = this._cachedMeta.data;\n\n    this._updateRadius();\n    this.updateElements(arcs, 0, arcs.length, mode);\n  }\n\n  /**\n   * @protected\n   */\n  getMinMax() {\n    const meta = this._cachedMeta;\n    const range = {min: Number.POSITIVE_INFINITY, max: Number.NEGATIVE_INFINITY};\n\n    meta.data.forEach((element, index) => {\n      const parsed = this.getParsed(index).r;\n\n      if (!isNaN(parsed) && this.chart.getDataVisibility(index)) {\n        if (parsed < range.min) {\n          range.min = parsed;\n        }\n\n        if (parsed > range.max) {\n          range.max = parsed;\n        }\n      }\n    });\n\n    return range;\n  }\n\n  /**\n\t * @private\n\t */\n  _updateRadius() {\n    const chart = this.chart;\n    const chartArea = chart.chartArea;\n    const opts = chart.options;\n    const minSize = Math.min(chartArea.right - chartArea.left, chartArea.bottom - chartArea.top);\n\n    const outerRadius = Math.max(minSize / 2, 0);\n    const innerRadius = Math.max(opts.cutoutPercentage ? (outerRadius / 100) * (opts.cutoutPercentage) : 1, 0);\n    const radiusLength = (outerRadius - innerRadius) / chart.getVisibleDatasetCount();\n\n    this.outerRadius = outerRadius - (radiusLength * this.index);\n    this.innerRadius = this.outerRadius - radiusLength;\n  }\n\n  updateElements(arcs, start, count, mode) {\n    const reset = mode === 'reset';\n    const chart = this.chart;\n    const opts = chart.options;\n    const animationOpts = opts.animation;\n    const scale = this._cachedMeta.rScale;\n    const centerX = scale.xCenter;\n    const centerY = scale.yCenter;\n    const datasetStartAngle = scale.getIndexAngle(0) - 0.5 * PI;\n    let angle = datasetStartAngle;\n    let i;\n\n    const defaultAngle = 360 / this.countVisibleElements();\n\n    for (i = 0; i < start; ++i) {\n      angle += this._computeAngle(i, mode, defaultAngle);\n    }\n    for (i = start; i < start + count; i++) {\n      const arc = arcs[i];\n      let startAngle = angle;\n      let endAngle = angle + this._computeAngle(i, mode, defaultAngle);\n      let outerRadius = chart.getDataVisibility(i) ? scale.getDistanceFromCenterForValue(this.getParsed(i).r) : 0;\n      angle = endAngle;\n\n      if (reset) {\n        if (animationOpts.animateScale) {\n          outerRadius = 0;\n        }\n        if (animationOpts.animateRotate) {\n          startAngle = endAngle = datasetStartAngle;\n        }\n      }\n\n      const properties = {\n        x: centerX,\n        y: centerY,\n        innerRadius: 0,\n        outerRadius,\n        startAngle,\n        endAngle,\n        options: this.resolveDataElementOptions(i, arc.active ? 'active' : mode)\n      };\n\n      this.updateElement(arc, i, properties, mode);\n    }\n  }\n\n  countVisibleElements() {\n    const meta = this._cachedMeta;\n    let count = 0;\n\n    meta.data.forEach((element, index) => {\n      if (!isNaN(this.getParsed(index).r) && this.chart.getDataVisibility(index)) {\n        count++;\n      }\n    });\n\n    return count;\n  }\n\n  /**\n\t * @private\n\t */\n  _computeAngle(index, mode, defaultAngle) {\n    return this.chart.getDataVisibility(index)\n      ? toRadians(this.resolveDataElementOptions(index, mode).angle || defaultAngle)\n      : 0;\n  }\n}\n","import DoughnutController from './controller.doughnut.js';\n\n// Pie charts are Doughnut chart with different defaults\nexport default class PieController extends DoughnutController {\n\n  static id = 'pie';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    // The percentage of the chart that we cut out of the middle.\n    cutout: 0,\n\n    // The rotation of the chart, where the first data arc begins.\n    rotation: 0,\n\n    // The total circumference of the chart.\n    circumference: 360,\n\n    // The outer radius of the chart\n    radius: '100%'\n  };\n}\n","import DatasetController from '../core/core.datasetController.js';\nimport {_parseObjectDataRadialScale} from '../helpers/index.js';\n\nexport default class RadarController extends DatasetController {\n\n  static id = 'radar';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    datasetElementType: 'line',\n    dataElementType: 'point',\n    indexAxis: 'r',\n    showLine: true,\n    elements: {\n      line: {\n        fill: 'start'\n      }\n    },\n  };\n\n  /**\n   * @type {any}\n   */\n  static overrides = {\n    aspectRatio: 1,\n\n    scales: {\n      r: {\n        type: 'radialLinear',\n      }\n    }\n  };\n\n  /**\n\t * @protected\n\t */\n  getLabelAndValue(index) {\n    const vScale = this._cachedMeta.vScale;\n    const parsed = this.getParsed(index);\n\n    return {\n      label: vScale.getLabels()[index],\n      value: '' + vScale.getLabelForValue(parsed[vScale.axis])\n    };\n  }\n\n  parseObjectData(meta, data, start, count) {\n    return _parseObjectDataRadialScale.bind(this)(meta, data, start, count);\n  }\n\n  update(mode) {\n    const meta = this._cachedMeta;\n    const line = meta.dataset;\n    const points = meta.data || [];\n    const labels = meta.iScale.getLabels();\n\n    // Update Line\n    line.points = points;\n    // In resize mode only point locations change, so no need to set the points or options.\n    if (mode !== 'resize') {\n      const options = this.resolveDatasetElementOptions(mode);\n      if (!this.options.showLine) {\n        options.borderWidth = 0;\n      }\n\n      const properties = {\n        _loop: true,\n        _fullLoop: labels.length === points.length,\n        options\n      };\n\n      this.updateElement(line, undefined, properties, mode);\n    }\n\n    // Update Points\n    this.updateElements(points, 0, points.length, mode);\n  }\n\n  updateElements(points, start, count, mode) {\n    const scale = this._cachedMeta.rScale;\n    const reset = mode === 'reset';\n\n    for (let i = start; i < start + count; i++) {\n      const point = points[i];\n      const options = this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n      const pointPosition = scale.getPointPositionForValue(i, this.getParsed(i).r);\n\n      const x = reset ? scale.xCenter : pointPosition.x;\n      const y = reset ? scale.yCenter : pointPosition.y;\n\n      const properties = {\n        x,\n        y,\n        angle: pointPosition.angle,\n        skip: isNaN(x) || isNaN(y),\n        options\n      };\n\n      this.updateElement(point, i, properties, mode);\n    }\n  }\n}\n","import DatasetController from '../core/core.datasetController.js';\nimport {isNullOrUndef} from '../helpers/index.js';\nimport {isNumber} from '../helpers/helpers.math.js';\nimport {_getStartAndCountOfVisiblePoints, _scaleRangesChanged} from '../helpers/helpers.extras.js';\n\nexport default class ScatterController extends DatasetController {\n\n  static id = 'scatter';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    datasetElementType: false,\n    dataElementType: 'point',\n    showLine: false,\n    fill: false\n  };\n\n  /**\n   * @type {any}\n   */\n  static overrides = {\n\n    interaction: {\n      mode: 'point'\n    },\n\n    scales: {\n      x: {\n        type: 'linear'\n      },\n      y: {\n        type: 'linear'\n      }\n    }\n  };\n\n  /**\n\t * @protected\n\t */\n  getLabelAndValue(index) {\n    const meta = this._cachedMeta;\n    const labels = this.chart.data.labels || [];\n    const {xScale, yScale} = meta;\n    const parsed = this.getParsed(index);\n    const x = xScale.getLabelForValue(parsed.x);\n    const y = yScale.getLabelForValue(parsed.y);\n\n    return {\n      label: labels[index] || '',\n      value: '(' + x + ', ' + y + ')'\n    };\n  }\n\n  update(mode) {\n    const meta = this._cachedMeta;\n    const {data: points = []} = meta;\n    // @ts-ignore\n    const animationsDisabled = this.chart._animationsDisabled;\n    let {start, count} = _getStartAndCountOfVisiblePoints(meta, points, animationsDisabled);\n\n    this._drawStart = start;\n    this._drawCount = count;\n\n    if (_scaleRangesChanged(meta)) {\n      start = 0;\n      count = points.length;\n    }\n\n    if (this.options.showLine) {\n\n      // https://github.com/chartjs/Chart.js/issues/11333\n      if (!this.datasetElementType) {\n        this.addElements();\n      }\n      const {dataset: line, _dataset} = meta;\n\n      // Update Line\n      line._chart = this.chart;\n      line._datasetIndex = this.index;\n      line._decimated = !!_dataset._decimated;\n      line.points = points;\n\n      const options = this.resolveDatasetElementOptions(mode);\n      options.segment = this.options.segment;\n      this.updateElement(line, undefined, {\n        animated: !animationsDisabled,\n        options\n      }, mode);\n    } else if (this.datasetElementType) {\n      // https://github.com/chartjs/Chart.js/issues/11333\n      delete meta.dataset;\n      this.datasetElementType = false;\n    }\n\n    // Update Points\n    this.updateElements(points, start, count, mode);\n  }\n\n  addElements() {\n    const {showLine} = this.options;\n\n    if (!this.datasetElementType && showLine) {\n      this.datasetElementType = this.chart.registry.getElement('line');\n    }\n\n    super.addElements();\n  }\n\n  updateElements(points, start, count, mode) {\n    const reset = mode === 'reset';\n    const {iScale, vScale, _stacked, _dataset} = this._cachedMeta;\n    const firstOpts = this.resolveDataElementOptions(start, mode);\n    const sharedOptions = this.getSharedOptions(firstOpts);\n    const includeOptions = this.includeOptions(mode, sharedOptions);\n    const iAxis = iScale.axis;\n    const vAxis = vScale.axis;\n    const {spanGaps, segment} = this.options;\n    const maxGapLength = isNumber(spanGaps) ? spanGaps : Number.POSITIVE_INFINITY;\n    const directUpdate = this.chart._animationsDisabled || reset || mode === 'none';\n    let prevParsed = start > 0 && this.getParsed(start - 1);\n\n    for (let i = start; i < start + count; ++i) {\n      const point = points[i];\n      const parsed = this.getParsed(i);\n      const properties = directUpdate ? point : {};\n      const nullData = isNullOrUndef(parsed[vAxis]);\n      const iPixel = properties[iAxis] = iScale.getPixelForValue(parsed[iAxis], i);\n      const vPixel = properties[vAxis] = reset || nullData ? vScale.getBasePixel() : vScale.getPixelForValue(_stacked ? this.applyStack(vScale, parsed, _stacked) : parsed[vAxis], i);\n\n      properties.skip = isNaN(iPixel) || isNaN(vPixel) || nullData;\n      properties.stop = i > 0 && (Math.abs(parsed[iAxis] - prevParsed[iAxis])) > maxGapLength;\n      if (segment) {\n        properties.parsed = parsed;\n        properties.raw = _dataset.data[i];\n      }\n\n      if (includeOptions) {\n        properties.options = sharedOptions || this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n      }\n\n      if (!directUpdate) {\n        this.updateElement(point, i, properties, mode);\n      }\n\n      prevParsed = parsed;\n    }\n\n    this.updateSharedOptions(sharedOptions, mode, firstOpts);\n  }\n\n  /**\n\t * @protected\n\t */\n  getMaxOverflow() {\n    const meta = this._cachedMeta;\n    const data = meta.data || [];\n\n    if (!this.options.showLine) {\n      let max = 0;\n      for (let i = data.length - 1; i >= 0; --i) {\n        max = Math.max(max, data[i].size(this.resolveDataElementOptions(i)) / 2);\n      }\n      return max > 0 && max;\n    }\n\n    const dataset = meta.dataset;\n    const border = dataset.options && dataset.options.borderWidth || 0;\n\n    if (!data.length) {\n      return border;\n    }\n\n    const firstPoint = data[0].size(this.resolveDataElementOptions(0));\n    const lastPoint = data[data.length - 1].size(this.resolveDataElementOptions(data.length - 1));\n    return Math.max(border, firstPoint, lastPoint) / 2;\n  }\n}\n","/**\n * @namespace Chart._adapters\n * @since 2.8.0\n * @private\n */\n\nimport type {AnyObject} from '../types/basic.js';\nimport type {ChartOptions} from '../types/index.js';\n\nexport type TimeUnit = 'millisecond' | 'second' | 'minute' | 'hour' | 'day' | 'week' | 'month' | 'quarter' | 'year';\n\nexport interface DateAdapter<T extends AnyObject = AnyObject> {\n  readonly options: T;\n  /**\n   * Will called with chart options after adapter creation.\n   */\n  init(this: DateAdapter<T>, chartOptions: ChartOptions): void;\n  /**\n   * Returns a map of time formats for the supported formatting units defined\n   * in Unit as well as 'datetime' representing a detailed date/time string.\n   */\n  formats(this: DateAdapter<T>): Record<string, string>;\n  /**\n   * Parses the given `value` and return the associated timestamp.\n   * @param value - the value to parse (usually comes from the data)\n   * @param [format] - the expected data format\n   */\n  parse(this: DateAdapter<T>, value: unknown, format?: TimeUnit): number | null;\n  /**\n   * Returns the formatted date in the specified `format` for a given `timestamp`.\n   * @param timestamp - the timestamp to format\n   * @param format - the date/time token\n   */\n  format(this: DateAdapter<T>, timestamp: number, format: TimeUnit): string;\n  /**\n   * Adds the specified `amount` of `unit` to the given `timestamp`.\n   * @param timestamp - the input timestamp\n   * @param amount - the amount to add\n   * @param unit - the unit as string\n   */\n  add(this: DateAdapter<T>, timestamp: number, amount: number, unit: TimeUnit): number;\n  /**\n   * Returns the number of `unit` between the given timestamps.\n   * @param a - the input timestamp (reference)\n   * @param b - the timestamp to subtract\n   * @param unit - the unit as string\n   */\n  diff(this: DateAdapter<T>, a: number, b: number, unit: TimeUnit): number;\n  /**\n   * Returns start of `unit` for the given `timestamp`.\n   * @param timestamp - the input timestamp\n   * @param unit - the unit as string\n   * @param [weekday] - the ISO day of the week with 1 being Monday\n   * and 7 being Sunday (only needed if param *unit* is `isoWeek`).\n   */\n  startOf(this: DateAdapter<T>, timestamp: number, unit: TimeUnit | 'isoWeek', weekday?: number): number;\n  /**\n   * Returns end of `unit` for the given `timestamp`.\n   * @param timestamp - the input timestamp\n   * @param unit - the unit as string\n   */\n  endOf(this: DateAdapter<T>, timestamp: number, unit: TimeUnit | 'isoWeek'): number;\n}\n\nfunction abstract<T = void>(): T {\n  throw new Error('This method is not implemented: Check that a complete date adapter is provided.');\n}\n\n/**\n * Date adapter (current used by the time scale)\n * @namespace Chart._adapters._date\n * @memberof Chart._adapters\n * @private\n */\nclass DateAdapterBase implements DateAdapter {\n\n  /**\n   * Override default date adapter methods.\n   * Accepts type parameter to define options type.\n   * @example\n   * Chart._adapters._date.override<{myAdapterOption: string}>({\n   *   init() {\n   *     console.log(this.options.myAdapterOption);\n   *   }\n   * })\n   */\n  static override<T extends AnyObject = AnyObject>(\n    members: Partial<Omit<DateAdapter<T>, 'options'>>\n  ) {\n    Object.assign(DateAdapterBase.prototype, members);\n  }\n\n  readonly options: AnyObject;\n\n  constructor(options: AnyObject) {\n    this.options = options || {};\n  }\n\n  // eslint-disable-next-line @typescript-eslint/no-empty-function\n  init() {}\n\n  formats(): Record<string, string> {\n    return abstract();\n  }\n\n  parse(): number | null {\n    return abstract();\n  }\n\n  format(): string {\n    return abstract();\n  }\n\n  add(): number {\n    return abstract();\n  }\n\n  diff(): number {\n    return abstract();\n  }\n\n  startOf(): number {\n    return abstract();\n  }\n\n  endOf(): number {\n    return abstract();\n  }\n}\n\nexport default {\n  _date: DateAdapterBase\n};\n","import {_lookupByKey, _rlookupByKey} from '../helpers/helpers.collection.js';\nimport {getRelativePosition} from '../helpers/helpers.dom.js';\nimport {_angleBetween, getAngleFromPoint} from '../helpers/helpers.math.js';\nimport {_isPointInArea} from '../helpers/index.js';\n\n/**\n * @typedef { import('./core.controller.js').default } Chart\n * @typedef { import('../types/index.js').ChartEvent } ChartEvent\n * @typedef {{axis?: string, intersect?: boolean, includeInvisible?: boolean}} InteractionOptions\n * @typedef {{datasetIndex: number, index: number, element: import('./core.element.js').default}} InteractionItem\n * @typedef { import('../types/index.js').Point } Point\n */\n\n/**\n * Helper function to do binary search when possible\n * @param {object} metaset - the dataset meta\n * @param {string} axis - the axis mode. x|y|xy|r\n * @param {number} value - the value to find\n * @param {boolean} [intersect] - should the element intersect\n * @returns {{lo:number, hi:number}} indices to search data array between\n */\nfunction binarySearch(metaset, axis, value, intersect) {\n  const {controller, data, _sorted} = metaset;\n  const iScale = controller._cachedMeta.iScale;\n  if (iScale && axis === iScale.axis && axis !== 'r' && _sorted && data.length) {\n    const lookupMethod = iScale._reversePixels ? _rlookupByKey : _lookupByKey;\n    if (!intersect) {\n      return lookupMethod(data, axis, value);\n    } else if (controller._sharedOptions) {\n      // _sharedOptions indicates that each element has equal options -> equal proportions\n      // So we can do a ranged binary search based on the range of first element and\n      // be confident to get the full range of indices that can intersect with the value.\n      const el = data[0];\n      const range = typeof el.getRange === 'function' && el.getRange(axis);\n      if (range) {\n        const start = lookupMethod(data, axis, value - range);\n        const end = lookupMethod(data, axis, value + range);\n        return {lo: start.lo, hi: end.hi};\n      }\n    }\n  }\n  // Default to all elements, when binary search can not be used.\n  return {lo: 0, hi: data.length - 1};\n}\n\n/**\n * Helper function to select candidate elements for interaction\n * @param {Chart} chart - the chart\n * @param {string} axis - the axis mode. x|y|xy|r\n * @param {Point} position - the point to be nearest to, in relative coordinates\n * @param {function} handler - the callback to execute for each visible item\n * @param {boolean} [intersect] - consider intersecting items\n */\nfunction evaluateInteractionItems(chart, axis, position, handler, intersect) {\n  const metasets = chart.getSortedVisibleDatasetMetas();\n  const value = position[axis];\n  for (let i = 0, ilen = metasets.length; i < ilen; ++i) {\n    const {index, data} = metasets[i];\n    const {lo, hi} = binarySearch(metasets[i], axis, value, intersect);\n    for (let j = lo; j <= hi; ++j) {\n      const element = data[j];\n      if (!element.skip) {\n        handler(element, index, j);\n      }\n    }\n  }\n}\n\n/**\n * Get a distance metric function for two points based on the\n * axis mode setting\n * @param {string} axis - the axis mode. x|y|xy|r\n */\nfunction getDistanceMetricForAxis(axis) {\n  const useX = axis.indexOf('x') !== -1;\n  const useY = axis.indexOf('y') !== -1;\n\n  return function(pt1, pt2) {\n    const deltaX = useX ? Math.abs(pt1.x - pt2.x) : 0;\n    const deltaY = useY ? Math.abs(pt1.y - pt2.y) : 0;\n    return Math.sqrt(Math.pow(deltaX, 2) + Math.pow(deltaY, 2));\n  };\n}\n\n/**\n * Helper function to get the items that intersect the event position\n * @param {Chart} chart - the chart\n * @param {Point} position - the point to be nearest to, in relative coordinates\n * @param {string} axis - the axis mode. x|y|xy|r\n * @param {boolean} [useFinalPosition] - use the element's animation target instead of current position\n * @param {boolean} [includeInvisible] - include invisible points that are outside of the chart area\n * @return {InteractionItem[]} the nearest items\n */\nfunction getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible) {\n  const items = [];\n\n  if (!includeInvisible && !chart.isPointInArea(position)) {\n    return items;\n  }\n\n  const evaluationFunc = function(element, datasetIndex, index) {\n    if (!includeInvisible && !_isPointInArea(element, chart.chartArea, 0)) {\n      return;\n    }\n    if (element.inRange(position.x, position.y, useFinalPosition)) {\n      items.push({element, datasetIndex, index});\n    }\n  };\n\n  evaluateInteractionItems(chart, axis, position, evaluationFunc, true);\n  return items;\n}\n\n/**\n * Helper function to get the items nearest to the event position for a radial chart\n * @param {Chart} chart - the chart to look at elements from\n * @param {Point} position - the point to be nearest to, in relative coordinates\n * @param {string} axis - the axes along which to measure distance\n * @param {boolean} [useFinalPosition] - use the element's animation target instead of current position\n * @return {InteractionItem[]} the nearest items\n */\nfunction getNearestRadialItems(chart, position, axis, useFinalPosition) {\n  let items = [];\n\n  function evaluationFunc(element, datasetIndex, index) {\n    const {startAngle, endAngle} = element.getProps(['startAngle', 'endAngle'], useFinalPosition);\n    const {angle} = getAngleFromPoint(element, {x: position.x, y: position.y});\n\n    if (_angleBetween(angle, startAngle, endAngle)) {\n      items.push({element, datasetIndex, index});\n    }\n  }\n\n  evaluateInteractionItems(chart, axis, position, evaluationFunc);\n  return items;\n}\n\n/**\n * Helper function to get the items nearest to the event position for a cartesian chart\n * @param {Chart} chart - the chart to look at elements from\n * @param {Point} position - the point to be nearest to, in relative coordinates\n * @param {string} axis - the axes along which to measure distance\n * @param {boolean} [intersect] - if true, only consider items that intersect the position\n * @param {boolean} [useFinalPosition] - use the element's animation target instead of current position\n * @param {boolean} [includeInvisible] - include invisible points that are outside of the chart area\n * @return {InteractionItem[]} the nearest items\n */\nfunction getNearestCartesianItems(chart, position, axis, intersect, useFinalPosition, includeInvisible) {\n  let items = [];\n  const distanceMetric = getDistanceMetricForAxis(axis);\n  let minDistance = Number.POSITIVE_INFINITY;\n\n  function evaluationFunc(element, datasetIndex, index) {\n    const inRange = element.inRange(position.x, position.y, useFinalPosition);\n    if (intersect && !inRange) {\n      return;\n    }\n\n    const center = element.getCenterPoint(useFinalPosition);\n    const pointInArea = !!includeInvisible || chart.isPointInArea(center);\n    if (!pointInArea && !inRange) {\n      return;\n    }\n\n    const distance = distanceMetric(position, center);\n    if (distance < minDistance) {\n      items = [{element, datasetIndex, index}];\n      minDistance = distance;\n    } else if (distance === minDistance) {\n      // Can have multiple items at the same distance in which case we sort by size\n      items.push({element, datasetIndex, index});\n    }\n  }\n\n  evaluateInteractionItems(chart, axis, position, evaluationFunc);\n  return items;\n}\n\n/**\n * Helper function to get the items nearest to the event position considering all visible items in the chart\n * @param {Chart} chart - the chart to look at elements from\n * @param {Point} position - the point to be nearest to, in relative coordinates\n * @param {string} axis - the axes along which to measure distance\n * @param {boolean} [intersect] - if true, only consider items that intersect the position\n * @param {boolean} [useFinalPosition] - use the element's animation target instead of current position\n * @param {boolean} [includeInvisible] - include invisible points that are outside of the chart area\n * @return {InteractionItem[]} the nearest items\n */\nfunction getNearestItems(chart, position, axis, intersect, useFinalPosition, includeInvisible) {\n  if (!includeInvisible && !chart.isPointInArea(position)) {\n    return [];\n  }\n\n  return axis === 'r' && !intersect\n    ? getNearestRadialItems(chart, position, axis, useFinalPosition)\n    : getNearestCartesianItems(chart, position, axis, intersect, useFinalPosition, includeInvisible);\n}\n\n/**\n * Helper function to get the items matching along the given X or Y axis\n * @param {Chart} chart - the chart to look at elements from\n * @param {Point} position - the point to be nearest to, in relative coordinates\n * @param {string} axis - the axis to match\n * @param {boolean} [intersect] - if true, only consider items that intersect the position\n * @param {boolean} [useFinalPosition] - use the element's animation target instead of current position\n * @return {InteractionItem[]} the nearest items\n */\nfunction getAxisItems(chart, position, axis, intersect, useFinalPosition) {\n  const items = [];\n  const rangeMethod = axis === 'x' ? 'inXRange' : 'inYRange';\n  let intersectsItem = false;\n\n  evaluateInteractionItems(chart, axis, position, (element, datasetIndex, index) => {\n    if (element[rangeMethod] && element[rangeMethod](position[axis], useFinalPosition)) {\n      items.push({element, datasetIndex, index});\n      intersectsItem = intersectsItem || element.inRange(position.x, position.y, useFinalPosition);\n    }\n  });\n\n  // If we want to trigger on an intersect and we don't have any items\n  // that intersect the position, return nothing\n  if (intersect && !intersectsItem) {\n    return [];\n  }\n  return items;\n}\n\n/**\n * Contains interaction related functions\n * @namespace Chart.Interaction\n */\nexport default {\n  // Part of the public API to facilitate developers creating their own modes\n  evaluateInteractionItems,\n\n  // Helper function for different modes\n  modes: {\n    /**\n\t\t * Returns items at the same index. If the options.intersect parameter is true, we only return items if we intersect something\n\t\t * If the options.intersect mode is false, we find the nearest item and return the items at the same index as that item\n\t\t * @function Chart.Interaction.modes.index\n\t\t * @since v2.4.0\n\t\t * @param {Chart} chart - the chart we are returning items from\n\t\t * @param {Event} e - the event we are find things at\n\t\t * @param {InteractionOptions} options - options to use\n\t\t * @param {boolean} [useFinalPosition] - use final element position (animation target)\n\t\t * @return {InteractionItem[]} - items that are found\n\t\t */\n    index(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      // Default axis for index mode is 'x' to match old behaviour\n      const axis = options.axis || 'x';\n      const includeInvisible = options.includeInvisible || false;\n      const items = options.intersect\n        ? getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible)\n        : getNearestItems(chart, position, axis, false, useFinalPosition, includeInvisible);\n      const elements = [];\n\n      if (!items.length) {\n        return [];\n      }\n\n      chart.getSortedVisibleDatasetMetas().forEach((meta) => {\n        const index = items[0].index;\n        const element = meta.data[index];\n\n        // don't count items that are skipped (null data)\n        if (element && !element.skip) {\n          elements.push({element, datasetIndex: meta.index, index});\n        }\n      });\n\n      return elements;\n    },\n\n    /**\n\t\t * Returns items in the same dataset. If the options.intersect parameter is true, we only return items if we intersect something\n\t\t * If the options.intersect is false, we find the nearest item and return the items in that dataset\n\t\t * @function Chart.Interaction.modes.dataset\n\t\t * @param {Chart} chart - the chart we are returning items from\n\t\t * @param {Event} e - the event we are find things at\n\t\t * @param {InteractionOptions} options - options to use\n\t\t * @param {boolean} [useFinalPosition] - use final element position (animation target)\n\t\t * @return {InteractionItem[]} - items that are found\n\t\t */\n    dataset(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      const axis = options.axis || 'xy';\n      const includeInvisible = options.includeInvisible || false;\n      let items = options.intersect\n        ? getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible) :\n        getNearestItems(chart, position, axis, false, useFinalPosition, includeInvisible);\n\n      if (items.length > 0) {\n        const datasetIndex = items[0].datasetIndex;\n        const data = chart.getDatasetMeta(datasetIndex).data;\n        items = [];\n        for (let i = 0; i < data.length; ++i) {\n          items.push({element: data[i], datasetIndex, index: i});\n        }\n      }\n\n      return items;\n    },\n\n    /**\n\t\t * Point mode returns all elements that hit test based on the event position\n\t\t * of the event\n\t\t * @function Chart.Interaction.modes.intersect\n\t\t * @param {Chart} chart - the chart we are returning items from\n\t\t * @param {Event} e - the event we are find things at\n\t\t * @param {InteractionOptions} options - options to use\n\t\t * @param {boolean} [useFinalPosition] - use final element position (animation target)\n\t\t * @return {InteractionItem[]} - items that are found\n\t\t */\n    point(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      const axis = options.axis || 'xy';\n      const includeInvisible = options.includeInvisible || false;\n      return getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible);\n    },\n\n    /**\n\t\t * nearest mode returns the element closest to the point\n\t\t * @function Chart.Interaction.modes.intersect\n\t\t * @param {Chart} chart - the chart we are returning items from\n\t\t * @param {Event} e - the event we are find things at\n\t\t * @param {InteractionOptions} options - options to use\n\t\t * @param {boolean} [useFinalPosition] - use final element position (animation target)\n\t\t * @return {InteractionItem[]} - items that are found\n\t\t */\n    nearest(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      const axis = options.axis || 'xy';\n      const includeInvisible = options.includeInvisible || false;\n      return getNearestItems(chart, position, axis, options.intersect, useFinalPosition, includeInvisible);\n    },\n\n    /**\n\t\t * x mode returns the elements that hit-test at the current x coordinate\n\t\t * @function Chart.Interaction.modes.x\n\t\t * @param {Chart} chart - the chart we are returning items from\n\t\t * @param {Event} e - the event we are find things at\n\t\t * @param {InteractionOptions} options - options to use\n\t\t * @param {boolean} [useFinalPosition] - use final element position (animation target)\n\t\t * @return {InteractionItem[]} - items that are found\n\t\t */\n    x(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      return getAxisItems(chart, position, 'x', options.intersect, useFinalPosition);\n    },\n\n    /**\n\t\t * y mode returns the elements that hit-test at the current y coordinate\n\t\t * @function Chart.Interaction.modes.y\n\t\t * @param {Chart} chart - the chart we are returning items from\n\t\t * @param {Event} e - the event we are find things at\n\t\t * @param {InteractionOptions} options - options to use\n\t\t * @param {boolean} [useFinalPosition] - use final element position (animation target)\n\t\t * @return {InteractionItem[]} - items that are found\n\t\t */\n    y(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      return getAxisItems(chart, position, 'y', options.intersect, useFinalPosition);\n    }\n  }\n};\n","import {defined, each, isObject} from '../helpers/helpers.core.js';\nimport {toPadding} from '../helpers/helpers.options.js';\n\n/**\n * @typedef { import('./core.controller.js').default } Chart\n */\n\nconst STATIC_POSITIONS = ['left', 'top', 'right', 'bottom'];\n\nfunction filterByPosition(array, position) {\n  return array.filter(v => v.pos === position);\n}\n\nfunction filterDynamicPositionByAxis(array, axis) {\n  return array.filter(v => STATIC_POSITIONS.indexOf(v.pos) === -1 && v.box.axis === axis);\n}\n\nfunction sortByWeight(array, reverse) {\n  return array.sort((a, b) => {\n    const v0 = reverse ? b : a;\n    const v1 = reverse ? a : b;\n    return v0.weight === v1.weight ?\n      v0.index - v1.index :\n      v0.weight - v1.weight;\n  });\n}\n\nfunction wrapBoxes(boxes) {\n  const layoutBoxes = [];\n  let i, ilen, box, pos, stack, stackWeight;\n\n  for (i = 0, ilen = (boxes || []).length; i < ilen; ++i) {\n    box = boxes[i];\n    ({position: pos, options: {stack, stackWeight = 1}} = box);\n    layoutBoxes.push({\n      index: i,\n      box,\n      pos,\n      horizontal: box.isHorizontal(),\n      weight: box.weight,\n      stack: stack && (pos + stack),\n      stackWeight\n    });\n  }\n  return layoutBoxes;\n}\n\nfunction buildStacks(layouts) {\n  const stacks = {};\n  for (const wrap of layouts) {\n    const {stack, pos, stackWeight} = wrap;\n    if (!stack || !STATIC_POSITIONS.includes(pos)) {\n      continue;\n    }\n    const _stack = stacks[stack] || (stacks[stack] = {count: 0, placed: 0, weight: 0, size: 0});\n    _stack.count++;\n    _stack.weight += stackWeight;\n  }\n  return stacks;\n}\n\n/**\n * store dimensions used instead of available chartArea in fitBoxes\n **/\nfunction setLayoutDims(layouts, params) {\n  const stacks = buildStacks(layouts);\n  const {vBoxMaxWidth, hBoxMaxHeight} = params;\n  let i, ilen, layout;\n  for (i = 0, ilen = layouts.length; i < ilen; ++i) {\n    layout = layouts[i];\n    const {fullSize} = layout.box;\n    const stack = stacks[layout.stack];\n    const factor = stack && layout.stackWeight / stack.weight;\n    if (layout.horizontal) {\n      layout.width = factor ? factor * vBoxMaxWidth : fullSize && params.availableWidth;\n      layout.height = hBoxMaxHeight;\n    } else {\n      layout.width = vBoxMaxWidth;\n      layout.height = factor ? factor * hBoxMaxHeight : fullSize && params.availableHeight;\n    }\n  }\n  return stacks;\n}\n\nfunction buildLayoutBoxes(boxes) {\n  const layoutBoxes = wrapBoxes(boxes);\n  const fullSize = sortByWeight(layoutBoxes.filter(wrap => wrap.box.fullSize), true);\n  const left = sortByWeight(filterByPosition(layoutBoxes, 'left'), true);\n  const right = sortByWeight(filterByPosition(layoutBoxes, 'right'));\n  const top = sortByWeight(filterByPosition(layoutBoxes, 'top'), true);\n  const bottom = sortByWeight(filterByPosition(layoutBoxes, 'bottom'));\n  const centerHorizontal = filterDynamicPositionByAxis(layoutBoxes, 'x');\n  const centerVertical = filterDynamicPositionByAxis(layoutBoxes, 'y');\n\n  return {\n    fullSize,\n    leftAndTop: left.concat(top),\n    rightAndBottom: right.concat(centerVertical).concat(bottom).concat(centerHorizontal),\n    chartArea: filterByPosition(layoutBoxes, 'chartArea'),\n    vertical: left.concat(right).concat(centerVertical),\n    horizontal: top.concat(bottom).concat(centerHorizontal)\n  };\n}\n\nfunction getCombinedMax(maxPadding, chartArea, a, b) {\n  return Math.max(maxPadding[a], chartArea[a]) + Math.max(maxPadding[b], chartArea[b]);\n}\n\nfunction updateMaxPadding(maxPadding, boxPadding) {\n  maxPadding.top = Math.max(maxPadding.top, boxPadding.top);\n  maxPadding.left = Math.max(maxPadding.left, boxPadding.left);\n  maxPadding.bottom = Math.max(maxPadding.bottom, boxPadding.bottom);\n  maxPadding.right = Math.max(maxPadding.right, boxPadding.right);\n}\n\nfunction updateDims(chartArea, params, layout, stacks) {\n  const {pos, box} = layout;\n  const maxPadding = chartArea.maxPadding;\n\n  // dynamically placed boxes size is not considered\n  if (!isObject(pos)) {\n    if (layout.size) {\n      // this layout was already counted for, lets first reduce old size\n      chartArea[pos] -= layout.size;\n    }\n    const stack = stacks[layout.stack] || {size: 0, count: 1};\n    stack.size = Math.max(stack.size, layout.horizontal ? box.height : box.width);\n    layout.size = stack.size / stack.count;\n    chartArea[pos] += layout.size;\n  }\n\n  if (box.getPadding) {\n    updateMaxPadding(maxPadding, box.getPadding());\n  }\n\n  const newWidth = Math.max(0, params.outerWidth - getCombinedMax(maxPadding, chartArea, 'left', 'right'));\n  const newHeight = Math.max(0, params.outerHeight - getCombinedMax(maxPadding, chartArea, 'top', 'bottom'));\n  const widthChanged = newWidth !== chartArea.w;\n  const heightChanged = newHeight !== chartArea.h;\n  chartArea.w = newWidth;\n  chartArea.h = newHeight;\n\n  // return booleans on the changes per direction\n  return layout.horizontal\n    ? {same: widthChanged, other: heightChanged}\n    : {same: heightChanged, other: widthChanged};\n}\n\nfunction handleMaxPadding(chartArea) {\n  const maxPadding = chartArea.maxPadding;\n\n  function updatePos(pos) {\n    const change = Math.max(maxPadding[pos] - chartArea[pos], 0);\n    chartArea[pos] += change;\n    return change;\n  }\n  chartArea.y += updatePos('top');\n  chartArea.x += updatePos('left');\n  updatePos('right');\n  updatePos('bottom');\n}\n\nfunction getMargins(horizontal, chartArea) {\n  const maxPadding = chartArea.maxPadding;\n\n  function marginForPositions(positions) {\n    const margin = {left: 0, top: 0, right: 0, bottom: 0};\n    positions.forEach((pos) => {\n      margin[pos] = Math.max(chartArea[pos], maxPadding[pos]);\n    });\n    return margin;\n  }\n\n  return horizontal\n    ? marginForPositions(['left', 'right'])\n    : marginForPositions(['top', 'bottom']);\n}\n\nfunction fitBoxes(boxes, chartArea, params, stacks) {\n  const refitBoxes = [];\n  let i, ilen, layout, box, refit, changed;\n\n  for (i = 0, ilen = boxes.length, refit = 0; i < ilen; ++i) {\n    layout = boxes[i];\n    box = layout.box;\n\n    box.update(\n      layout.width || chartArea.w,\n      layout.height || chartArea.h,\n      getMargins(layout.horizontal, chartArea)\n    );\n    const {same, other} = updateDims(chartArea, params, layout, stacks);\n\n    // Dimensions changed and there were non full width boxes before this\n    // -> we have to refit those\n    refit |= same && refitBoxes.length;\n\n    // Chart area changed in the opposite direction\n    changed = changed || other;\n\n    if (!box.fullSize) { // fullSize boxes don't need to be re-fitted in any case\n      refitBoxes.push(layout);\n    }\n  }\n\n  return refit && fitBoxes(refitBoxes, chartArea, params, stacks) || changed;\n}\n\nfunction setBoxDims(box, left, top, width, height) {\n  box.top = top;\n  box.left = left;\n  box.right = left + width;\n  box.bottom = top + height;\n  box.width = width;\n  box.height = height;\n}\n\nfunction placeBoxes(boxes, chartArea, params, stacks) {\n  const userPadding = params.padding;\n  let {x, y} = chartArea;\n\n  for (const layout of boxes) {\n    const box = layout.box;\n    const stack = stacks[layout.stack] || {count: 1, placed: 0, weight: 1};\n    const weight = (layout.stackWeight / stack.weight) || 1;\n    if (layout.horizontal) {\n      const width = chartArea.w * weight;\n      const height = stack.size || box.height;\n      if (defined(stack.start)) {\n        y = stack.start;\n      }\n      if (box.fullSize) {\n        setBoxDims(box, userPadding.left, y, params.outerWidth - userPadding.right - userPadding.left, height);\n      } else {\n        setBoxDims(box, chartArea.left + stack.placed, y, width, height);\n      }\n      stack.start = y;\n      stack.placed += width;\n      y = box.bottom;\n    } else {\n      const height = chartArea.h * weight;\n      const width = stack.size || box.width;\n      if (defined(stack.start)) {\n        x = stack.start;\n      }\n      if (box.fullSize) {\n        setBoxDims(box, x, userPadding.top, width, params.outerHeight - userPadding.bottom - userPadding.top);\n      } else {\n        setBoxDims(box, x, chartArea.top + stack.placed, width, height);\n      }\n      stack.start = x;\n      stack.placed += height;\n      x = box.right;\n    }\n  }\n\n  chartArea.x = x;\n  chartArea.y = y;\n}\n\n/**\n * @interface LayoutItem\n * @typedef {object} LayoutItem\n * @prop {string} position - The position of the item in the chart layout. Possible values are\n * 'left', 'top', 'right', 'bottom', and 'chartArea'\n * @prop {number} weight - The weight used to sort the item. Higher weights are further away from the chart area\n * @prop {boolean} fullSize - if true, and the item is horizontal, then push vertical boxes down\n * @prop {function} isHorizontal - returns true if the layout item is horizontal (ie. top or bottom)\n * @prop {function} update - Takes two parameters: width and height. Returns size of item\n * @prop {function} draw - Draws the element\n * @prop {function} [getPadding] -  Returns an object with padding on the edges\n * @prop {number} width - Width of item. Must be valid after update()\n * @prop {number} height - Height of item. Must be valid after update()\n * @prop {number} left - Left edge of the item. Set by layout system and cannot be used in update\n * @prop {number} top - Top edge of the item. Set by layout system and cannot be used in update\n * @prop {number} right - Right edge of the item. Set by layout system and cannot be used in update\n * @prop {number} bottom - Bottom edge of the item. Set by layout system and cannot be used in update\n */\n\n// The layout service is very self explanatory.  It's responsible for the layout within a chart.\n// Scales, Legends and Plugins all rely on the layout service and can easily register to be placed anywhere they need\n// It is this service's responsibility of carrying out that layout.\nexport default {\n\n  /**\n\t * Register a box to a chart.\n\t * A box is simply a reference to an object that requires layout. eg. Scales, Legend, Title.\n\t * @param {Chart} chart - the chart to use\n\t * @param {LayoutItem} item - the item to add to be laid out\n\t */\n  addBox(chart, item) {\n    if (!chart.boxes) {\n      chart.boxes = [];\n    }\n\n    // initialize item with default values\n    item.fullSize = item.fullSize || false;\n    item.position = item.position || 'top';\n    item.weight = item.weight || 0;\n    // @ts-ignore\n    item._layers = item._layers || function() {\n      return [{\n        z: 0,\n        draw(chartArea) {\n          item.draw(chartArea);\n        }\n      }];\n    };\n\n    chart.boxes.push(item);\n  },\n\n  /**\n\t * Remove a layoutItem from a chart\n\t * @param {Chart} chart - the chart to remove the box from\n\t * @param {LayoutItem} layoutItem - the item to remove from the layout\n\t */\n  removeBox(chart, layoutItem) {\n    const index = chart.boxes ? chart.boxes.indexOf(layoutItem) : -1;\n    if (index !== -1) {\n      chart.boxes.splice(index, 1);\n    }\n  },\n\n  /**\n\t * Sets (or updates) options on the given `item`.\n\t * @param {Chart} chart - the chart in which the item lives (or will be added to)\n\t * @param {LayoutItem} item - the item to configure with the given options\n\t * @param {object} options - the new item options.\n\t */\n  configure(chart, item, options) {\n    item.fullSize = options.fullSize;\n    item.position = options.position;\n    item.weight = options.weight;\n  },\n\n  /**\n\t * Fits boxes of the given chart into the given size by having each box measure itself\n\t * then running a fitting algorithm\n\t * @param {Chart} chart - the chart\n\t * @param {number} width - the width to fit into\n\t * @param {number} height - the height to fit into\n   * @param {number} minPadding - minimum padding required for each side of chart area\n\t */\n  update(chart, width, height, minPadding) {\n    if (!chart) {\n      return;\n    }\n\n    const padding = toPadding(chart.options.layout.padding);\n    const availableWidth = Math.max(width - padding.width, 0);\n    const availableHeight = Math.max(height - padding.height, 0);\n    const boxes = buildLayoutBoxes(chart.boxes);\n    const verticalBoxes = boxes.vertical;\n    const horizontalBoxes = boxes.horizontal;\n\n    // Before any changes are made, notify boxes that an update is about to being\n    // This is used to clear any cached data (e.g. scale limits)\n    each(chart.boxes, box => {\n      if (typeof box.beforeLayout === 'function') {\n        box.beforeLayout();\n      }\n    });\n\n    // Essentially we now have any number of boxes on each of the 4 sides.\n    // Our canvas looks like the following.\n    // The areas L1 and L2 are the left axes. R1 is the right axis, T1 is the top axis and\n    // B1 is the bottom axis\n    // There are also 4 quadrant-like locations (left to right instead of clockwise) reserved for chart overlays\n    // These locations are single-box locations only, when trying to register a chartArea location that is already taken,\n    // an error will be thrown.\n    //\n    // |----------------------------------------------------|\n    // |                  T1 (Full Width)                   |\n    // |----------------------------------------------------|\n    // |    |    |                 T2                  |    |\n    // |    |----|-------------------------------------|----|\n    // |    |    | C1 |                           | C2 |    |\n    // |    |    |----|                           |----|    |\n    // |    |    |                                     |    |\n    // | L1 | L2 |           ChartArea (C0)            | R1 |\n    // |    |    |                                     |    |\n    // |    |    |----|                           |----|    |\n    // |    |    | C3 |                           | C4 |    |\n    // |    |----|-------------------------------------|----|\n    // |    |    |                 B1                  |    |\n    // |----------------------------------------------------|\n    // |                  B2 (Full Width)                   |\n    // |----------------------------------------------------|\n    //\n\n    const visibleVerticalBoxCount = verticalBoxes.reduce((total, wrap) =>\n      wrap.box.options && wrap.box.options.display === false ? total : total + 1, 0) || 1;\n\n    const params = Object.freeze({\n      outerWidth: width,\n      outerHeight: height,\n      padding,\n      availableWidth,\n      availableHeight,\n      vBoxMaxWidth: availableWidth / 2 / visibleVerticalBoxCount,\n      hBoxMaxHeight: availableHeight / 2\n    });\n    const maxPadding = Object.assign({}, padding);\n    updateMaxPadding(maxPadding, toPadding(minPadding));\n    const chartArea = Object.assign({\n      maxPadding,\n      w: availableWidth,\n      h: availableHeight,\n      x: padding.left,\n      y: padding.top\n    }, padding);\n\n    const stacks = setLayoutDims(verticalBoxes.concat(horizontalBoxes), params);\n\n    // First fit the fullSize boxes, to reduce probability of re-fitting.\n    fitBoxes(boxes.fullSize, chartArea, params, stacks);\n\n    // Then fit vertical boxes\n    fitBoxes(verticalBoxes, chartArea, params, stacks);\n\n    // Then fit horizontal boxes\n    if (fitBoxes(horizontalBoxes, chartArea, params, stacks)) {\n      // if the area changed, re-fit vertical boxes\n      fitBoxes(verticalBoxes, chartArea, params, stacks);\n    }\n\n    handleMaxPadding(chartArea);\n\n    // Finally place the boxes to correct coordinates\n    placeBoxes(boxes.leftAndTop, chartArea, params, stacks);\n\n    // Move to opposite side of chart\n    chartArea.x += chartArea.w;\n    chartArea.y += chartArea.h;\n\n    placeBoxes(boxes.rightAndBottom, chartArea, params, stacks);\n\n    chart.chartArea = {\n      left: chartArea.left,\n      top: chartArea.top,\n      right: chartArea.left + chartArea.w,\n      bottom: chartArea.top + chartArea.h,\n      height: chartArea.h,\n      width: chartArea.w,\n    };\n\n    // Finally update boxes in chartArea (radial scale for example)\n    each(boxes.chartArea, (layout) => {\n      const box = layout.box;\n      Object.assign(box, chart.chartArea);\n      box.update(chartArea.w, chartArea.h, {left: 0, top: 0, right: 0, bottom: 0});\n    });\n  }\n};\n","\n/**\n * @typedef { import('../core/core.controller.js').default } Chart\n */\n\n/**\n * Abstract class that allows abstracting platform dependencies away from the chart.\n */\nexport default class BasePlatform {\n  /**\n\t * Called at chart construction time, returns a context2d instance implementing\n\t * the [W3C Canvas 2D Context API standard]{@link https://www.w3.org/TR/2dcontext/}.\n\t * @param {HTMLCanvasElement} canvas - The canvas from which to acquire context (platform specific)\n\t * @param {number} [aspectRatio] - The chart options\n\t */\n  acquireContext(canvas, aspectRatio) {} // eslint-disable-line no-unused-vars\n\n  /**\n\t * Called at chart destruction time, releases any resources associated to the context\n\t * previously returned by the acquireContext() method.\n\t * @param {CanvasRenderingContext2D} context - The context2d instance\n\t * @returns {boolean} true if the method succeeded, else false\n\t */\n  releaseContext(context) { // eslint-disable-line no-unused-vars\n    return false;\n  }\n\n  /**\n\t * Registers the specified listener on the given chart.\n\t * @param {Chart} chart - Chart from which to listen for event\n\t * @param {string} type - The ({@link ChartEvent}) type to listen for\n\t * @param {function} listener - Receives a notification (an object that implements\n\t * the {@link ChartEvent} interface) when an event of the specified type occurs.\n\t */\n  addEventListener(chart, type, listener) {} // eslint-disable-line no-unused-vars\n\n  /**\n\t * Removes the specified listener previously registered with addEventListener.\n\t * @param {Chart} chart - Chart from which to remove the listener\n\t * @param {string} type - The ({@link ChartEvent}) type to remove\n\t * @param {function} listener - The listener function to remove from the event target.\n\t */\n  removeEventListener(chart, type, listener) {} // eslint-disable-line no-unused-vars\n\n  /**\n\t * @returns {number} the current devicePixelRatio of the device this platform is connected to.\n\t */\n  getDevicePixelRatio() {\n    return 1;\n  }\n\n  /**\n\t * Returns the maximum size in pixels of given canvas element.\n\t * @param {HTMLCanvasElement} element\n\t * @param {number} [width] - content width of parent element\n\t * @param {number} [height] - content height of parent element\n\t * @param {number} [aspectRatio] - aspect ratio to maintain\n\t */\n  getMaximumSize(element, width, height, aspectRatio) {\n    width = Math.max(0, width || element.width);\n    height = height || element.height;\n    return {\n      width,\n      height: Math.max(0, aspectRatio ? Math.floor(width / aspectRatio) : height)\n    };\n  }\n\n  /**\n\t * @param {HTMLCanvasElement} canvas\n\t * @returns {boolean} true if the canvas is attached to the platform, false if not.\n\t */\n  isAttached(canvas) { // eslint-disable-line no-unused-vars\n    return true;\n  }\n\n  /**\n   * Updates config with platform specific requirements\n   * @param {import('../core/core.config.js').default} config\n   */\n  updateConfig(config) { // eslint-disable-line no-unused-vars\n    // no-op\n  }\n}\n","/**\n * Platform fallback implementation (minimal).\n * @see https://github.com/chartjs/Chart.js/pull/4591#issuecomment-319575939\n */\n\nimport BasePlatform from './platform.base.js';\n\n/**\n * Platform class for charts without access to the DOM or to many element properties\n * This platform is used by default for any chart passed an OffscreenCanvas.\n * @extends BasePlatform\n */\nexport default class BasicPlatform extends BasePlatform {\n  acquireContext(item) {\n    // To prevent canvas fingerprinting, some add-ons undefine the getContext\n    // method, for example: https://github.com/kkapsner/CanvasBlocker\n    // https://github.com/chartjs/Chart.js/issues/2807\n    return item && item.getContext && item.getContext('2d') || null;\n  }\n  updateConfig(config) {\n    config.options.animation = false;\n  }\n}\n","/**\n * Chart.Platform implementation for targeting a web browser\n */\n\nimport BasePlatform from './platform.base.js';\nimport {_getParentNode, getRelativePosition, supportsEventListenerOptions, readUsedSize, getMaximumSize} from '../helpers/helpers.dom.js';\nimport {throttled} from '../helpers/helpers.extras.js';\nimport {isNullOrUndef} from '../helpers/helpers.core.js';\n\n/**\n * @typedef { import('../core/core.controller.js').default } Chart\n */\n\nconst EXPANDO_KEY = '$chartjs';\n\n/**\n * DOM event types -> Chart.js event types.\n * Note: only events with different types are mapped.\n * @see https://developer.mozilla.org/en-US/docs/Web/Events\n */\nconst EVENT_TYPES = {\n  touchstart: 'mousedown',\n  touchmove: 'mousemove',\n  touchend: 'mouseup',\n  pointerenter: 'mouseenter',\n  pointerdown: 'mousedown',\n  pointermove: 'mousemove',\n  pointerup: 'mouseup',\n  pointerleave: 'mouseout',\n  pointerout: 'mouseout'\n};\n\nconst isNullOrEmpty = value => value === null || value === '';\n/**\n * Initializes the canvas style and render size without modifying the canvas display size,\n * since responsiveness is handled by the controller.resize() method. The config is used\n * to determine the aspect ratio to apply in case no explicit height has been specified.\n * @param {HTMLCanvasElement} canvas\n * @param {number} [aspectRatio]\n */\nfunction initCanvas(canvas, aspectRatio) {\n  const style = canvas.style;\n\n  // NOTE(SB) canvas.getAttribute('width') !== canvas.width: in the first case it\n  // returns null or '' if no explicit value has been set to the canvas attribute.\n  const renderHeight = canvas.getAttribute('height');\n  const renderWidth = canvas.getAttribute('width');\n\n  // Chart.js modifies some canvas values that we want to restore on destroy\n  canvas[EXPANDO_KEY] = {\n    initial: {\n      height: renderHeight,\n      width: renderWidth,\n      style: {\n        display: style.display,\n        height: style.height,\n        width: style.width\n      }\n    }\n  };\n\n  // Force canvas to display as block to avoid extra space caused by inline\n  // elements, which would interfere with the responsive resize process.\n  // https://github.com/chartjs/Chart.js/issues/2538\n  style.display = style.display || 'block';\n  // Include possible borders in the size\n  style.boxSizing = style.boxSizing || 'border-box';\n\n  if (isNullOrEmpty(renderWidth)) {\n    const displayWidth = readUsedSize(canvas, 'width');\n    if (displayWidth !== undefined) {\n      canvas.width = displayWidth;\n    }\n  }\n\n  if (isNullOrEmpty(renderHeight)) {\n    if (canvas.style.height === '') {\n      // If no explicit render height and style height, let's apply the aspect ratio,\n      // which one can be specified by the user but also by charts as default option\n      // (i.e. options.aspectRatio). If not specified, use canvas aspect ratio of 2.\n      canvas.height = canvas.width / (aspectRatio || 2);\n    } else {\n      const displayHeight = readUsedSize(canvas, 'height');\n      if (displayHeight !== undefined) {\n        canvas.height = displayHeight;\n      }\n    }\n  }\n\n  return canvas;\n}\n\n// Default passive to true as expected by Chrome for 'touchstart' and 'touchend' events.\n// https://github.com/chartjs/Chart.js/issues/4287\nconst eventListenerOptions = supportsEventListenerOptions ? {passive: true} : false;\n\nfunction addListener(node, type, listener) {\n  if (node) {\n    node.addEventListener(type, listener, eventListenerOptions);\n  }\n}\n\nfunction removeListener(chart, type, listener) {\n  if (chart && chart.canvas) {\n    chart.canvas.removeEventListener(type, listener, eventListenerOptions);\n  }\n}\n\nfunction fromNativeEvent(event, chart) {\n  const type = EVENT_TYPES[event.type] || event.type;\n  const {x, y} = getRelativePosition(event, chart);\n  return {\n    type,\n    chart,\n    native: event,\n    x: x !== undefined ? x : null,\n    y: y !== undefined ? y : null,\n  };\n}\n\nfunction nodeListContains(nodeList, canvas) {\n  for (const node of nodeList) {\n    if (node === canvas || node.contains(canvas)) {\n      return true;\n    }\n  }\n}\n\nfunction createAttachObserver(chart, type, listener) {\n  const canvas = chart.canvas;\n  const observer = new MutationObserver(entries => {\n    let trigger = false;\n    for (const entry of entries) {\n      trigger = trigger || nodeListContains(entry.addedNodes, canvas);\n      trigger = trigger && !nodeListContains(entry.removedNodes, canvas);\n    }\n    if (trigger) {\n      listener();\n    }\n  });\n  observer.observe(document, {childList: true, subtree: true});\n  return observer;\n}\n\nfunction createDetachObserver(chart, type, listener) {\n  const canvas = chart.canvas;\n  const observer = new MutationObserver(entries => {\n    let trigger = false;\n    for (const entry of entries) {\n      trigger = trigger || nodeListContains(entry.removedNodes, canvas);\n      trigger = trigger && !nodeListContains(entry.addedNodes, canvas);\n    }\n    if (trigger) {\n      listener();\n    }\n  });\n  observer.observe(document, {childList: true, subtree: true});\n  return observer;\n}\n\nconst drpListeningCharts = new Map();\nlet oldDevicePixelRatio = 0;\n\nfunction onWindowResize() {\n  const dpr = window.devicePixelRatio;\n  if (dpr === oldDevicePixelRatio) {\n    return;\n  }\n  oldDevicePixelRatio = dpr;\n  drpListeningCharts.forEach((resize, chart) => {\n    if (chart.currentDevicePixelRatio !== dpr) {\n      resize();\n    }\n  });\n}\n\nfunction listenDevicePixelRatioChanges(chart, resize) {\n  if (!drpListeningCharts.size) {\n    window.addEventListener('resize', onWindowResize);\n  }\n  drpListeningCharts.set(chart, resize);\n}\n\nfunction unlistenDevicePixelRatioChanges(chart) {\n  drpListeningCharts.delete(chart);\n  if (!drpListeningCharts.size) {\n    window.removeEventListener('resize', onWindowResize);\n  }\n}\n\nfunction createResizeObserver(chart, type, listener) {\n  const canvas = chart.canvas;\n  const container = canvas && _getParentNode(canvas);\n  if (!container) {\n    return;\n  }\n  const resize = throttled((width, height) => {\n    const w = container.clientWidth;\n    listener(width, height);\n    if (w < container.clientWidth) {\n      // If the container size shrank during chart resize, let's assume\n      // scrollbar appeared. So we resize again with the scrollbar visible -\n      // effectively making chart smaller and the scrollbar hidden again.\n      // Because we are inside `throttled`, and currently `ticking`, scroll\n      // events are ignored during this whole 2 resize process.\n      // If we assumed wrong and something else happened, we are resizing\n      // twice in a frame (potential performance issue)\n      listener();\n    }\n  }, window);\n\n  // @ts-ignore until https://github.com/microsoft/TypeScript/issues/37861 implemented\n  const observer = new ResizeObserver(entries => {\n    const entry = entries[0];\n    const width = entry.contentRect.width;\n    const height = entry.contentRect.height;\n    // When its container's display is set to 'none' the callback will be called with a\n    // size of (0, 0), which will cause the chart to lose its original height, so skip\n    // resizing in such case.\n    if (width === 0 && height === 0) {\n      return;\n    }\n    resize(width, height);\n  });\n  observer.observe(container);\n  listenDevicePixelRatioChanges(chart, resize);\n\n  return observer;\n}\n\nfunction releaseObserver(chart, type, observer) {\n  if (observer) {\n    observer.disconnect();\n  }\n  if (type === 'resize') {\n    unlistenDevicePixelRatioChanges(chart);\n  }\n}\n\nfunction createProxyAndListen(chart, type, listener) {\n  const canvas = chart.canvas;\n  const proxy = throttled((event) => {\n    // This case can occur if the chart is destroyed while waiting\n    // for the throttled function to occur. We prevent crashes by checking\n    // for a destroyed chart\n    if (chart.ctx !== null) {\n      listener(fromNativeEvent(event, chart));\n    }\n  }, chart);\n\n  addListener(canvas, type, proxy);\n\n  return proxy;\n}\n\n/**\n * Platform class for charts that can access the DOM and global window/document properties\n * @extends BasePlatform\n */\nexport default class DomPlatform extends BasePlatform {\n\n  /**\n\t * @param {HTMLCanvasElement} canvas\n\t * @param {number} [aspectRatio]\n\t * @return {CanvasRenderingContext2D|null}\n\t */\n  acquireContext(canvas, aspectRatio) {\n    // To prevent canvas fingerprinting, some add-ons undefine the getContext\n    // method, for example: https://github.com/kkapsner/CanvasBlocker\n    // https://github.com/chartjs/Chart.js/issues/2807\n    const context = canvas && canvas.getContext && canvas.getContext('2d');\n\n    // `instanceof HTMLCanvasElement/CanvasRenderingContext2D` fails when the canvas is\n    // inside an iframe or when running in a protected environment. We could guess the\n    // types from their toString() value but let's keep things flexible and assume it's\n    // a sufficient condition if the canvas has a context2D which has canvas as `canvas`.\n    // https://github.com/chartjs/Chart.js/issues/3887\n    // https://github.com/chartjs/Chart.js/issues/4102\n    // https://github.com/chartjs/Chart.js/issues/4152\n    if (context && context.canvas === canvas) {\n      // Load platform resources on first chart creation, to make it possible to\n      // import the library before setting platform options.\n      initCanvas(canvas, aspectRatio);\n      return context;\n    }\n\n    return null;\n  }\n\n  /**\n\t * @param {CanvasRenderingContext2D} context\n\t */\n  releaseContext(context) {\n    const canvas = context.canvas;\n    if (!canvas[EXPANDO_KEY]) {\n      return false;\n    }\n\n    const initial = canvas[EXPANDO_KEY].initial;\n    ['height', 'width'].forEach((prop) => {\n      const value = initial[prop];\n      if (isNullOrUndef(value)) {\n        canvas.removeAttribute(prop);\n      } else {\n        canvas.setAttribute(prop, value);\n      }\n    });\n\n    const style = initial.style || {};\n    Object.keys(style).forEach((key) => {\n      canvas.style[key] = style[key];\n    });\n\n    // The canvas render size might have been changed (and thus the state stack discarded),\n    // we can't use save() and restore() to restore the initial state. So make sure that at\n    // least the canvas context is reset to the default state by setting the canvas width.\n    // https://www.w3.org/TR/2011/WD-html5-20110525/the-canvas-element.html\n    // eslint-disable-next-line no-self-assign\n    canvas.width = canvas.width;\n\n    delete canvas[EXPANDO_KEY];\n    return true;\n  }\n\n  /**\n\t *\n\t * @param {Chart} chart\n\t * @param {string} type\n\t * @param {function} listener\n\t */\n  addEventListener(chart, type, listener) {\n    // Can have only one listener per type, so make sure previous is removed\n    this.removeEventListener(chart, type);\n\n    const proxies = chart.$proxies || (chart.$proxies = {});\n    const handlers = {\n      attach: createAttachObserver,\n      detach: createDetachObserver,\n      resize: createResizeObserver\n    };\n    const handler = handlers[type] || createProxyAndListen;\n    proxies[type] = handler(chart, type, listener);\n  }\n\n\n  /**\n\t * @param {Chart} chart\n\t * @param {string} type\n\t */\n  removeEventListener(chart, type) {\n    const proxies = chart.$proxies || (chart.$proxies = {});\n    const proxy = proxies[type];\n\n    if (!proxy) {\n      return;\n    }\n\n    const handlers = {\n      attach: releaseObserver,\n      detach: releaseObserver,\n      resize: releaseObserver\n    };\n    const handler = handlers[type] || removeListener;\n    handler(chart, type, proxy);\n    proxies[type] = undefined;\n  }\n\n  getDevicePixelRatio() {\n    return window.devicePixelRatio;\n  }\n\n  /**\n\t * @param {HTMLCanvasElement} canvas\n\t * @param {number} [width] - content width of parent element\n\t * @param {number} [height] - content height of parent element\n\t * @param {number} [aspectRatio] - aspect ratio to maintain\n\t */\n  getMaximumSize(canvas, width, height, aspectRatio) {\n    return getMaximumSize(canvas, width, height, aspectRatio);\n  }\n\n  /**\n\t * @param {HTMLCanvasElement} canvas\n\t */\n  isAttached(canvas) {\n    const container = canvas && _getParentNode(canvas);\n    return !!(container && container.isConnected);\n  }\n}\n","import {_isDomSupported} from '../helpers/index.js';\nimport BasePlatform from './platform.base.js';\nimport BasicPlatform from './platform.basic.js';\nimport DomPlatform from './platform.dom.js';\n\nexport function _detectPlatform(canvas) {\n  if (!_isDomSupported() || (typeof OffscreenCanvas !== 'undefined' && canvas instanceof OffscreenCanvas)) {\n    return BasicPlatform;\n  }\n  return DomPlatform;\n}\n\nexport {BasePlatform, BasicPlatform, DomPlatform};\n","import type {AnyObject} from '../types/basic.js';\nimport type {Point} from '../types/geometric.js';\nimport type {Animation} from '../types/animation.js';\nimport {isNumber} from '../helpers/helpers.math.js';\n\nexport default class Element<T = AnyObject, O = AnyObject> {\n\n  static defaults = {};\n  static defaultRoutes = undefined;\n\n  x: number;\n  y: number;\n  active = false;\n  options: O;\n  $animations: Record<keyof T, Animation>;\n\n  tooltipPosition(useFinalPosition: boolean): Point {\n    const {x, y} = this.getProps(['x', 'y'], useFinalPosition);\n    return {x, y} as Point;\n  }\n\n  hasValue() {\n    return isNumber(this.x) && isNumber(this.y);\n  }\n\n  /**\n   * Gets the current or final value of each prop. Can return extra properties (whole object).\n   * @param props - properties to get\n   * @param [final] - get the final value (animation target)\n   */\n  getProps<P extends (keyof T)[]>(props: P, final?: boolean): Pick<T, P[number]>;\n  getProps<P extends string>(props: P[], final?: boolean): Partial<Record<P, unknown>>;\n  getProps(props: string[], final?: boolean): Partial<Record<string, unknown>> {\n    const anims = this.$animations;\n    if (!final || !anims) {\n      // let's not create an object, if not needed\n      return this as Record<string, unknown>;\n    }\n    const ret: Record<string, unknown> = {};\n    props.forEach((prop) => {\n      ret[prop] = anims[prop] && anims[prop].active() ? anims[prop]._to : this[prop as string];\n    });\n    return ret;\n  }\n}\n","import {isNullOrUndef, valueOrDefault} from '../helpers/helpers.core.js';\nimport {_factorize} from '../helpers/helpers.math.js';\n\n\n/**\n * @typedef { import('./core.controller.js').default } Chart\n * @typedef {{value:number | string, label?:string, major?:boolean, $context?:any}} Tick\n */\n\n/**\n * Returns a subset of ticks to be plotted to avoid overlapping labels.\n * @param {import('./core.scale.js').default} scale\n * @param {Tick[]} ticks\n * @return {Tick[]}\n * @private\n */\nexport function autoSkip(scale, ticks) {\n  const tickOpts = scale.options.ticks;\n  const determinedMaxTicks = determineMaxTicks(scale);\n  const ticksLimit = Math.min(tickOpts.maxTicksLimit || determinedMaxTicks, determinedMaxTicks);\n  const majorIndices = tickOpts.major.enabled ? getMajorIndices(ticks) : [];\n  const numMajorIndices = majorIndices.length;\n  const first = majorIndices[0];\n  const last = majorIndices[numMajorIndices - 1];\n  const newTicks = [];\n\n  // If there are too many major ticks to display them all\n  if (numMajorIndices > ticksLimit) {\n    skipMajors(ticks, newTicks, majorIndices, numMajorIndices / ticksLimit);\n    return newTicks;\n  }\n\n  const spacing = calculateSpacing(majorIndices, ticks, ticksLimit);\n\n  if (numMajorIndices > 0) {\n    let i, ilen;\n    const avgMajorSpacing = numMajorIndices > 1 ? Math.round((last - first) / (numMajorIndices - 1)) : null;\n    skip(ticks, newTicks, spacing, isNullOrUndef(avgMajorSpacing) ? 0 : first - avgMajorSpacing, first);\n    for (i = 0, ilen = numMajorIndices - 1; i < ilen; i++) {\n      skip(ticks, newTicks, spacing, majorIndices[i], majorIndices[i + 1]);\n    }\n    skip(ticks, newTicks, spacing, last, isNullOrUndef(avgMajorSpacing) ? ticks.length : last + avgMajorSpacing);\n    return newTicks;\n  }\n  skip(ticks, newTicks, spacing);\n  return newTicks;\n}\n\nfunction determineMaxTicks(scale) {\n  const offset = scale.options.offset;\n  const tickLength = scale._tickSize();\n  const maxScale = scale._length / tickLength + (offset ? 0 : 1);\n  const maxChart = scale._maxLength / tickLength;\n  return Math.floor(Math.min(maxScale, maxChart));\n}\n\n/**\n * @param {number[]} majorIndices\n * @param {Tick[]} ticks\n * @param {number} ticksLimit\n */\nfunction calculateSpacing(majorIndices, ticks, ticksLimit) {\n  const evenMajorSpacing = getEvenSpacing(majorIndices);\n  const spacing = ticks.length / ticksLimit;\n\n  // If the major ticks are evenly spaced apart, place the minor ticks\n  // so that they divide the major ticks into even chunks\n  if (!evenMajorSpacing) {\n    return Math.max(spacing, 1);\n  }\n\n  const factors = _factorize(evenMajorSpacing);\n  for (let i = 0, ilen = factors.length - 1; i < ilen; i++) {\n    const factor = factors[i];\n    if (factor > spacing) {\n      return factor;\n    }\n  }\n  return Math.max(spacing, 1);\n}\n\n/**\n * @param {Tick[]} ticks\n */\nfunction getMajorIndices(ticks) {\n  const result = [];\n  let i, ilen;\n  for (i = 0, ilen = ticks.length; i < ilen; i++) {\n    if (ticks[i].major) {\n      result.push(i);\n    }\n  }\n  return result;\n}\n\n/**\n * @param {Tick[]} ticks\n * @param {Tick[]} newTicks\n * @param {number[]} majorIndices\n * @param {number} spacing\n */\nfunction skipMajors(ticks, newTicks, majorIndices, spacing) {\n  let count = 0;\n  let next = majorIndices[0];\n  let i;\n\n  spacing = Math.ceil(spacing);\n  for (i = 0; i < ticks.length; i++) {\n    if (i === next) {\n      newTicks.push(ticks[i]);\n      count++;\n      next = majorIndices[count * spacing];\n    }\n  }\n}\n\n/**\n * @param {Tick[]} ticks\n * @param {Tick[]} newTicks\n * @param {number} spacing\n * @param {number} [majorStart]\n * @param {number} [majorEnd]\n */\nfunction skip(ticks, newTicks, spacing, majorStart, majorEnd) {\n  const start = valueOrDefault(majorStart, 0);\n  const end = Math.min(valueOrDefault(majorEnd, ticks.length), ticks.length);\n  let count = 0;\n  let length, i, next;\n\n  spacing = Math.ceil(spacing);\n  if (majorEnd) {\n    length = majorEnd - majorStart;\n    spacing = length / Math.floor(length / spacing);\n  }\n\n  next = start;\n\n  while (next < 0) {\n    count++;\n    next = Math.round(start + count * spacing);\n  }\n\n  for (i = Math.max(start, 0); i < end; i++) {\n    if (i === next) {\n      newTicks.push(ticks[i]);\n      count++;\n      next = Math.round(start + count * spacing);\n    }\n  }\n}\n\n\n/**\n * @param {number[]} arr\n */\nfunction getEvenSpacing(arr) {\n  const len = arr.length;\n  let i, diff;\n\n  if (len < 2) {\n    return false;\n  }\n\n  for (diff = arr[0], i = 1; i < len; ++i) {\n    if (arr[i] - arr[i - 1] !== diff) {\n      return false;\n    }\n  }\n  return diff;\n}\n","import Element from './core.element.js';\nimport {_alignPixel, _measureText, renderText, clipArea, unclipArea} from '../helpers/helpers.canvas.js';\nimport {callback as call, each, finiteOrDefault, isArray, isFinite, isNullOrUndef, isObject, valueOrDefault} from '../helpers/helpers.core.js';\nimport {toDegrees, toRadians, _int16Range, _limitValue, HALF_PI} from '../helpers/helpers.math.js';\nimport {_alignStartEnd, _toLeftRightCenter} from '../helpers/helpers.extras.js';\nimport {createContext, toFont, toPadding, _addGrace} from '../helpers/helpers.options.js';\nimport {autoSkip} from './core.scale.autoskip.js';\n\nconst reverseAlign = (align) => align === 'left' ? 'right' : align === 'right' ? 'left' : align;\nconst offsetFromEdge = (scale, edge, offset) => edge === 'top' || edge === 'left' ? scale[edge] + offset : scale[edge] - offset;\nconst getTicksLimit = (ticksLength, maxTicksLimit) => Math.min(maxTicksLimit || ticksLength, ticksLength);\n\n/**\n * @typedef { import('../types/index.js').Chart } Chart\n * @typedef {{value:number | string, label?:string, major?:boolean, $context?:any}} Tick\n */\n\n/**\n * Returns a new array containing numItems from arr\n * @param {any[]} arr\n * @param {number} numItems\n */\nfunction sample(arr, numItems) {\n  const result = [];\n  const increment = arr.length / numItems;\n  const len = arr.length;\n  let i = 0;\n\n  for (; i < len; i += increment) {\n    result.push(arr[Math.floor(i)]);\n  }\n  return result;\n}\n\n/**\n * @param {Scale} scale\n * @param {number} index\n * @param {boolean} offsetGridLines\n */\nfunction getPixelForGridLine(scale, index, offsetGridLines) {\n  const length = scale.ticks.length;\n  const validIndex = Math.min(index, length - 1);\n  const start = scale._startPixel;\n  const end = scale._endPixel;\n  const epsilon = 1e-6; // 1e-6 is margin in pixels for accumulated error.\n  let lineValue = scale.getPixelForTick(validIndex);\n  let offset;\n\n  if (offsetGridLines) {\n    if (length === 1) {\n      offset = Math.max(lineValue - start, end - lineValue);\n    } else if (index === 0) {\n      offset = (scale.getPixelForTick(1) - lineValue) / 2;\n    } else {\n      offset = (lineValue - scale.getPixelForTick(validIndex - 1)) / 2;\n    }\n    lineValue += validIndex < index ? offset : -offset;\n\n    // Return undefined if the pixel is out of the range\n    if (lineValue < start - epsilon || lineValue > end + epsilon) {\n      return;\n    }\n  }\n  return lineValue;\n}\n\n/**\n * @param {object} caches\n * @param {number} length\n */\nfunction garbageCollect(caches, length) {\n  each(caches, (cache) => {\n    const gc = cache.gc;\n    const gcLen = gc.length / 2;\n    let i;\n    if (gcLen > length) {\n      for (i = 0; i < gcLen; ++i) {\n        delete cache.data[gc[i]];\n      }\n      gc.splice(0, gcLen);\n    }\n  });\n}\n\n/**\n * @param {object} options\n */\nfunction getTickMarkLength(options) {\n  return options.drawTicks ? options.tickLength : 0;\n}\n\n/**\n * @param {object} options\n */\nfunction getTitleHeight(options, fallback) {\n  if (!options.display) {\n    return 0;\n  }\n\n  const font = toFont(options.font, fallback);\n  const padding = toPadding(options.padding);\n  const lines = isArray(options.text) ? options.text.length : 1;\n\n  return (lines * font.lineHeight) + padding.height;\n}\n\nfunction createScaleContext(parent, scale) {\n  return createContext(parent, {\n    scale,\n    type: 'scale'\n  });\n}\n\nfunction createTickContext(parent, index, tick) {\n  return createContext(parent, {\n    tick,\n    index,\n    type: 'tick'\n  });\n}\n\nfunction titleAlign(align, position, reverse) {\n  /** @type {CanvasTextAlign} */\n  let ret = _toLeftRightCenter(align);\n  if ((reverse && position !== 'right') || (!reverse && position === 'right')) {\n    ret = reverseAlign(ret);\n  }\n  return ret;\n}\n\nfunction titleArgs(scale, offset, position, align) {\n  const {top, left, bottom, right, chart} = scale;\n  const {chartArea, scales} = chart;\n  let rotation = 0;\n  let maxWidth, titleX, titleY;\n  const height = bottom - top;\n  const width = right - left;\n\n  if (scale.isHorizontal()) {\n    titleX = _alignStartEnd(align, left, right);\n\n    if (isObject(position)) {\n      const positionAxisID = Object.keys(position)[0];\n      const value = position[positionAxisID];\n      titleY = scales[positionAxisID].getPixelForValue(value) + height - offset;\n    } else if (position === 'center') {\n      titleY = (chartArea.bottom + chartArea.top) / 2 + height - offset;\n    } else {\n      titleY = offsetFromEdge(scale, position, offset);\n    }\n    maxWidth = right - left;\n  } else {\n    if (isObject(position)) {\n      const positionAxisID = Object.keys(position)[0];\n      const value = position[positionAxisID];\n      titleX = scales[positionAxisID].getPixelForValue(value) - width + offset;\n    } else if (position === 'center') {\n      titleX = (chartArea.left + chartArea.right) / 2 - width + offset;\n    } else {\n      titleX = offsetFromEdge(scale, position, offset);\n    }\n    titleY = _alignStartEnd(align, bottom, top);\n    rotation = position === 'left' ? -HALF_PI : HALF_PI;\n  }\n  return {titleX, titleY, maxWidth, rotation};\n}\n\nexport default class Scale extends Element {\n\n  // eslint-disable-next-line max-statements\n  constructor(cfg) {\n    super();\n\n    /** @type {string} */\n    this.id = cfg.id;\n    /** @type {string} */\n    this.type = cfg.type;\n    /** @type {any} */\n    this.options = undefined;\n    /** @type {CanvasRenderingContext2D} */\n    this.ctx = cfg.ctx;\n    /** @type {Chart} */\n    this.chart = cfg.chart;\n\n    // implements box\n    /** @type {number} */\n    this.top = undefined;\n    /** @type {number} */\n    this.bottom = undefined;\n    /** @type {number} */\n    this.left = undefined;\n    /** @type {number} */\n    this.right = undefined;\n    /** @type {number} */\n    this.width = undefined;\n    /** @type {number} */\n    this.height = undefined;\n    this._margins = {\n      left: 0,\n      right: 0,\n      top: 0,\n      bottom: 0\n    };\n    /** @type {number} */\n    this.maxWidth = undefined;\n    /** @type {number} */\n    this.maxHeight = undefined;\n    /** @type {number} */\n    this.paddingTop = undefined;\n    /** @type {number} */\n    this.paddingBottom = undefined;\n    /** @type {number} */\n    this.paddingLeft = undefined;\n    /** @type {number} */\n    this.paddingRight = undefined;\n\n    // scale-specific properties\n    /** @type {string=} */\n    this.axis = undefined;\n    /** @type {number=} */\n    this.labelRotation = undefined;\n    this.min = undefined;\n    this.max = undefined;\n    this._range = undefined;\n    /** @type {Tick[]} */\n    this.ticks = [];\n    /** @type {object[]|null} */\n    this._gridLineItems = null;\n    /** @type {object[]|null} */\n    this._labelItems = null;\n    /** @type {object|null} */\n    this._labelSizes = null;\n    this._length = 0;\n    this._maxLength = 0;\n    this._longestTextCache = {};\n    /** @type {number} */\n    this._startPixel = undefined;\n    /** @type {number} */\n    this._endPixel = undefined;\n    this._reversePixels = false;\n    this._userMax = undefined;\n    this._userMin = undefined;\n    this._suggestedMax = undefined;\n    this._suggestedMin = undefined;\n    this._ticksLength = 0;\n    this._borderValue = 0;\n    this._cache = {};\n    this._dataLimitsCached = false;\n    this.$context = undefined;\n  }\n\n  /**\n\t * @param {any} options\n\t * @since 3.0\n\t */\n  init(options) {\n    this.options = options.setContext(this.getContext());\n\n    this.axis = options.axis;\n\n    // parse min/max value, so we can properly determine min/max for other scales\n    this._userMin = this.parse(options.min);\n    this._userMax = this.parse(options.max);\n    this._suggestedMin = this.parse(options.suggestedMin);\n    this._suggestedMax = this.parse(options.suggestedMax);\n  }\n\n  /**\n\t * Parse a supported input value to internal representation.\n\t * @param {*} raw\n\t * @param {number} [index]\n\t * @since 3.0\n\t */\n  parse(raw, index) { // eslint-disable-line no-unused-vars\n    return raw;\n  }\n\n  /**\n\t * @return {{min: number, max: number, minDefined: boolean, maxDefined: boolean}}\n\t * @protected\n\t * @since 3.0\n\t */\n  getUserBounds() {\n    let {_userMin, _userMax, _suggestedMin, _suggestedMax} = this;\n    _userMin = finiteOrDefault(_userMin, Number.POSITIVE_INFINITY);\n    _userMax = finiteOrDefault(_userMax, Number.NEGATIVE_INFINITY);\n    _suggestedMin = finiteOrDefault(_suggestedMin, Number.POSITIVE_INFINITY);\n    _suggestedMax = finiteOrDefault(_suggestedMax, Number.NEGATIVE_INFINITY);\n    return {\n      min: finiteOrDefault(_userMin, _suggestedMin),\n      max: finiteOrDefault(_userMax, _suggestedMax),\n      minDefined: isFinite(_userMin),\n      maxDefined: isFinite(_userMax)\n    };\n  }\n\n  /**\n\t * @param {boolean} canStack\n\t * @return {{min: number, max: number}}\n\t * @protected\n\t * @since 3.0\n\t */\n  getMinMax(canStack) {\n    let {min, max, minDefined, maxDefined} = this.getUserBounds();\n    let range;\n\n    if (minDefined && maxDefined) {\n      return {min, max};\n    }\n\n    const metas = this.getMatchingVisibleMetas();\n    for (let i = 0, ilen = metas.length; i < ilen; ++i) {\n      range = metas[i].controller.getMinMax(this, canStack);\n      if (!minDefined) {\n        min = Math.min(min, range.min);\n      }\n      if (!maxDefined) {\n        max = Math.max(max, range.max);\n      }\n    }\n\n    // Make sure min <= max when only min or max is defined by user and the data is outside that range\n    min = maxDefined && min > max ? max : min;\n    max = minDefined && min > max ? min : max;\n\n    return {\n      min: finiteOrDefault(min, finiteOrDefault(max, min)),\n      max: finiteOrDefault(max, finiteOrDefault(min, max))\n    };\n  }\n\n  /**\n\t * Get the padding needed for the scale\n\t * @return {{top: number, left: number, bottom: number, right: number}} the necessary padding\n\t * @private\n\t */\n  getPadding() {\n    return {\n      left: this.paddingLeft || 0,\n      top: this.paddingTop || 0,\n      right: this.paddingRight || 0,\n      bottom: this.paddingBottom || 0\n    };\n  }\n\n  /**\n\t * Returns the scale tick objects\n\t * @return {Tick[]}\n\t * @since 2.7\n\t */\n  getTicks() {\n    return this.ticks;\n  }\n\n  /**\n\t * @return {string[]}\n\t */\n  getLabels() {\n    const data = this.chart.data;\n    return this.options.labels || (this.isHorizontal() ? data.xLabels : data.yLabels) || data.labels || [];\n  }\n\n  /**\n   * @return {import('../types.js').LabelItem[]}\n   */\n  getLabelItems(chartArea = this.chart.chartArea) {\n    const items = this._labelItems || (this._labelItems = this._computeLabelItems(chartArea));\n    return items;\n  }\n\n  // When a new layout is created, reset the data limits cache\n  beforeLayout() {\n    this._cache = {};\n    this._dataLimitsCached = false;\n  }\n\n  // These methods are ordered by lifecycle. Utilities then follow.\n  // Any function defined here is inherited by all scale types.\n  // Any function can be extended by the scale type\n\n  beforeUpdate() {\n    call(this.options.beforeUpdate, [this]);\n  }\n\n  /**\n\t * @param {number} maxWidth - the max width in pixels\n\t * @param {number} maxHeight - the max height in pixels\n\t * @param {{top: number, left: number, bottom: number, right: number}} margins - the space between the edge of the other scales and edge of the chart\n\t *   This space comes from two sources:\n\t *     - padding - space that's required to show the labels at the edges of the scale\n\t *     - thickness of scales or legends in another orientation\n\t */\n  update(maxWidth, maxHeight, margins) {\n    const {beginAtZero, grace, ticks: tickOpts} = this.options;\n    const sampleSize = tickOpts.sampleSize;\n\n    // Update Lifecycle - Probably don't want to ever extend or overwrite this function ;)\n    this.beforeUpdate();\n\n    // Absorb the master measurements\n    this.maxWidth = maxWidth;\n    this.maxHeight = maxHeight;\n    this._margins = margins = Object.assign({\n      left: 0,\n      right: 0,\n      top: 0,\n      bottom: 0\n    }, margins);\n\n    this.ticks = null;\n    this._labelSizes = null;\n    this._gridLineItems = null;\n    this._labelItems = null;\n\n    // Dimensions\n    this.beforeSetDimensions();\n    this.setDimensions();\n    this.afterSetDimensions();\n\n    this._maxLength = this.isHorizontal()\n      ? this.width + margins.left + margins.right\n      : this.height + margins.top + margins.bottom;\n\n    // Data min/max\n    if (!this._dataLimitsCached) {\n      this.beforeDataLimits();\n      this.determineDataLimits();\n      this.afterDataLimits();\n      this._range = _addGrace(this, grace, beginAtZero);\n      this._dataLimitsCached = true;\n    }\n\n    this.beforeBuildTicks();\n\n    this.ticks = this.buildTicks() || [];\n\n    // Allow modification of ticks in callback.\n    this.afterBuildTicks();\n\n    // Compute tick rotation and fit using a sampled subset of labels\n    // We generally don't need to compute the size of every single label for determining scale size\n    const samplingEnabled = sampleSize < this.ticks.length;\n    this._convertTicksToLabels(samplingEnabled ? sample(this.ticks, sampleSize) : this.ticks);\n\n    // configure is called twice, once here, once from core.controller.updateLayout.\n    // Here we haven't been positioned yet, but dimensions are correct.\n    // Variables set in configure are needed for calculateLabelRotation, and\n    // it's ok that coordinates are not correct there, only dimensions matter.\n    this.configure();\n\n    // Tick Rotation\n    this.beforeCalculateLabelRotation();\n    this.calculateLabelRotation(); // Preconditions: number of ticks and sizes of largest labels must be calculated beforehand\n    this.afterCalculateLabelRotation();\n\n    // Auto-skip\n    if (tickOpts.display && (tickOpts.autoSkip || tickOpts.source === 'auto')) {\n      this.ticks = autoSkip(this, this.ticks);\n      this._labelSizes = null;\n      this.afterAutoSkip();\n    }\n\n    if (samplingEnabled) {\n      // Generate labels using all non-skipped ticks\n      this._convertTicksToLabels(this.ticks);\n    }\n\n    this.beforeFit();\n    this.fit(); // Preconditions: label rotation and label sizes must be calculated beforehand\n    this.afterFit();\n\n    // IMPORTANT: after this point, we consider that `this.ticks` will NEVER change!\n\n    this.afterUpdate();\n  }\n\n  /**\n\t * @protected\n\t */\n  configure() {\n    let reversePixels = this.options.reverse;\n    let startPixel, endPixel;\n\n    if (this.isHorizontal()) {\n      startPixel = this.left;\n      endPixel = this.right;\n    } else {\n      startPixel = this.top;\n      endPixel = this.bottom;\n      // by default vertical scales are from bottom to top, so pixels are reversed\n      reversePixels = !reversePixels;\n    }\n    this._startPixel = startPixel;\n    this._endPixel = endPixel;\n    this._reversePixels = reversePixels;\n    this._length = endPixel - startPixel;\n    this._alignToPixels = this.options.alignToPixels;\n  }\n\n  afterUpdate() {\n    call(this.options.afterUpdate, [this]);\n  }\n\n  //\n\n  beforeSetDimensions() {\n    call(this.options.beforeSetDimensions, [this]);\n  }\n  setDimensions() {\n    // Set the unconstrained dimension before label rotation\n    if (this.isHorizontal()) {\n      // Reset position before calculating rotation\n      this.width = this.maxWidth;\n      this.left = 0;\n      this.right = this.width;\n    } else {\n      this.height = this.maxHeight;\n\n      // Reset position before calculating rotation\n      this.top = 0;\n      this.bottom = this.height;\n    }\n\n    // Reset padding\n    this.paddingLeft = 0;\n    this.paddingTop = 0;\n    this.paddingRight = 0;\n    this.paddingBottom = 0;\n  }\n  afterSetDimensions() {\n    call(this.options.afterSetDimensions, [this]);\n  }\n\n  _callHooks(name) {\n    this.chart.notifyPlugins(name, this.getContext());\n    call(this.options[name], [this]);\n  }\n\n  // Data limits\n  beforeDataLimits() {\n    this._callHooks('beforeDataLimits');\n  }\n  determineDataLimits() {}\n  afterDataLimits() {\n    this._callHooks('afterDataLimits');\n  }\n\n  //\n  beforeBuildTicks() {\n    this._callHooks('beforeBuildTicks');\n  }\n  /**\n\t * @return {object[]} the ticks\n\t */\n  buildTicks() {\n    return [];\n  }\n  afterBuildTicks() {\n    this._callHooks('afterBuildTicks');\n  }\n\n  beforeTickToLabelConversion() {\n    call(this.options.beforeTickToLabelConversion, [this]);\n  }\n  /**\n\t * Convert ticks to label strings\n\t * @param {Tick[]} ticks\n\t */\n  generateTickLabels(ticks) {\n    const tickOpts = this.options.ticks;\n    let i, ilen, tick;\n    for (i = 0, ilen = ticks.length; i < ilen; i++) {\n      tick = ticks[i];\n      tick.label = call(tickOpts.callback, [tick.value, i, ticks], this);\n    }\n  }\n  afterTickToLabelConversion() {\n    call(this.options.afterTickToLabelConversion, [this]);\n  }\n\n  //\n\n  beforeCalculateLabelRotation() {\n    call(this.options.beforeCalculateLabelRotation, [this]);\n  }\n  calculateLabelRotation() {\n    const options = this.options;\n    const tickOpts = options.ticks;\n    const numTicks = getTicksLimit(this.ticks.length, options.ticks.maxTicksLimit);\n    const minRotation = tickOpts.minRotation || 0;\n    const maxRotation = tickOpts.maxRotation;\n    let labelRotation = minRotation;\n    let tickWidth, maxHeight, maxLabelDiagonal;\n\n    if (!this._isVisible() || !tickOpts.display || minRotation >= maxRotation || numTicks <= 1 || !this.isHorizontal()) {\n      this.labelRotation = minRotation;\n      return;\n    }\n\n    const labelSizes = this._getLabelSizes();\n    const maxLabelWidth = labelSizes.widest.width;\n    const maxLabelHeight = labelSizes.highest.height;\n\n    // Estimate the width of each grid based on the canvas width, the maximum\n    // label width and the number of tick intervals\n    const maxWidth = _limitValue(this.chart.width - maxLabelWidth, 0, this.maxWidth);\n    tickWidth = options.offset ? this.maxWidth / numTicks : maxWidth / (numTicks - 1);\n\n    // Allow 3 pixels x2 padding either side for label readability\n    if (maxLabelWidth + 6 > tickWidth) {\n      tickWidth = maxWidth / (numTicks - (options.offset ? 0.5 : 1));\n      maxHeight = this.maxHeight - getTickMarkLength(options.grid)\n\t\t\t\t- tickOpts.padding - getTitleHeight(options.title, this.chart.options.font);\n      maxLabelDiagonal = Math.sqrt(maxLabelWidth * maxLabelWidth + maxLabelHeight * maxLabelHeight);\n      labelRotation = toDegrees(Math.min(\n        Math.asin(_limitValue((labelSizes.highest.height + 6) / tickWidth, -1, 1)),\n        Math.asin(_limitValue(maxHeight / maxLabelDiagonal, -1, 1)) - Math.asin(_limitValue(maxLabelHeight / maxLabelDiagonal, -1, 1))\n      ));\n      labelRotation = Math.max(minRotation, Math.min(maxRotation, labelRotation));\n    }\n\n    this.labelRotation = labelRotation;\n  }\n  afterCalculateLabelRotation() {\n    call(this.options.afterCalculateLabelRotation, [this]);\n  }\n  afterAutoSkip() {}\n\n  //\n\n  beforeFit() {\n    call(this.options.beforeFit, [this]);\n  }\n  fit() {\n    // Reset\n    const minSize = {\n      width: 0,\n      height: 0\n    };\n\n    const {chart, options: {ticks: tickOpts, title: titleOpts, grid: gridOpts}} = this;\n    const display = this._isVisible();\n    const isHorizontal = this.isHorizontal();\n\n    if (display) {\n      const titleHeight = getTitleHeight(titleOpts, chart.options.font);\n      if (isHorizontal) {\n        minSize.width = this.maxWidth;\n        minSize.height = getTickMarkLength(gridOpts) + titleHeight;\n      } else {\n        minSize.height = this.maxHeight; // fill all the height\n        minSize.width = getTickMarkLength(gridOpts) + titleHeight;\n      }\n\n      // Don't bother fitting the ticks if we are not showing the labels\n      if (tickOpts.display && this.ticks.length) {\n        const {first, last, widest, highest} = this._getLabelSizes();\n        const tickPadding = tickOpts.padding * 2;\n        const angleRadians = toRadians(this.labelRotation);\n        const cos = Math.cos(angleRadians);\n        const sin = Math.sin(angleRadians);\n\n        if (isHorizontal) {\n        // A horizontal axis is more constrained by the height.\n          const labelHeight = tickOpts.mirror ? 0 : sin * widest.width + cos * highest.height;\n          minSize.height = Math.min(this.maxHeight, minSize.height + labelHeight + tickPadding);\n        } else {\n        // A vertical axis is more constrained by the width. Labels are the\n        // dominant factor here, so get that length first and account for padding\n          const labelWidth = tickOpts.mirror ? 0 : cos * widest.width + sin * highest.height;\n\n          minSize.width = Math.min(this.maxWidth, minSize.width + labelWidth + tickPadding);\n        }\n        this._calculatePadding(first, last, sin, cos);\n      }\n    }\n\n    this._handleMargins();\n\n    if (isHorizontal) {\n      this.width = this._length = chart.width - this._margins.left - this._margins.right;\n      this.height = minSize.height;\n    } else {\n      this.width = minSize.width;\n      this.height = this._length = chart.height - this._margins.top - this._margins.bottom;\n    }\n  }\n\n  _calculatePadding(first, last, sin, cos) {\n    const {ticks: {align, padding}, position} = this.options;\n    const isRotated = this.labelRotation !== 0;\n    const labelsBelowTicks = position !== 'top' && this.axis === 'x';\n\n    if (this.isHorizontal()) {\n      const offsetLeft = this.getPixelForTick(0) - this.left;\n      const offsetRight = this.right - this.getPixelForTick(this.ticks.length - 1);\n      let paddingLeft = 0;\n      let paddingRight = 0;\n\n      // Ensure that our ticks are always inside the canvas. When rotated, ticks are right aligned\n      // which means that the right padding is dominated by the font height\n      if (isRotated) {\n        if (labelsBelowTicks) {\n          paddingLeft = cos * first.width;\n          paddingRight = sin * last.height;\n        } else {\n          paddingLeft = sin * first.height;\n          paddingRight = cos * last.width;\n        }\n      } else if (align === 'start') {\n        paddingRight = last.width;\n      } else if (align === 'end') {\n        paddingLeft = first.width;\n      } else if (align !== 'inner') {\n        paddingLeft = first.width / 2;\n        paddingRight = last.width / 2;\n      }\n\n      // Adjust padding taking into account changes in offsets\n      this.paddingLeft = Math.max((paddingLeft - offsetLeft + padding) * this.width / (this.width - offsetLeft), 0);\n      this.paddingRight = Math.max((paddingRight - offsetRight + padding) * this.width / (this.width - offsetRight), 0);\n    } else {\n      let paddingTop = last.height / 2;\n      let paddingBottom = first.height / 2;\n\n      if (align === 'start') {\n        paddingTop = 0;\n        paddingBottom = first.height;\n      } else if (align === 'end') {\n        paddingTop = last.height;\n        paddingBottom = 0;\n      }\n\n      this.paddingTop = paddingTop + padding;\n      this.paddingBottom = paddingBottom + padding;\n    }\n  }\n\n  /**\n\t * Handle margins and padding interactions\n\t * @private\n\t */\n  _handleMargins() {\n    if (this._margins) {\n      this._margins.left = Math.max(this.paddingLeft, this._margins.left);\n      this._margins.top = Math.max(this.paddingTop, this._margins.top);\n      this._margins.right = Math.max(this.paddingRight, this._margins.right);\n      this._margins.bottom = Math.max(this.paddingBottom, this._margins.bottom);\n    }\n  }\n\n  afterFit() {\n    call(this.options.afterFit, [this]);\n  }\n\n  // Shared Methods\n  /**\n\t * @return {boolean}\n\t */\n  isHorizontal() {\n    const {axis, position} = this.options;\n    return position === 'top' || position === 'bottom' || axis === 'x';\n  }\n  /**\n\t * @return {boolean}\n\t */\n  isFullSize() {\n    return this.options.fullSize;\n  }\n\n  /**\n\t * @param {Tick[]} ticks\n\t * @private\n\t */\n  _convertTicksToLabels(ticks) {\n    this.beforeTickToLabelConversion();\n\n    this.generateTickLabels(ticks);\n\n    // Ticks should be skipped when callback returns null or undef, so lets remove those.\n    let i, ilen;\n    for (i = 0, ilen = ticks.length; i < ilen; i++) {\n      if (isNullOrUndef(ticks[i].label)) {\n        ticks.splice(i, 1);\n        ilen--;\n        i--;\n      }\n    }\n\n    this.afterTickToLabelConversion();\n  }\n\n  /**\n\t * @return {{ first: object, last: object, widest: object, highest: object, widths: Array, heights: array }}\n\t * @private\n\t */\n  _getLabelSizes() {\n    let labelSizes = this._labelSizes;\n\n    if (!labelSizes) {\n      const sampleSize = this.options.ticks.sampleSize;\n      let ticks = this.ticks;\n      if (sampleSize < ticks.length) {\n        ticks = sample(ticks, sampleSize);\n      }\n\n      this._labelSizes = labelSizes = this._computeLabelSizes(ticks, ticks.length, this.options.ticks.maxTicksLimit);\n    }\n\n    return labelSizes;\n  }\n\n  /**\n\t * Returns {width, height, offset} objects for the first, last, widest, highest tick\n\t * labels where offset indicates the anchor point offset from the top in pixels.\n\t * @return {{ first: object, last: object, widest: object, highest: object, widths: Array, heights: array }}\n\t * @private\n\t */\n  _computeLabelSizes(ticks, length, maxTicksLimit) {\n    const {ctx, _longestTextCache: caches} = this;\n    const widths = [];\n    const heights = [];\n    const increment = Math.floor(length / getTicksLimit(length, maxTicksLimit));\n    let widestLabelSize = 0;\n    let highestLabelSize = 0;\n    let i, j, jlen, label, tickFont, fontString, cache, lineHeight, width, height, nestedLabel;\n\n    for (i = 0; i < length; i += increment) {\n      label = ticks[i].label;\n      tickFont = this._resolveTickFontOptions(i);\n      ctx.font = fontString = tickFont.string;\n      cache = caches[fontString] = caches[fontString] || {data: {}, gc: []};\n      lineHeight = tickFont.lineHeight;\n      width = height = 0;\n      // Undefined labels and arrays should not be measured\n      if (!isNullOrUndef(label) && !isArray(label)) {\n        width = _measureText(ctx, cache.data, cache.gc, width, label);\n        height = lineHeight;\n      } else if (isArray(label)) {\n        // if it is an array let's measure each element\n        for (j = 0, jlen = label.length; j < jlen; ++j) {\n          nestedLabel = /** @type {string} */ (label[j]);\n          // Undefined labels and arrays should not be measured\n          if (!isNullOrUndef(nestedLabel) && !isArray(nestedLabel)) {\n            width = _measureText(ctx, cache.data, cache.gc, width, nestedLabel);\n            height += lineHeight;\n          }\n        }\n      }\n      widths.push(width);\n      heights.push(height);\n      widestLabelSize = Math.max(width, widestLabelSize);\n      highestLabelSize = Math.max(height, highestLabelSize);\n    }\n    garbageCollect(caches, length);\n\n    const widest = widths.indexOf(widestLabelSize);\n    const highest = heights.indexOf(highestLabelSize);\n\n    const valueAt = (idx) => ({width: widths[idx] || 0, height: heights[idx] || 0});\n\n    return {\n      first: valueAt(0),\n      last: valueAt(length - 1),\n      widest: valueAt(widest),\n      highest: valueAt(highest),\n      widths,\n      heights,\n    };\n  }\n\n  /**\n\t * Used to get the label to display in the tooltip for the given value\n\t * @param {*} value\n\t * @return {string}\n\t */\n  getLabelForValue(value) {\n    return value;\n  }\n\n  /**\n\t * Returns the location of the given data point. Value can either be an index or a numerical value\n\t * The coordinate (0, 0) is at the upper-left corner of the canvas\n\t * @param {*} value\n\t * @param {number} [index]\n\t * @return {number}\n\t */\n  getPixelForValue(value, index) { // eslint-disable-line no-unused-vars\n    return NaN;\n  }\n\n  /**\n\t * Used to get the data value from a given pixel. This is the inverse of getPixelForValue\n\t * The coordinate (0, 0) is at the upper-left corner of the canvas\n\t * @param {number} pixel\n\t * @return {*}\n\t */\n  getValueForPixel(pixel) {} // eslint-disable-line no-unused-vars\n\n  /**\n\t * Returns the location of the tick at the given index\n\t * The coordinate (0, 0) is at the upper-left corner of the canvas\n\t * @param {number} index\n\t * @return {number}\n\t */\n  getPixelForTick(index) {\n    const ticks = this.ticks;\n    if (index < 0 || index > ticks.length - 1) {\n      return null;\n    }\n    return this.getPixelForValue(ticks[index].value);\n  }\n\n  /**\n\t * Utility for getting the pixel location of a percentage of scale\n\t * The coordinate (0, 0) is at the upper-left corner of the canvas\n\t * @param {number} decimal\n\t * @return {number}\n\t */\n  getPixelForDecimal(decimal) {\n    if (this._reversePixels) {\n      decimal = 1 - decimal;\n    }\n\n    const pixel = this._startPixel + decimal * this._length;\n    return _int16Range(this._alignToPixels ? _alignPixel(this.chart, pixel, 0) : pixel);\n  }\n\n  /**\n\t * @param {number} pixel\n\t * @return {number}\n\t */\n  getDecimalForPixel(pixel) {\n    const decimal = (pixel - this._startPixel) / this._length;\n    return this._reversePixels ? 1 - decimal : decimal;\n  }\n\n  /**\n\t * Returns the pixel for the minimum chart value\n\t * The coordinate (0, 0) is at the upper-left corner of the canvas\n\t * @return {number}\n\t */\n  getBasePixel() {\n    return this.getPixelForValue(this.getBaseValue());\n  }\n\n  /**\n\t * @return {number}\n\t */\n  getBaseValue() {\n    const {min, max} = this;\n\n    return min < 0 && max < 0 ? max :\n      min > 0 && max > 0 ? min :\n      0;\n  }\n\n  /**\n\t * @protected\n\t */\n  getContext(index) {\n    const ticks = this.ticks || [];\n\n    if (index >= 0 && index < ticks.length) {\n      const tick = ticks[index];\n      return tick.$context ||\n\t\t\t\t(tick.$context = createTickContext(this.getContext(), index, tick));\n    }\n    return this.$context ||\n\t\t\t(this.$context = createScaleContext(this.chart.getContext(), this));\n  }\n\n  /**\n\t * @return {number}\n\t * @private\n\t */\n  _tickSize() {\n    const optionTicks = this.options.ticks;\n\n    // Calculate space needed by label in axis direction.\n    const rot = toRadians(this.labelRotation);\n    const cos = Math.abs(Math.cos(rot));\n    const sin = Math.abs(Math.sin(rot));\n\n    const labelSizes = this._getLabelSizes();\n    const padding = optionTicks.autoSkipPadding || 0;\n    const w = labelSizes ? labelSizes.widest.width + padding : 0;\n    const h = labelSizes ? labelSizes.highest.height + padding : 0;\n\n    // Calculate space needed for 1 tick in axis direction.\n    return this.isHorizontal()\n      ? h * cos > w * sin ? w / cos : h / sin\n      : h * sin < w * cos ? h / cos : w / sin;\n  }\n\n  /**\n\t * @return {boolean}\n\t * @private\n\t */\n  _isVisible() {\n    const display = this.options.display;\n\n    if (display !== 'auto') {\n      return !!display;\n    }\n\n    return this.getMatchingVisibleMetas().length > 0;\n  }\n\n  /**\n\t * @private\n\t */\n  _computeGridLineItems(chartArea) {\n    const axis = this.axis;\n    const chart = this.chart;\n    const options = this.options;\n    const {grid, position, border} = options;\n    const offset = grid.offset;\n    const isHorizontal = this.isHorizontal();\n    const ticks = this.ticks;\n    const ticksLength = ticks.length + (offset ? 1 : 0);\n    const tl = getTickMarkLength(grid);\n    const items = [];\n\n    const borderOpts = border.setContext(this.getContext());\n    const axisWidth = borderOpts.display ? borderOpts.width : 0;\n    const axisHalfWidth = axisWidth / 2;\n    const alignBorderValue = function(pixel) {\n      return _alignPixel(chart, pixel, axisWidth);\n    };\n    let borderValue, i, lineValue, alignedLineValue;\n    let tx1, ty1, tx2, ty2, x1, y1, x2, y2;\n\n    if (position === 'top') {\n      borderValue = alignBorderValue(this.bottom);\n      ty1 = this.bottom - tl;\n      ty2 = borderValue - axisHalfWidth;\n      y1 = alignBorderValue(chartArea.top) + axisHalfWidth;\n      y2 = chartArea.bottom;\n    } else if (position === 'bottom') {\n      borderValue = alignBorderValue(this.top);\n      y1 = chartArea.top;\n      y2 = alignBorderValue(chartArea.bottom) - axisHalfWidth;\n      ty1 = borderValue + axisHalfWidth;\n      ty2 = this.top + tl;\n    } else if (position === 'left') {\n      borderValue = alignBorderValue(this.right);\n      tx1 = this.right - tl;\n      tx2 = borderValue - axisHalfWidth;\n      x1 = alignBorderValue(chartArea.left) + axisHalfWidth;\n      x2 = chartArea.right;\n    } else if (position === 'right') {\n      borderValue = alignBorderValue(this.left);\n      x1 = chartArea.left;\n      x2 = alignBorderValue(chartArea.right) - axisHalfWidth;\n      tx1 = borderValue + axisHalfWidth;\n      tx2 = this.left + tl;\n    } else if (axis === 'x') {\n      if (position === 'center') {\n        borderValue = alignBorderValue((chartArea.top + chartArea.bottom) / 2 + 0.5);\n      } else if (isObject(position)) {\n        const positionAxisID = Object.keys(position)[0];\n        const value = position[positionAxisID];\n        borderValue = alignBorderValue(this.chart.scales[positionAxisID].getPixelForValue(value));\n      }\n\n      y1 = chartArea.top;\n      y2 = chartArea.bottom;\n      ty1 = borderValue + axisHalfWidth;\n      ty2 = ty1 + tl;\n    } else if (axis === 'y') {\n      if (position === 'center') {\n        borderValue = alignBorderValue((chartArea.left + chartArea.right) / 2);\n      } else if (isObject(position)) {\n        const positionAxisID = Object.keys(position)[0];\n        const value = position[positionAxisID];\n        borderValue = alignBorderValue(this.chart.scales[positionAxisID].getPixelForValue(value));\n      }\n\n      tx1 = borderValue - axisHalfWidth;\n      tx2 = tx1 - tl;\n      x1 = chartArea.left;\n      x2 = chartArea.right;\n    }\n\n    const limit = valueOrDefault(options.ticks.maxTicksLimit, ticksLength);\n    const step = Math.max(1, Math.ceil(ticksLength / limit));\n    for (i = 0; i < ticksLength; i += step) {\n      const context = this.getContext(i);\n      const optsAtIndex = grid.setContext(context);\n      const optsAtIndexBorder = border.setContext(context);\n\n      const lineWidth = optsAtIndex.lineWidth;\n      const lineColor = optsAtIndex.color;\n      const borderDash = optsAtIndexBorder.dash || [];\n      const borderDashOffset = optsAtIndexBorder.dashOffset;\n\n      const tickWidth = optsAtIndex.tickWidth;\n      const tickColor = optsAtIndex.tickColor;\n      const tickBorderDash = optsAtIndex.tickBorderDash || [];\n      const tickBorderDashOffset = optsAtIndex.tickBorderDashOffset;\n\n      lineValue = getPixelForGridLine(this, i, offset);\n\n      // Skip if the pixel is out of the range\n      if (lineValue === undefined) {\n        continue;\n      }\n\n      alignedLineValue = _alignPixel(chart, lineValue, lineWidth);\n\n      if (isHorizontal) {\n        tx1 = tx2 = x1 = x2 = alignedLineValue;\n      } else {\n        ty1 = ty2 = y1 = y2 = alignedLineValue;\n      }\n\n      items.push({\n        tx1,\n        ty1,\n        tx2,\n        ty2,\n        x1,\n        y1,\n        x2,\n        y2,\n        width: lineWidth,\n        color: lineColor,\n        borderDash,\n        borderDashOffset,\n        tickWidth,\n        tickColor,\n        tickBorderDash,\n        tickBorderDashOffset,\n      });\n    }\n\n    this._ticksLength = ticksLength;\n    this._borderValue = borderValue;\n\n    return items;\n  }\n\n  /**\n\t * @private\n\t */\n  _computeLabelItems(chartArea) {\n    const axis = this.axis;\n    const options = this.options;\n    const {position, ticks: optionTicks} = options;\n    const isHorizontal = this.isHorizontal();\n    const ticks = this.ticks;\n    const {align, crossAlign, padding, mirror} = optionTicks;\n    const tl = getTickMarkLength(options.grid);\n    const tickAndPadding = tl + padding;\n    const hTickAndPadding = mirror ? -padding : tickAndPadding;\n    const rotation = -toRadians(this.labelRotation);\n    const items = [];\n    let i, ilen, tick, label, x, y, textAlign, pixel, font, lineHeight, lineCount, textOffset;\n    let textBaseline = 'middle';\n\n    if (position === 'top') {\n      y = this.bottom - hTickAndPadding;\n      textAlign = this._getXAxisLabelAlignment();\n    } else if (position === 'bottom') {\n      y = this.top + hTickAndPadding;\n      textAlign = this._getXAxisLabelAlignment();\n    } else if (position === 'left') {\n      const ret = this._getYAxisLabelAlignment(tl);\n      textAlign = ret.textAlign;\n      x = ret.x;\n    } else if (position === 'right') {\n      const ret = this._getYAxisLabelAlignment(tl);\n      textAlign = ret.textAlign;\n      x = ret.x;\n    } else if (axis === 'x') {\n      if (position === 'center') {\n        y = ((chartArea.top + chartArea.bottom) / 2) + tickAndPadding;\n      } else if (isObject(position)) {\n        const positionAxisID = Object.keys(position)[0];\n        const value = position[positionAxisID];\n        y = this.chart.scales[positionAxisID].getPixelForValue(value) + tickAndPadding;\n      }\n      textAlign = this._getXAxisLabelAlignment();\n    } else if (axis === 'y') {\n      if (position === 'center') {\n        x = ((chartArea.left + chartArea.right) / 2) - tickAndPadding;\n      } else if (isObject(position)) {\n        const positionAxisID = Object.keys(position)[0];\n        const value = position[positionAxisID];\n        x = this.chart.scales[positionAxisID].getPixelForValue(value);\n      }\n      textAlign = this._getYAxisLabelAlignment(tl).textAlign;\n    }\n\n    if (axis === 'y') {\n      if (align === 'start') {\n        textBaseline = 'top';\n      } else if (align === 'end') {\n        textBaseline = 'bottom';\n      }\n    }\n\n    const labelSizes = this._getLabelSizes();\n    for (i = 0, ilen = ticks.length; i < ilen; ++i) {\n      tick = ticks[i];\n      label = tick.label;\n\n      const optsAtIndex = optionTicks.setContext(this.getContext(i));\n      pixel = this.getPixelForTick(i) + optionTicks.labelOffset;\n      font = this._resolveTickFontOptions(i);\n      lineHeight = font.lineHeight;\n      lineCount = isArray(label) ? label.length : 1;\n      const halfCount = lineCount / 2;\n      const color = optsAtIndex.color;\n      const strokeColor = optsAtIndex.textStrokeColor;\n      const strokeWidth = optsAtIndex.textStrokeWidth;\n      let tickTextAlign = textAlign;\n\n      if (isHorizontal) {\n        x = pixel;\n\n        if (textAlign === 'inner') {\n          if (i === ilen - 1) {\n            tickTextAlign = !this.options.reverse ? 'right' : 'left';\n          } else if (i === 0) {\n            tickTextAlign = !this.options.reverse ? 'left' : 'right';\n          } else {\n            tickTextAlign = 'center';\n          }\n        }\n\n        if (position === 'top') {\n          if (crossAlign === 'near' || rotation !== 0) {\n            textOffset = -lineCount * lineHeight + lineHeight / 2;\n          } else if (crossAlign === 'center') {\n            textOffset = -labelSizes.highest.height / 2 - halfCount * lineHeight + lineHeight;\n          } else {\n            textOffset = -labelSizes.highest.height + lineHeight / 2;\n          }\n        } else {\n          // eslint-disable-next-line no-lonely-if\n          if (crossAlign === 'near' || rotation !== 0) {\n            textOffset = lineHeight / 2;\n          } else if (crossAlign === 'center') {\n            textOffset = labelSizes.highest.height / 2 - halfCount * lineHeight;\n          } else {\n            textOffset = labelSizes.highest.height - lineCount * lineHeight;\n          }\n        }\n        if (mirror) {\n          textOffset *= -1;\n        }\n        if (rotation !== 0 && !optsAtIndex.showLabelBackdrop) {\n          x += (lineHeight / 2) * Math.sin(rotation);\n        }\n      } else {\n        y = pixel;\n        textOffset = (1 - lineCount) * lineHeight / 2;\n      }\n\n      let backdrop;\n\n      if (optsAtIndex.showLabelBackdrop) {\n        const labelPadding = toPadding(optsAtIndex.backdropPadding);\n        const height = labelSizes.heights[i];\n        const width = labelSizes.widths[i];\n\n        let top = textOffset - labelPadding.top;\n        let left = 0 - labelPadding.left;\n\n        switch (textBaseline) {\n        case 'middle':\n          top -= height / 2;\n          break;\n        case 'bottom':\n          top -= height;\n          break;\n        default:\n          break;\n        }\n\n        switch (textAlign) {\n        case 'center':\n          left -= width / 2;\n          break;\n        case 'right':\n          left -= width;\n          break;\n        case 'inner':\n          if (i === ilen - 1) {\n            left -= width;\n          } else if (i > 0) {\n            left -= width / 2;\n          }\n          break;\n        default:\n          break;\n        }\n\n        backdrop = {\n          left,\n          top,\n          width: width + labelPadding.width,\n          height: height + labelPadding.height,\n\n          color: optsAtIndex.backdropColor,\n        };\n      }\n\n      items.push({\n        label,\n        font,\n        textOffset,\n        options: {\n          rotation,\n          color,\n          strokeColor,\n          strokeWidth,\n          textAlign: tickTextAlign,\n          textBaseline,\n          translation: [x, y],\n          backdrop,\n        }\n      });\n    }\n\n    return items;\n  }\n\n  _getXAxisLabelAlignment() {\n    const {position, ticks} = this.options;\n    const rotation = -toRadians(this.labelRotation);\n\n    if (rotation) {\n      return position === 'top' ? 'left' : 'right';\n    }\n\n    let align = 'center';\n\n    if (ticks.align === 'start') {\n      align = 'left';\n    } else if (ticks.align === 'end') {\n      align = 'right';\n    } else if (ticks.align === 'inner') {\n      align = 'inner';\n    }\n\n    return align;\n  }\n\n  _getYAxisLabelAlignment(tl) {\n    const {position, ticks: {crossAlign, mirror, padding}} = this.options;\n    const labelSizes = this._getLabelSizes();\n    const tickAndPadding = tl + padding;\n    const widest = labelSizes.widest.width;\n\n    let textAlign;\n    let x;\n\n    if (position === 'left') {\n      if (mirror) {\n        x = this.right + padding;\n\n        if (crossAlign === 'near') {\n          textAlign = 'left';\n        } else if (crossAlign === 'center') {\n          textAlign = 'center';\n          x += (widest / 2);\n        } else {\n          textAlign = 'right';\n          x += widest;\n        }\n      } else {\n        x = this.right - tickAndPadding;\n\n        if (crossAlign === 'near') {\n          textAlign = 'right';\n        } else if (crossAlign === 'center') {\n          textAlign = 'center';\n          x -= (widest / 2);\n        } else {\n          textAlign = 'left';\n          x = this.left;\n        }\n      }\n    } else if (position === 'right') {\n      if (mirror) {\n        x = this.left + padding;\n\n        if (crossAlign === 'near') {\n          textAlign = 'right';\n        } else if (crossAlign === 'center') {\n          textAlign = 'center';\n          x -= (widest / 2);\n        } else {\n          textAlign = 'left';\n          x -= widest;\n        }\n      } else {\n        x = this.left + tickAndPadding;\n\n        if (crossAlign === 'near') {\n          textAlign = 'left';\n        } else if (crossAlign === 'center') {\n          textAlign = 'center';\n          x += widest / 2;\n        } else {\n          textAlign = 'right';\n          x = this.right;\n        }\n      }\n    } else {\n      textAlign = 'right';\n    }\n\n    return {textAlign, x};\n  }\n\n  /**\n\t * @private\n\t */\n  _computeLabelArea() {\n    if (this.options.ticks.mirror) {\n      return;\n    }\n\n    const chart = this.chart;\n    const position = this.options.position;\n\n    if (position === 'left' || position === 'right') {\n      return {top: 0, left: this.left, bottom: chart.height, right: this.right};\n    } if (position === 'top' || position === 'bottom') {\n      return {top: this.top, left: 0, bottom: this.bottom, right: chart.width};\n    }\n  }\n\n  /**\n   * @protected\n   */\n  drawBackground() {\n    const {ctx, options: {backgroundColor}, left, top, width, height} = this;\n    if (backgroundColor) {\n      ctx.save();\n      ctx.fillStyle = backgroundColor;\n      ctx.fillRect(left, top, width, height);\n      ctx.restore();\n    }\n  }\n\n  getLineWidthForValue(value) {\n    const grid = this.options.grid;\n    if (!this._isVisible() || !grid.display) {\n      return 0;\n    }\n    const ticks = this.ticks;\n    const index = ticks.findIndex(t => t.value === value);\n    if (index >= 0) {\n      const opts = grid.setContext(this.getContext(index));\n      return opts.lineWidth;\n    }\n    return 0;\n  }\n\n  /**\n\t * @protected\n\t */\n  drawGrid(chartArea) {\n    const grid = this.options.grid;\n    const ctx = this.ctx;\n    const items = this._gridLineItems || (this._gridLineItems = this._computeGridLineItems(chartArea));\n    let i, ilen;\n\n    const drawLine = (p1, p2, style) => {\n      if (!style.width || !style.color) {\n        return;\n      }\n      ctx.save();\n      ctx.lineWidth = style.width;\n      ctx.strokeStyle = style.color;\n      ctx.setLineDash(style.borderDash || []);\n      ctx.lineDashOffset = style.borderDashOffset;\n\n      ctx.beginPath();\n      ctx.moveTo(p1.x, p1.y);\n      ctx.lineTo(p2.x, p2.y);\n      ctx.stroke();\n      ctx.restore();\n    };\n\n    if (grid.display) {\n      for (i = 0, ilen = items.length; i < ilen; ++i) {\n        const item = items[i];\n\n        if (grid.drawOnChartArea) {\n          drawLine(\n            {x: item.x1, y: item.y1},\n            {x: item.x2, y: item.y2},\n            item\n          );\n        }\n\n        if (grid.drawTicks) {\n          drawLine(\n            {x: item.tx1, y: item.ty1},\n            {x: item.tx2, y: item.ty2},\n            {\n              color: item.tickColor,\n              width: item.tickWidth,\n              borderDash: item.tickBorderDash,\n              borderDashOffset: item.tickBorderDashOffset\n            }\n          );\n        }\n      }\n    }\n  }\n\n  /**\n\t * @protected\n\t */\n  drawBorder() {\n    const {chart, ctx, options: {border, grid}} = this;\n    const borderOpts = border.setContext(this.getContext());\n    const axisWidth = border.display ? borderOpts.width : 0;\n    if (!axisWidth) {\n      return;\n    }\n    const lastLineWidth = grid.setContext(this.getContext(0)).lineWidth;\n    const borderValue = this._borderValue;\n    let x1, x2, y1, y2;\n\n    if (this.isHorizontal()) {\n      x1 = _alignPixel(chart, this.left, axisWidth) - axisWidth / 2;\n      x2 = _alignPixel(chart, this.right, lastLineWidth) + lastLineWidth / 2;\n      y1 = y2 = borderValue;\n    } else {\n      y1 = _alignPixel(chart, this.top, axisWidth) - axisWidth / 2;\n      y2 = _alignPixel(chart, this.bottom, lastLineWidth) + lastLineWidth / 2;\n      x1 = x2 = borderValue;\n    }\n    ctx.save();\n    ctx.lineWidth = borderOpts.width;\n    ctx.strokeStyle = borderOpts.color;\n\n    ctx.beginPath();\n    ctx.moveTo(x1, y1);\n    ctx.lineTo(x2, y2);\n    ctx.stroke();\n\n    ctx.restore();\n  }\n\n  /**\n\t * @protected\n\t */\n  drawLabels(chartArea) {\n    const optionTicks = this.options.ticks;\n\n    if (!optionTicks.display) {\n      return;\n    }\n\n    const ctx = this.ctx;\n\n    const area = this._computeLabelArea();\n    if (area) {\n      clipArea(ctx, area);\n    }\n\n    const items = this.getLabelItems(chartArea);\n    for (const item of items) {\n      const renderTextOptions = item.options;\n      const tickFont = item.font;\n      const label = item.label;\n      const y = item.textOffset;\n      renderText(ctx, label, 0, y, tickFont, renderTextOptions);\n    }\n\n    if (area) {\n      unclipArea(ctx);\n    }\n  }\n\n  /**\n\t * @protected\n\t */\n  drawTitle() {\n    const {ctx, options: {position, title, reverse}} = this;\n\n    if (!title.display) {\n      return;\n    }\n\n    const font = toFont(title.font);\n    const padding = toPadding(title.padding);\n    const align = title.align;\n    let offset = font.lineHeight / 2;\n\n    if (position === 'bottom' || position === 'center' || isObject(position)) {\n      offset += padding.bottom;\n      if (isArray(title.text)) {\n        offset += font.lineHeight * (title.text.length - 1);\n      }\n    } else {\n      offset += padding.top;\n    }\n\n    const {titleX, titleY, maxWidth, rotation} = titleArgs(this, offset, position, align);\n\n    renderText(ctx, title.text, 0, 0, font, {\n      color: title.color,\n      maxWidth,\n      rotation,\n      textAlign: titleAlign(align, position, reverse),\n      textBaseline: 'middle',\n      translation: [titleX, titleY],\n    });\n  }\n\n  draw(chartArea) {\n    if (!this._isVisible()) {\n      return;\n    }\n\n    this.drawBackground();\n    this.drawGrid(chartArea);\n    this.drawBorder();\n    this.drawTitle();\n    this.drawLabels(chartArea);\n  }\n\n  /**\n\t * @return {object[]}\n\t * @private\n\t */\n  _layers() {\n    const opts = this.options;\n    const tz = opts.ticks && opts.ticks.z || 0;\n    const gz = valueOrDefault(opts.grid && opts.grid.z, -1);\n    const bz = valueOrDefault(opts.border && opts.border.z, 0);\n\n    if (!this._isVisible() || this.draw !== Scale.prototype.draw) {\n      // backward compatibility: draw has been overridden by custom scale\n      return [{\n        z: tz,\n        draw: (chartArea) => {\n          this.draw(chartArea);\n        }\n      }];\n    }\n\n    return [{\n      z: gz,\n      draw: (chartArea) => {\n        this.drawBackground();\n        this.drawGrid(chartArea);\n        this.drawTitle();\n      }\n    }, {\n      z: bz,\n      draw: () => {\n        this.drawBorder();\n      }\n    }, {\n      z: tz,\n      draw: (chartArea) => {\n        this.drawLabels(chartArea);\n      }\n    }];\n  }\n\n  /**\n\t * Returns visible dataset metas that are attached to this scale\n\t * @param {string} [type] - if specified, also filter by dataset type\n\t * @return {object[]}\n\t */\n  getMatchingVisibleMetas(type) {\n    const metas = this.chart.getSortedVisibleDatasetMetas();\n    const axisID = this.axis + 'AxisID';\n    const result = [];\n    let i, ilen;\n\n    for (i = 0, ilen = metas.length; i < ilen; ++i) {\n      const meta = metas[i];\n      if (meta[axisID] === this.id && (!type || meta.type === type)) {\n        result.push(meta);\n      }\n    }\n    return result;\n  }\n\n  /**\n\t * @param {number} index\n\t * @return {object}\n\t * @protected\n \t */\n  _resolveTickFontOptions(index) {\n    const opts = this.options.ticks.setContext(this.getContext(index));\n    return toFont(opts.font);\n  }\n\n  /**\n   * @protected\n   */\n  _maxDigits() {\n    const fontSize = this._resolveTickFontOptions(0).lineHeight;\n    return (this.isHorizontal() ? this.width : this.height) / fontSize;\n  }\n}\n","import {merge} from '../helpers/index.js';\nimport defaults, {overrides} from './core.defaults.js';\n\n/**\n * @typedef {{id: string, defaults: any, overrides?: any, defaultRoutes: any}} IChartComponent\n */\n\nexport default class TypedRegistry {\n  constructor(type, scope, override) {\n    this.type = type;\n    this.scope = scope;\n    this.override = override;\n    this.items = Object.create(null);\n  }\n\n  isForType(type) {\n    return Object.prototype.isPrototypeOf.call(this.type.prototype, type.prototype);\n  }\n\n  /**\n\t * @param {IChartComponent} item\n\t * @returns {string} The scope where items defaults were registered to.\n\t */\n  register(item) {\n    const proto = Object.getPrototypeOf(item);\n    let parentScope;\n\n    if (isIChartComponent(proto)) {\n      // Make sure the parent is registered and note the scope where its defaults are.\n      parentScope = this.register(proto);\n    }\n\n    const items = this.items;\n    const id = item.id;\n    const scope = this.scope + '.' + id;\n\n    if (!id) {\n      throw new Error('class does not have id: ' + item);\n    }\n\n    if (id in items) {\n      // already registered\n      return scope;\n    }\n\n    items[id] = item;\n    registerDefaults(item, scope, parentScope);\n    if (this.override) {\n      defaults.override(item.id, item.overrides);\n    }\n\n    return scope;\n  }\n\n  /**\n\t * @param {string} id\n\t * @returns {object?}\n\t */\n  get(id) {\n    return this.items[id];\n  }\n\n  /**\n\t * @param {IChartComponent} item\n\t */\n  unregister(item) {\n    const items = this.items;\n    const id = item.id;\n    const scope = this.scope;\n\n    if (id in items) {\n      delete items[id];\n    }\n\n    if (scope && id in defaults[scope]) {\n      delete defaults[scope][id];\n      if (this.override) {\n        delete overrides[id];\n      }\n    }\n  }\n}\n\nfunction registerDefaults(item, scope, parentScope) {\n  // Inherit the parent's defaults and keep existing defaults\n  const itemDefaults = merge(Object.create(null), [\n    parentScope ? defaults.get(parentScope) : {},\n    defaults.get(scope),\n    item.defaults\n  ]);\n\n  defaults.set(scope, itemDefaults);\n\n  if (item.defaultRoutes) {\n    routeDefaults(scope, item.defaultRoutes);\n  }\n\n  if (item.descriptors) {\n    defaults.describe(scope, item.descriptors);\n  }\n}\n\nfunction routeDefaults(scope, routes) {\n  Object.keys(routes).forEach(property => {\n    const propertyParts = property.split('.');\n    const sourceName = propertyParts.pop();\n    const sourceScope = [scope].concat(propertyParts).join('.');\n    const parts = routes[property].split('.');\n    const targetName = parts.pop();\n    const targetScope = parts.join('.');\n    defaults.route(sourceScope, sourceName, targetScope, targetName);\n  });\n}\n\nfunction isIChartComponent(proto) {\n  return 'id' in proto && 'defaults' in proto;\n}\n","import DatasetController from './core.datasetController.js';\nimport Element from './core.element.js';\nimport Scale from './core.scale.js';\nimport TypedRegistry from './core.typedRegistry.js';\nimport {each, callback as call, _capitalize} from '../helpers/helpers.core.js';\n\n/**\n * Please use the module's default export which provides a singleton instance\n * Note: class is exported for typedoc\n */\nexport class Registry {\n  constructor() {\n    this.controllers = new TypedRegistry(DatasetController, 'datasets', true);\n    this.elements = new TypedRegistry(Element, 'elements');\n    this.plugins = new TypedRegistry(Object, 'plugins');\n    this.scales = new TypedRegistry(Scale, 'scales');\n    // Order is important, Scale has Element in prototype chain,\n    // so Scales must be before Elements. Plugins are a fallback, so not listed here.\n    this._typedRegistries = [this.controllers, this.scales, this.elements];\n  }\n\n  /**\n\t * @param  {...any} args\n\t */\n  add(...args) {\n    this._each('register', args);\n  }\n\n  remove(...args) {\n    this._each('unregister', args);\n  }\n\n  /**\n\t * @param  {...typeof DatasetController} args\n\t */\n  addControllers(...args) {\n    this._each('register', args, this.controllers);\n  }\n\n  /**\n\t * @param  {...typeof Element} args\n\t */\n  addElements(...args) {\n    this._each('register', args, this.elements);\n  }\n\n  /**\n\t * @param  {...any} args\n\t */\n  addPlugins(...args) {\n    this._each('register', args, this.plugins);\n  }\n\n  /**\n\t * @param  {...typeof Scale} args\n\t */\n  addScales(...args) {\n    this._each('register', args, this.scales);\n  }\n\n  /**\n\t * @param {string} id\n\t * @returns {typeof DatasetController}\n\t */\n  getController(id) {\n    return this._get(id, this.controllers, 'controller');\n  }\n\n  /**\n\t * @param {string} id\n\t * @returns {typeof Element}\n\t */\n  getElement(id) {\n    return this._get(id, this.elements, 'element');\n  }\n\n  /**\n\t * @param {string} id\n\t * @returns {object}\n\t */\n  getPlugin(id) {\n    return this._get(id, this.plugins, 'plugin');\n  }\n\n  /**\n\t * @param {string} id\n\t * @returns {typeof Scale}\n\t */\n  getScale(id) {\n    return this._get(id, this.scales, 'scale');\n  }\n\n  /**\n\t * @param  {...typeof DatasetController} args\n\t */\n  removeControllers(...args) {\n    this._each('unregister', args, this.controllers);\n  }\n\n  /**\n\t * @param  {...typeof Element} args\n\t */\n  removeElements(...args) {\n    this._each('unregister', args, this.elements);\n  }\n\n  /**\n\t * @param  {...any} args\n\t */\n  removePlugins(...args) {\n    this._each('unregister', args, this.plugins);\n  }\n\n  /**\n\t * @param  {...typeof Scale} args\n\t */\n  removeScales(...args) {\n    this._each('unregister', args, this.scales);\n  }\n\n  /**\n\t * @private\n\t */\n  _each(method, args, typedRegistry) {\n    [...args].forEach(arg => {\n      const reg = typedRegistry || this._getRegistryForType(arg);\n      if (typedRegistry || reg.isForType(arg) || (reg === this.plugins && arg.id)) {\n        this._exec(method, reg, arg);\n      } else {\n        // Handle loopable args\n        // Use case:\n        //  import * as plugins from './plugins.js';\n        //  Chart.register(plugins);\n        each(arg, item => {\n          // If there are mixed types in the loopable, make sure those are\n          // registered in correct registry\n          // Use case: (treemap exporting controller, elements etc)\n          //  import * as treemap from 'chartjs-chart-treemap.js';\n          //  Chart.register(treemap);\n\n          const itemReg = typedRegistry || this._getRegistryForType(item);\n          this._exec(method, itemReg, item);\n        });\n      }\n    });\n  }\n\n  /**\n\t * @private\n\t */\n  _exec(method, registry, component) {\n    const camelMethod = _capitalize(method);\n    call(component['before' + camelMethod], [], component); // beforeRegister / beforeUnregister\n    registry[method](component);\n    call(component['after' + camelMethod], [], component); // afterRegister / afterUnregister\n  }\n\n  /**\n\t * @private\n\t */\n  _getRegistryForType(type) {\n    for (let i = 0; i < this._typedRegistries.length; i++) {\n      const reg = this._typedRegistries[i];\n      if (reg.isForType(type)) {\n        return reg;\n      }\n    }\n    // plugins is the fallback registry\n    return this.plugins;\n  }\n\n  /**\n\t * @private\n\t */\n  _get(id, typedRegistry, type) {\n    const item = typedRegistry.get(id);\n    if (item === undefined) {\n      throw new Error('\"' + id + '\" is not a registered ' + type + '.');\n    }\n    return item;\n  }\n\n}\n\n// singleton instance\nexport default /* #__PURE__ */ new Registry();\n","import registry from './core.registry.js';\nimport {callback as callCallback, isNullOrUndef, valueOrDefault} from '../helpers/helpers.core.js';\n\n/**\n * @typedef { import('./core.controller.js').default } Chart\n * @typedef { import('../types/index.js').ChartEvent } ChartEvent\n * @typedef { import('../plugins/plugin.tooltip.js').default } Tooltip\n */\n\n/**\n * @callback filterCallback\n * @param {{plugin: object, options: object}} value\n * @param {number} [index]\n * @param {array} [array]\n * @param {object} [thisArg]\n * @return {boolean}\n */\n\n\nexport default class PluginService {\n  constructor() {\n    this._init = [];\n  }\n\n  /**\n\t * Calls enabled plugins for `chart` on the specified hook and with the given args.\n\t * This method immediately returns as soon as a plugin explicitly returns false. The\n\t * returned value can be used, for instance, to interrupt the current action.\n\t * @param {Chart} chart - The chart instance for which plugins should be called.\n\t * @param {string} hook - The name of the plugin method to call (e.g. 'beforeUpdate').\n\t * @param {object} [args] - Extra arguments to apply to the hook call.\n   * @param {filterCallback} [filter] - Filtering function for limiting which plugins are notified\n\t * @returns {boolean} false if any of the plugins return false, else returns true.\n\t */\n  notify(chart, hook, args, filter) {\n    if (hook === 'beforeInit') {\n      this._init = this._createDescriptors(chart, true);\n      this._notify(this._init, chart, 'install');\n    }\n\n    const descriptors = filter ? this._descriptors(chart).filter(filter) : this._descriptors(chart);\n    const result = this._notify(descriptors, chart, hook, args);\n\n    if (hook === 'afterDestroy') {\n      this._notify(descriptors, chart, 'stop');\n      this._notify(this._init, chart, 'uninstall');\n    }\n    return result;\n  }\n\n  /**\n\t * @private\n\t */\n  _notify(descriptors, chart, hook, args) {\n    args = args || {};\n    for (const descriptor of descriptors) {\n      const plugin = descriptor.plugin;\n      const method = plugin[hook];\n      const params = [chart, args, descriptor.options];\n      if (callCallback(method, params, plugin) === false && args.cancelable) {\n        return false;\n      }\n    }\n\n    return true;\n  }\n\n  invalidate() {\n    // When plugins are registered, there is the possibility of a double\n    // invalidate situation. In this case, we only want to invalidate once.\n    // If we invalidate multiple times, the `_oldCache` is lost and all of the\n    // plugins are restarted without being correctly stopped.\n    // See https://github.com/chartjs/Chart.js/issues/8147\n    if (!isNullOrUndef(this._cache)) {\n      this._oldCache = this._cache;\n      this._cache = undefined;\n    }\n  }\n\n  /**\n\t * @param {Chart} chart\n\t * @private\n\t */\n  _descriptors(chart) {\n    if (this._cache) {\n      return this._cache;\n    }\n\n    const descriptors = this._cache = this._createDescriptors(chart);\n\n    this._notifyStateChanges(chart);\n\n    return descriptors;\n  }\n\n  _createDescriptors(chart, all) {\n    const config = chart && chart.config;\n    const options = valueOrDefault(config.options && config.options.plugins, {});\n    const plugins = allPlugins(config);\n    // options === false => all plugins are disabled\n    return options === false && !all ? [] : createDescriptors(chart, plugins, options, all);\n  }\n\n  /**\n\t * @param {Chart} chart\n\t * @private\n\t */\n  _notifyStateChanges(chart) {\n    const previousDescriptors = this._oldCache || [];\n    const descriptors = this._cache;\n    const diff = (a, b) => a.filter(x => !b.some(y => x.plugin.id === y.plugin.id));\n    this._notify(diff(previousDescriptors, descriptors), chart, 'stop');\n    this._notify(diff(descriptors, previousDescriptors), chart, 'start');\n  }\n}\n\n/**\n * @param {import('./core.config.js').default} config\n */\nfunction allPlugins(config) {\n  const localIds = {};\n  const plugins = [];\n  const keys = Object.keys(registry.plugins.items);\n  for (let i = 0; i < keys.length; i++) {\n    plugins.push(registry.getPlugin(keys[i]));\n  }\n\n  const local = config.plugins || [];\n  for (let i = 0; i < local.length; i++) {\n    const plugin = local[i];\n\n    if (plugins.indexOf(plugin) === -1) {\n      plugins.push(plugin);\n      localIds[plugin.id] = true;\n    }\n  }\n\n  return {plugins, localIds};\n}\n\nfunction getOpts(options, all) {\n  if (!all && options === false) {\n    return null;\n  }\n  if (options === true) {\n    return {};\n  }\n  return options;\n}\n\nfunction createDescriptors(chart, {plugins, localIds}, options, all) {\n  const result = [];\n  const context = chart.getContext();\n\n  for (const plugin of plugins) {\n    const id = plugin.id;\n    const opts = getOpts(options[id], all);\n    if (opts === null) {\n      continue;\n    }\n    result.push({\n      plugin,\n      options: pluginOpts(chart.config, {plugin, local: localIds[id]}, opts, context)\n    });\n  }\n\n  return result;\n}\n\nfunction pluginOpts(config, {plugin, local}, opts, context) {\n  const keys = config.pluginScopeKeys(plugin);\n  const scopes = config.getOptionScopes(opts, keys);\n  if (local && plugin.defaults) {\n    // make sure plugin defaults are in scopes for local (not registered) plugins\n    scopes.push(plugin.defaults);\n  }\n  return config.createResolver(scopes, context, [''], {\n    // These are just defaults that plugins can override\n    scriptable: false,\n    indexable: false,\n    allKeys: true\n  });\n}\n","import defaults, {overrides, descriptors} from './core.defaults.js';\nimport {mergeIf, resolveObjectKey, isArray, isFunction, valueOrDefault, isObject} from '../helpers/helpers.core.js';\nimport {_attachContext, _createResolver, _descriptors} from '../helpers/helpers.config.js';\n\nexport function getIndexAxis(type, options) {\n  const datasetDefaults = defaults.datasets[type] || {};\n  const datasetOptions = (options.datasets || {})[type] || {};\n  return datasetOptions.indexAxis || options.indexAxis || datasetDefaults.indexAxis || 'x';\n}\n\nfunction getAxisFromDefaultScaleID(id, indexAxis) {\n  let axis = id;\n  if (id === '_index_') {\n    axis = indexAxis;\n  } else if (id === '_value_') {\n    axis = indexAxis === 'x' ? 'y' : 'x';\n  }\n  return axis;\n}\n\nfunction getDefaultScaleIDFromAxis(axis, indexAxis) {\n  return axis === indexAxis ? '_index_' : '_value_';\n}\n\nfunction idMatchesAxis(id) {\n  if (id === 'x' || id === 'y' || id === 'r') {\n    return id;\n  }\n}\n\nfunction axisFromPosition(position) {\n  if (position === 'top' || position === 'bottom') {\n    return 'x';\n  }\n  if (position === 'left' || position === 'right') {\n    return 'y';\n  }\n}\n\nexport function determineAxis(id, ...scaleOptions) {\n  if (idMatchesAxis(id)) {\n    return id;\n  }\n  for (const opts of scaleOptions) {\n    const axis = opts.axis\n      || axisFromPosition(opts.position)\n      || id.length > 1 && idMatchesAxis(id[0].toLowerCase());\n    if (axis) {\n      return axis;\n    }\n  }\n  throw new Error(`Cannot determine type of '${id}' axis. Please provide 'axis' or 'position' option.`);\n}\n\nfunction getAxisFromDataset(id, axis, dataset) {\n  if (dataset[axis + 'AxisID'] === id) {\n    return {axis};\n  }\n}\n\nfunction retrieveAxisFromDatasets(id, config) {\n  if (config.data && config.data.datasets) {\n    const boundDs = config.data.datasets.filter((d) => d.xAxisID === id || d.yAxisID === id);\n    if (boundDs.length) {\n      return getAxisFromDataset(id, 'x', boundDs[0]) || getAxisFromDataset(id, 'y', boundDs[0]);\n    }\n  }\n  return {};\n}\n\nfunction mergeScaleConfig(config, options) {\n  const chartDefaults = overrides[config.type] || {scales: {}};\n  const configScales = options.scales || {};\n  const chartIndexAxis = getIndexAxis(config.type, options);\n  const scales = Object.create(null);\n\n  // First figure out first scale id's per axis.\n  Object.keys(configScales).forEach(id => {\n    const scaleConf = configScales[id];\n    if (!isObject(scaleConf)) {\n      return console.error(`Invalid scale configuration for scale: ${id}`);\n    }\n    if (scaleConf._proxy) {\n      return console.warn(`Ignoring resolver passed as options for scale: ${id}`);\n    }\n    const axis = determineAxis(id, scaleConf, retrieveAxisFromDatasets(id, config), defaults.scales[scaleConf.type]);\n    const defaultId = getDefaultScaleIDFromAxis(axis, chartIndexAxis);\n    const defaultScaleOptions = chartDefaults.scales || {};\n    scales[id] = mergeIf(Object.create(null), [{axis}, scaleConf, defaultScaleOptions[axis], defaultScaleOptions[defaultId]]);\n  });\n\n  // Then merge dataset defaults to scale configs\n  config.data.datasets.forEach(dataset => {\n    const type = dataset.type || config.type;\n    const indexAxis = dataset.indexAxis || getIndexAxis(type, options);\n    const datasetDefaults = overrides[type] || {};\n    const defaultScaleOptions = datasetDefaults.scales || {};\n    Object.keys(defaultScaleOptions).forEach(defaultID => {\n      const axis = getAxisFromDefaultScaleID(defaultID, indexAxis);\n      const id = dataset[axis + 'AxisID'] || axis;\n      scales[id] = scales[id] || Object.create(null);\n      mergeIf(scales[id], [{axis}, configScales[id], defaultScaleOptions[defaultID]]);\n    });\n  });\n\n  // apply scale defaults, if not overridden by dataset defaults\n  Object.keys(scales).forEach(key => {\n    const scale = scales[key];\n    mergeIf(scale, [defaults.scales[scale.type], defaults.scale]);\n  });\n\n  return scales;\n}\n\nfunction initOptions(config) {\n  const options = config.options || (config.options = {});\n\n  options.plugins = valueOrDefault(options.plugins, {});\n  options.scales = mergeScaleConfig(config, options);\n}\n\nfunction initData(data) {\n  data = data || {};\n  data.datasets = data.datasets || [];\n  data.labels = data.labels || [];\n  return data;\n}\n\nfunction initConfig(config) {\n  config = config || {};\n  config.data = initData(config.data);\n\n  initOptions(config);\n\n  return config;\n}\n\nconst keyCache = new Map();\nconst keysCached = new Set();\n\nfunction cachedKeys(cacheKey, generate) {\n  let keys = keyCache.get(cacheKey);\n  if (!keys) {\n    keys = generate();\n    keyCache.set(cacheKey, keys);\n    keysCached.add(keys);\n  }\n  return keys;\n}\n\nconst addIfFound = (set, obj, key) => {\n  const opts = resolveObjectKey(obj, key);\n  if (opts !== undefined) {\n    set.add(opts);\n  }\n};\n\nexport default class Config {\n  constructor(config) {\n    this._config = initConfig(config);\n    this._scopeCache = new Map();\n    this._resolverCache = new Map();\n  }\n\n  get platform() {\n    return this._config.platform;\n  }\n\n  get type() {\n    return this._config.type;\n  }\n\n  set type(type) {\n    this._config.type = type;\n  }\n\n  get data() {\n    return this._config.data;\n  }\n\n  set data(data) {\n    this._config.data = initData(data);\n  }\n\n  get options() {\n    return this._config.options;\n  }\n\n  set options(options) {\n    this._config.options = options;\n  }\n\n  get plugins() {\n    return this._config.plugins;\n  }\n\n  update() {\n    const config = this._config;\n    this.clearCache();\n    initOptions(config);\n  }\n\n  clearCache() {\n    this._scopeCache.clear();\n    this._resolverCache.clear();\n  }\n\n  /**\n   * Returns the option scope keys for resolving dataset options.\n   * These keys do not include the dataset itself, because it is not under options.\n   * @param {string} datasetType\n   * @return {string[][]}\n   */\n  datasetScopeKeys(datasetType) {\n    return cachedKeys(datasetType,\n      () => [[\n        `datasets.${datasetType}`,\n        ''\n      ]]);\n  }\n\n  /**\n   * Returns the option scope keys for resolving dataset animation options.\n   * These keys do not include the dataset itself, because it is not under options.\n   * @param {string} datasetType\n   * @param {string} transition\n   * @return {string[][]}\n   */\n  datasetAnimationScopeKeys(datasetType, transition) {\n    return cachedKeys(`${datasetType}.transition.${transition}`,\n      () => [\n        [\n          `datasets.${datasetType}.transitions.${transition}`,\n          `transitions.${transition}`,\n        ],\n        // The following are used for looking up the `animations` and `animation` keys\n        [\n          `datasets.${datasetType}`,\n          ''\n        ]\n      ]);\n  }\n\n  /**\n   * Returns the options scope keys for resolving element options that belong\n   * to an dataset. These keys do not include the dataset itself, because it\n   * is not under options.\n   * @param {string} datasetType\n   * @param {string} elementType\n   * @return {string[][]}\n   */\n  datasetElementScopeKeys(datasetType, elementType) {\n    return cachedKeys(`${datasetType}-${elementType}`,\n      () => [[\n        `datasets.${datasetType}.elements.${elementType}`,\n        `datasets.${datasetType}`,\n        `elements.${elementType}`,\n        ''\n      ]]);\n  }\n\n  /**\n   * Returns the options scope keys for resolving plugin options.\n   * @param {{id: string, additionalOptionScopes?: string[]}} plugin\n   * @return {string[][]}\n   */\n  pluginScopeKeys(plugin) {\n    const id = plugin.id;\n    const type = this.type;\n    return cachedKeys(`${type}-plugin-${id}`,\n      () => [[\n        `plugins.${id}`,\n        ...plugin.additionalOptionScopes || [],\n      ]]);\n  }\n\n  /**\n   * @private\n   */\n  _cachedScopes(mainScope, resetCache) {\n    const _scopeCache = this._scopeCache;\n    let cache = _scopeCache.get(mainScope);\n    if (!cache || resetCache) {\n      cache = new Map();\n      _scopeCache.set(mainScope, cache);\n    }\n    return cache;\n  }\n\n  /**\n   * Resolves the objects from options and defaults for option value resolution.\n   * @param {object} mainScope - The main scope object for options\n   * @param {string[][]} keyLists - The arrays of keys in resolution order\n   * @param {boolean} [resetCache] - reset the cache for this mainScope\n   */\n  getOptionScopes(mainScope, keyLists, resetCache) {\n    const {options, type} = this;\n    const cache = this._cachedScopes(mainScope, resetCache);\n    const cached = cache.get(keyLists);\n    if (cached) {\n      return cached;\n    }\n\n    const scopes = new Set();\n\n    keyLists.forEach(keys => {\n      if (mainScope) {\n        scopes.add(mainScope);\n        keys.forEach(key => addIfFound(scopes, mainScope, key));\n      }\n      keys.forEach(key => addIfFound(scopes, options, key));\n      keys.forEach(key => addIfFound(scopes, overrides[type] || {}, key));\n      keys.forEach(key => addIfFound(scopes, defaults, key));\n      keys.forEach(key => addIfFound(scopes, descriptors, key));\n    });\n\n    const array = Array.from(scopes);\n    if (array.length === 0) {\n      array.push(Object.create(null));\n    }\n    if (keysCached.has(keyLists)) {\n      cache.set(keyLists, array);\n    }\n    return array;\n  }\n\n  /**\n   * Returns the option scopes for resolving chart options\n   * @return {object[]}\n   */\n  chartOptionScopes() {\n    const {options, type} = this;\n\n    return [\n      options,\n      overrides[type] || {},\n      defaults.datasets[type] || {}, // https://github.com/chartjs/Chart.js/issues/8531\n      {type},\n      defaults,\n      descriptors\n    ];\n  }\n\n  /**\n   * @param {object[]} scopes\n   * @param {string[]} names\n   * @param {function|object} context\n   * @param {string[]} [prefixes]\n   * @return {object}\n   */\n  resolveNamedOptions(scopes, names, context, prefixes = ['']) {\n    const result = {$shared: true};\n    const {resolver, subPrefixes} = getResolver(this._resolverCache, scopes, prefixes);\n    let options = resolver;\n    if (needContext(resolver, names)) {\n      result.$shared = false;\n      context = isFunction(context) ? context() : context;\n      // subResolver is passed to scriptable options. It should not resolve to hover options.\n      const subResolver = this.createResolver(scopes, context, subPrefixes);\n      options = _attachContext(resolver, context, subResolver);\n    }\n\n    for (const prop of names) {\n      result[prop] = options[prop];\n    }\n    return result;\n  }\n\n  /**\n   * @param {object[]} scopes\n   * @param {object} [context]\n   * @param {string[]} [prefixes]\n   * @param {{scriptable: boolean, indexable: boolean, allKeys?: boolean}} [descriptorDefaults]\n   */\n  createResolver(scopes, context, prefixes = [''], descriptorDefaults) {\n    const {resolver} = getResolver(this._resolverCache, scopes, prefixes);\n    return isObject(context)\n      ? _attachContext(resolver, context, undefined, descriptorDefaults)\n      : resolver;\n  }\n}\n\nfunction getResolver(resolverCache, scopes, prefixes) {\n  let cache = resolverCache.get(scopes);\n  if (!cache) {\n    cache = new Map();\n    resolverCache.set(scopes, cache);\n  }\n  const cacheKey = prefixes.join();\n  let cached = cache.get(cacheKey);\n  if (!cached) {\n    const resolver = _createResolver(scopes, prefixes);\n    cached = {\n      resolver,\n      subPrefixes: prefixes.filter(p => !p.toLowerCase().includes('hover'))\n    };\n    cache.set(cacheKey, cached);\n  }\n  return cached;\n}\n\nconst hasFunction = value => isObject(value)\n  && Object.getOwnPropertyNames(value).some((key) => isFunction(value[key]));\n\nfunction needContext(proxy, names) {\n  const {isScriptable, isIndexable} = _descriptors(proxy);\n\n  for (const prop of names) {\n    const scriptable = isScriptable(prop);\n    const indexable = isIndexable(prop);\n    const value = (indexable || scriptable) && proxy[prop];\n    if ((scriptable && (isFunction(value) || hasFunction(value)))\n      || (indexable && isArray(value))) {\n      return true;\n    }\n  }\n  return false;\n}\n","import animator from './core.animator.js';\nimport defaults, {overrides} from './core.defaults.js';\nimport Interaction from './core.interaction.js';\nimport layouts from './core.layouts.js';\nimport {_detectPlatform} from '../platform/index.js';\nimport PluginService from './core.plugins.js';\nimport registry from './core.registry.js';\nimport Config, {determineAxis, getIndexAxis} from './core.config.js';\nimport {retinaScale, _isDomSupported} from '../helpers/helpers.dom.js';\nimport {each, callback as callCallback, uid, valueOrDefault, _elementsEqual, isNullOrUndef, setsEqual, defined, isFunction, _isClickEvent} from '../helpers/helpers.core.js';\nimport {clearCanvas, clipArea, createContext, unclipArea, _isPointInArea} from '../helpers/index.js';\n// @ts-ignore\nimport {version} from '../../package.json';\nimport {debounce} from '../helpers/helpers.extras.js';\n\n/**\n * @typedef { import('../types/index.js').ChartEvent } ChartEvent\n * @typedef { import('../types/index.js').Point } Point\n */\n\nconst KNOWN_POSITIONS = ['top', 'bottom', 'left', 'right', 'chartArea'];\nfunction positionIsHorizontal(position, axis) {\n  return position === 'top' || position === 'bottom' || (KNOWN_POSITIONS.indexOf(position) === -1 && axis === 'x');\n}\n\nfunction compare2Level(l1, l2) {\n  return function(a, b) {\n    return a[l1] === b[l1]\n      ? a[l2] - b[l2]\n      : a[l1] - b[l1];\n  };\n}\n\nfunction onAnimationsComplete(context) {\n  const chart = context.chart;\n  const animationOptions = chart.options.animation;\n\n  chart.notifyPlugins('afterRender');\n  callCallback(animationOptions && animationOptions.onComplete, [context], chart);\n}\n\nfunction onAnimationProgress(context) {\n  const chart = context.chart;\n  const animationOptions = chart.options.animation;\n  callCallback(animationOptions && animationOptions.onProgress, [context], chart);\n}\n\n/**\n * Chart.js can take a string id of a canvas element, a 2d context, or a canvas element itself.\n * Attempt to unwrap the item passed into the chart constructor so that it is a canvas element (if possible).\n */\nfunction getCanvas(item) {\n  if (_isDomSupported() && typeof item === 'string') {\n    item = document.getElementById(item);\n  } else if (item && item.length) {\n    // Support for array based queries (such as jQuery)\n    item = item[0];\n  }\n\n  if (item && item.canvas) {\n    // Support for any object associated to a canvas (including a context2d)\n    item = item.canvas;\n  }\n  return item;\n}\n\nconst instances = {};\nconst getChart = (key) => {\n  const canvas = getCanvas(key);\n  return Object.values(instances).filter((c) => c.canvas === canvas).pop();\n};\n\nfunction moveNumericKeys(obj, start, move) {\n  const keys = Object.keys(obj);\n  for (const key of keys) {\n    const intKey = +key;\n    if (intKey >= start) {\n      const value = obj[key];\n      delete obj[key];\n      if (move > 0 || intKey > start) {\n        obj[intKey + move] = value;\n      }\n    }\n  }\n}\n\n/**\n * @param {ChartEvent} e\n * @param {ChartEvent|null} lastEvent\n * @param {boolean} inChartArea\n * @param {boolean} isClick\n * @returns {ChartEvent|null}\n */\nfunction determineLastEvent(e, lastEvent, inChartArea, isClick) {\n  if (!inChartArea || e.type === 'mouseout') {\n    return null;\n  }\n  if (isClick) {\n    return lastEvent;\n  }\n  return e;\n}\n\nfunction getSizeForArea(scale, chartArea, field) {\n  return scale.options.clip ? scale[field] : chartArea[field];\n}\n\nfunction getDatasetArea(meta, chartArea) {\n  const {xScale, yScale} = meta;\n  if (xScale && yScale) {\n    return {\n      left: getSizeForArea(xScale, chartArea, 'left'),\n      right: getSizeForArea(xScale, chartArea, 'right'),\n      top: getSizeForArea(yScale, chartArea, 'top'),\n      bottom: getSizeForArea(yScale, chartArea, 'bottom')\n    };\n  }\n  return chartArea;\n}\n\nclass Chart {\n\n  static defaults = defaults;\n  static instances = instances;\n  static overrides = overrides;\n  static registry = registry;\n  static version = version;\n  static getChart = getChart;\n\n  static register(...items) {\n    registry.add(...items);\n    invalidatePlugins();\n  }\n\n  static unregister(...items) {\n    registry.remove(...items);\n    invalidatePlugins();\n  }\n\n  // eslint-disable-next-line max-statements\n  constructor(item, userConfig) {\n    const config = this.config = new Config(userConfig);\n    const initialCanvas = getCanvas(item);\n    const existingChart = getChart(initialCanvas);\n    if (existingChart) {\n      throw new Error(\n        'Canvas is already in use. Chart with ID \\'' + existingChart.id + '\\'' +\n\t\t\t\t' must be destroyed before the canvas with ID \\'' + existingChart.canvas.id + '\\' can be reused.'\n      );\n    }\n\n    const options = config.createResolver(config.chartOptionScopes(), this.getContext());\n\n    this.platform = new (config.platform || _detectPlatform(initialCanvas))();\n    this.platform.updateConfig(config);\n\n    const context = this.platform.acquireContext(initialCanvas, options.aspectRatio);\n    const canvas = context && context.canvas;\n    const height = canvas && canvas.height;\n    const width = canvas && canvas.width;\n\n    this.id = uid();\n    this.ctx = context;\n    this.canvas = canvas;\n    this.width = width;\n    this.height = height;\n    this._options = options;\n    // Store the previously used aspect ratio to determine if a resize\n    // is needed during updates. Do this after _options is set since\n    // aspectRatio uses a getter\n    this._aspectRatio = this.aspectRatio;\n    this._layers = [];\n    this._metasets = [];\n    this._stacks = undefined;\n    this.boxes = [];\n    this.currentDevicePixelRatio = undefined;\n    this.chartArea = undefined;\n    this._active = [];\n    this._lastEvent = undefined;\n    this._listeners = {};\n    /** @type {?{attach?: function, detach?: function, resize?: function}} */\n    this._responsiveListeners = undefined;\n    this._sortedMetasets = [];\n    this.scales = {};\n    this._plugins = new PluginService();\n    this.$proxies = {};\n    this._hiddenIndices = {};\n    this.attached = false;\n    this._animationsDisabled = undefined;\n    this.$context = undefined;\n    this._doResize = debounce(mode => this.update(mode), options.resizeDelay || 0);\n    this._dataChanges = [];\n\n    // Add the chart instance to the global namespace\n    instances[this.id] = this;\n\n    if (!context || !canvas) {\n      // The given item is not a compatible context2d element, let's return before finalizing\n      // the chart initialization but after setting basic chart / controller properties that\n      // can help to figure out that the chart is not valid (e.g chart.canvas !== null);\n      // https://github.com/chartjs/Chart.js/issues/2807\n      console.error(\"Failed to create chart: can't acquire context from the given item\");\n      return;\n    }\n\n    animator.listen(this, 'complete', onAnimationsComplete);\n    animator.listen(this, 'progress', onAnimationProgress);\n\n    this._initialize();\n    if (this.attached) {\n      this.update();\n    }\n  }\n\n  get aspectRatio() {\n    const {options: {aspectRatio, maintainAspectRatio}, width, height, _aspectRatio} = this;\n    if (!isNullOrUndef(aspectRatio)) {\n      // If aspectRatio is defined in options, use that.\n      return aspectRatio;\n    }\n\n    if (maintainAspectRatio && _aspectRatio) {\n      // If maintainAspectRatio is truthly and we had previously determined _aspectRatio, use that\n      return _aspectRatio;\n    }\n\n    // Calculate\n    return height ? width / height : null;\n  }\n\n  get data() {\n    return this.config.data;\n  }\n\n  set data(data) {\n    this.config.data = data;\n  }\n\n  get options() {\n    return this._options;\n  }\n\n  set options(options) {\n    this.config.options = options;\n  }\n\n  get registry() {\n    return registry;\n  }\n\n  /**\n\t * @private\n\t */\n  _initialize() {\n    // Before init plugin notification\n    this.notifyPlugins('beforeInit');\n\n    if (this.options.responsive) {\n      this.resize();\n    } else {\n      retinaScale(this, this.options.devicePixelRatio);\n    }\n\n    this.bindEvents();\n\n    // After init plugin notification\n    this.notifyPlugins('afterInit');\n\n    return this;\n  }\n\n  clear() {\n    clearCanvas(this.canvas, this.ctx);\n    return this;\n  }\n\n  stop() {\n    animator.stop(this);\n    return this;\n  }\n\n  /**\n\t * Resize the chart to its container or to explicit dimensions.\n\t * @param {number} [width]\n\t * @param {number} [height]\n\t */\n  resize(width, height) {\n    if (!animator.running(this)) {\n      this._resize(width, height);\n    } else {\n      this._resizeBeforeDraw = {width, height};\n    }\n  }\n\n  _resize(width, height) {\n    const options = this.options;\n    const canvas = this.canvas;\n    const aspectRatio = options.maintainAspectRatio && this.aspectRatio;\n    const newSize = this.platform.getMaximumSize(canvas, width, height, aspectRatio);\n    const newRatio = options.devicePixelRatio || this.platform.getDevicePixelRatio();\n    const mode = this.width ? 'resize' : 'attach';\n\n    this.width = newSize.width;\n    this.height = newSize.height;\n    this._aspectRatio = this.aspectRatio;\n    if (!retinaScale(this, newRatio, true)) {\n      return;\n    }\n\n    this.notifyPlugins('resize', {size: newSize});\n\n    callCallback(options.onResize, [this, newSize], this);\n\n    if (this.attached) {\n      if (this._doResize(mode)) {\n        // The resize update is delayed, only draw without updating.\n        this.render();\n      }\n    }\n  }\n\n  ensureScalesHaveIDs() {\n    const options = this.options;\n    const scalesOptions = options.scales || {};\n\n    each(scalesOptions, (axisOptions, axisID) => {\n      axisOptions.id = axisID;\n    });\n  }\n\n  /**\n\t * Builds a map of scale ID to scale object for future lookup.\n\t */\n  buildOrUpdateScales() {\n    const options = this.options;\n    const scaleOpts = options.scales;\n    const scales = this.scales;\n    const updated = Object.keys(scales).reduce((obj, id) => {\n      obj[id] = false;\n      return obj;\n    }, {});\n    let items = [];\n\n    if (scaleOpts) {\n      items = items.concat(\n        Object.keys(scaleOpts).map((id) => {\n          const scaleOptions = scaleOpts[id];\n          const axis = determineAxis(id, scaleOptions);\n          const isRadial = axis === 'r';\n          const isHorizontal = axis === 'x';\n          return {\n            options: scaleOptions,\n            dposition: isRadial ? 'chartArea' : isHorizontal ? 'bottom' : 'left',\n            dtype: isRadial ? 'radialLinear' : isHorizontal ? 'category' : 'linear'\n          };\n        })\n      );\n    }\n\n    each(items, (item) => {\n      const scaleOptions = item.options;\n      const id = scaleOptions.id;\n      const axis = determineAxis(id, scaleOptions);\n      const scaleType = valueOrDefault(scaleOptions.type, item.dtype);\n\n      if (scaleOptions.position === undefined || positionIsHorizontal(scaleOptions.position, axis) !== positionIsHorizontal(item.dposition)) {\n        scaleOptions.position = item.dposition;\n      }\n\n      updated[id] = true;\n      let scale = null;\n      if (id in scales && scales[id].type === scaleType) {\n        scale = scales[id];\n      } else {\n        const scaleClass = registry.getScale(scaleType);\n        scale = new scaleClass({\n          id,\n          type: scaleType,\n          ctx: this.ctx,\n          chart: this\n        });\n        scales[scale.id] = scale;\n      }\n\n      scale.init(scaleOptions, options);\n    });\n    // clear up discarded scales\n    each(updated, (hasUpdated, id) => {\n      if (!hasUpdated) {\n        delete scales[id];\n      }\n    });\n\n    each(scales, (scale) => {\n      layouts.configure(this, scale, scale.options);\n      layouts.addBox(this, scale);\n    });\n  }\n\n  /**\n\t * @private\n\t */\n  _updateMetasets() {\n    const metasets = this._metasets;\n    const numData = this.data.datasets.length;\n    const numMeta = metasets.length;\n\n    metasets.sort((a, b) => a.index - b.index);\n    if (numMeta > numData) {\n      for (let i = numData; i < numMeta; ++i) {\n        this._destroyDatasetMeta(i);\n      }\n      metasets.splice(numData, numMeta - numData);\n    }\n    this._sortedMetasets = metasets.slice(0).sort(compare2Level('order', 'index'));\n  }\n\n  /**\n\t * @private\n\t */\n  _removeUnreferencedMetasets() {\n    const {_metasets: metasets, data: {datasets}} = this;\n    if (metasets.length > datasets.length) {\n      delete this._stacks;\n    }\n    metasets.forEach((meta, index) => {\n      if (datasets.filter(x => x === meta._dataset).length === 0) {\n        this._destroyDatasetMeta(index);\n      }\n    });\n  }\n\n  buildOrUpdateControllers() {\n    const newControllers = [];\n    const datasets = this.data.datasets;\n    let i, ilen;\n\n    this._removeUnreferencedMetasets();\n\n    for (i = 0, ilen = datasets.length; i < ilen; i++) {\n      const dataset = datasets[i];\n      let meta = this.getDatasetMeta(i);\n      const type = dataset.type || this.config.type;\n\n      if (meta.type && meta.type !== type) {\n        this._destroyDatasetMeta(i);\n        meta = this.getDatasetMeta(i);\n      }\n      meta.type = type;\n      meta.indexAxis = dataset.indexAxis || getIndexAxis(type, this.options);\n      meta.order = dataset.order || 0;\n      meta.index = i;\n      meta.label = '' + dataset.label;\n      meta.visible = this.isDatasetVisible(i);\n\n      if (meta.controller) {\n        meta.controller.updateIndex(i);\n        meta.controller.linkScales();\n      } else {\n        const ControllerClass = registry.getController(type);\n        const {datasetElementType, dataElementType} = defaults.datasets[type];\n        Object.assign(ControllerClass, {\n          dataElementType: registry.getElement(dataElementType),\n          datasetElementType: datasetElementType && registry.getElement(datasetElementType)\n        });\n        meta.controller = new ControllerClass(this, i);\n        newControllers.push(meta.controller);\n      }\n    }\n\n    this._updateMetasets();\n    return newControllers;\n  }\n\n  /**\n\t * Reset the elements of all datasets\n\t * @private\n\t */\n  _resetElements() {\n    each(this.data.datasets, (dataset, datasetIndex) => {\n      this.getDatasetMeta(datasetIndex).controller.reset();\n    }, this);\n  }\n\n  /**\n\t* Resets the chart back to its state before the initial animation\n\t*/\n  reset() {\n    this._resetElements();\n    this.notifyPlugins('reset');\n  }\n\n  update(mode) {\n    const config = this.config;\n\n    config.update();\n    const options = this._options = config.createResolver(config.chartOptionScopes(), this.getContext());\n    const animsDisabled = this._animationsDisabled = !options.animation;\n\n    this._updateScales();\n    this._checkEventBindings();\n    this._updateHiddenIndices();\n\n    // plugins options references might have change, let's invalidate the cache\n    // https://github.com/chartjs/Chart.js/issues/5111#issuecomment-355934167\n    this._plugins.invalidate();\n\n    if (this.notifyPlugins('beforeUpdate', {mode, cancelable: true}) === false) {\n      return;\n    }\n\n    // Make sure dataset controllers are updated and new controllers are reset\n    const newControllers = this.buildOrUpdateControllers();\n\n    this.notifyPlugins('beforeElementsUpdate');\n\n    // Make sure all dataset controllers have correct meta data counts\n    let minPadding = 0;\n    for (let i = 0, ilen = this.data.datasets.length; i < ilen; i++) {\n      const {controller} = this.getDatasetMeta(i);\n      const reset = !animsDisabled && newControllers.indexOf(controller) === -1;\n      // New controllers will be reset after the layout pass, so we only want to modify\n      // elements added to new datasets\n      controller.buildOrUpdateElements(reset);\n      minPadding = Math.max(+controller.getMaxOverflow(), minPadding);\n    }\n    minPadding = this._minPadding = options.layout.autoPadding ? minPadding : 0;\n    this._updateLayout(minPadding);\n\n    // Only reset the controllers if we have animations\n    if (!animsDisabled) {\n      // Can only reset the new controllers after the scales have been updated\n      // Reset is done to get the starting point for the initial animation\n      each(newControllers, (controller) => {\n        controller.reset();\n      });\n    }\n\n    this._updateDatasets(mode);\n\n    // Do this before render so that any plugins that need final scale updates can use it\n    this.notifyPlugins('afterUpdate', {mode});\n\n    this._layers.sort(compare2Level('z', '_idx'));\n\n    // Replay last event from before update, or set hover styles on active elements\n    const {_active, _lastEvent} = this;\n    if (_lastEvent) {\n      this._eventHandler(_lastEvent, true);\n    } else if (_active.length) {\n      this._updateHoverStyles(_active, _active, true);\n    }\n\n    this.render();\n  }\n\n  /**\n   * @private\n   */\n  _updateScales() {\n    each(this.scales, (scale) => {\n      layouts.removeBox(this, scale);\n    });\n\n    this.ensureScalesHaveIDs();\n    this.buildOrUpdateScales();\n  }\n\n  /**\n   * @private\n   */\n  _checkEventBindings() {\n    const options = this.options;\n    const existingEvents = new Set(Object.keys(this._listeners));\n    const newEvents = new Set(options.events);\n\n    if (!setsEqual(existingEvents, newEvents) || !!this._responsiveListeners !== options.responsive) {\n      // The configured events have changed. Rebind.\n      this.unbindEvents();\n      this.bindEvents();\n    }\n  }\n\n  /**\n   * @private\n   */\n  _updateHiddenIndices() {\n    const {_hiddenIndices} = this;\n    const changes = this._getUniformDataChanges() || [];\n    for (const {method, start, count} of changes) {\n      const move = method === '_removeElements' ? -count : count;\n      moveNumericKeys(_hiddenIndices, start, move);\n    }\n  }\n\n  /**\n   * @private\n   */\n  _getUniformDataChanges() {\n    const _dataChanges = this._dataChanges;\n    if (!_dataChanges || !_dataChanges.length) {\n      return;\n    }\n\n    this._dataChanges = [];\n    const datasetCount = this.data.datasets.length;\n    const makeSet = (idx) => new Set(\n      _dataChanges\n        .filter(c => c[0] === idx)\n        .map((c, i) => i + ',' + c.splice(1).join(','))\n    );\n\n    const changeSet = makeSet(0);\n    for (let i = 1; i < datasetCount; i++) {\n      if (!setsEqual(changeSet, makeSet(i))) {\n        return;\n      }\n    }\n    return Array.from(changeSet)\n      .map(c => c.split(','))\n      .map(a => ({method: a[1], start: +a[2], count: +a[3]}));\n  }\n\n  /**\n\t * Updates the chart layout unless a plugin returns `false` to the `beforeLayout`\n\t * hook, in which case, plugins will not be called on `afterLayout`.\n\t * @private\n\t */\n  _updateLayout(minPadding) {\n    if (this.notifyPlugins('beforeLayout', {cancelable: true}) === false) {\n      return;\n    }\n\n    layouts.update(this, this.width, this.height, minPadding);\n\n    const area = this.chartArea;\n    const noArea = area.width <= 0 || area.height <= 0;\n\n    this._layers = [];\n    each(this.boxes, (box) => {\n      if (noArea && box.position === 'chartArea') {\n        // Skip drawing and configuring chartArea boxes when chartArea is zero or negative\n        return;\n      }\n\n      // configure is called twice, once in core.scale.update and once here.\n      // Here the boxes are fully updated and at their final positions.\n      if (box.configure) {\n        box.configure();\n      }\n      this._layers.push(...box._layers());\n    }, this);\n\n    this._layers.forEach((item, index) => {\n      item._idx = index;\n    });\n\n    this.notifyPlugins('afterLayout');\n  }\n\n  /**\n\t * Updates all datasets unless a plugin returns `false` to the `beforeDatasetsUpdate`\n\t * hook, in which case, plugins will not be called on `afterDatasetsUpdate`.\n\t * @private\n\t */\n  _updateDatasets(mode) {\n    if (this.notifyPlugins('beforeDatasetsUpdate', {mode, cancelable: true}) === false) {\n      return;\n    }\n\n    for (let i = 0, ilen = this.data.datasets.length; i < ilen; ++i) {\n      this.getDatasetMeta(i).controller.configure();\n    }\n\n    for (let i = 0, ilen = this.data.datasets.length; i < ilen; ++i) {\n      this._updateDataset(i, isFunction(mode) ? mode({datasetIndex: i}) : mode);\n    }\n\n    this.notifyPlugins('afterDatasetsUpdate', {mode});\n  }\n\n  /**\n\t * Updates dataset at index unless a plugin returns `false` to the `beforeDatasetUpdate`\n\t * hook, in which case, plugins will not be called on `afterDatasetUpdate`.\n\t * @private\n\t */\n  _updateDataset(index, mode) {\n    const meta = this.getDatasetMeta(index);\n    const args = {meta, index, mode, cancelable: true};\n\n    if (this.notifyPlugins('beforeDatasetUpdate', args) === false) {\n      return;\n    }\n\n    meta.controller._update(mode);\n\n    args.cancelable = false;\n    this.notifyPlugins('afterDatasetUpdate', args);\n  }\n\n  render() {\n    if (this.notifyPlugins('beforeRender', {cancelable: true}) === false) {\n      return;\n    }\n\n    if (animator.has(this)) {\n      if (this.attached && !animator.running(this)) {\n        animator.start(this);\n      }\n    } else {\n      this.draw();\n      onAnimationsComplete({chart: this});\n    }\n  }\n\n  draw() {\n    let i;\n    if (this._resizeBeforeDraw) {\n      const {width, height} = this._resizeBeforeDraw;\n      // Unset pending resize request now to avoid possible recursion within _resize\n      this._resizeBeforeDraw = null;\n      this._resize(width, height);\n    }\n    this.clear();\n\n    if (this.width <= 0 || this.height <= 0) {\n      return;\n    }\n\n    if (this.notifyPlugins('beforeDraw', {cancelable: true}) === false) {\n      return;\n    }\n\n    // Because of plugin hooks (before/afterDatasetsDraw), datasets can't\n    // currently be part of layers. Instead, we draw\n    // layers <= 0 before(default, backward compat), and the rest after\n    const layers = this._layers;\n    for (i = 0; i < layers.length && layers[i].z <= 0; ++i) {\n      layers[i].draw(this.chartArea);\n    }\n\n    this._drawDatasets();\n\n    // Rest of layers\n    for (; i < layers.length; ++i) {\n      layers[i].draw(this.chartArea);\n    }\n\n    this.notifyPlugins('afterDraw');\n  }\n\n  /**\n\t * @private\n\t */\n  _getSortedDatasetMetas(filterVisible) {\n    const metasets = this._sortedMetasets;\n    const result = [];\n    let i, ilen;\n\n    for (i = 0, ilen = metasets.length; i < ilen; ++i) {\n      const meta = metasets[i];\n      if (!filterVisible || meta.visible) {\n        result.push(meta);\n      }\n    }\n\n    return result;\n  }\n\n  /**\n\t * Gets the visible dataset metas in drawing order\n\t * @return {object[]}\n\t */\n  getSortedVisibleDatasetMetas() {\n    return this._getSortedDatasetMetas(true);\n  }\n\n  /**\n\t * Draws all datasets unless a plugin returns `false` to the `beforeDatasetsDraw`\n\t * hook, in which case, plugins will not be called on `afterDatasetsDraw`.\n\t * @private\n\t */\n  _drawDatasets() {\n    if (this.notifyPlugins('beforeDatasetsDraw', {cancelable: true}) === false) {\n      return;\n    }\n\n    const metasets = this.getSortedVisibleDatasetMetas();\n    for (let i = metasets.length - 1; i >= 0; --i) {\n      this._drawDataset(metasets[i]);\n    }\n\n    this.notifyPlugins('afterDatasetsDraw');\n  }\n\n  /**\n\t * Draws dataset at index unless a plugin returns `false` to the `beforeDatasetDraw`\n\t * hook, in which case, plugins will not be called on `afterDatasetDraw`.\n\t * @private\n\t */\n  _drawDataset(meta) {\n    const ctx = this.ctx;\n    const clip = meta._clip;\n    const useClip = !clip.disabled;\n    const area = getDatasetArea(meta, this.chartArea);\n    const args = {\n      meta,\n      index: meta.index,\n      cancelable: true\n    };\n\n    if (this.notifyPlugins('beforeDatasetDraw', args) === false) {\n      return;\n    }\n\n    if (useClip) {\n      clipArea(ctx, {\n        left: clip.left === false ? 0 : area.left - clip.left,\n        right: clip.right === false ? this.width : area.right + clip.right,\n        top: clip.top === false ? 0 : area.top - clip.top,\n        bottom: clip.bottom === false ? this.height : area.bottom + clip.bottom\n      });\n    }\n\n    meta.controller.draw();\n\n    if (useClip) {\n      unclipArea(ctx);\n    }\n\n    args.cancelable = false;\n    this.notifyPlugins('afterDatasetDraw', args);\n  }\n\n  /**\n   * Checks whether the given point is in the chart area.\n   * @param {Point} point - in relative coordinates (see, e.g., getRelativePosition)\n   * @returns {boolean}\n   */\n  isPointInArea(point) {\n    return _isPointInArea(point, this.chartArea, this._minPadding);\n  }\n\n  getElementsAtEventForMode(e, mode, options, useFinalPosition) {\n    const method = Interaction.modes[mode];\n    if (typeof method === 'function') {\n      return method(this, e, options, useFinalPosition);\n    }\n\n    return [];\n  }\n\n  getDatasetMeta(datasetIndex) {\n    const dataset = this.data.datasets[datasetIndex];\n    const metasets = this._metasets;\n    let meta = metasets.filter(x => x && x._dataset === dataset).pop();\n\n    if (!meta) {\n      meta = {\n        type: null,\n        data: [],\n        dataset: null,\n        controller: null,\n        hidden: null,\t\t\t// See isDatasetVisible() comment\n        xAxisID: null,\n        yAxisID: null,\n        order: dataset && dataset.order || 0,\n        index: datasetIndex,\n        _dataset: dataset,\n        _parsed: [],\n        _sorted: false\n      };\n      metasets.push(meta);\n    }\n\n    return meta;\n  }\n\n  getContext() {\n    return this.$context || (this.$context = createContext(null, {chart: this, type: 'chart'}));\n  }\n\n  getVisibleDatasetCount() {\n    return this.getSortedVisibleDatasetMetas().length;\n  }\n\n  isDatasetVisible(datasetIndex) {\n    const dataset = this.data.datasets[datasetIndex];\n    if (!dataset) {\n      return false;\n    }\n\n    const meta = this.getDatasetMeta(datasetIndex);\n\n    // meta.hidden is a per chart dataset hidden flag override with 3 states: if true or false,\n    // the dataset.hidden value is ignored, else if null, the dataset hidden state is returned.\n    return typeof meta.hidden === 'boolean' ? !meta.hidden : !dataset.hidden;\n  }\n\n  setDatasetVisibility(datasetIndex, visible) {\n    const meta = this.getDatasetMeta(datasetIndex);\n    meta.hidden = !visible;\n  }\n\n  toggleDataVisibility(index) {\n    this._hiddenIndices[index] = !this._hiddenIndices[index];\n  }\n\n  getDataVisibility(index) {\n    return !this._hiddenIndices[index];\n  }\n\n  /**\n\t * @private\n\t */\n  _updateVisibility(datasetIndex, dataIndex, visible) {\n    const mode = visible ? 'show' : 'hide';\n    const meta = this.getDatasetMeta(datasetIndex);\n    const anims = meta.controller._resolveAnimations(undefined, mode);\n\n    if (defined(dataIndex)) {\n      meta.data[dataIndex].hidden = !visible;\n      this.update();\n    } else {\n      this.setDatasetVisibility(datasetIndex, visible);\n      // Animate visible state, so hide animation can be seen. This could be handled better if update / updateDataset returned a Promise.\n      anims.update(meta, {visible});\n      this.update((ctx) => ctx.datasetIndex === datasetIndex ? mode : undefined);\n    }\n  }\n\n  hide(datasetIndex, dataIndex) {\n    this._updateVisibility(datasetIndex, dataIndex, false);\n  }\n\n  show(datasetIndex, dataIndex) {\n    this._updateVisibility(datasetIndex, dataIndex, true);\n  }\n\n  /**\n\t * @private\n\t */\n  _destroyDatasetMeta(datasetIndex) {\n    const meta = this._metasets[datasetIndex];\n    if (meta && meta.controller) {\n      meta.controller._destroy();\n    }\n    delete this._metasets[datasetIndex];\n  }\n\n  _stop() {\n    let i, ilen;\n    this.stop();\n    animator.remove(this);\n\n    for (i = 0, ilen = this.data.datasets.length; i < ilen; ++i) {\n      this._destroyDatasetMeta(i);\n    }\n  }\n\n  destroy() {\n    this.notifyPlugins('beforeDestroy');\n    const {canvas, ctx} = this;\n\n    this._stop();\n    this.config.clearCache();\n\n    if (canvas) {\n      this.unbindEvents();\n      clearCanvas(canvas, ctx);\n      this.platform.releaseContext(ctx);\n      this.canvas = null;\n      this.ctx = null;\n    }\n\n    delete instances[this.id];\n\n    this.notifyPlugins('afterDestroy');\n  }\n\n  toBase64Image(...args) {\n    return this.canvas.toDataURL(...args);\n  }\n\n  /**\n\t * @private\n\t */\n  bindEvents() {\n    this.bindUserEvents();\n    if (this.options.responsive) {\n      this.bindResponsiveEvents();\n    } else {\n      this.attached = true;\n    }\n  }\n\n  /**\n   * @private\n   */\n  bindUserEvents() {\n    const listeners = this._listeners;\n    const platform = this.platform;\n\n    const _add = (type, listener) => {\n      platform.addEventListener(this, type, listener);\n      listeners[type] = listener;\n    };\n\n    const listener = (e, x, y) => {\n      e.offsetX = x;\n      e.offsetY = y;\n      this._eventHandler(e);\n    };\n\n    each(this.options.events, (type) => _add(type, listener));\n  }\n\n  /**\n   * @private\n   */\n  bindResponsiveEvents() {\n    if (!this._responsiveListeners) {\n      this._responsiveListeners = {};\n    }\n    const listeners = this._responsiveListeners;\n    const platform = this.platform;\n\n    const _add = (type, listener) => {\n      platform.addEventListener(this, type, listener);\n      listeners[type] = listener;\n    };\n    const _remove = (type, listener) => {\n      if (listeners[type]) {\n        platform.removeEventListener(this, type, listener);\n        delete listeners[type];\n      }\n    };\n\n    const listener = (width, height) => {\n      if (this.canvas) {\n        this.resize(width, height);\n      }\n    };\n\n    let detached; // eslint-disable-line prefer-const\n    const attached = () => {\n      _remove('attach', attached);\n\n      this.attached = true;\n      this.resize();\n\n      _add('resize', listener);\n      _add('detach', detached);\n    };\n\n    detached = () => {\n      this.attached = false;\n\n      _remove('resize', listener);\n\n      // Stop animating and remove metasets, so when re-attached, the animations start from beginning.\n      this._stop();\n      this._resize(0, 0);\n\n      _add('attach', attached);\n    };\n\n    if (platform.isAttached(this.canvas)) {\n      attached();\n    } else {\n      detached();\n    }\n  }\n\n  /**\n\t * @private\n\t */\n  unbindEvents() {\n    each(this._listeners, (listener, type) => {\n      this.platform.removeEventListener(this, type, listener);\n    });\n    this._listeners = {};\n\n    each(this._responsiveListeners, (listener, type) => {\n      this.platform.removeEventListener(this, type, listener);\n    });\n    this._responsiveListeners = undefined;\n  }\n\n  updateHoverStyle(items, mode, enabled) {\n    const prefix = enabled ? 'set' : 'remove';\n    let meta, item, i, ilen;\n\n    if (mode === 'dataset') {\n      meta = this.getDatasetMeta(items[0].datasetIndex);\n      meta.controller['_' + prefix + 'DatasetHoverStyle']();\n    }\n\n    for (i = 0, ilen = items.length; i < ilen; ++i) {\n      item = items[i];\n      const controller = item && this.getDatasetMeta(item.datasetIndex).controller;\n      if (controller) {\n        controller[prefix + 'HoverStyle'](item.element, item.datasetIndex, item.index);\n      }\n    }\n  }\n\n  /**\n\t * Get active (hovered) elements\n\t * @returns array\n\t */\n  getActiveElements() {\n    return this._active || [];\n  }\n\n  /**\n\t * Set active (hovered) elements\n\t * @param {array} activeElements New active data points\n\t */\n  setActiveElements(activeElements) {\n    const lastActive = this._active || [];\n    const active = activeElements.map(({datasetIndex, index}) => {\n      const meta = this.getDatasetMeta(datasetIndex);\n      if (!meta) {\n        throw new Error('No dataset found at index ' + datasetIndex);\n      }\n\n      return {\n        datasetIndex,\n        element: meta.data[index],\n        index,\n      };\n    });\n    const changed = !_elementsEqual(active, lastActive);\n\n    if (changed) {\n      this._active = active;\n      // Make sure we don't use the previous mouse event to override the active elements in update.\n      this._lastEvent = null;\n      this._updateHoverStyles(active, lastActive);\n    }\n  }\n\n  /**\n\t * Calls enabled plugins on the specified hook and with the given args.\n\t * This method immediately returns as soon as a plugin explicitly returns false. The\n\t * returned value can be used, for instance, to interrupt the current action.\n\t * @param {string} hook - The name of the plugin method to call (e.g. 'beforeUpdate').\n\t * @param {Object} [args] - Extra arguments to apply to the hook call.\n   * @param {import('./core.plugins.js').filterCallback} [filter] - Filtering function for limiting which plugins are notified\n\t * @returns {boolean} false if any of the plugins return false, else returns true.\n\t */\n  notifyPlugins(hook, args, filter) {\n    return this._plugins.notify(this, hook, args, filter);\n  }\n\n  /**\n   * Check if a plugin with the specific ID is registered and enabled\n   * @param {string} pluginId - The ID of the plugin of which to check if it is enabled\n   * @returns {boolean}\n   */\n  isPluginEnabled(pluginId) {\n    return this._plugins._cache.filter(p => p.plugin.id === pluginId).length === 1;\n  }\n\n  /**\n\t * @private\n\t */\n  _updateHoverStyles(active, lastActive, replay) {\n    const hoverOptions = this.options.hover;\n    const diff = (a, b) => a.filter(x => !b.some(y => x.datasetIndex === y.datasetIndex && x.index === y.index));\n    const deactivated = diff(lastActive, active);\n    const activated = replay ? active : diff(active, lastActive);\n\n    if (deactivated.length) {\n      this.updateHoverStyle(deactivated, hoverOptions.mode, false);\n    }\n\n    if (activated.length && hoverOptions.mode) {\n      this.updateHoverStyle(activated, hoverOptions.mode, true);\n    }\n  }\n\n  /**\n\t * @private\n\t */\n  _eventHandler(e, replay) {\n    const args = {\n      event: e,\n      replay,\n      cancelable: true,\n      inChartArea: this.isPointInArea(e)\n    };\n    const eventFilter = (plugin) => (plugin.options.events || this.options.events).includes(e.native.type);\n\n    if (this.notifyPlugins('beforeEvent', args, eventFilter) === false) {\n      return;\n    }\n\n    const changed = this._handleEvent(e, replay, args.inChartArea);\n\n    args.cancelable = false;\n    this.notifyPlugins('afterEvent', args, eventFilter);\n\n    if (changed || args.changed) {\n      this.render();\n    }\n\n    return this;\n  }\n\n  /**\n\t * Handle an event\n\t * @param {ChartEvent} e the event to handle\n\t * @param {boolean} [replay] - true if the event was replayed by `update`\n   * @param {boolean} [inChartArea] - true if the event is inside chartArea\n\t * @return {boolean} true if the chart needs to re-render\n\t * @private\n\t */\n  _handleEvent(e, replay, inChartArea) {\n    const {_active: lastActive = [], options} = this;\n\n    // If the event is replayed from `update`, we should evaluate with the final positions.\n    //\n    // The `replay`:\n    // It's the last event (excluding click) that has occurred before `update`.\n    // So mouse has not moved. It's also over the chart, because there is a `replay`.\n    //\n    // The why:\n    // If animations are active, the elements haven't moved yet compared to state before update.\n    // But if they will, we are activating the elements that would be active, if this check\n    // was done after the animations have completed. => \"final positions\".\n    // If there is no animations, the \"final\" and \"current\" positions are equal.\n    // This is done so we do not have to evaluate the active elements each animation frame\n    // - it would be expensive.\n    const useFinalPosition = replay;\n    const active = this._getActiveElements(e, lastActive, inChartArea, useFinalPosition);\n    const isClick = _isClickEvent(e);\n    const lastEvent = determineLastEvent(e, this._lastEvent, inChartArea, isClick);\n\n    if (inChartArea) {\n      // Set _lastEvent to null while we are processing the event handlers.\n      // This prevents recursion if the handler calls chart.update()\n      this._lastEvent = null;\n\n      // Invoke onHover hook\n      callCallback(options.onHover, [e, active, this], this);\n\n      if (isClick) {\n        callCallback(options.onClick, [e, active, this], this);\n      }\n    }\n\n    const changed = !_elementsEqual(active, lastActive);\n    if (changed || replay) {\n      this._active = active;\n      this._updateHoverStyles(active, lastActive, replay);\n    }\n\n    this._lastEvent = lastEvent;\n\n    return changed;\n  }\n\n  /**\n   * @param {ChartEvent} e - The event\n   * @param {import('../types/index.js').ActiveElement[]} lastActive - Previously active elements\n   * @param {boolean} inChartArea - Is the event inside chartArea\n   * @param {boolean} useFinalPosition - Should the evaluation be done with current or final (after animation) element positions\n   * @returns {import('../types/index.js').ActiveElement[]} - The active elements\n   * @pravate\n   */\n  _getActiveElements(e, lastActive, inChartArea, useFinalPosition) {\n    if (e.type === 'mouseout') {\n      return [];\n    }\n\n    if (!inChartArea) {\n      // Let user control the active elements outside chartArea. Eg. using Legend.\n      return lastActive;\n    }\n\n    const hoverOptions = this.options.hover;\n    return this.getElementsAtEventForMode(e, hoverOptions.mode, hoverOptions, useFinalPosition);\n  }\n}\n\n// @ts-ignore\nfunction invalidatePlugins() {\n  return each(Chart.instances, (chart) => chart._plugins.invalidate());\n}\n\nexport default Chart;\n","import Element from '../core/core.element.js';\nimport {_angleBetween, getAngleFromPoint, TAU, HALF_PI, valueOrDefault} from '../helpers/index.js';\nimport {PI, _isBetween, _limitValue} from '../helpers/helpers.math.js';\nimport {_readValueToProps} from '../helpers/helpers.options.js';\nimport type {ArcOptions, Point} from '../types/index.js';\n\n\nfunction clipArc(ctx: CanvasRenderingContext2D, element: ArcElement, endAngle: number) {\n  const {startAngle, pixelMargin, x, y, outerRadius, innerRadius} = element;\n  let angleMargin = pixelMargin / outerRadius;\n\n  // Draw an inner border by clipping the arc and drawing a double-width border\n  // Enlarge the clipping arc by 0.33 pixels to eliminate glitches between borders\n  ctx.beginPath();\n  ctx.arc(x, y, outerRadius, startAngle - angleMargin, endAngle + angleMargin);\n  if (innerRadius > pixelMargin) {\n    angleMargin = pixelMargin / innerRadius;\n    ctx.arc(x, y, innerRadius, endAngle + angleMargin, startAngle - angleMargin, true);\n  } else {\n    ctx.arc(x, y, pixelMargin, endAngle + HALF_PI, startAngle - HALF_PI);\n  }\n  ctx.closePath();\n  ctx.clip();\n}\n\nfunction toRadiusCorners(value) {\n  return _readValueToProps(value, ['outerStart', 'outerEnd', 'innerStart', 'innerEnd']);\n}\n\n/**\n * Parse border radius from the provided options\n */\nfunction parseBorderRadius(arc: ArcElement, innerRadius: number, outerRadius: number, angleDelta: number) {\n  const o = toRadiusCorners(arc.options.borderRadius);\n  const halfThickness = (outerRadius - innerRadius) / 2;\n  const innerLimit = Math.min(halfThickness, angleDelta * innerRadius / 2);\n\n  // Outer limits are complicated. We want to compute the available angular distance at\n  // a radius of outerRadius - borderRadius because for small angular distances, this term limits.\n  // We compute at r = outerRadius - borderRadius because this circle defines the center of the border corners.\n  //\n  // If the borderRadius is large, that value can become negative.\n  // This causes the outer borders to lose their radius entirely, which is rather unexpected. To solve that, if borderRadius > outerRadius\n  // we know that the thickness term will dominate and compute the limits at that point\n  const computeOuterLimit = (val) => {\n    const outerArcLimit = (outerRadius - Math.min(halfThickness, val)) * angleDelta / 2;\n    return _limitValue(val, 0, Math.min(halfThickness, outerArcLimit));\n  };\n\n  return {\n    outerStart: computeOuterLimit(o.outerStart),\n    outerEnd: computeOuterLimit(o.outerEnd),\n    innerStart: _limitValue(o.innerStart, 0, innerLimit),\n    innerEnd: _limitValue(o.innerEnd, 0, innerLimit),\n  };\n}\n\n/**\n * Convert (r, 𝜃) to (x, y)\n */\nfunction rThetaToXY(r: number, theta: number, x: number, y: number) {\n  return {\n    x: x + r * Math.cos(theta),\n    y: y + r * Math.sin(theta),\n  };\n}\n\n\n/**\n * Path the arc, respecting border radius by separating into left and right halves.\n *\n *   Start      End\n *\n *    1--->a--->2    Outer\n *   /           \\\n *   8           3\n *   |           |\n *   |           |\n *   7           4\n *   \\           /\n *    6<---b<---5    Inner\n */\nfunction pathArc(\n  ctx: CanvasRenderingContext2D,\n  element: ArcElement,\n  offset: number,\n  spacing: number,\n  end: number,\n  circular: boolean,\n) {\n  const {x, y, startAngle: start, pixelMargin, innerRadius: innerR} = element;\n\n  const outerRadius = Math.max(element.outerRadius + spacing + offset - pixelMargin, 0);\n  const innerRadius = innerR > 0 ? innerR + spacing + offset + pixelMargin : 0;\n\n  let spacingOffset = 0;\n  const alpha = end - start;\n\n  if (spacing) {\n    // When spacing is present, it is the same for all items\n    // So we adjust the start and end angle of the arc such that\n    // the distance is the same as it would be without the spacing\n    const noSpacingInnerRadius = innerR > 0 ? innerR - spacing : 0;\n    const noSpacingOuterRadius = outerRadius > 0 ? outerRadius - spacing : 0;\n    const avNogSpacingRadius = (noSpacingInnerRadius + noSpacingOuterRadius) / 2;\n    const adjustedAngle = avNogSpacingRadius !== 0 ? (alpha * avNogSpacingRadius) / (avNogSpacingRadius + spacing) : alpha;\n    spacingOffset = (alpha - adjustedAngle) / 2;\n  }\n\n  const beta = Math.max(0.001, alpha * outerRadius - offset / PI) / outerRadius;\n  const angleOffset = (alpha - beta) / 2;\n  const startAngle = start + angleOffset + spacingOffset;\n  const endAngle = end - angleOffset - spacingOffset;\n  const {outerStart, outerEnd, innerStart, innerEnd} = parseBorderRadius(element, innerRadius, outerRadius, endAngle - startAngle);\n\n  const outerStartAdjustedRadius = outerRadius - outerStart;\n  const outerEndAdjustedRadius = outerRadius - outerEnd;\n  const outerStartAdjustedAngle = startAngle + outerStart / outerStartAdjustedRadius;\n  const outerEndAdjustedAngle = endAngle - outerEnd / outerEndAdjustedRadius;\n\n  const innerStartAdjustedRadius = innerRadius + innerStart;\n  const innerEndAdjustedRadius = innerRadius + innerEnd;\n  const innerStartAdjustedAngle = startAngle + innerStart / innerStartAdjustedRadius;\n  const innerEndAdjustedAngle = endAngle - innerEnd / innerEndAdjustedRadius;\n\n  ctx.beginPath();\n\n  if (circular) {\n    // The first arc segments from point 1 to point a to point 2\n    const outerMidAdjustedAngle = (outerStartAdjustedAngle + outerEndAdjustedAngle) / 2;\n    ctx.arc(x, y, outerRadius, outerStartAdjustedAngle, outerMidAdjustedAngle);\n    ctx.arc(x, y, outerRadius, outerMidAdjustedAngle, outerEndAdjustedAngle);\n\n    // The corner segment from point 2 to point 3\n    if (outerEnd > 0) {\n      const pCenter = rThetaToXY(outerEndAdjustedRadius, outerEndAdjustedAngle, x, y);\n      ctx.arc(pCenter.x, pCenter.y, outerEnd, outerEndAdjustedAngle, endAngle + HALF_PI);\n    }\n\n    // The line from point 3 to point 4\n    const p4 = rThetaToXY(innerEndAdjustedRadius, endAngle, x, y);\n    ctx.lineTo(p4.x, p4.y);\n\n    // The corner segment from point 4 to point 5\n    if (innerEnd > 0) {\n      const pCenter = rThetaToXY(innerEndAdjustedRadius, innerEndAdjustedAngle, x, y);\n      ctx.arc(pCenter.x, pCenter.y, innerEnd, endAngle + HALF_PI, innerEndAdjustedAngle + Math.PI);\n    }\n\n    // The inner arc from point 5 to point b to point 6\n    const innerMidAdjustedAngle = ((endAngle - (innerEnd / innerRadius)) + (startAngle + (innerStart / innerRadius))) / 2;\n    ctx.arc(x, y, innerRadius, endAngle - (innerEnd / innerRadius), innerMidAdjustedAngle, true);\n    ctx.arc(x, y, innerRadius, innerMidAdjustedAngle, startAngle + (innerStart / innerRadius), true);\n\n    // The corner segment from point 6 to point 7\n    if (innerStart > 0) {\n      const pCenter = rThetaToXY(innerStartAdjustedRadius, innerStartAdjustedAngle, x, y);\n      ctx.arc(pCenter.x, pCenter.y, innerStart, innerStartAdjustedAngle + Math.PI, startAngle - HALF_PI);\n    }\n\n    // The line from point 7 to point 8\n    const p8 = rThetaToXY(outerStartAdjustedRadius, startAngle, x, y);\n    ctx.lineTo(p8.x, p8.y);\n\n    // The corner segment from point 8 to point 1\n    if (outerStart > 0) {\n      const pCenter = rThetaToXY(outerStartAdjustedRadius, outerStartAdjustedAngle, x, y);\n      ctx.arc(pCenter.x, pCenter.y, outerStart, startAngle - HALF_PI, outerStartAdjustedAngle);\n    }\n  } else {\n    ctx.moveTo(x, y);\n\n    const outerStartX = Math.cos(outerStartAdjustedAngle) * outerRadius + x;\n    const outerStartY = Math.sin(outerStartAdjustedAngle) * outerRadius + y;\n    ctx.lineTo(outerStartX, outerStartY);\n\n    const outerEndX = Math.cos(outerEndAdjustedAngle) * outerRadius + x;\n    const outerEndY = Math.sin(outerEndAdjustedAngle) * outerRadius + y;\n    ctx.lineTo(outerEndX, outerEndY);\n  }\n\n  ctx.closePath();\n}\n\nfunction drawArc(\n  ctx: CanvasRenderingContext2D,\n  element: ArcElement,\n  offset: number,\n  spacing: number,\n  circular: boolean,\n) {\n  const {fullCircles, startAngle, circumference} = element;\n  let endAngle = element.endAngle;\n  if (fullCircles) {\n    pathArc(ctx, element, offset, spacing, endAngle, circular);\n    for (let i = 0; i < fullCircles; ++i) {\n      ctx.fill();\n    }\n    if (!isNaN(circumference)) {\n      endAngle = startAngle + (circumference % TAU || TAU);\n    }\n  }\n  pathArc(ctx, element, offset, spacing, endAngle, circular);\n  ctx.fill();\n  return endAngle;\n}\n\nfunction drawBorder(\n  ctx: CanvasRenderingContext2D,\n  element: ArcElement,\n  offset: number,\n  spacing: number,\n  circular: boolean,\n) {\n  const {fullCircles, startAngle, circumference, options} = element;\n  const {borderWidth, borderJoinStyle, borderDash, borderDashOffset} = options;\n  const inner = options.borderAlign === 'inner';\n\n  if (!borderWidth) {\n    return;\n  }\n\n  ctx.setLineDash(borderDash || []);\n  ctx.lineDashOffset = borderDashOffset;\n\n  if (inner) {\n    ctx.lineWidth = borderWidth * 2;\n    ctx.lineJoin = borderJoinStyle || 'round';\n  } else {\n    ctx.lineWidth = borderWidth;\n    ctx.lineJoin = borderJoinStyle || 'bevel';\n  }\n\n  let endAngle = element.endAngle;\n  if (fullCircles) {\n    pathArc(ctx, element, offset, spacing, endAngle, circular);\n    for (let i = 0; i < fullCircles; ++i) {\n      ctx.stroke();\n    }\n    if (!isNaN(circumference)) {\n      endAngle = startAngle + (circumference % TAU || TAU);\n    }\n  }\n\n  if (inner) {\n    clipArc(ctx, element, endAngle);\n  }\n\n  if (!fullCircles) {\n    pathArc(ctx, element, offset, spacing, endAngle, circular);\n    ctx.stroke();\n  }\n}\n\nexport interface ArcProps extends Point {\n  startAngle: number;\n  endAngle: number;\n  innerRadius: number;\n  outerRadius: number;\n  circumference: number;\n}\n\nexport default class ArcElement extends Element<ArcProps, ArcOptions> {\n\n  static id = 'arc';\n\n  static defaults = {\n    borderAlign: 'center',\n    borderColor: '#fff',\n    borderDash: [],\n    borderDashOffset: 0,\n    borderJoinStyle: undefined,\n    borderRadius: 0,\n    borderWidth: 2,\n    offset: 0,\n    spacing: 0,\n    angle: undefined,\n    circular: true,\n  };\n\n  static defaultRoutes = {\n    backgroundColor: 'backgroundColor'\n  };\n\n  static descriptors = {\n    _scriptable: true,\n    _indexable: (name) => name !== 'borderDash'\n  };\n\n  circumference: number;\n  endAngle: number;\n  fullCircles: number;\n  innerRadius: number;\n  outerRadius: number;\n  pixelMargin: number;\n  startAngle: number;\n\n  constructor(cfg) {\n    super();\n\n    this.options = undefined;\n    this.circumference = undefined;\n    this.startAngle = undefined;\n    this.endAngle = undefined;\n    this.innerRadius = undefined;\n    this.outerRadius = undefined;\n    this.pixelMargin = 0;\n    this.fullCircles = 0;\n\n    if (cfg) {\n      Object.assign(this, cfg);\n    }\n  }\n\n  inRange(chartX: number, chartY: number, useFinalPosition: boolean) {\n    const point = this.getProps(['x', 'y'], useFinalPosition);\n    const {angle, distance} = getAngleFromPoint(point, {x: chartX, y: chartY});\n    const {startAngle, endAngle, innerRadius, outerRadius, circumference} = this.getProps([\n      'startAngle',\n      'endAngle',\n      'innerRadius',\n      'outerRadius',\n      'circumference'\n    ], useFinalPosition);\n    const rAdjust = (this.options.spacing + this.options.borderWidth) / 2;\n    const _circumference = valueOrDefault(circumference, endAngle - startAngle);\n    const nonZeroBetween = _angleBetween(angle, startAngle, endAngle) && startAngle !== endAngle;\n    const betweenAngles = _circumference >= TAU || nonZeroBetween;\n    const withinRadius = _isBetween(distance, innerRadius + rAdjust, outerRadius + rAdjust);\n\n    return (betweenAngles && withinRadius);\n  }\n\n  getCenterPoint(useFinalPosition: boolean) {\n    const {x, y, startAngle, endAngle, innerRadius, outerRadius} = this.getProps([\n      'x',\n      'y',\n      'startAngle',\n      'endAngle',\n      'innerRadius',\n      'outerRadius'\n    ], useFinalPosition);\n    const {offset, spacing} = this.options;\n    const halfAngle = (startAngle + endAngle) / 2;\n    const halfRadius = (innerRadius + outerRadius + spacing + offset) / 2;\n    return {\n      x: x + Math.cos(halfAngle) * halfRadius,\n      y: y + Math.sin(halfAngle) * halfRadius\n    };\n  }\n\n  tooltipPosition(useFinalPosition: boolean) {\n    return this.getCenterPoint(useFinalPosition);\n  }\n\n  draw(ctx: CanvasRenderingContext2D) {\n    const {options, circumference} = this;\n    const offset = (options.offset || 0) / 4;\n    const spacing = (options.spacing || 0) / 2;\n    const circular = options.circular;\n    this.pixelMargin = (options.borderAlign === 'inner') ? 0.33 : 0;\n    this.fullCircles = circumference > TAU ? Math.floor(circumference / TAU) : 0;\n\n    if (circumference === 0 || this.innerRadius < 0 || this.outerRadius < 0) {\n      return;\n    }\n\n    ctx.save();\n\n    const halfAngle = (this.startAngle + this.endAngle) / 2;\n    ctx.translate(Math.cos(halfAngle) * offset, Math.sin(halfAngle) * offset);\n    const fix = 1 - Math.sin(Math.min(PI, circumference || 0));\n    const radiusOffset = offset * fix;\n\n    ctx.fillStyle = options.backgroundColor;\n    ctx.strokeStyle = options.borderColor;\n\n    drawArc(ctx, this, radiusOffset, spacing, circular);\n    drawBorder(ctx, this, radiusOffset, spacing, circular);\n\n    ctx.restore();\n  }\n}\n","import Element from '../core/core.element.js';\nimport {_bezierInterpolation, _pointInLine, _steppedInterpolation} from '../helpers/helpers.interpolation.js';\nimport {_computeSegments, _boundSegments} from '../helpers/helpers.segment.js';\nimport {_steppedLineTo, _bezierCurveTo} from '../helpers/helpers.canvas.js';\nimport {_updateBezierControlPoints} from '../helpers/helpers.curve.js';\nimport {valueOrDefault} from '../helpers/index.js';\n\n/**\n * @typedef { import('./element.point.js').default } PointElement\n */\n\nfunction setStyle(ctx, options, style = options) {\n  ctx.lineCap = valueOrDefault(style.borderCapStyle, options.borderCapStyle);\n  ctx.setLineDash(valueOrDefault(style.borderDash, options.borderDash));\n  ctx.lineDashOffset = valueOrDefault(style.borderDashOffset, options.borderDashOffset);\n  ctx.lineJoin = valueOrDefault(style.borderJoinStyle, options.borderJoinStyle);\n  ctx.lineWidth = valueOrDefault(style.borderWidth, options.borderWidth);\n  ctx.strokeStyle = valueOrDefault(style.borderColor, options.borderColor);\n}\n\nfunction lineTo(ctx, previous, target) {\n  ctx.lineTo(target.x, target.y);\n}\n\n/**\n * @returns {any}\n */\nfunction getLineMethod(options) {\n  if (options.stepped) {\n    return _steppedLineTo;\n  }\n\n  if (options.tension || options.cubicInterpolationMode === 'monotone') {\n    return _bezierCurveTo;\n  }\n\n  return lineTo;\n}\n\nfunction pathVars(points, segment, params = {}) {\n  const count = points.length;\n  const {start: paramsStart = 0, end: paramsEnd = count - 1} = params;\n  const {start: segmentStart, end: segmentEnd} = segment;\n  const start = Math.max(paramsStart, segmentStart);\n  const end = Math.min(paramsEnd, segmentEnd);\n  const outside = paramsStart < segmentStart && paramsEnd < segmentStart || paramsStart > segmentEnd && paramsEnd > segmentEnd;\n\n  return {\n    count,\n    start,\n    loop: segment.loop,\n    ilen: end < start && !outside ? count + end - start : end - start\n  };\n}\n\n/**\n * Create path from points, grouping by truncated x-coordinate\n * Points need to be in order by x-coordinate for this to work efficiently\n * @param {CanvasRenderingContext2D|Path2D} ctx - Context\n * @param {LineElement} line\n * @param {object} segment\n * @param {number} segment.start - start index of the segment, referring the points array\n * @param {number} segment.end - end index of the segment, referring the points array\n * @param {boolean} segment.loop - indicates that the segment is a loop\n * @param {object} params\n * @param {boolean} params.move - move to starting point (vs line to it)\n * @param {boolean} params.reverse - path the segment from end to start\n * @param {number} params.start - limit segment to points starting from `start` index\n * @param {number} params.end - limit segment to points ending at `start` + `count` index\n */\nfunction pathSegment(ctx, line, segment, params) {\n  const {points, options} = line;\n  const {count, start, loop, ilen} = pathVars(points, segment, params);\n  const lineMethod = getLineMethod(options);\n  // eslint-disable-next-line prefer-const\n  let {move = true, reverse} = params || {};\n  let i, point, prev;\n\n  for (i = 0; i <= ilen; ++i) {\n    point = points[(start + (reverse ? ilen - i : i)) % count];\n\n    if (point.skip) {\n      // If there is a skipped point inside a segment, spanGaps must be true\n      continue;\n    } else if (move) {\n      ctx.moveTo(point.x, point.y);\n      move = false;\n    } else {\n      lineMethod(ctx, prev, point, reverse, options.stepped);\n    }\n\n    prev = point;\n  }\n\n  if (loop) {\n    point = points[(start + (reverse ? ilen : 0)) % count];\n    lineMethod(ctx, prev, point, reverse, options.stepped);\n  }\n\n  return !!loop;\n}\n\n/**\n * Create path from points, grouping by truncated x-coordinate\n * Points need to be in order by x-coordinate for this to work efficiently\n * @param {CanvasRenderingContext2D|Path2D} ctx - Context\n * @param {LineElement} line\n * @param {object} segment\n * @param {number} segment.start - start index of the segment, referring the points array\n * @param {number} segment.end - end index of the segment, referring the points array\n * @param {boolean} segment.loop - indicates that the segment is a loop\n * @param {object} params\n * @param {boolean} params.move - move to starting point (vs line to it)\n * @param {boolean} params.reverse - path the segment from end to start\n * @param {number} params.start - limit segment to points starting from `start` index\n * @param {number} params.end - limit segment to points ending at `start` + `count` index\n */\nfunction fastPathSegment(ctx, line, segment, params) {\n  const points = line.points;\n  const {count, start, ilen} = pathVars(points, segment, params);\n  const {move = true, reverse} = params || {};\n  let avgX = 0;\n  let countX = 0;\n  let i, point, prevX, minY, maxY, lastY;\n\n  const pointIndex = (index) => (start + (reverse ? ilen - index : index)) % count;\n  const drawX = () => {\n    if (minY !== maxY) {\n      // Draw line to maxY and minY, using the average x-coordinate\n      ctx.lineTo(avgX, maxY);\n      ctx.lineTo(avgX, minY);\n      // Line to y-value of last point in group. So the line continues\n      // from correct position. Not using move, to have solid path.\n      ctx.lineTo(avgX, lastY);\n    }\n  };\n\n  if (move) {\n    point = points[pointIndex(0)];\n    ctx.moveTo(point.x, point.y);\n  }\n\n  for (i = 0; i <= ilen; ++i) {\n    point = points[pointIndex(i)];\n\n    if (point.skip) {\n      // If there is a skipped point inside a segment, spanGaps must be true\n      continue;\n    }\n\n    const x = point.x;\n    const y = point.y;\n    const truncX = x | 0; // truncated x-coordinate\n\n    if (truncX === prevX) {\n      // Determine `minY` / `maxY` and `avgX` while we stay within same x-position\n      if (y < minY) {\n        minY = y;\n      } else if (y > maxY) {\n        maxY = y;\n      }\n      // For first point in group, countX is `0`, so average will be `x` / 1.\n      avgX = (countX * avgX + x) / ++countX;\n    } else {\n      drawX();\n      // Draw line to next x-position, using the first (or only)\n      // y-value in that group\n      ctx.lineTo(x, y);\n\n      prevX = truncX;\n      countX = 0;\n      minY = maxY = y;\n    }\n    // Keep track of the last y-value in group\n    lastY = y;\n  }\n  drawX();\n}\n\n/**\n * @param {LineElement} line - the line\n * @returns {function}\n * @private\n */\nfunction _getSegmentMethod(line) {\n  const opts = line.options;\n  const borderDash = opts.borderDash && opts.borderDash.length;\n  const useFastPath = !line._decimated && !line._loop && !opts.tension && opts.cubicInterpolationMode !== 'monotone' && !opts.stepped && !borderDash;\n  return useFastPath ? fastPathSegment : pathSegment;\n}\n\n/**\n * @private\n */\nfunction _getInterpolationMethod(options) {\n  if (options.stepped) {\n    return _steppedInterpolation;\n  }\n\n  if (options.tension || options.cubicInterpolationMode === 'monotone') {\n    return _bezierInterpolation;\n  }\n\n  return _pointInLine;\n}\n\nfunction strokePathWithCache(ctx, line, start, count) {\n  let path = line._path;\n  if (!path) {\n    path = line._path = new Path2D();\n    if (line.path(path, start, count)) {\n      path.closePath();\n    }\n  }\n  setStyle(ctx, line.options);\n  ctx.stroke(path);\n}\n\nfunction strokePathDirect(ctx, line, start, count) {\n  const {segments, options} = line;\n  const segmentMethod = _getSegmentMethod(line);\n\n  for (const segment of segments) {\n    setStyle(ctx, options, segment.style);\n    ctx.beginPath();\n    if (segmentMethod(ctx, line, segment, {start, end: start + count - 1})) {\n      ctx.closePath();\n    }\n    ctx.stroke();\n  }\n}\n\nconst usePath2D = typeof Path2D === 'function';\n\nfunction draw(ctx, line, start, count) {\n  if (usePath2D && !line.options.segment) {\n    strokePathWithCache(ctx, line, start, count);\n  } else {\n    strokePathDirect(ctx, line, start, count);\n  }\n}\n\nexport default class LineElement extends Element {\n\n  static id = 'line';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    borderCapStyle: 'butt',\n    borderDash: [],\n    borderDashOffset: 0,\n    borderJoinStyle: 'miter',\n    borderWidth: 3,\n    capBezierPoints: true,\n    cubicInterpolationMode: 'default',\n    fill: false,\n    spanGaps: false,\n    stepped: false,\n    tension: 0,\n  };\n\n  /**\n   * @type {any}\n   */\n  static defaultRoutes = {\n    backgroundColor: 'backgroundColor',\n    borderColor: 'borderColor'\n  };\n\n\n  static descriptors = {\n    _scriptable: true,\n    _indexable: (name) => name !== 'borderDash' && name !== 'fill',\n  };\n\n\n  constructor(cfg) {\n    super();\n\n    this.animated = true;\n    this.options = undefined;\n    this._chart = undefined;\n    this._loop = undefined;\n    this._fullLoop = undefined;\n    this._path = undefined;\n    this._points = undefined;\n    this._segments = undefined;\n    this._decimated = false;\n    this._pointsUpdated = false;\n    this._datasetIndex = undefined;\n\n    if (cfg) {\n      Object.assign(this, cfg);\n    }\n  }\n\n  updateControlPoints(chartArea, indexAxis) {\n    const options = this.options;\n    if ((options.tension || options.cubicInterpolationMode === 'monotone') && !options.stepped && !this._pointsUpdated) {\n      const loop = options.spanGaps ? this._loop : this._fullLoop;\n      _updateBezierControlPoints(this._points, options, chartArea, loop, indexAxis);\n      this._pointsUpdated = true;\n    }\n  }\n\n  set points(points) {\n    this._points = points;\n    delete this._segments;\n    delete this._path;\n    this._pointsUpdated = false;\n  }\n\n  get points() {\n    return this._points;\n  }\n\n  get segments() {\n    return this._segments || (this._segments = _computeSegments(this, this.options.segment));\n  }\n\n  /**\n\t * First non-skipped point on this line\n\t * @returns {PointElement|undefined}\n\t */\n  first() {\n    const segments = this.segments;\n    const points = this.points;\n    return segments.length && points[segments[0].start];\n  }\n\n  /**\n\t * Last non-skipped point on this line\n\t * @returns {PointElement|undefined}\n\t */\n  last() {\n    const segments = this.segments;\n    const points = this.points;\n    const count = segments.length;\n    return count && points[segments[count - 1].end];\n  }\n\n  /**\n\t * Interpolate a point in this line at the same value on `property` as\n\t * the reference `point` provided\n\t * @param {PointElement} point - the reference point\n\t * @param {string} property - the property to match on\n\t * @returns {PointElement|undefined}\n\t */\n  interpolate(point, property) {\n    const options = this.options;\n    const value = point[property];\n    const points = this.points;\n    const segments = _boundSegments(this, {property, start: value, end: value});\n\n    if (!segments.length) {\n      return;\n    }\n\n    const result = [];\n    const _interpolate = _getInterpolationMethod(options);\n    let i, ilen;\n    for (i = 0, ilen = segments.length; i < ilen; ++i) {\n      const {start, end} = segments[i];\n      const p1 = points[start];\n      const p2 = points[end];\n      if (p1 === p2) {\n        result.push(p1);\n        continue;\n      }\n      const t = Math.abs((value - p1[property]) / (p2[property] - p1[property]));\n      const interpolated = _interpolate(p1, p2, t, options.stepped);\n      interpolated[property] = point[property];\n      result.push(interpolated);\n    }\n    return result.length === 1 ? result[0] : result;\n  }\n\n  /**\n\t * Append a segment of this line to current path.\n\t * @param {CanvasRenderingContext2D} ctx\n\t * @param {object} segment\n\t * @param {number} segment.start - start index of the segment, referring the points array\n \t * @param {number} segment.end - end index of the segment, referring the points array\n \t * @param {boolean} segment.loop - indicates that the segment is a loop\n\t * @param {object} params\n\t * @param {boolean} params.move - move to starting point (vs line to it)\n\t * @param {boolean} params.reverse - path the segment from end to start\n\t * @param {number} params.start - limit segment to points starting from `start` index\n\t * @param {number} params.end - limit segment to points ending at `start` + `count` index\n\t * @returns {undefined|boolean} - true if the segment is a full loop (path should be closed)\n\t */\n  pathSegment(ctx, segment, params) {\n    const segmentMethod = _getSegmentMethod(this);\n    return segmentMethod(ctx, this, segment, params);\n  }\n\n  /**\n\t * Append all segments of this line to current path.\n\t * @param {CanvasRenderingContext2D|Path2D} ctx\n\t * @param {number} [start]\n\t * @param {number} [count]\n\t * @returns {undefined|boolean} - true if line is a full loop (path should be closed)\n\t */\n  path(ctx, start, count) {\n    const segments = this.segments;\n    const segmentMethod = _getSegmentMethod(this);\n    let loop = this._loop;\n\n    start = start || 0;\n    count = count || (this.points.length - start);\n\n    for (const segment of segments) {\n      loop &= segmentMethod(ctx, this, segment, {start, end: start + count - 1});\n    }\n    return !!loop;\n  }\n\n  /**\n\t * Draw\n\t * @param {CanvasRenderingContext2D} ctx\n\t * @param {object} chartArea\n\t * @param {number} [start]\n\t * @param {number} [count]\n\t */\n  draw(ctx, chartArea, start, count) {\n    const options = this.options || {};\n    const points = this.points || [];\n\n    if (points.length && options.borderWidth) {\n      ctx.save();\n\n      draw(ctx, this, start, count);\n\n      ctx.restore();\n    }\n\n    if (this.animated) {\n      // When line is animated, the control points and path are not cached.\n      this._pointsUpdated = false;\n      this._path = undefined;\n    }\n  }\n}\n","import Element from '../core/core.element.js';\nimport {drawPoint, _isPointInArea} from '../helpers/helpers.canvas.js';\nimport type {\n  CartesianParsedData,\n  ChartArea,\n  Point,\n  PointHoverOptions,\n  PointOptions,\n} from '../types/index.js';\n\nfunction inRange(el: PointElement, pos: number, axis: 'x' | 'y', useFinalPosition?: boolean) {\n  const options = el.options;\n  const {[axis]: value} = el.getProps([axis], useFinalPosition);\n\n  return (Math.abs(pos - value) < options.radius + options.hitRadius);\n}\n\nexport type PointProps = Point\n\nexport default class PointElement extends Element<PointProps, PointOptions & PointHoverOptions> {\n\n  static id = 'point';\n\n  parsed: CartesianParsedData;\n  skip?: boolean;\n  stop?: boolean;\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    borderWidth: 1,\n    hitRadius: 1,\n    hoverBorderWidth: 1,\n    hoverRadius: 4,\n    pointStyle: 'circle',\n    radius: 3,\n    rotation: 0\n  };\n\n  /**\n   * @type {any}\n   */\n  static defaultRoutes = {\n    backgroundColor: 'backgroundColor',\n    borderColor: 'borderColor'\n  };\n\n  constructor(cfg) {\n    super();\n\n    this.options = undefined;\n    this.parsed = undefined;\n    this.skip = undefined;\n    this.stop = undefined;\n\n    if (cfg) {\n      Object.assign(this, cfg);\n    }\n  }\n\n  inRange(mouseX: number, mouseY: number, useFinalPosition?: boolean) {\n    const options = this.options;\n    const {x, y} = this.getProps(['x', 'y'], useFinalPosition);\n    return ((Math.pow(mouseX - x, 2) + Math.pow(mouseY - y, 2)) < Math.pow(options.hitRadius + options.radius, 2));\n  }\n\n  inXRange(mouseX: number, useFinalPosition?: boolean) {\n    return inRange(this, mouseX, 'x', useFinalPosition);\n  }\n\n  inYRange(mouseY: number, useFinalPosition?: boolean) {\n    return inRange(this, mouseY, 'y', useFinalPosition);\n  }\n\n  getCenterPoint(useFinalPosition?: boolean) {\n    const {x, y} = this.getProps(['x', 'y'], useFinalPosition);\n    return {x, y};\n  }\n\n  size(options?: Partial<PointOptions & PointHoverOptions>) {\n    options = options || this.options || {};\n    let radius = options.radius || 0;\n    radius = Math.max(radius, radius && options.hoverRadius || 0);\n    const borderWidth = radius && options.borderWidth || 0;\n    return (radius + borderWidth) * 2;\n  }\n\n  draw(ctx: CanvasRenderingContext2D, area: ChartArea) {\n    const options = this.options;\n\n    if (this.skip || options.radius < 0.1 || !_isPointInArea(this, area, this.size(options) / 2)) {\n      return;\n    }\n\n    ctx.strokeStyle = options.borderColor;\n    ctx.lineWidth = options.borderWidth;\n    ctx.fillStyle = options.backgroundColor;\n    drawPoint(ctx, options, this.x, this.y);\n  }\n\n  getRange() {\n    const options = this.options || {};\n    // @ts-expect-error Fallbacks should never be hit in practice\n    return options.radius + options.hitRadius;\n  }\n}\n","import Element from '../core/core.element.js';\nimport {isObject, _isBetween, _limitValue} from '../helpers/index.js';\nimport {addRoundedRectPath} from '../helpers/helpers.canvas.js';\nimport {toTRBL, toTRBLCorners} from '../helpers/helpers.options.js';\n\n/** @typedef {{ x: number, y: number, base: number, horizontal: boolean, width: number, height: number }} BarProps */\n\n/**\n * Helper function to get the bounds of the bar regardless of the orientation\n * @param {BarElement} bar the bar\n * @param {boolean} [useFinalPosition]\n * @return {object} bounds of the bar\n * @private\n */\nfunction getBarBounds(bar, useFinalPosition) {\n  const {x, y, base, width, height} = /** @type {BarProps} */ (bar.getProps(['x', 'y', 'base', 'width', 'height'], useFinalPosition));\n\n  let left, right, top, bottom, half;\n\n  if (bar.horizontal) {\n    half = height / 2;\n    left = Math.min(x, base);\n    right = Math.max(x, base);\n    top = y - half;\n    bottom = y + half;\n  } else {\n    half = width / 2;\n    left = x - half;\n    right = x + half;\n    top = Math.min(y, base);\n    bottom = Math.max(y, base);\n  }\n\n  return {left, top, right, bottom};\n}\n\nfunction skipOrLimit(skip, value, min, max) {\n  return skip ? 0 : _limitValue(value, min, max);\n}\n\nfunction parseBorderWidth(bar, maxW, maxH) {\n  const value = bar.options.borderWidth;\n  const skip = bar.borderSkipped;\n  const o = toTRBL(value);\n\n  return {\n    t: skipOrLimit(skip.top, o.top, 0, maxH),\n    r: skipOrLimit(skip.right, o.right, 0, maxW),\n    b: skipOrLimit(skip.bottom, o.bottom, 0, maxH),\n    l: skipOrLimit(skip.left, o.left, 0, maxW)\n  };\n}\n\nfunction parseBorderRadius(bar, maxW, maxH) {\n  const {enableBorderRadius} = bar.getProps(['enableBorderRadius']);\n  const value = bar.options.borderRadius;\n  const o = toTRBLCorners(value);\n  const maxR = Math.min(maxW, maxH);\n  const skip = bar.borderSkipped;\n\n  // If the value is an object, assume the user knows what they are doing\n  // and apply as directed.\n  const enableBorder = enableBorderRadius || isObject(value);\n\n  return {\n    topLeft: skipOrLimit(!enableBorder || skip.top || skip.left, o.topLeft, 0, maxR),\n    topRight: skipOrLimit(!enableBorder || skip.top || skip.right, o.topRight, 0, maxR),\n    bottomLeft: skipOrLimit(!enableBorder || skip.bottom || skip.left, o.bottomLeft, 0, maxR),\n    bottomRight: skipOrLimit(!enableBorder || skip.bottom || skip.right, o.bottomRight, 0, maxR)\n  };\n}\n\nfunction boundingRects(bar) {\n  const bounds = getBarBounds(bar);\n  const width = bounds.right - bounds.left;\n  const height = bounds.bottom - bounds.top;\n  const border = parseBorderWidth(bar, width / 2, height / 2);\n  const radius = parseBorderRadius(bar, width / 2, height / 2);\n\n  return {\n    outer: {\n      x: bounds.left,\n      y: bounds.top,\n      w: width,\n      h: height,\n      radius\n    },\n    inner: {\n      x: bounds.left + border.l,\n      y: bounds.top + border.t,\n      w: width - border.l - border.r,\n      h: height - border.t - border.b,\n      radius: {\n        topLeft: Math.max(0, radius.topLeft - Math.max(border.t, border.l)),\n        topRight: Math.max(0, radius.topRight - Math.max(border.t, border.r)),\n        bottomLeft: Math.max(0, radius.bottomLeft - Math.max(border.b, border.l)),\n        bottomRight: Math.max(0, radius.bottomRight - Math.max(border.b, border.r)),\n      }\n    }\n  };\n}\n\nfunction inRange(bar, x, y, useFinalPosition) {\n  const skipX = x === null;\n  const skipY = y === null;\n  const skipBoth = skipX && skipY;\n  const bounds = bar && !skipBoth && getBarBounds(bar, useFinalPosition);\n\n  return bounds\n\t\t&& (skipX || _isBetween(x, bounds.left, bounds.right))\n\t\t&& (skipY || _isBetween(y, bounds.top, bounds.bottom));\n}\n\nfunction hasRadius(radius) {\n  return radius.topLeft || radius.topRight || radius.bottomLeft || radius.bottomRight;\n}\n\n/**\n * Add a path of a rectangle to the current sub-path\n * @param {CanvasRenderingContext2D} ctx Context\n * @param {*} rect Bounding rect\n */\nfunction addNormalRectPath(ctx, rect) {\n  ctx.rect(rect.x, rect.y, rect.w, rect.h);\n}\n\nfunction inflateRect(rect, amount, refRect = {}) {\n  const x = rect.x !== refRect.x ? -amount : 0;\n  const y = rect.y !== refRect.y ? -amount : 0;\n  const w = (rect.x + rect.w !== refRect.x + refRect.w ? amount : 0) - x;\n  const h = (rect.y + rect.h !== refRect.y + refRect.h ? amount : 0) - y;\n  return {\n    x: rect.x + x,\n    y: rect.y + y,\n    w: rect.w + w,\n    h: rect.h + h,\n    radius: rect.radius\n  };\n}\n\nexport default class BarElement extends Element {\n\n  static id = 'bar';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    borderSkipped: 'start',\n    borderWidth: 0,\n    borderRadius: 0,\n    inflateAmount: 'auto',\n    pointStyle: undefined\n  };\n\n  /**\n   * @type {any}\n   */\n  static defaultRoutes = {\n    backgroundColor: 'backgroundColor',\n    borderColor: 'borderColor'\n  };\n\n  constructor(cfg) {\n    super();\n\n    this.options = undefined;\n    this.horizontal = undefined;\n    this.base = undefined;\n    this.width = undefined;\n    this.height = undefined;\n    this.inflateAmount = undefined;\n\n    if (cfg) {\n      Object.assign(this, cfg);\n    }\n  }\n\n  draw(ctx) {\n    const {inflateAmount, options: {borderColor, backgroundColor}} = this;\n    const {inner, outer} = boundingRects(this);\n    const addRectPath = hasRadius(outer.radius) ? addRoundedRectPath : addNormalRectPath;\n\n    ctx.save();\n\n    if (outer.w !== inner.w || outer.h !== inner.h) {\n      ctx.beginPath();\n      addRectPath(ctx, inflateRect(outer, inflateAmount, inner));\n      ctx.clip();\n      addRectPath(ctx, inflateRect(inner, -inflateAmount, outer));\n      ctx.fillStyle = borderColor;\n      ctx.fill('evenodd');\n    }\n\n    ctx.beginPath();\n    addRectPath(ctx, inflateRect(inner, inflateAmount));\n    ctx.fillStyle = backgroundColor;\n    ctx.fill();\n\n    ctx.restore();\n  }\n\n  inRange(mouseX, mouseY, useFinalPosition) {\n    return inRange(this, mouseX, mouseY, useFinalPosition);\n  }\n\n  inXRange(mouseX, useFinalPosition) {\n    return inRange(this, mouseX, null, useFinalPosition);\n  }\n\n  inYRange(mouseY, useFinalPosition) {\n    return inRange(this, null, mouseY, useFinalPosition);\n  }\n\n  getCenterPoint(useFinalPosition) {\n    const {x, y, base, horizontal} = /** @type {BarProps} */ (this.getProps(['x', 'y', 'base', 'horizontal'], useFinalPosition));\n    return {\n      x: horizontal ? (x + base) / 2 : x,\n      y: horizontal ? y : (y + base) / 2\n    };\n  }\n\n  getRange(axis) {\n    return axis === 'x' ? this.width / 2 : this.height / 2;\n  }\n}\n","import {DoughnutController, PolarAreaController, defaults} from '../index.js';\nimport type {Chart, ChartDataset} from '../types.js';\n\nexport interface ColorsPluginOptions {\n  enabled?: boolean;\n  forceOverride?: boolean;\n}\n\ninterface ColorsDescriptor {\n  backgroundColor?: unknown;\n  borderColor?: unknown;\n}\n\nconst BORDER_COLORS = [\n  'rgb(54, 162, 235)', // blue\n  'rgb(255, 99, 132)', // red\n  'rgb(255, 159, 64)', // orange\n  'rgb(255, 205, 86)', // yellow\n  'rgb(75, 192, 192)', // green\n  'rgb(153, 102, 255)', // purple\n  'rgb(201, 203, 207)' // grey\n];\n\n// Border colors with 50% transparency\nconst BACKGROUND_COLORS = /* #__PURE__ */ BORDER_COLORS.map(color => color.replace('rgb(', 'rgba(').replace(')', ', 0.5)'));\n\nfunction getBorderColor(i: number) {\n  return BORDER_COLORS[i % BORDER_COLORS.length];\n}\n\nfunction getBackgroundColor(i: number) {\n  return BACKGROUND_COLORS[i % BACKGROUND_COLORS.length];\n}\n\nfunction colorizeDefaultDataset(dataset: ChartDataset, i: number) {\n  dataset.borderColor = getBorderColor(i);\n  dataset.backgroundColor = getBackgroundColor(i);\n\n  return ++i;\n}\n\nfunction colorizeDoughnutDataset(dataset: ChartDataset, i: number) {\n  dataset.backgroundColor = dataset.data.map(() => getBorderColor(i++));\n\n  return i;\n}\n\nfunction colorizePolarAreaDataset(dataset: ChartDataset, i: number) {\n  dataset.backgroundColor = dataset.data.map(() => getBackgroundColor(i++));\n\n  return i;\n}\n\nfunction getColorizer(chart: Chart) {\n  let i = 0;\n\n  return (dataset: ChartDataset, datasetIndex: number) => {\n    const controller = chart.getDatasetMeta(datasetIndex).controller;\n\n    if (controller instanceof DoughnutController) {\n      i = colorizeDoughnutDataset(dataset, i);\n    } else if (controller instanceof PolarAreaController) {\n      i = colorizePolarAreaDataset(dataset, i);\n    } else if (controller) {\n      i = colorizeDefaultDataset(dataset, i);\n    }\n  };\n}\n\nfunction containsColorsDefinitions(\n  descriptors: ColorsDescriptor[] | Record<string, ColorsDescriptor>\n) {\n  let k: number | string;\n\n  for (k in descriptors) {\n    if (descriptors[k].borderColor || descriptors[k].backgroundColor) {\n      return true;\n    }\n  }\n\n  return false;\n}\n\nfunction containsColorsDefinition(\n  descriptor: ColorsDescriptor\n) {\n  return descriptor && (descriptor.borderColor || descriptor.backgroundColor);\n}\n\nfunction containsDefaultColorsDefenitions() {\n  return defaults.borderColor !== 'rgba(0,0,0,0.1)' || defaults.backgroundColor !== 'rgba(0,0,0,0.1)';\n}\n\nexport default {\n  id: 'colors',\n\n  defaults: {\n    enabled: true,\n    forceOverride: false\n  } as ColorsPluginOptions,\n\n  beforeLayout(chart: Chart, _args, options: ColorsPluginOptions) {\n    if (!options.enabled) {\n      return;\n    }\n\n    const {\n      data: {datasets},\n      options: chartOptions\n    } = chart.config;\n    const {elements} = chartOptions;\n\n    const containsColorDefenition = (\n      containsColorsDefinitions(datasets) ||\n      containsColorsDefinition(chartOptions) ||\n      (elements && containsColorsDefinitions(elements)) ||\n      containsDefaultColorsDefenitions());\n\n    if (!options.forceOverride && containsColorDefenition) {\n      return;\n    }\n\n    const colorizer = getColorizer(chart);\n\n    datasets.forEach(colorizer);\n  }\n};\n","import {_limitValue, _lookupByKey, isNullOrUndef, resolve} from '../helpers/index.js';\n\nfunction lttbDecimation(data, start, count, availableWidth, options) {\n  /**\n   * Implementation of the Largest Triangle Three Buckets algorithm.\n   *\n   * This implementation is based on the original implementation by Sveinn Steinarsson\n   * in https://github.com/sveinn-steinarsson/flot-downsample/blob/master/jquery.flot.downsample.js\n   *\n   * The original implementation is MIT licensed.\n   */\n  const samples = options.samples || availableWidth;\n  // There are less points than the threshold, returning the whole array\n  if (samples >= count) {\n    return data.slice(start, start + count);\n  }\n\n  const decimated = [];\n\n  const bucketWidth = (count - 2) / (samples - 2);\n  let sampledIndex = 0;\n  const endIndex = start + count - 1;\n  // Starting from offset\n  let a = start;\n  let i, maxAreaPoint, maxArea, area, nextA;\n\n  decimated[sampledIndex++] = data[a];\n\n  for (i = 0; i < samples - 2; i++) {\n    let avgX = 0;\n    let avgY = 0;\n    let j;\n\n    // Adding offset\n    const avgRangeStart = Math.floor((i + 1) * bucketWidth) + 1 + start;\n    const avgRangeEnd = Math.min(Math.floor((i + 2) * bucketWidth) + 1, count) + start;\n    const avgRangeLength = avgRangeEnd - avgRangeStart;\n\n    for (j = avgRangeStart; j < avgRangeEnd; j++) {\n      avgX += data[j].x;\n      avgY += data[j].y;\n    }\n\n    avgX /= avgRangeLength;\n    avgY /= avgRangeLength;\n\n    // Adding offset\n    const rangeOffs = Math.floor(i * bucketWidth) + 1 + start;\n    const rangeTo = Math.min(Math.floor((i + 1) * bucketWidth) + 1, count) + start;\n    const {x: pointAx, y: pointAy} = data[a];\n\n    // Note that this is changed from the original algorithm which initializes these\n    // values to 1. The reason for this change is that if the area is small, nextA\n    // would never be set and thus a crash would occur in the next loop as `a` would become\n    // `undefined`. Since the area is always positive, but could be 0 in the case of a flat trace,\n    // initializing with a negative number is the correct solution.\n    maxArea = area = -1;\n\n    for (j = rangeOffs; j < rangeTo; j++) {\n      area = 0.5 * Math.abs(\n        (pointAx - avgX) * (data[j].y - pointAy) -\n        (pointAx - data[j].x) * (avgY - pointAy)\n      );\n\n      if (area > maxArea) {\n        maxArea = area;\n        maxAreaPoint = data[j];\n        nextA = j;\n      }\n    }\n\n    decimated[sampledIndex++] = maxAreaPoint;\n    a = nextA;\n  }\n\n  // Include the last point\n  decimated[sampledIndex++] = data[endIndex];\n\n  return decimated;\n}\n\nfunction minMaxDecimation(data, start, count, availableWidth) {\n  let avgX = 0;\n  let countX = 0;\n  let i, point, x, y, prevX, minIndex, maxIndex, startIndex, minY, maxY;\n  const decimated = [];\n  const endIndex = start + count - 1;\n\n  const xMin = data[start].x;\n  const xMax = data[endIndex].x;\n  const dx = xMax - xMin;\n\n  for (i = start; i < start + count; ++i) {\n    point = data[i];\n    x = (point.x - xMin) / dx * availableWidth;\n    y = point.y;\n    const truncX = x | 0;\n\n    if (truncX === prevX) {\n      // Determine `minY` / `maxY` and `avgX` while we stay within same x-position\n      if (y < minY) {\n        minY = y;\n        minIndex = i;\n      } else if (y > maxY) {\n        maxY = y;\n        maxIndex = i;\n      }\n      // For first point in group, countX is `0`, so average will be `x` / 1.\n      // Use point.x here because we're computing the average data `x` value\n      avgX = (countX * avgX + point.x) / ++countX;\n    } else {\n      // Push up to 4 points, 3 for the last interval and the first point for this interval\n      const lastIndex = i - 1;\n\n      if (!isNullOrUndef(minIndex) && !isNullOrUndef(maxIndex)) {\n        // The interval is defined by 4 points: start, min, max, end.\n        // The starting point is already considered at this point, so we need to determine which\n        // of the other points to add. We need to sort these points to ensure the decimated data\n        // is still sorted and then ensure there are no duplicates.\n        const intermediateIndex1 = Math.min(minIndex, maxIndex);\n        const intermediateIndex2 = Math.max(minIndex, maxIndex);\n\n        if (intermediateIndex1 !== startIndex && intermediateIndex1 !== lastIndex) {\n          decimated.push({\n            ...data[intermediateIndex1],\n            x: avgX,\n          });\n        }\n        if (intermediateIndex2 !== startIndex && intermediateIndex2 !== lastIndex) {\n          decimated.push({\n            ...data[intermediateIndex2],\n            x: avgX\n          });\n        }\n      }\n\n      // lastIndex === startIndex will occur when a range has only 1 point which could\n      // happen with very uneven data\n      if (i > 0 && lastIndex !== startIndex) {\n        // Last point in the previous interval\n        decimated.push(data[lastIndex]);\n      }\n\n      // Start of the new interval\n      decimated.push(point);\n      prevX = truncX;\n      countX = 0;\n      minY = maxY = y;\n      minIndex = maxIndex = startIndex = i;\n    }\n  }\n\n  return decimated;\n}\n\nfunction cleanDecimatedDataset(dataset) {\n  if (dataset._decimated) {\n    const data = dataset._data;\n    delete dataset._decimated;\n    delete dataset._data;\n    Object.defineProperty(dataset, 'data', {\n      configurable: true,\n      enumerable: true,\n      writable: true,\n      value: data,\n    });\n  }\n}\n\nfunction cleanDecimatedData(chart) {\n  chart.data.datasets.forEach((dataset) => {\n    cleanDecimatedDataset(dataset);\n  });\n}\n\nfunction getStartAndCountOfVisiblePointsSimplified(meta, points) {\n  const pointCount = points.length;\n\n  let start = 0;\n  let count;\n\n  const {iScale} = meta;\n  const {min, max, minDefined, maxDefined} = iScale.getUserBounds();\n\n  if (minDefined) {\n    start = _limitValue(_lookupByKey(points, iScale.axis, min).lo, 0, pointCount - 1);\n  }\n  if (maxDefined) {\n    count = _limitValue(_lookupByKey(points, iScale.axis, max).hi + 1, start, pointCount) - start;\n  } else {\n    count = pointCount - start;\n  }\n\n  return {start, count};\n}\n\nexport default {\n  id: 'decimation',\n\n  defaults: {\n    algorithm: 'min-max',\n    enabled: false,\n  },\n\n  beforeElementsUpdate: (chart, args, options) => {\n    if (!options.enabled) {\n      // The decimation plugin may have been previously enabled. Need to remove old `dataset._data` handlers\n      cleanDecimatedData(chart);\n      return;\n    }\n\n    // Assume the entire chart is available to show a few more points than needed\n    const availableWidth = chart.width;\n\n    chart.data.datasets.forEach((dataset, datasetIndex) => {\n      const {_data, indexAxis} = dataset;\n      const meta = chart.getDatasetMeta(datasetIndex);\n      const data = _data || dataset.data;\n\n      if (resolve([indexAxis, chart.options.indexAxis]) === 'y') {\n        // Decimation is only supported for lines that have an X indexAxis\n        return;\n      }\n\n      if (!meta.controller.supportsDecimation) {\n        // Only line datasets are supported\n        return;\n      }\n\n      const xAxis = chart.scales[meta.xAxisID];\n      if (xAxis.type !== 'linear' && xAxis.type !== 'time') {\n        // Only linear interpolation is supported\n        return;\n      }\n\n      if (chart.options.parsing) {\n        // Plugin only supports data that does not need parsing\n        return;\n      }\n\n      let {start, count} = getStartAndCountOfVisiblePointsSimplified(meta, data);\n      const threshold = options.threshold || 4 * availableWidth;\n      if (count <= threshold) {\n        // No decimation is required until we are above this threshold\n        cleanDecimatedDataset(dataset);\n        return;\n      }\n\n      if (isNullOrUndef(_data)) {\n        // First time we are seeing this dataset\n        // We override the 'data' property with a setter that stores the\n        // raw data in _data, but reads the decimated data from _decimated\n        dataset._data = data;\n        delete dataset.data;\n        Object.defineProperty(dataset, 'data', {\n          configurable: true,\n          enumerable: true,\n          get: function() {\n            return this._decimated;\n          },\n          set: function(d) {\n            this._data = d;\n          }\n        });\n      }\n\n      // Point the chart to the decimated data\n      let decimated;\n      switch (options.algorithm) {\n      case 'lttb':\n        decimated = lttbDecimation(data, start, count, availableWidth, options);\n        break;\n      case 'min-max':\n        decimated = minMaxDecimation(data, start, count, availableWidth);\n        break;\n      default:\n        throw new Error(`Unsupported decimation algorithm '${options.algorithm}'`);\n      }\n\n      dataset._decimated = decimated;\n    });\n  },\n\n  destroy(chart) {\n    cleanDecimatedData(chart);\n  }\n};\n","import {_boundSegment, _boundSegments, _normalizeAngle} from '../../helpers/index.js';\n\nexport function _segments(line, target, property) {\n  const segments = line.segments;\n  const points = line.points;\n  const tpoints = target.points;\n  const parts = [];\n\n  for (const segment of segments) {\n    let {start, end} = segment;\n    end = _findSegmentEnd(start, end, points);\n\n    const bounds = _getBounds(property, points[start], points[end], segment.loop);\n\n    if (!target.segments) {\n      // Special case for boundary not supporting `segments` (simpleArc)\n      // Bounds are provided as `target` for partial circle, or undefined for full circle\n      parts.push({\n        source: segment,\n        target: bounds,\n        start: points[start],\n        end: points[end]\n      });\n      continue;\n    }\n\n    // Get all segments from `target` that intersect the bounds of current segment of `line`\n    const targetSegments = _boundSegments(target, bounds);\n\n    for (const tgt of targetSegments) {\n      const subBounds = _getBounds(property, tpoints[tgt.start], tpoints[tgt.end], tgt.loop);\n      const fillSources = _boundSegment(segment, points, subBounds);\n\n      for (const fillSource of fillSources) {\n        parts.push({\n          source: fillSource,\n          target: tgt,\n          start: {\n            [property]: _getEdge(bounds, subBounds, 'start', Math.max)\n          },\n          end: {\n            [property]: _getEdge(bounds, subBounds, 'end', Math.min)\n          }\n        });\n      }\n    }\n  }\n  return parts;\n}\n\nexport function _getBounds(property, first, last, loop) {\n  if (loop) {\n    return;\n  }\n  let start = first[property];\n  let end = last[property];\n\n  if (property === 'angle') {\n    start = _normalizeAngle(start);\n    end = _normalizeAngle(end);\n  }\n  return {property, start, end};\n}\n\nexport function _pointsFromSegments(boundary, line) {\n  const {x = null, y = null} = boundary || {};\n  const linePoints = line.points;\n  const points = [];\n  line.segments.forEach(({start, end}) => {\n    end = _findSegmentEnd(start, end, linePoints);\n    const first = linePoints[start];\n    const last = linePoints[end];\n    if (y !== null) {\n      points.push({x: first.x, y});\n      points.push({x: last.x, y});\n    } else if (x !== null) {\n      points.push({x, y: first.y});\n      points.push({x, y: last.y});\n    }\n  });\n  return points;\n}\n\nexport function _findSegmentEnd(start, end, points) {\n  for (;end > start; end--) {\n    const point = points[end];\n    if (!isNaN(point.x) && !isNaN(point.y)) {\n      break;\n    }\n  }\n  return end;\n}\n\nfunction _getEdge(a, b, prop, fn) {\n  if (a && b) {\n    return fn(a[prop], b[prop]);\n  }\n  return a ? a[prop] : b ? b[prop] : 0;\n}\n","/**\n * @typedef { import('../../core/core.controller.js').default } Chart\n * @typedef { import('../../core/core.scale.js').default } Scale\n * @typedef { import('../../elements/element.point.js').default } PointElement\n */\n\nimport {LineElement} from '../../elements/index.js';\nimport {isArray} from '../../helpers/index.js';\nimport {_pointsFromSegments} from './filler.segment.js';\n\n/**\n * @param {PointElement[] | { x: number; y: number; }} boundary\n * @param {LineElement} line\n * @return {LineElement?}\n */\nexport function _createBoundaryLine(boundary, line) {\n  let points = [];\n  let _loop = false;\n\n  if (isArray(boundary)) {\n    _loop = true;\n    // @ts-ignore\n    points = boundary;\n  } else {\n    points = _pointsFromSegments(boundary, line);\n  }\n\n  return points.length ? new LineElement({\n    points,\n    options: {tension: 0},\n    _loop,\n    _fullLoop: _loop\n  }) : null;\n}\n\nexport function _shouldApplyFill(source) {\n  return source && source.fill !== false;\n}\n","import {isObject, isFinite, valueOrDefault} from '../../helpers/helpers.core.js';\n\n/**\n * @typedef { import('../../core/core.scale.js').default } Scale\n * @typedef { import('../../elements/element.line.js').default } LineElement\n * @typedef { import('../../types/index.js').FillTarget } FillTarget\n * @typedef { import('../../types/index.js').ComplexFillTarget } ComplexFillTarget\n */\n\nexport function _resolveTarget(sources, index, propagate) {\n  const source = sources[index];\n  let fill = source.fill;\n  const visited = [index];\n  let target;\n\n  if (!propagate) {\n    return fill;\n  }\n\n  while (fill !== false && visited.indexOf(fill) === -1) {\n    if (!isFinite(fill)) {\n      return fill;\n    }\n\n    target = sources[fill];\n    if (!target) {\n      return false;\n    }\n\n    if (target.visible) {\n      return fill;\n    }\n\n    visited.push(fill);\n    fill = target.fill;\n  }\n\n  return false;\n}\n\n/**\n * @param {LineElement} line\n * @param {number} index\n * @param {number} count\n */\nexport function _decodeFill(line, index, count) {\n  /** @type {string | {value: number}} */\n  const fill = parseFillOption(line);\n\n  if (isObject(fill)) {\n    return isNaN(fill.value) ? false : fill;\n  }\n\n  let target = parseFloat(fill);\n\n  if (isFinite(target) && Math.floor(target) === target) {\n    return decodeTargetIndex(fill[0], index, target, count);\n  }\n\n  return ['origin', 'start', 'end', 'stack', 'shape'].indexOf(fill) >= 0 && fill;\n}\n\nfunction decodeTargetIndex(firstCh, index, target, count) {\n  if (firstCh === '-' || firstCh === '+') {\n    target = index + target;\n  }\n\n  if (target === index || target < 0 || target >= count) {\n    return false;\n  }\n\n  return target;\n}\n\n/**\n * @param {FillTarget | ComplexFillTarget} fill\n * @param {Scale} scale\n * @returns {number | null}\n */\nexport function _getTargetPixel(fill, scale) {\n  let pixel = null;\n  if (fill === 'start') {\n    pixel = scale.bottom;\n  } else if (fill === 'end') {\n    pixel = scale.top;\n  } else if (isObject(fill)) {\n    // @ts-ignore\n    pixel = scale.getPixelForValue(fill.value);\n  } else if (scale.getBasePixel) {\n    pixel = scale.getBasePixel();\n  }\n  return pixel;\n}\n\n/**\n * @param {FillTarget | ComplexFillTarget} fill\n * @param {Scale} scale\n * @param {number} startValue\n * @returns {number | undefined}\n */\nexport function _getTargetValue(fill, scale, startValue) {\n  let value;\n\n  if (fill === 'start') {\n    value = startValue;\n  } else if (fill === 'end') {\n    value = scale.options.reverse ? scale.min : scale.max;\n  } else if (isObject(fill)) {\n    // @ts-ignore\n    value = fill.value;\n  } else {\n    value = scale.getBaseValue();\n  }\n  return value;\n}\n\n/**\n * @param {LineElement} line\n */\nfunction parseFillOption(line) {\n  const options = line.options;\n  const fillOption = options.fill;\n  let fill = valueOrDefault(fillOption && fillOption.target, fillOption);\n\n  if (fill === undefined) {\n    fill = !!options.backgroundColor;\n  }\n\n  if (fill === false || fill === null) {\n    return false;\n  }\n\n  if (fill === true) {\n    return 'origin';\n  }\n  return fill;\n}\n","/**\n * @typedef { import('../../core/core.controller.js').default } Chart\n * @typedef { import('../../core/core.scale.js').default } Scale\n * @typedef { import('../../elements/element.point.js').default } PointElement\n */\n\nimport {LineElement} from '../../elements/index.js';\nimport {_isBetween} from '../../helpers/index.js';\nimport {_createBoundaryLine} from './filler.helper.js';\n\n/**\n * @param {{ chart: Chart; scale: Scale; index: number; line: LineElement; }} source\n * @return {LineElement}\n */\nexport function _buildStackLine(source) {\n  const {scale, index, line} = source;\n  const points = [];\n  const segments = line.segments;\n  const sourcePoints = line.points;\n  const linesBelow = getLinesBelow(scale, index);\n  linesBelow.push(_createBoundaryLine({x: null, y: scale.bottom}, line));\n\n  for (let i = 0; i < segments.length; i++) {\n    const segment = segments[i];\n    for (let j = segment.start; j <= segment.end; j++) {\n      addPointsBelow(points, sourcePoints[j], linesBelow);\n    }\n  }\n  return new LineElement({points, options: {}});\n}\n\n/**\n * @param {Scale} scale\n * @param {number} index\n * @return {LineElement[]}\n */\nfunction getLinesBelow(scale, index) {\n  const below = [];\n  const metas = scale.getMatchingVisibleMetas('line');\n\n  for (let i = 0; i < metas.length; i++) {\n    const meta = metas[i];\n    if (meta.index === index) {\n      break;\n    }\n    if (!meta.hidden) {\n      below.unshift(meta.dataset);\n    }\n  }\n  return below;\n}\n\n/**\n * @param {PointElement[]} points\n * @param {PointElement} sourcePoint\n * @param {LineElement[]} linesBelow\n */\nfunction addPointsBelow(points, sourcePoint, linesBelow) {\n  const postponed = [];\n  for (let j = 0; j < linesBelow.length; j++) {\n    const line = linesBelow[j];\n    const {first, last, point} = findPoint(line, sourcePoint, 'x');\n\n    if (!point || (first && last)) {\n      continue;\n    }\n    if (first) {\n      // First point of an segment -> need to add another point before this,\n      // from next line below.\n      postponed.unshift(point);\n    } else {\n      points.push(point);\n      if (!last) {\n        // In the middle of an segment, no need to add more points.\n        break;\n      }\n    }\n  }\n  points.push(...postponed);\n}\n\n/**\n * @param {LineElement} line\n * @param {PointElement} sourcePoint\n * @param {string} property\n * @returns {{point?: PointElement, first?: boolean, last?: boolean}}\n */\nfunction findPoint(line, sourcePoint, property) {\n  const point = line.interpolate(sourcePoint, property);\n  if (!point) {\n    return {};\n  }\n\n  const pointValue = point[property];\n  const segments = line.segments;\n  const linePoints = line.points;\n  let first = false;\n  let last = false;\n  for (let i = 0; i < segments.length; i++) {\n    const segment = segments[i];\n    const firstValue = linePoints[segment.start][property];\n    const lastValue = linePoints[segment.end][property];\n    if (_isBetween(pointValue, firstValue, lastValue)) {\n      first = pointValue === firstValue;\n      last = pointValue === lastValue;\n      break;\n    }\n  }\n  return {first, last, point};\n}\n","import {TAU} from '../../helpers/index.js';\n\n// TODO: use elements.ArcElement instead\nexport class simpleArc {\n  constructor(opts) {\n    this.x = opts.x;\n    this.y = opts.y;\n    this.radius = opts.radius;\n  }\n\n  pathSegment(ctx, bounds, opts) {\n    const {x, y, radius} = this;\n    bounds = bounds || {start: 0, end: TAU};\n    ctx.arc(x, y, radius, bounds.end, bounds.start, true);\n    return !opts.bounds;\n  }\n\n  interpolate(point) {\n    const {x, y, radius} = this;\n    const angle = point.angle;\n    return {\n      x: x + Math.cos(angle) * radius,\n      y: y + Math.sin(angle) * radius,\n      angle\n    };\n  }\n}\n","import {isFinite} from '../../helpers/index.js';\nimport {_createBoundaryLine} from './filler.helper.js';\nimport {_getTargetPixel, _getTargetValue} from './filler.options.js';\nimport {_buildStackLine} from './filler.target.stack.js';\nimport {simpleArc} from './simpleArc.js';\n\n/**\n * @typedef { import('../../core/core.controller.js').default } Chart\n * @typedef { import('../../core/core.scale.js').default } Scale\n * @typedef { import('../../elements/element.point.js').default } PointElement\n */\n\nexport function _getTarget(source) {\n  const {chart, fill, line} = source;\n\n  if (isFinite(fill)) {\n    return getLineByIndex(chart, fill);\n  }\n\n  if (fill === 'stack') {\n    return _buildStackLine(source);\n  }\n\n  if (fill === 'shape') {\n    return true;\n  }\n\n  const boundary = computeBoundary(source);\n\n  if (boundary instanceof simpleArc) {\n    return boundary;\n  }\n\n  return _createBoundaryLine(boundary, line);\n}\n\n/**\n * @param {Chart} chart\n * @param {number} index\n */\nfunction getLineByIndex(chart, index) {\n  const meta = chart.getDatasetMeta(index);\n  const visible = meta && chart.isDatasetVisible(index);\n  return visible ? meta.dataset : null;\n}\n\nfunction computeBoundary(source) {\n  const scale = source.scale || {};\n\n  if (scale.getPointPositionForValue) {\n    return computeCircularBoundary(source);\n  }\n  return computeLinearBoundary(source);\n}\n\n\nfunction computeLinearBoundary(source) {\n  const {scale = {}, fill} = source;\n  const pixel = _getTargetPixel(fill, scale);\n\n  if (isFinite(pixel)) {\n    const horizontal = scale.isHorizontal();\n\n    return {\n      x: horizontal ? pixel : null,\n      y: horizontal ? null : pixel\n    };\n  }\n\n  return null;\n}\n\nfunction computeCircularBoundary(source) {\n  const {scale, fill} = source;\n  const options = scale.options;\n  const length = scale.getLabels().length;\n  const start = options.reverse ? scale.max : scale.min;\n  const value = _getTargetValue(fill, scale, start);\n  const target = [];\n\n  if (options.grid.circular) {\n    const center = scale.getPointPositionForValue(0, start);\n    return new simpleArc({\n      x: center.x,\n      y: center.y,\n      radius: scale.getDistanceFromCenterForValue(value)\n    });\n  }\n\n  for (let i = 0; i < length; ++i) {\n    target.push(scale.getPointPositionForValue(i, value));\n  }\n  return target;\n}\n\n","import {clipArea, unclipArea} from '../../helpers/index.js';\nimport {_findSegmentEnd, _getBounds, _segments} from './filler.segment.js';\nimport {_getTarget} from './filler.target.js';\n\nexport function _drawfill(ctx, source, area) {\n  const target = _getTarget(source);\n  const {line, scale, axis} = source;\n  const lineOpts = line.options;\n  const fillOption = lineOpts.fill;\n  const color = lineOpts.backgroundColor;\n  const {above = color, below = color} = fillOption || {};\n  if (target && line.points.length) {\n    clipArea(ctx, area);\n    doFill(ctx, {line, target, above, below, area, scale, axis});\n    unclipArea(ctx);\n  }\n}\n\nfunction doFill(ctx, cfg) {\n  const {line, target, above, below, area, scale} = cfg;\n  const property = line._loop ? 'angle' : cfg.axis;\n\n  ctx.save();\n\n  if (property === 'x' && below !== above) {\n    clipVertical(ctx, target, area.top);\n    fill(ctx, {line, target, color: above, scale, property});\n    ctx.restore();\n    ctx.save();\n    clipVertical(ctx, target, area.bottom);\n  }\n  fill(ctx, {line, target, color: below, scale, property});\n\n  ctx.restore();\n}\n\nfunction clipVertical(ctx, target, clipY) {\n  const {segments, points} = target;\n  let first = true;\n  let lineLoop = false;\n\n  ctx.beginPath();\n  for (const segment of segments) {\n    const {start, end} = segment;\n    const firstPoint = points[start];\n    const lastPoint = points[_findSegmentEnd(start, end, points)];\n    if (first) {\n      ctx.moveTo(firstPoint.x, firstPoint.y);\n      first = false;\n    } else {\n      ctx.lineTo(firstPoint.x, clipY);\n      ctx.lineTo(firstPoint.x, firstPoint.y);\n    }\n    lineLoop = !!target.pathSegment(ctx, segment, {move: lineLoop});\n    if (lineLoop) {\n      ctx.closePath();\n    } else {\n      ctx.lineTo(lastPoint.x, clipY);\n    }\n  }\n\n  ctx.lineTo(target.first().x, clipY);\n  ctx.closePath();\n  ctx.clip();\n}\n\nfunction fill(ctx, cfg) {\n  const {line, target, property, color, scale} = cfg;\n  const segments = _segments(line, target, property);\n\n  for (const {source: src, target: tgt, start, end} of segments) {\n    const {style: {backgroundColor = color} = {}} = src;\n    const notShape = target !== true;\n\n    ctx.save();\n    ctx.fillStyle = backgroundColor;\n\n    clipBounds(ctx, scale, notShape && _getBounds(property, start, end));\n\n    ctx.beginPath();\n\n    const lineLoop = !!line.pathSegment(ctx, src);\n\n    let loop;\n    if (notShape) {\n      if (lineLoop) {\n        ctx.closePath();\n      } else {\n        interpolatedLineTo(ctx, target, end, property);\n      }\n\n      const targetLoop = !!target.pathSegment(ctx, tgt, {move: lineLoop, reverse: true});\n      loop = lineLoop && targetLoop;\n      if (!loop) {\n        interpolatedLineTo(ctx, target, start, property);\n      }\n    }\n\n    ctx.closePath();\n    ctx.fill(loop ? 'evenodd' : 'nonzero');\n\n    ctx.restore();\n  }\n}\n\nfunction clipBounds(ctx, scale, bounds) {\n  const {top, bottom} = scale.chart.chartArea;\n  const {property, start, end} = bounds || {};\n  if (property === 'x') {\n    ctx.beginPath();\n    ctx.rect(start, top, end - start, bottom - top);\n    ctx.clip();\n  }\n}\n\nfunction interpolatedLineTo(ctx, target, point, property) {\n  const interpolatedPoint = target.interpolate(point, property);\n  if (interpolatedPoint) {\n    ctx.lineTo(interpolatedPoint.x, interpolatedPoint.y);\n  }\n}\n\n","/**\n * Plugin based on discussion from the following Chart.js issues:\n * @see https://github.com/chartjs/Chart.js/issues/2380#issuecomment-279961569\n * @see https://github.com/chartjs/Chart.js/issues/2440#issuecomment-256461897\n */\n\nimport LineElement from '../../elements/element.line.js';\nimport {_drawfill} from './filler.drawing.js';\nimport {_shouldApplyFill} from './filler.helper.js';\nimport {_decodeFill, _resolveTarget} from './filler.options.js';\n\nexport default {\n  id: 'filler',\n\n  afterDatasetsUpdate(chart, _args, options) {\n    const count = (chart.data.datasets || []).length;\n    const sources = [];\n    let meta, i, line, source;\n\n    for (i = 0; i < count; ++i) {\n      meta = chart.getDatasetMeta(i);\n      line = meta.dataset;\n      source = null;\n\n      if (line && line.options && line instanceof LineElement) {\n        source = {\n          visible: chart.isDatasetVisible(i),\n          index: i,\n          fill: _decodeFill(line, i, count),\n          chart,\n          axis: meta.controller.options.indexAxis,\n          scale: meta.vScale,\n          line,\n        };\n      }\n\n      meta.$filler = source;\n      sources.push(source);\n    }\n\n    for (i = 0; i < count; ++i) {\n      source = sources[i];\n      if (!source || source.fill === false) {\n        continue;\n      }\n\n      source.fill = _resolveTarget(sources, i, options.propagate);\n    }\n  },\n\n  beforeDraw(chart, _args, options) {\n    const draw = options.drawTime === 'beforeDraw';\n    const metasets = chart.getSortedVisibleDatasetMetas();\n    const area = chart.chartArea;\n    for (let i = metasets.length - 1; i >= 0; --i) {\n      const source = metasets[i].$filler;\n      if (!source) {\n        continue;\n      }\n\n      source.line.updateControlPoints(area, source.axis);\n      if (draw && source.fill) {\n        _drawfill(chart.ctx, source, area);\n      }\n    }\n  },\n\n  beforeDatasetsDraw(chart, _args, options) {\n    if (options.drawTime !== 'beforeDatasetsDraw') {\n      return;\n    }\n\n    const metasets = chart.getSortedVisibleDatasetMetas();\n    for (let i = metasets.length - 1; i >= 0; --i) {\n      const source = metasets[i].$filler;\n\n      if (_shouldApplyFill(source)) {\n        _drawfill(chart.ctx, source, chart.chartArea);\n      }\n    }\n  },\n\n  beforeDatasetDraw(chart, args, options) {\n    const source = args.meta.$filler;\n\n    if (!_shouldApplyFill(source) || options.drawTime !== 'beforeDatasetDraw') {\n      return;\n    }\n\n    _drawfill(chart.ctx, source, chart.chartArea);\n  },\n\n  defaults: {\n    propagate: true,\n    drawTime: 'beforeDatasetDraw'\n  }\n};\n","import defaults from '../core/core.defaults.js';\nimport Element from '../core/core.element.js';\nimport layouts from '../core/core.layouts.js';\nimport {addRoundedRectPath, drawPointLegend, renderText} from '../helpers/helpers.canvas.js';\nimport {\n  _isBetween,\n  callback as call,\n  clipArea,\n  getRtlAdapter,\n  overrideTextDirection,\n  restoreTextDirection,\n  toFont,\n  toPadding,\n  unclipArea,\n  valueOrDefault,\n} from '../helpers/index.js';\nimport {_alignStartEnd, _textX, _toLeftRightCenter} from '../helpers/helpers.extras.js';\nimport {toTRBLCorners} from '../helpers/helpers.options.js';\n\n/**\n * @typedef { import('../types/index.js').ChartEvent } ChartEvent\n */\n\nconst getBoxSize = (labelOpts, fontSize) => {\n  let {boxHeight = fontSize, boxWidth = fontSize} = labelOpts;\n\n  if (labelOpts.usePointStyle) {\n    boxHeight = Math.min(boxHeight, fontSize);\n    boxWidth = labelOpts.pointStyleWidth || Math.min(boxWidth, fontSize);\n  }\n\n  return {\n    boxWidth,\n    boxHeight,\n    itemHeight: Math.max(fontSize, boxHeight)\n  };\n};\n\nconst itemsEqual = (a, b) => a !== null && b !== null && a.datasetIndex === b.datasetIndex && a.index === b.index;\n\nexport class Legend extends Element {\n\n  /**\n\t * @param {{ ctx: any; options: any; chart: any; }} config\n\t */\n  constructor(config) {\n    super();\n\n    this._added = false;\n\n    // Contains hit boxes for each dataset (in dataset order)\n    this.legendHitBoxes = [];\n\n    /**\n \t\t * @private\n \t\t */\n    this._hoveredItem = null;\n\n    // Are we in doughnut mode which has a different data type\n    this.doughnutMode = false;\n\n    this.chart = config.chart;\n    this.options = config.options;\n    this.ctx = config.ctx;\n    this.legendItems = undefined;\n    this.columnSizes = undefined;\n    this.lineWidths = undefined;\n    this.maxHeight = undefined;\n    this.maxWidth = undefined;\n    this.top = undefined;\n    this.bottom = undefined;\n    this.left = undefined;\n    this.right = undefined;\n    this.height = undefined;\n    this.width = undefined;\n    this._margins = undefined;\n    this.position = undefined;\n    this.weight = undefined;\n    this.fullSize = undefined;\n  }\n\n  update(maxWidth, maxHeight, margins) {\n    this.maxWidth = maxWidth;\n    this.maxHeight = maxHeight;\n    this._margins = margins;\n\n    this.setDimensions();\n    this.buildLabels();\n    this.fit();\n  }\n\n  setDimensions() {\n    if (this.isHorizontal()) {\n      this.width = this.maxWidth;\n      this.left = this._margins.left;\n      this.right = this.width;\n    } else {\n      this.height = this.maxHeight;\n      this.top = this._margins.top;\n      this.bottom = this.height;\n    }\n  }\n\n  buildLabels() {\n    const labelOpts = this.options.labels || {};\n    let legendItems = call(labelOpts.generateLabels, [this.chart], this) || [];\n\n    if (labelOpts.filter) {\n      legendItems = legendItems.filter((item) => labelOpts.filter(item, this.chart.data));\n    }\n\n    if (labelOpts.sort) {\n      legendItems = legendItems.sort((a, b) => labelOpts.sort(a, b, this.chart.data));\n    }\n\n    if (this.options.reverse) {\n      legendItems.reverse();\n    }\n\n    this.legendItems = legendItems;\n  }\n\n  fit() {\n    const {options, ctx} = this;\n\n    // The legend may not be displayed for a variety of reasons including\n    // the fact that the defaults got set to `false`.\n    // When the legend is not displayed, there are no guarantees that the options\n    // are correctly formatted so we need to bail out as early as possible.\n    if (!options.display) {\n      this.width = this.height = 0;\n      return;\n    }\n\n    const labelOpts = options.labels;\n    const labelFont = toFont(labelOpts.font);\n    const fontSize = labelFont.size;\n    const titleHeight = this._computeTitleHeight();\n    const {boxWidth, itemHeight} = getBoxSize(labelOpts, fontSize);\n\n    let width, height;\n\n    ctx.font = labelFont.string;\n\n    if (this.isHorizontal()) {\n      width = this.maxWidth; // fill all the width\n      height = this._fitRows(titleHeight, fontSize, boxWidth, itemHeight) + 10;\n    } else {\n      height = this.maxHeight; // fill all the height\n      width = this._fitCols(titleHeight, labelFont, boxWidth, itemHeight) + 10;\n    }\n\n    this.width = Math.min(width, options.maxWidth || this.maxWidth);\n    this.height = Math.min(height, options.maxHeight || this.maxHeight);\n  }\n\n  /**\n\t * @private\n\t */\n  _fitRows(titleHeight, fontSize, boxWidth, itemHeight) {\n    const {ctx, maxWidth, options: {labels: {padding}}} = this;\n    const hitboxes = this.legendHitBoxes = [];\n    // Width of each line of legend boxes. Labels wrap onto multiple lines when there are too many to fit on one\n    const lineWidths = this.lineWidths = [0];\n    const lineHeight = itemHeight + padding;\n    let totalHeight = titleHeight;\n\n    ctx.textAlign = 'left';\n    ctx.textBaseline = 'middle';\n\n    let row = -1;\n    let top = -lineHeight;\n    this.legendItems.forEach((legendItem, i) => {\n      const itemWidth = boxWidth + (fontSize / 2) + ctx.measureText(legendItem.text).width;\n\n      if (i === 0 || lineWidths[lineWidths.length - 1] + itemWidth + 2 * padding > maxWidth) {\n        totalHeight += lineHeight;\n        lineWidths[lineWidths.length - (i > 0 ? 0 : 1)] = 0;\n        top += lineHeight;\n        row++;\n      }\n\n      hitboxes[i] = {left: 0, top, row, width: itemWidth, height: itemHeight};\n\n      lineWidths[lineWidths.length - 1] += itemWidth + padding;\n    });\n\n    return totalHeight;\n  }\n\n  _fitCols(titleHeight, labelFont, boxWidth, _itemHeight) {\n    const {ctx, maxHeight, options: {labels: {padding}}} = this;\n    const hitboxes = this.legendHitBoxes = [];\n    const columnSizes = this.columnSizes = [];\n    const heightLimit = maxHeight - titleHeight;\n\n    let totalWidth = padding;\n    let currentColWidth = 0;\n    let currentColHeight = 0;\n\n    let left = 0;\n    let col = 0;\n\n    this.legendItems.forEach((legendItem, i) => {\n      const {itemWidth, itemHeight} = calculateItemSize(boxWidth, labelFont, ctx, legendItem, _itemHeight);\n\n      // If too tall, go to new column\n      if (i > 0 && currentColHeight + itemHeight + 2 * padding > heightLimit) {\n        totalWidth += currentColWidth + padding;\n        columnSizes.push({width: currentColWidth, height: currentColHeight}); // previous column size\n        left += currentColWidth + padding;\n        col++;\n        currentColWidth = currentColHeight = 0;\n      }\n\n      // Store the hitbox width and height here. Final position will be updated in `draw`\n      hitboxes[i] = {left, top: currentColHeight, col, width: itemWidth, height: itemHeight};\n\n      // Get max width\n      currentColWidth = Math.max(currentColWidth, itemWidth);\n      currentColHeight += itemHeight + padding;\n    });\n\n    totalWidth += currentColWidth;\n    columnSizes.push({width: currentColWidth, height: currentColHeight}); // previous column size\n\n    return totalWidth;\n  }\n\n  adjustHitBoxes() {\n    if (!this.options.display) {\n      return;\n    }\n    const titleHeight = this._computeTitleHeight();\n    const {legendHitBoxes: hitboxes, options: {align, labels: {padding}, rtl}} = this;\n    const rtlHelper = getRtlAdapter(rtl, this.left, this.width);\n    if (this.isHorizontal()) {\n      let row = 0;\n      let left = _alignStartEnd(align, this.left + padding, this.right - this.lineWidths[row]);\n      for (const hitbox of hitboxes) {\n        if (row !== hitbox.row) {\n          row = hitbox.row;\n          left = _alignStartEnd(align, this.left + padding, this.right - this.lineWidths[row]);\n        }\n        hitbox.top += this.top + titleHeight + padding;\n        hitbox.left = rtlHelper.leftForLtr(rtlHelper.x(left), hitbox.width);\n        left += hitbox.width + padding;\n      }\n    } else {\n      let col = 0;\n      let top = _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - this.columnSizes[col].height);\n      for (const hitbox of hitboxes) {\n        if (hitbox.col !== col) {\n          col = hitbox.col;\n          top = _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - this.columnSizes[col].height);\n        }\n        hitbox.top = top;\n        hitbox.left += this.left + padding;\n        hitbox.left = rtlHelper.leftForLtr(rtlHelper.x(hitbox.left), hitbox.width);\n        top += hitbox.height + padding;\n      }\n    }\n  }\n\n  isHorizontal() {\n    return this.options.position === 'top' || this.options.position === 'bottom';\n  }\n\n  draw() {\n    if (this.options.display) {\n      const ctx = this.ctx;\n      clipArea(ctx, this);\n\n      this._draw();\n\n      unclipArea(ctx);\n    }\n  }\n\n  /**\n\t * @private\n\t */\n  _draw() {\n    const {options: opts, columnSizes, lineWidths, ctx} = this;\n    const {align, labels: labelOpts} = opts;\n    const defaultColor = defaults.color;\n    const rtlHelper = getRtlAdapter(opts.rtl, this.left, this.width);\n    const labelFont = toFont(labelOpts.font);\n    const {padding} = labelOpts;\n    const fontSize = labelFont.size;\n    const halfFontSize = fontSize / 2;\n    let cursor;\n\n    this.drawTitle();\n\n    // Canvas setup\n    ctx.textAlign = rtlHelper.textAlign('left');\n    ctx.textBaseline = 'middle';\n    ctx.lineWidth = 0.5;\n    ctx.font = labelFont.string;\n\n    const {boxWidth, boxHeight, itemHeight} = getBoxSize(labelOpts, fontSize);\n\n    // current position\n    const drawLegendBox = function(x, y, legendItem) {\n      if (isNaN(boxWidth) || boxWidth <= 0 || isNaN(boxHeight) || boxHeight < 0) {\n        return;\n      }\n\n      // Set the ctx for the box\n      ctx.save();\n\n      const lineWidth = valueOrDefault(legendItem.lineWidth, 1);\n      ctx.fillStyle = valueOrDefault(legendItem.fillStyle, defaultColor);\n      ctx.lineCap = valueOrDefault(legendItem.lineCap, 'butt');\n      ctx.lineDashOffset = valueOrDefault(legendItem.lineDashOffset, 0);\n      ctx.lineJoin = valueOrDefault(legendItem.lineJoin, 'miter');\n      ctx.lineWidth = lineWidth;\n      ctx.strokeStyle = valueOrDefault(legendItem.strokeStyle, defaultColor);\n\n      ctx.setLineDash(valueOrDefault(legendItem.lineDash, []));\n\n      if (labelOpts.usePointStyle) {\n        // Recalculate x and y for drawPoint() because its expecting\n        // x and y to be center of figure (instead of top left)\n        const drawOptions = {\n          radius: boxHeight * Math.SQRT2 / 2,\n          pointStyle: legendItem.pointStyle,\n          rotation: legendItem.rotation,\n          borderWidth: lineWidth\n        };\n        const centerX = rtlHelper.xPlus(x, boxWidth / 2);\n        const centerY = y + halfFontSize;\n\n        // Draw pointStyle as legend symbol\n        drawPointLegend(ctx, drawOptions, centerX, centerY, labelOpts.pointStyleWidth && boxWidth);\n      } else {\n        // Draw box as legend symbol\n        // Adjust position when boxHeight < fontSize (want it centered)\n        const yBoxTop = y + Math.max((fontSize - boxHeight) / 2, 0);\n        const xBoxLeft = rtlHelper.leftForLtr(x, boxWidth);\n        const borderRadius = toTRBLCorners(legendItem.borderRadius);\n\n        ctx.beginPath();\n\n        if (Object.values(borderRadius).some(v => v !== 0)) {\n          addRoundedRectPath(ctx, {\n            x: xBoxLeft,\n            y: yBoxTop,\n            w: boxWidth,\n            h: boxHeight,\n            radius: borderRadius,\n          });\n        } else {\n          ctx.rect(xBoxLeft, yBoxTop, boxWidth, boxHeight);\n        }\n\n        ctx.fill();\n        if (lineWidth !== 0) {\n          ctx.stroke();\n        }\n      }\n\n      ctx.restore();\n    };\n\n    const fillText = function(x, y, legendItem) {\n      renderText(ctx, legendItem.text, x, y + (itemHeight / 2), labelFont, {\n        strikethrough: legendItem.hidden,\n        textAlign: rtlHelper.textAlign(legendItem.textAlign)\n      });\n    };\n\n    // Horizontal\n    const isHorizontal = this.isHorizontal();\n    const titleHeight = this._computeTitleHeight();\n    if (isHorizontal) {\n      cursor = {\n        x: _alignStartEnd(align, this.left + padding, this.right - lineWidths[0]),\n        y: this.top + padding + titleHeight,\n        line: 0\n      };\n    } else {\n      cursor = {\n        x: this.left + padding,\n        y: _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - columnSizes[0].height),\n        line: 0\n      };\n    }\n\n    overrideTextDirection(this.ctx, opts.textDirection);\n\n    const lineHeight = itemHeight + padding;\n    this.legendItems.forEach((legendItem, i) => {\n      ctx.strokeStyle = legendItem.fontColor; // for strikethrough effect\n      ctx.fillStyle = legendItem.fontColor; // render in correct colour\n\n      const textWidth = ctx.measureText(legendItem.text).width;\n      const textAlign = rtlHelper.textAlign(legendItem.textAlign || (legendItem.textAlign = labelOpts.textAlign));\n      const width = boxWidth + halfFontSize + textWidth;\n      let x = cursor.x;\n      let y = cursor.y;\n\n      rtlHelper.setWidth(this.width);\n\n      if (isHorizontal) {\n        if (i > 0 && x + width + padding > this.right) {\n          y = cursor.y += lineHeight;\n          cursor.line++;\n          x = cursor.x = _alignStartEnd(align, this.left + padding, this.right - lineWidths[cursor.line]);\n        }\n      } else if (i > 0 && y + lineHeight > this.bottom) {\n        x = cursor.x = x + columnSizes[cursor.line].width + padding;\n        cursor.line++;\n        y = cursor.y = _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - columnSizes[cursor.line].height);\n      }\n\n      const realX = rtlHelper.x(x);\n\n      drawLegendBox(realX, y, legendItem);\n\n      x = _textX(textAlign, x + boxWidth + halfFontSize, isHorizontal ? x + width : this.right, opts.rtl);\n\n      // Fill the actual label\n      fillText(rtlHelper.x(x), y, legendItem);\n\n      if (isHorizontal) {\n        cursor.x += width + padding;\n      } else if (typeof legendItem.text !== 'string') {\n        const fontLineHeight = labelFont.lineHeight;\n        cursor.y += calculateLegendItemHeight(legendItem, fontLineHeight) + padding;\n      } else {\n        cursor.y += lineHeight;\n      }\n    });\n\n    restoreTextDirection(this.ctx, opts.textDirection);\n  }\n\n  /**\n\t * @protected\n\t */\n  drawTitle() {\n    const opts = this.options;\n    const titleOpts = opts.title;\n    const titleFont = toFont(titleOpts.font);\n    const titlePadding = toPadding(titleOpts.padding);\n\n    if (!titleOpts.display) {\n      return;\n    }\n\n    const rtlHelper = getRtlAdapter(opts.rtl, this.left, this.width);\n    const ctx = this.ctx;\n    const position = titleOpts.position;\n    const halfFontSize = titleFont.size / 2;\n    const topPaddingPlusHalfFontSize = titlePadding.top + halfFontSize;\n    let y;\n\n    // These defaults are used when the legend is vertical.\n    // When horizontal, they are computed below.\n    let left = this.left;\n    let maxWidth = this.width;\n\n    if (this.isHorizontal()) {\n      // Move left / right so that the title is above the legend lines\n      maxWidth = Math.max(...this.lineWidths);\n      y = this.top + topPaddingPlusHalfFontSize;\n      left = _alignStartEnd(opts.align, left, this.right - maxWidth);\n    } else {\n      // Move down so that the title is above the legend stack in every alignment\n      const maxHeight = this.columnSizes.reduce((acc, size) => Math.max(acc, size.height), 0);\n      y = topPaddingPlusHalfFontSize + _alignStartEnd(opts.align, this.top, this.bottom - maxHeight - opts.labels.padding - this._computeTitleHeight());\n    }\n\n    // Now that we know the left edge of the inner legend box, compute the correct\n    // X coordinate from the title alignment\n    const x = _alignStartEnd(position, left, left + maxWidth);\n\n    // Canvas setup\n    ctx.textAlign = rtlHelper.textAlign(_toLeftRightCenter(position));\n    ctx.textBaseline = 'middle';\n    ctx.strokeStyle = titleOpts.color;\n    ctx.fillStyle = titleOpts.color;\n    ctx.font = titleFont.string;\n\n    renderText(ctx, titleOpts.text, x, y, titleFont);\n  }\n\n  /**\n\t * @private\n\t */\n  _computeTitleHeight() {\n    const titleOpts = this.options.title;\n    const titleFont = toFont(titleOpts.font);\n    const titlePadding = toPadding(titleOpts.padding);\n    return titleOpts.display ? titleFont.lineHeight + titlePadding.height : 0;\n  }\n\n  /**\n\t * @private\n\t */\n  _getLegendItemAt(x, y) {\n    let i, hitBox, lh;\n\n    if (_isBetween(x, this.left, this.right)\n      && _isBetween(y, this.top, this.bottom)) {\n      // See if we are touching one of the dataset boxes\n      lh = this.legendHitBoxes;\n      for (i = 0; i < lh.length; ++i) {\n        hitBox = lh[i];\n\n        if (_isBetween(x, hitBox.left, hitBox.left + hitBox.width)\n          && _isBetween(y, hitBox.top, hitBox.top + hitBox.height)) {\n          // Touching an element\n          return this.legendItems[i];\n        }\n      }\n    }\n\n    return null;\n  }\n\n  /**\n\t * Handle an event\n\t * @param {ChartEvent} e - The event to handle\n\t */\n  handleEvent(e) {\n    const opts = this.options;\n    if (!isListened(e.type, opts)) {\n      return;\n    }\n\n    // Chart event already has relative position in it\n    const hoveredItem = this._getLegendItemAt(e.x, e.y);\n\n    if (e.type === 'mousemove' || e.type === 'mouseout') {\n      const previous = this._hoveredItem;\n      const sameItem = itemsEqual(previous, hoveredItem);\n      if (previous && !sameItem) {\n        call(opts.onLeave, [e, previous, this], this);\n      }\n\n      this._hoveredItem = hoveredItem;\n\n      if (hoveredItem && !sameItem) {\n        call(opts.onHover, [e, hoveredItem, this], this);\n      }\n    } else if (hoveredItem) {\n      call(opts.onClick, [e, hoveredItem, this], this);\n    }\n  }\n}\n\nfunction calculateItemSize(boxWidth, labelFont, ctx, legendItem, _itemHeight) {\n  const itemWidth = calculateItemWidth(legendItem, boxWidth, labelFont, ctx);\n  const itemHeight = calculateItemHeight(_itemHeight, legendItem, labelFont.lineHeight);\n  return {itemWidth, itemHeight};\n}\n\nfunction calculateItemWidth(legendItem, boxWidth, labelFont, ctx) {\n  let legendItemText = legendItem.text;\n  if (legendItemText && typeof legendItemText !== 'string') {\n    legendItemText = legendItemText.reduce((a, b) => a.length > b.length ? a : b);\n  }\n  return boxWidth + (labelFont.size / 2) + ctx.measureText(legendItemText).width;\n}\n\nfunction calculateItemHeight(_itemHeight, legendItem, fontLineHeight) {\n  let itemHeight = _itemHeight;\n  if (typeof legendItem.text !== 'string') {\n    itemHeight = calculateLegendItemHeight(legendItem, fontLineHeight);\n  }\n  return itemHeight;\n}\n\nfunction calculateLegendItemHeight(legendItem, fontLineHeight) {\n  const labelHeight = legendItem.text ? legendItem.text.length : 0;\n  return fontLineHeight * labelHeight;\n}\n\nfunction isListened(type, opts) {\n  if ((type === 'mousemove' || type === 'mouseout') && (opts.onHover || opts.onLeave)) {\n    return true;\n  }\n  if (opts.onClick && (type === 'click' || type === 'mouseup')) {\n    return true;\n  }\n  return false;\n}\n\nexport default {\n  id: 'legend',\n\n  /**\n\t * For tests\n\t * @private\n\t */\n  _element: Legend,\n\n  start(chart, _args, options) {\n    const legend = chart.legend = new Legend({ctx: chart.ctx, options, chart});\n    layouts.configure(chart, legend, options);\n    layouts.addBox(chart, legend);\n  },\n\n  stop(chart) {\n    layouts.removeBox(chart, chart.legend);\n    delete chart.legend;\n  },\n\n  // During the beforeUpdate step, the layout configuration needs to run\n  // This ensures that if the legend position changes (via an option update)\n  // the layout system respects the change. See https://github.com/chartjs/Chart.js/issues/7527\n  beforeUpdate(chart, _args, options) {\n    const legend = chart.legend;\n    layouts.configure(chart, legend, options);\n    legend.options = options;\n  },\n\n  // The labels need to be built after datasets are updated to ensure that colors\n  // and other styling are correct. See https://github.com/chartjs/Chart.js/issues/6968\n  afterUpdate(chart) {\n    const legend = chart.legend;\n    legend.buildLabels();\n    legend.adjustHitBoxes();\n  },\n\n\n  afterEvent(chart, args) {\n    if (!args.replay) {\n      chart.legend.handleEvent(args.event);\n    }\n  },\n\n  defaults: {\n    display: true,\n    position: 'top',\n    align: 'center',\n    fullSize: true,\n    reverse: false,\n    weight: 1000,\n\n    // a callback that will handle\n    onClick(e, legendItem, legend) {\n      const index = legendItem.datasetIndex;\n      const ci = legend.chart;\n      if (ci.isDatasetVisible(index)) {\n        ci.hide(index);\n        legendItem.hidden = true;\n      } else {\n        ci.show(index);\n        legendItem.hidden = false;\n      }\n    },\n\n    onHover: null,\n    onLeave: null,\n\n    labels: {\n      color: (ctx) => ctx.chart.options.color,\n      boxWidth: 40,\n      padding: 10,\n      // Generates labels shown in the legend\n      // Valid properties to return:\n      // text : text to display\n      // fillStyle : fill of coloured box\n      // strokeStyle: stroke of coloured box\n      // hidden : if this legend item refers to a hidden item\n      // lineCap : cap style for line\n      // lineDash\n      // lineDashOffset :\n      // lineJoin :\n      // lineWidth :\n      generateLabels(chart) {\n        const datasets = chart.data.datasets;\n        const {labels: {usePointStyle, pointStyle, textAlign, color, useBorderRadius, borderRadius}} = chart.legend.options;\n\n        return chart._getSortedDatasetMetas().map((meta) => {\n          const style = meta.controller.getStyle(usePointStyle ? 0 : undefined);\n          const borderWidth = toPadding(style.borderWidth);\n\n          return {\n            text: datasets[meta.index].label,\n            fillStyle: style.backgroundColor,\n            fontColor: color,\n            hidden: !meta.visible,\n            lineCap: style.borderCapStyle,\n            lineDash: style.borderDash,\n            lineDashOffset: style.borderDashOffset,\n            lineJoin: style.borderJoinStyle,\n            lineWidth: (borderWidth.width + borderWidth.height) / 4,\n            strokeStyle: style.borderColor,\n            pointStyle: pointStyle || style.pointStyle,\n            rotation: style.rotation,\n            textAlign: textAlign || style.textAlign,\n            borderRadius: useBorderRadius && (borderRadius || style.borderRadius),\n\n            // Below is extra data used for toggling the datasets\n            datasetIndex: meta.index\n          };\n        }, this);\n      }\n    },\n\n    title: {\n      color: (ctx) => ctx.chart.options.color,\n      display: false,\n      position: 'center',\n      text: '',\n    }\n  },\n\n  descriptors: {\n    _scriptable: (name) => !name.startsWith('on'),\n    labels: {\n      _scriptable: (name) => !['generateLabels', 'filter', 'sort'].includes(name),\n    }\n  },\n};\n","import Element from '../core/core.element.js';\nimport layouts from '../core/core.layouts.js';\nimport {PI, isArray, toPadding, toFont} from '../helpers/index.js';\nimport {_toLeftRightCenter, _alignStartEnd} from '../helpers/helpers.extras.js';\nimport {renderText} from '../helpers/helpers.canvas.js';\n\nexport class Title extends Element {\n  /**\n\t * @param {{ ctx: any; options: any; chart: any; }} config\n\t */\n  constructor(config) {\n    super();\n\n    this.chart = config.chart;\n    this.options = config.options;\n    this.ctx = config.ctx;\n    this._padding = undefined;\n    this.top = undefined;\n    this.bottom = undefined;\n    this.left = undefined;\n    this.right = undefined;\n    this.width = undefined;\n    this.height = undefined;\n    this.position = undefined;\n    this.weight = undefined;\n    this.fullSize = undefined;\n  }\n\n  update(maxWidth, maxHeight) {\n    const opts = this.options;\n\n    this.left = 0;\n    this.top = 0;\n\n    if (!opts.display) {\n      this.width = this.height = this.right = this.bottom = 0;\n      return;\n    }\n\n    this.width = this.right = maxWidth;\n    this.height = this.bottom = maxHeight;\n\n    const lineCount = isArray(opts.text) ? opts.text.length : 1;\n    this._padding = toPadding(opts.padding);\n    const textSize = lineCount * toFont(opts.font).lineHeight + this._padding.height;\n\n    if (this.isHorizontal()) {\n      this.height = textSize;\n    } else {\n      this.width = textSize;\n    }\n  }\n\n  isHorizontal() {\n    const pos = this.options.position;\n    return pos === 'top' || pos === 'bottom';\n  }\n\n  _drawArgs(offset) {\n    const {top, left, bottom, right, options} = this;\n    const align = options.align;\n    let rotation = 0;\n    let maxWidth, titleX, titleY;\n\n    if (this.isHorizontal()) {\n      titleX = _alignStartEnd(align, left, right);\n      titleY = top + offset;\n      maxWidth = right - left;\n    } else {\n      if (options.position === 'left') {\n        titleX = left + offset;\n        titleY = _alignStartEnd(align, bottom, top);\n        rotation = PI * -0.5;\n      } else {\n        titleX = right - offset;\n        titleY = _alignStartEnd(align, top, bottom);\n        rotation = PI * 0.5;\n      }\n      maxWidth = bottom - top;\n    }\n    return {titleX, titleY, maxWidth, rotation};\n  }\n\n  draw() {\n    const ctx = this.ctx;\n    const opts = this.options;\n\n    if (!opts.display) {\n      return;\n    }\n\n    const fontOpts = toFont(opts.font);\n    const lineHeight = fontOpts.lineHeight;\n    const offset = lineHeight / 2 + this._padding.top;\n    const {titleX, titleY, maxWidth, rotation} = this._drawArgs(offset);\n\n    renderText(ctx, opts.text, 0, 0, fontOpts, {\n      color: opts.color,\n      maxWidth,\n      rotation,\n      textAlign: _toLeftRightCenter(opts.align),\n      textBaseline: 'middle',\n      translation: [titleX, titleY],\n    });\n  }\n}\n\nfunction createTitle(chart, titleOpts) {\n  const title = new Title({\n    ctx: chart.ctx,\n    options: titleOpts,\n    chart\n  });\n\n  layouts.configure(chart, title, titleOpts);\n  layouts.addBox(chart, title);\n  chart.titleBlock = title;\n}\n\nexport default {\n  id: 'title',\n\n  /**\n\t * For tests\n\t * @private\n\t */\n  _element: Title,\n\n  start(chart, _args, options) {\n    createTitle(chart, options);\n  },\n\n  stop(chart) {\n    const titleBlock = chart.titleBlock;\n    layouts.removeBox(chart, titleBlock);\n    delete chart.titleBlock;\n  },\n\n  beforeUpdate(chart, _args, options) {\n    const title = chart.titleBlock;\n    layouts.configure(chart, title, options);\n    title.options = options;\n  },\n\n  defaults: {\n    align: 'center',\n    display: false,\n    font: {\n      weight: 'bold',\n    },\n    fullSize: true,\n    padding: 10,\n    position: 'top',\n    text: '',\n    weight: 2000         // by default greater than legend (1000) to be above\n  },\n\n  defaultRoutes: {\n    color: 'color'\n  },\n\n  descriptors: {\n    _scriptable: true,\n    _indexable: false,\n  },\n};\n","import {Title} from './plugin.title.js';\nimport layouts from '../core/core.layouts.js';\n\nconst map = new WeakMap();\n\nexport default {\n  id: 'subtitle',\n\n  start(chart, _args, options) {\n    const title = new Title({\n      ctx: chart.ctx,\n      options,\n      chart\n    });\n\n    layouts.configure(chart, title, options);\n    layouts.addBox(chart, title);\n    map.set(chart, title);\n  },\n\n  stop(chart) {\n    layouts.removeBox(chart, map.get(chart));\n    map.delete(chart);\n  },\n\n  beforeUpdate(chart, _args, options) {\n    const title = map.get(chart);\n    layouts.configure(chart, title, options);\n    title.options = options;\n  },\n\n  defaults: {\n    align: 'center',\n    display: false,\n    font: {\n      weight: 'normal',\n    },\n    fullSize: true,\n    padding: 0,\n    position: 'top',\n    text: '',\n    weight: 1500         // by default greater than legend (1000) and smaller than title (2000)\n  },\n\n  defaultRoutes: {\n    color: 'color'\n  },\n\n  descriptors: {\n    _scriptable: true,\n    _indexable: false,\n  },\n};\n","import Animations from '../core/core.animations.js';\nimport Element from '../core/core.element.js';\nimport {addRoundedRectPath} from '../helpers/helpers.canvas.js';\nimport {each, noop, isNullOrUndef, isArray, _elementsEqual, isObject} from '../helpers/helpers.core.js';\nimport {toFont, toPadding, toTRBLCorners} from '../helpers/helpers.options.js';\nimport {getRtlAdapter, overrideTextDirection, restoreTextDirection} from '../helpers/helpers.rtl.js';\nimport {distanceBetweenPoints, _limitValue} from '../helpers/helpers.math.js';\nimport {createContext, drawPoint} from '../helpers/index.js';\n\n/**\n * @typedef { import('../platform/platform.base.js').Chart } Chart\n * @typedef { import('../types/index.js').ChartEvent } ChartEvent\n * @typedef { import('../types/index.js').ActiveElement } ActiveElement\n * @typedef { import('../core/core.interaction.js').InteractionItem } InteractionItem\n */\n\nconst positioners = {\n  /**\n\t * Average mode places the tooltip at the average position of the elements shown\n\t */\n  average(items) {\n    if (!items.length) {\n      return false;\n    }\n\n    let i, len;\n    let xSet = new Set();\n    let y = 0;\n    let count = 0;\n\n    for (i = 0, len = items.length; i < len; ++i) {\n      const el = items[i].element;\n      if (el && el.hasValue()) {\n        const pos = el.tooltipPosition();\n        xSet.add(pos.x);\n        y += pos.y;\n        ++count;\n      }\n    }\n\n    // No visible items where found, return false so we don't have to divide by 0 which reduces in NaN\n    if (count === 0 || xSet.size === 0) {\n      return false;\n    }\n\n    const xAverage = [...xSet].reduce((a, b) => a + b) / xSet.size;\n\n    return {\n      x: xAverage,\n      y: y / count\n    };\n  },\n\n  /**\n\t * Gets the tooltip position nearest of the item nearest to the event position\n\t */\n  nearest(items, eventPosition) {\n    if (!items.length) {\n      return false;\n    }\n\n    let x = eventPosition.x;\n    let y = eventPosition.y;\n    let minDistance = Number.POSITIVE_INFINITY;\n    let i, len, nearestElement;\n\n    for (i = 0, len = items.length; i < len; ++i) {\n      const el = items[i].element;\n      if (el && el.hasValue()) {\n        const center = el.getCenterPoint();\n        const d = distanceBetweenPoints(eventPosition, center);\n\n        if (d < minDistance) {\n          minDistance = d;\n          nearestElement = el;\n        }\n      }\n    }\n\n    if (nearestElement) {\n      const tp = nearestElement.tooltipPosition();\n      x = tp.x;\n      y = tp.y;\n    }\n\n    return {\n      x,\n      y\n    };\n  }\n};\n\n// Helper to push or concat based on if the 2nd parameter is an array or not\nfunction pushOrConcat(base, toPush) {\n  if (toPush) {\n    if (isArray(toPush)) {\n      // base = base.concat(toPush);\n      Array.prototype.push.apply(base, toPush);\n    } else {\n      base.push(toPush);\n    }\n  }\n\n  return base;\n}\n\n/**\n * Returns array of strings split by newline\n * @param {*} str - The value to split by newline.\n * @returns {string|string[]} value if newline present - Returned from String split() method\n * @function\n */\nfunction splitNewlines(str) {\n  if ((typeof str === 'string' || str instanceof String) && str.indexOf('\\n') > -1) {\n    return str.split('\\n');\n  }\n  return str;\n}\n\n\n/**\n * Private helper to create a tooltip item model\n * @param {Chart} chart\n * @param {ActiveElement} item - {element, index, datasetIndex} to create the tooltip item for\n * @return new tooltip item\n */\nfunction createTooltipItem(chart, item) {\n  const {element, datasetIndex, index} = item;\n  const controller = chart.getDatasetMeta(datasetIndex).controller;\n  const {label, value} = controller.getLabelAndValue(index);\n\n  return {\n    chart,\n    label,\n    parsed: controller.getParsed(index),\n    raw: chart.data.datasets[datasetIndex].data[index],\n    formattedValue: value,\n    dataset: controller.getDataset(),\n    dataIndex: index,\n    datasetIndex,\n    element\n  };\n}\n\n/**\n * Get the size of the tooltip\n */\nfunction getTooltipSize(tooltip, options) {\n  const ctx = tooltip.chart.ctx;\n  const {body, footer, title} = tooltip;\n  const {boxWidth, boxHeight} = options;\n  const bodyFont = toFont(options.bodyFont);\n  const titleFont = toFont(options.titleFont);\n  const footerFont = toFont(options.footerFont);\n  const titleLineCount = title.length;\n  const footerLineCount = footer.length;\n  const bodyLineItemCount = body.length;\n\n  const padding = toPadding(options.padding);\n  let height = padding.height;\n  let width = 0;\n\n  // Count of all lines in the body\n  let combinedBodyLength = body.reduce((count, bodyItem) => count + bodyItem.before.length + bodyItem.lines.length + bodyItem.after.length, 0);\n  combinedBodyLength += tooltip.beforeBody.length + tooltip.afterBody.length;\n\n  if (titleLineCount) {\n    height += titleLineCount * titleFont.lineHeight\n\t\t\t+ (titleLineCount - 1) * options.titleSpacing\n\t\t\t+ options.titleMarginBottom;\n  }\n  if (combinedBodyLength) {\n    // Body lines may include some extra height depending on boxHeight\n    const bodyLineHeight = options.displayColors ? Math.max(boxHeight, bodyFont.lineHeight) : bodyFont.lineHeight;\n    height += bodyLineItemCount * bodyLineHeight\n\t\t\t+ (combinedBodyLength - bodyLineItemCount) * bodyFont.lineHeight\n\t\t\t+ (combinedBodyLength - 1) * options.bodySpacing;\n  }\n  if (footerLineCount) {\n    height += options.footerMarginTop\n\t\t\t+ footerLineCount * footerFont.lineHeight\n\t\t\t+ (footerLineCount - 1) * options.footerSpacing;\n  }\n\n  // Title width\n  let widthPadding = 0;\n  const maxLineWidth = function(line) {\n    width = Math.max(width, ctx.measureText(line).width + widthPadding);\n  };\n\n  ctx.save();\n\n  ctx.font = titleFont.string;\n  each(tooltip.title, maxLineWidth);\n\n  // Body width\n  ctx.font = bodyFont.string;\n  each(tooltip.beforeBody.concat(tooltip.afterBody), maxLineWidth);\n\n  // Body lines may include some extra width due to the color box\n  widthPadding = options.displayColors ? (boxWidth + 2 + options.boxPadding) : 0;\n  each(body, (bodyItem) => {\n    each(bodyItem.before, maxLineWidth);\n    each(bodyItem.lines, maxLineWidth);\n    each(bodyItem.after, maxLineWidth);\n  });\n\n  // Reset back to 0\n  widthPadding = 0;\n\n  // Footer width\n  ctx.font = footerFont.string;\n  each(tooltip.footer, maxLineWidth);\n\n  ctx.restore();\n\n  // Add padding\n  width += padding.width;\n\n  return {width, height};\n}\n\nfunction determineYAlign(chart, size) {\n  const {y, height} = size;\n\n  if (y < height / 2) {\n    return 'top';\n  } else if (y > (chart.height - height / 2)) {\n    return 'bottom';\n  }\n  return 'center';\n}\n\nfunction doesNotFitWithAlign(xAlign, chart, options, size) {\n  const {x, width} = size;\n  const caret = options.caretSize + options.caretPadding;\n  if (xAlign === 'left' && x + width + caret > chart.width) {\n    return true;\n  }\n\n  if (xAlign === 'right' && x - width - caret < 0) {\n    return true;\n  }\n}\n\nfunction determineXAlign(chart, options, size, yAlign) {\n  const {x, width} = size;\n  const {width: chartWidth, chartArea: {left, right}} = chart;\n  let xAlign = 'center';\n\n  if (yAlign === 'center') {\n    xAlign = x <= (left + right) / 2 ? 'left' : 'right';\n  } else if (x <= width / 2) {\n    xAlign = 'left';\n  } else if (x >= chartWidth - width / 2) {\n    xAlign = 'right';\n  }\n\n  if (doesNotFitWithAlign(xAlign, chart, options, size)) {\n    xAlign = 'center';\n  }\n\n  return xAlign;\n}\n\n/**\n * Helper to get the alignment of a tooltip given the size\n */\nfunction determineAlignment(chart, options, size) {\n  const yAlign = size.yAlign || options.yAlign || determineYAlign(chart, size);\n\n  return {\n    xAlign: size.xAlign || options.xAlign || determineXAlign(chart, options, size, yAlign),\n    yAlign\n  };\n}\n\nfunction alignX(size, xAlign) {\n  let {x, width} = size;\n  if (xAlign === 'right') {\n    x -= width;\n  } else if (xAlign === 'center') {\n    x -= (width / 2);\n  }\n  return x;\n}\n\nfunction alignY(size, yAlign, paddingAndSize) {\n  // eslint-disable-next-line prefer-const\n  let {y, height} = size;\n  if (yAlign === 'top') {\n    y += paddingAndSize;\n  } else if (yAlign === 'bottom') {\n    y -= height + paddingAndSize;\n  } else {\n    y -= (height / 2);\n  }\n  return y;\n}\n\n/**\n * Helper to get the location a tooltip needs to be placed at given the initial position (via the vm) and the size and alignment\n */\nfunction getBackgroundPoint(options, size, alignment, chart) {\n  const {caretSize, caretPadding, cornerRadius} = options;\n  const {xAlign, yAlign} = alignment;\n  const paddingAndSize = caretSize + caretPadding;\n  const {topLeft, topRight, bottomLeft, bottomRight} = toTRBLCorners(cornerRadius);\n\n  let x = alignX(size, xAlign);\n  const y = alignY(size, yAlign, paddingAndSize);\n\n  if (yAlign === 'center') {\n    if (xAlign === 'left') {\n      x += paddingAndSize;\n    } else if (xAlign === 'right') {\n      x -= paddingAndSize;\n    }\n  } else if (xAlign === 'left') {\n    x -= Math.max(topLeft, bottomLeft) + caretSize;\n  } else if (xAlign === 'right') {\n    x += Math.max(topRight, bottomRight) + caretSize;\n  }\n\n  return {\n    x: _limitValue(x, 0, chart.width - size.width),\n    y: _limitValue(y, 0, chart.height - size.height)\n  };\n}\n\nfunction getAlignedX(tooltip, align, options) {\n  const padding = toPadding(options.padding);\n\n  return align === 'center'\n    ? tooltip.x + tooltip.width / 2\n    : align === 'right'\n      ? tooltip.x + tooltip.width - padding.right\n      : tooltip.x + padding.left;\n}\n\n/**\n * Helper to build before and after body lines\n */\nfunction getBeforeAfterBodyLines(callback) {\n  return pushOrConcat([], splitNewlines(callback));\n}\n\nfunction createTooltipContext(parent, tooltip, tooltipItems) {\n  return createContext(parent, {\n    tooltip,\n    tooltipItems,\n    type: 'tooltip'\n  });\n}\n\nfunction overrideCallbacks(callbacks, context) {\n  const override = context && context.dataset && context.dataset.tooltip && context.dataset.tooltip.callbacks;\n  return override ? callbacks.override(override) : callbacks;\n}\n\nconst defaultCallbacks = {\n  // Args are: (tooltipItems, data)\n  beforeTitle: noop,\n  title(tooltipItems) {\n    if (tooltipItems.length > 0) {\n      const item = tooltipItems[0];\n      const labels = item.chart.data.labels;\n      const labelCount = labels ? labels.length : 0;\n\n      if (this && this.options && this.options.mode === 'dataset') {\n        return item.dataset.label || '';\n      } else if (item.label) {\n        return item.label;\n      } else if (labelCount > 0 && item.dataIndex < labelCount) {\n        return labels[item.dataIndex];\n      }\n    }\n\n    return '';\n  },\n  afterTitle: noop,\n\n  // Args are: (tooltipItems, data)\n  beforeBody: noop,\n\n  // Args are: (tooltipItem, data)\n  beforeLabel: noop,\n  label(tooltipItem) {\n    if (this && this.options && this.options.mode === 'dataset') {\n      return tooltipItem.label + ': ' + tooltipItem.formattedValue || tooltipItem.formattedValue;\n    }\n\n    let label = tooltipItem.dataset.label || '';\n\n    if (label) {\n      label += ': ';\n    }\n    const value = tooltipItem.formattedValue;\n    if (!isNullOrUndef(value)) {\n      label += value;\n    }\n    return label;\n  },\n  labelColor(tooltipItem) {\n    const meta = tooltipItem.chart.getDatasetMeta(tooltipItem.datasetIndex);\n    const options = meta.controller.getStyle(tooltipItem.dataIndex);\n    return {\n      borderColor: options.borderColor,\n      backgroundColor: options.backgroundColor,\n      borderWidth: options.borderWidth,\n      borderDash: options.borderDash,\n      borderDashOffset: options.borderDashOffset,\n      borderRadius: 0,\n    };\n  },\n  labelTextColor() {\n    return this.options.bodyColor;\n  },\n  labelPointStyle(tooltipItem) {\n    const meta = tooltipItem.chart.getDatasetMeta(tooltipItem.datasetIndex);\n    const options = meta.controller.getStyle(tooltipItem.dataIndex);\n    return {\n      pointStyle: options.pointStyle,\n      rotation: options.rotation,\n    };\n  },\n  afterLabel: noop,\n\n  // Args are: (tooltipItems, data)\n  afterBody: noop,\n\n  // Args are: (tooltipItems, data)\n  beforeFooter: noop,\n  footer: noop,\n  afterFooter: noop\n};\n\n/**\n * Invoke callback from object with context and arguments.\n * If callback returns `undefined`, then will be invoked default callback.\n * @param {Record<keyof typeof defaultCallbacks, Function>} callbacks\n * @param {keyof typeof defaultCallbacks} name\n * @param {*} ctx\n * @param {*} arg\n * @returns {any}\n */\nfunction invokeCallbackWithFallback(callbacks, name, ctx, arg) {\n  const result = callbacks[name].call(ctx, arg);\n\n  if (typeof result === 'undefined') {\n    return defaultCallbacks[name].call(ctx, arg);\n  }\n\n  return result;\n}\n\nexport class Tooltip extends Element {\n\n  /**\n   * @namespace Chart.Tooltip.positioners\n   */\n  static positioners = positioners;\n\n  constructor(config) {\n    super();\n\n    this.opacity = 0;\n    this._active = [];\n    this._eventPosition = undefined;\n    this._size = undefined;\n    this._cachedAnimations = undefined;\n    this._tooltipItems = [];\n    this.$animations = undefined;\n    this.$context = undefined;\n    this.chart = config.chart;\n    this.options = config.options;\n    this.dataPoints = undefined;\n    this.title = undefined;\n    this.beforeBody = undefined;\n    this.body = undefined;\n    this.afterBody = undefined;\n    this.footer = undefined;\n    this.xAlign = undefined;\n    this.yAlign = undefined;\n    this.x = undefined;\n    this.y = undefined;\n    this.height = undefined;\n    this.width = undefined;\n    this.caretX = undefined;\n    this.caretY = undefined;\n    // TODO: V4, make this private, rename to `_labelStyles`, and combine with `labelPointStyles`\n    // and `labelTextColors` to create a single variable\n    this.labelColors = undefined;\n    this.labelPointStyles = undefined;\n    this.labelTextColors = undefined;\n  }\n\n  initialize(options) {\n    this.options = options;\n    this._cachedAnimations = undefined;\n    this.$context = undefined;\n  }\n\n  /**\n\t * @private\n\t */\n  _resolveAnimations() {\n    const cached = this._cachedAnimations;\n\n    if (cached) {\n      return cached;\n    }\n\n    const chart = this.chart;\n    const options = this.options.setContext(this.getContext());\n    const opts = options.enabled && chart.options.animation && options.animations;\n    const animations = new Animations(this.chart, opts);\n    if (opts._cacheable) {\n      this._cachedAnimations = Object.freeze(animations);\n    }\n\n    return animations;\n  }\n\n  /**\n\t * @protected\n\t */\n  getContext() {\n    return this.$context ||\n\t\t\t(this.$context = createTooltipContext(this.chart.getContext(), this, this._tooltipItems));\n  }\n\n  getTitle(context, options) {\n    const {callbacks} = options;\n\n    const beforeTitle = invokeCallbackWithFallback(callbacks, 'beforeTitle', this, context);\n    const title = invokeCallbackWithFallback(callbacks, 'title', this, context);\n    const afterTitle = invokeCallbackWithFallback(callbacks, 'afterTitle', this, context);\n\n    let lines = [];\n    lines = pushOrConcat(lines, splitNewlines(beforeTitle));\n    lines = pushOrConcat(lines, splitNewlines(title));\n    lines = pushOrConcat(lines, splitNewlines(afterTitle));\n\n    return lines;\n  }\n\n  getBeforeBody(tooltipItems, options) {\n    return getBeforeAfterBodyLines(\n      invokeCallbackWithFallback(options.callbacks, 'beforeBody', this, tooltipItems)\n    );\n  }\n\n  getBody(tooltipItems, options) {\n    const {callbacks} = options;\n    const bodyItems = [];\n\n    each(tooltipItems, (context) => {\n      const bodyItem = {\n        before: [],\n        lines: [],\n        after: []\n      };\n      const scoped = overrideCallbacks(callbacks, context);\n      pushOrConcat(bodyItem.before, splitNewlines(invokeCallbackWithFallback(scoped, 'beforeLabel', this, context)));\n      pushOrConcat(bodyItem.lines, invokeCallbackWithFallback(scoped, 'label', this, context));\n      pushOrConcat(bodyItem.after, splitNewlines(invokeCallbackWithFallback(scoped, 'afterLabel', this, context)));\n\n      bodyItems.push(bodyItem);\n    });\n\n    return bodyItems;\n  }\n\n  getAfterBody(tooltipItems, options) {\n    return getBeforeAfterBodyLines(\n      invokeCallbackWithFallback(options.callbacks, 'afterBody', this, tooltipItems)\n    );\n  }\n\n  // Get the footer and beforeFooter and afterFooter lines\n  getFooter(tooltipItems, options) {\n    const {callbacks} = options;\n\n    const beforeFooter = invokeCallbackWithFallback(callbacks, 'beforeFooter', this, tooltipItems);\n    const footer = invokeCallbackWithFallback(callbacks, 'footer', this, tooltipItems);\n    const afterFooter = invokeCallbackWithFallback(callbacks, 'afterFooter', this, tooltipItems);\n\n    let lines = [];\n    lines = pushOrConcat(lines, splitNewlines(beforeFooter));\n    lines = pushOrConcat(lines, splitNewlines(footer));\n    lines = pushOrConcat(lines, splitNewlines(afterFooter));\n\n    return lines;\n  }\n\n  /**\n\t * @private\n\t */\n  _createItems(options) {\n    const active = this._active;\n    const data = this.chart.data;\n    const labelColors = [];\n    const labelPointStyles = [];\n    const labelTextColors = [];\n    let tooltipItems = [];\n    let i, len;\n\n    for (i = 0, len = active.length; i < len; ++i) {\n      tooltipItems.push(createTooltipItem(this.chart, active[i]));\n    }\n\n    // If the user provided a filter function, use it to modify the tooltip items\n    if (options.filter) {\n      tooltipItems = tooltipItems.filter((element, index, array) => options.filter(element, index, array, data));\n    }\n\n    // If the user provided a sorting function, use it to modify the tooltip items\n    if (options.itemSort) {\n      tooltipItems = tooltipItems.sort((a, b) => options.itemSort(a, b, data));\n    }\n\n    // Determine colors for boxes\n    each(tooltipItems, (context) => {\n      const scoped = overrideCallbacks(options.callbacks, context);\n      labelColors.push(invokeCallbackWithFallback(scoped, 'labelColor', this, context));\n      labelPointStyles.push(invokeCallbackWithFallback(scoped, 'labelPointStyle', this, context));\n      labelTextColors.push(invokeCallbackWithFallback(scoped, 'labelTextColor', this, context));\n    });\n\n    this.labelColors = labelColors;\n    this.labelPointStyles = labelPointStyles;\n    this.labelTextColors = labelTextColors;\n    this.dataPoints = tooltipItems;\n    return tooltipItems;\n  }\n\n  update(changed, replay) {\n    const options = this.options.setContext(this.getContext());\n    const active = this._active;\n    let properties;\n    let tooltipItems = [];\n\n    if (!active.length) {\n      if (this.opacity !== 0) {\n        properties = {\n          opacity: 0\n        };\n      }\n    } else {\n      const position = positioners[options.position].call(this, active, this._eventPosition);\n      tooltipItems = this._createItems(options);\n\n      this.title = this.getTitle(tooltipItems, options);\n      this.beforeBody = this.getBeforeBody(tooltipItems, options);\n      this.body = this.getBody(tooltipItems, options);\n      this.afterBody = this.getAfterBody(tooltipItems, options);\n      this.footer = this.getFooter(tooltipItems, options);\n\n      const size = this._size = getTooltipSize(this, options);\n      const positionAndSize = Object.assign({}, position, size);\n      const alignment = determineAlignment(this.chart, options, positionAndSize);\n      const backgroundPoint = getBackgroundPoint(options, positionAndSize, alignment, this.chart);\n\n      this.xAlign = alignment.xAlign;\n      this.yAlign = alignment.yAlign;\n\n      properties = {\n        opacity: 1,\n        x: backgroundPoint.x,\n        y: backgroundPoint.y,\n        width: size.width,\n        height: size.height,\n        caretX: position.x,\n        caretY: position.y\n      };\n    }\n\n    this._tooltipItems = tooltipItems;\n    this.$context = undefined;\n\n    if (properties) {\n      this._resolveAnimations().update(this, properties);\n    }\n\n    if (changed && options.external) {\n      options.external.call(this, {chart: this.chart, tooltip: this, replay});\n    }\n  }\n\n  drawCaret(tooltipPoint, ctx, size, options) {\n    const caretPosition = this.getCaretPosition(tooltipPoint, size, options);\n\n    ctx.lineTo(caretPosition.x1, caretPosition.y1);\n    ctx.lineTo(caretPosition.x2, caretPosition.y2);\n    ctx.lineTo(caretPosition.x3, caretPosition.y3);\n  }\n\n  getCaretPosition(tooltipPoint, size, options) {\n    const {xAlign, yAlign} = this;\n    const {caretSize, cornerRadius} = options;\n    const {topLeft, topRight, bottomLeft, bottomRight} = toTRBLCorners(cornerRadius);\n    const {x: ptX, y: ptY} = tooltipPoint;\n    const {width, height} = size;\n    let x1, x2, x3, y1, y2, y3;\n\n    if (yAlign === 'center') {\n      y2 = ptY + (height / 2);\n\n      if (xAlign === 'left') {\n        x1 = ptX;\n        x2 = x1 - caretSize;\n\n        // Left draws bottom -> top, this y1 is on the bottom\n        y1 = y2 + caretSize;\n        y3 = y2 - caretSize;\n      } else {\n        x1 = ptX + width;\n        x2 = x1 + caretSize;\n\n        // Right draws top -> bottom, thus y1 is on the top\n        y1 = y2 - caretSize;\n        y3 = y2 + caretSize;\n      }\n\n      x3 = x1;\n    } else {\n      if (xAlign === 'left') {\n        x2 = ptX + Math.max(topLeft, bottomLeft) + (caretSize);\n      } else if (xAlign === 'right') {\n        x2 = ptX + width - Math.max(topRight, bottomRight) - caretSize;\n      } else {\n        x2 = this.caretX;\n      }\n\n      if (yAlign === 'top') {\n        y1 = ptY;\n        y2 = y1 - caretSize;\n\n        // Top draws left -> right, thus x1 is on the left\n        x1 = x2 - caretSize;\n        x3 = x2 + caretSize;\n      } else {\n        y1 = ptY + height;\n        y2 = y1 + caretSize;\n\n        // Bottom draws right -> left, thus x1 is on the right\n        x1 = x2 + caretSize;\n        x3 = x2 - caretSize;\n      }\n      y3 = y1;\n    }\n    return {x1, x2, x3, y1, y2, y3};\n  }\n\n  drawTitle(pt, ctx, options) {\n    const title = this.title;\n    const length = title.length;\n    let titleFont, titleSpacing, i;\n\n    if (length) {\n      const rtlHelper = getRtlAdapter(options.rtl, this.x, this.width);\n\n      pt.x = getAlignedX(this, options.titleAlign, options);\n\n      ctx.textAlign = rtlHelper.textAlign(options.titleAlign);\n      ctx.textBaseline = 'middle';\n\n      titleFont = toFont(options.titleFont);\n      titleSpacing = options.titleSpacing;\n\n      ctx.fillStyle = options.titleColor;\n      ctx.font = titleFont.string;\n\n      for (i = 0; i < length; ++i) {\n        ctx.fillText(title[i], rtlHelper.x(pt.x), pt.y + titleFont.lineHeight / 2);\n        pt.y += titleFont.lineHeight + titleSpacing; // Line Height and spacing\n\n        if (i + 1 === length) {\n          pt.y += options.titleMarginBottom - titleSpacing; // If Last, add margin, remove spacing\n        }\n      }\n    }\n  }\n\n  /**\n\t * @private\n\t */\n  _drawColorBox(ctx, pt, i, rtlHelper, options) {\n    const labelColor = this.labelColors[i];\n    const labelPointStyle = this.labelPointStyles[i];\n    const {boxHeight, boxWidth} = options;\n    const bodyFont = toFont(options.bodyFont);\n    const colorX = getAlignedX(this, 'left', options);\n    const rtlColorX = rtlHelper.x(colorX);\n    const yOffSet = boxHeight < bodyFont.lineHeight ? (bodyFont.lineHeight - boxHeight) / 2 : 0;\n    const colorY = pt.y + yOffSet;\n\n    if (options.usePointStyle) {\n      const drawOptions = {\n        radius: Math.min(boxWidth, boxHeight) / 2, // fit the circle in the box\n        pointStyle: labelPointStyle.pointStyle,\n        rotation: labelPointStyle.rotation,\n        borderWidth: 1\n      };\n      // Recalculate x and y for drawPoint() because its expecting\n      // x and y to be center of figure (instead of top left)\n      const centerX = rtlHelper.leftForLtr(rtlColorX, boxWidth) + boxWidth / 2;\n      const centerY = colorY + boxHeight / 2;\n\n      // Fill the point with white so that colours merge nicely if the opacity is < 1\n      ctx.strokeStyle = options.multiKeyBackground;\n      ctx.fillStyle = options.multiKeyBackground;\n      drawPoint(ctx, drawOptions, centerX, centerY);\n\n      // Draw the point\n      ctx.strokeStyle = labelColor.borderColor;\n      ctx.fillStyle = labelColor.backgroundColor;\n      drawPoint(ctx, drawOptions, centerX, centerY);\n    } else {\n      // Border\n      ctx.lineWidth = isObject(labelColor.borderWidth) ? Math.max(...Object.values(labelColor.borderWidth)) : (labelColor.borderWidth || 1); // TODO, v4 remove fallback\n      ctx.strokeStyle = labelColor.borderColor;\n      ctx.setLineDash(labelColor.borderDash || []);\n      ctx.lineDashOffset = labelColor.borderDashOffset || 0;\n\n      // Fill a white rect so that colours merge nicely if the opacity is < 1\n      const outerX = rtlHelper.leftForLtr(rtlColorX, boxWidth);\n      const innerX = rtlHelper.leftForLtr(rtlHelper.xPlus(rtlColorX, 1), boxWidth - 2);\n      const borderRadius = toTRBLCorners(labelColor.borderRadius);\n\n      if (Object.values(borderRadius).some(v => v !== 0)) {\n        ctx.beginPath();\n        ctx.fillStyle = options.multiKeyBackground;\n        addRoundedRectPath(ctx, {\n          x: outerX,\n          y: colorY,\n          w: boxWidth,\n          h: boxHeight,\n          radius: borderRadius,\n        });\n        ctx.fill();\n        ctx.stroke();\n\n        // Inner square\n        ctx.fillStyle = labelColor.backgroundColor;\n        ctx.beginPath();\n        addRoundedRectPath(ctx, {\n          x: innerX,\n          y: colorY + 1,\n          w: boxWidth - 2,\n          h: boxHeight - 2,\n          radius: borderRadius,\n        });\n        ctx.fill();\n      } else {\n        // Normal rect\n        ctx.fillStyle = options.multiKeyBackground;\n        ctx.fillRect(outerX, colorY, boxWidth, boxHeight);\n        ctx.strokeRect(outerX, colorY, boxWidth, boxHeight);\n        // Inner square\n        ctx.fillStyle = labelColor.backgroundColor;\n        ctx.fillRect(innerX, colorY + 1, boxWidth - 2, boxHeight - 2);\n      }\n    }\n\n    // restore fillStyle\n    ctx.fillStyle = this.labelTextColors[i];\n  }\n\n  drawBody(pt, ctx, options) {\n    const {body} = this;\n    const {bodySpacing, bodyAlign, displayColors, boxHeight, boxWidth, boxPadding} = options;\n    const bodyFont = toFont(options.bodyFont);\n    let bodyLineHeight = bodyFont.lineHeight;\n    let xLinePadding = 0;\n\n    const rtlHelper = getRtlAdapter(options.rtl, this.x, this.width);\n\n    const fillLineOfText = function(line) {\n      ctx.fillText(line, rtlHelper.x(pt.x + xLinePadding), pt.y + bodyLineHeight / 2);\n      pt.y += bodyLineHeight + bodySpacing;\n    };\n\n    const bodyAlignForCalculation = rtlHelper.textAlign(bodyAlign);\n    let bodyItem, textColor, lines, i, j, ilen, jlen;\n\n    ctx.textAlign = bodyAlign;\n    ctx.textBaseline = 'middle';\n    ctx.font = bodyFont.string;\n\n    pt.x = getAlignedX(this, bodyAlignForCalculation, options);\n\n    // Before body lines\n    ctx.fillStyle = options.bodyColor;\n    each(this.beforeBody, fillLineOfText);\n\n    xLinePadding = displayColors && bodyAlignForCalculation !== 'right'\n      ? bodyAlign === 'center' ? (boxWidth / 2 + boxPadding) : (boxWidth + 2 + boxPadding)\n      : 0;\n\n    // Draw body lines now\n    for (i = 0, ilen = body.length; i < ilen; ++i) {\n      bodyItem = body[i];\n      textColor = this.labelTextColors[i];\n\n      ctx.fillStyle = textColor;\n      each(bodyItem.before, fillLineOfText);\n\n      lines = bodyItem.lines;\n      // Draw Legend-like boxes if needed\n      if (displayColors && lines.length) {\n        this._drawColorBox(ctx, pt, i, rtlHelper, options);\n        bodyLineHeight = Math.max(bodyFont.lineHeight, boxHeight);\n      }\n\n      for (j = 0, jlen = lines.length; j < jlen; ++j) {\n        fillLineOfText(lines[j]);\n        // Reset for any lines that don't include colorbox\n        bodyLineHeight = bodyFont.lineHeight;\n      }\n\n      each(bodyItem.after, fillLineOfText);\n    }\n\n    // Reset back to 0 for after body\n    xLinePadding = 0;\n    bodyLineHeight = bodyFont.lineHeight;\n\n    // After body lines\n    each(this.afterBody, fillLineOfText);\n    pt.y -= bodySpacing; // Remove last body spacing\n  }\n\n  drawFooter(pt, ctx, options) {\n    const footer = this.footer;\n    const length = footer.length;\n    let footerFont, i;\n\n    if (length) {\n      const rtlHelper = getRtlAdapter(options.rtl, this.x, this.width);\n\n      pt.x = getAlignedX(this, options.footerAlign, options);\n      pt.y += options.footerMarginTop;\n\n      ctx.textAlign = rtlHelper.textAlign(options.footerAlign);\n      ctx.textBaseline = 'middle';\n\n      footerFont = toFont(options.footerFont);\n\n      ctx.fillStyle = options.footerColor;\n      ctx.font = footerFont.string;\n\n      for (i = 0; i < length; ++i) {\n        ctx.fillText(footer[i], rtlHelper.x(pt.x), pt.y + footerFont.lineHeight / 2);\n        pt.y += footerFont.lineHeight + options.footerSpacing;\n      }\n    }\n  }\n\n  drawBackground(pt, ctx, tooltipSize, options) {\n    const {xAlign, yAlign} = this;\n    const {x, y} = pt;\n    const {width, height} = tooltipSize;\n    const {topLeft, topRight, bottomLeft, bottomRight} = toTRBLCorners(options.cornerRadius);\n\n    ctx.fillStyle = options.backgroundColor;\n    ctx.strokeStyle = options.borderColor;\n    ctx.lineWidth = options.borderWidth;\n\n    ctx.beginPath();\n    ctx.moveTo(x + topLeft, y);\n    if (yAlign === 'top') {\n      this.drawCaret(pt, ctx, tooltipSize, options);\n    }\n    ctx.lineTo(x + width - topRight, y);\n    ctx.quadraticCurveTo(x + width, y, x + width, y + topRight);\n    if (yAlign === 'center' && xAlign === 'right') {\n      this.drawCaret(pt, ctx, tooltipSize, options);\n    }\n    ctx.lineTo(x + width, y + height - bottomRight);\n    ctx.quadraticCurveTo(x + width, y + height, x + width - bottomRight, y + height);\n    if (yAlign === 'bottom') {\n      this.drawCaret(pt, ctx, tooltipSize, options);\n    }\n    ctx.lineTo(x + bottomLeft, y + height);\n    ctx.quadraticCurveTo(x, y + height, x, y + height - bottomLeft);\n    if (yAlign === 'center' && xAlign === 'left') {\n      this.drawCaret(pt, ctx, tooltipSize, options);\n    }\n    ctx.lineTo(x, y + topLeft);\n    ctx.quadraticCurveTo(x, y, x + topLeft, y);\n    ctx.closePath();\n\n    ctx.fill();\n\n    if (options.borderWidth > 0) {\n      ctx.stroke();\n    }\n  }\n\n  /**\n\t * Update x/y animation targets when _active elements are animating too\n\t * @private\n\t */\n  _updateAnimationTarget(options) {\n    const chart = this.chart;\n    const anims = this.$animations;\n    const animX = anims && anims.x;\n    const animY = anims && anims.y;\n    if (animX || animY) {\n      const position = positioners[options.position].call(this, this._active, this._eventPosition);\n      if (!position) {\n        return;\n      }\n      const size = this._size = getTooltipSize(this, options);\n      const positionAndSize = Object.assign({}, position, this._size);\n      const alignment = determineAlignment(chart, options, positionAndSize);\n      const point = getBackgroundPoint(options, positionAndSize, alignment, chart);\n      if (animX._to !== point.x || animY._to !== point.y) {\n        this.xAlign = alignment.xAlign;\n        this.yAlign = alignment.yAlign;\n        this.width = size.width;\n        this.height = size.height;\n        this.caretX = position.x;\n        this.caretY = position.y;\n        this._resolveAnimations().update(this, point);\n      }\n    }\n  }\n\n  /**\n   * Determine if the tooltip will draw anything\n   * @returns {boolean} True if the tooltip will render\n   */\n  _willRender() {\n    return !!this.opacity;\n  }\n\n  draw(ctx) {\n    const options = this.options.setContext(this.getContext());\n    let opacity = this.opacity;\n\n    if (!opacity) {\n      return;\n    }\n\n    this._updateAnimationTarget(options);\n\n    const tooltipSize = {\n      width: this.width,\n      height: this.height\n    };\n    const pt = {\n      x: this.x,\n      y: this.y\n    };\n\n    // IE11/Edge does not like very small opacities, so snap to 0\n    opacity = Math.abs(opacity) < 1e-3 ? 0 : opacity;\n\n    const padding = toPadding(options.padding);\n\n    // Truthy/falsey value for empty tooltip\n    const hasTooltipContent = this.title.length || this.beforeBody.length || this.body.length || this.afterBody.length || this.footer.length;\n\n    if (options.enabled && hasTooltipContent) {\n      ctx.save();\n      ctx.globalAlpha = opacity;\n\n      // Draw Background\n      this.drawBackground(pt, ctx, tooltipSize, options);\n\n      overrideTextDirection(ctx, options.textDirection);\n\n      pt.y += padding.top;\n\n      // Titles\n      this.drawTitle(pt, ctx, options);\n\n      // Body\n      this.drawBody(pt, ctx, options);\n\n      // Footer\n      this.drawFooter(pt, ctx, options);\n\n      restoreTextDirection(ctx, options.textDirection);\n\n      ctx.restore();\n    }\n  }\n\n  /**\n\t * Get active elements in the tooltip\n\t * @returns {Array} Array of elements that are active in the tooltip\n\t */\n  getActiveElements() {\n    return this._active || [];\n  }\n\n  /**\n\t * Set active elements in the tooltip\n\t * @param {array} activeElements Array of active datasetIndex/index pairs.\n\t * @param {object} eventPosition Synthetic event position used in positioning\n\t */\n  setActiveElements(activeElements, eventPosition) {\n    const lastActive = this._active;\n    const active = activeElements.map(({datasetIndex, index}) => {\n      const meta = this.chart.getDatasetMeta(datasetIndex);\n\n      if (!meta) {\n        throw new Error('Cannot find a dataset at index ' + datasetIndex);\n      }\n\n      return {\n        datasetIndex,\n        element: meta.data[index],\n        index,\n      };\n    });\n    const changed = !_elementsEqual(lastActive, active);\n    const positionChanged = this._positionChanged(active, eventPosition);\n\n    if (changed || positionChanged) {\n      this._active = active;\n      this._eventPosition = eventPosition;\n      this._ignoreReplayEvents = true;\n      this.update(true);\n    }\n  }\n\n  /**\n\t * Handle an event\n\t * @param {ChartEvent} e - The event to handle\n\t * @param {boolean} [replay] - This is a replayed event (from update)\n\t * @param {boolean} [inChartArea] - The event is inside chartArea\n\t * @returns {boolean} true if the tooltip changed\n\t */\n  handleEvent(e, replay, inChartArea = true) {\n    if (replay && this._ignoreReplayEvents) {\n      return false;\n    }\n    this._ignoreReplayEvents = false;\n\n    const options = this.options;\n    const lastActive = this._active || [];\n    const active = this._getActiveElements(e, lastActive, replay, inChartArea);\n\n    // When there are multiple items shown, but the tooltip position is nearest mode\n    // an update may need to be made because our position may have changed even though\n    // the items are the same as before.\n    const positionChanged = this._positionChanged(active, e);\n\n    // Remember Last Actives\n    const changed = replay || !_elementsEqual(active, lastActive) || positionChanged;\n\n    // Only handle target event on tooltip change\n    if (changed) {\n      this._active = active;\n\n      if (options.enabled || options.external) {\n        this._eventPosition = {\n          x: e.x,\n          y: e.y\n        };\n\n        this.update(true, replay);\n      }\n    }\n\n    return changed;\n  }\n\n  /**\n\t * Helper for determining the active elements for event\n\t * @param {ChartEvent} e - The event to handle\n\t * @param {InteractionItem[]} lastActive - Previously active elements\n\t * @param {boolean} [replay] - This is a replayed event (from update)\n\t * @param {boolean} [inChartArea] - The event is inside chartArea\n\t * @returns {InteractionItem[]} - Active elements\n\t * @private\n\t */\n  _getActiveElements(e, lastActive, replay, inChartArea) {\n    const options = this.options;\n\n    if (e.type === 'mouseout') {\n      return [];\n    }\n\n    if (!inChartArea) {\n      // Let user control the active elements outside chartArea. Eg. using Legend.\n      // But make sure that active elements are still valid.\n      return lastActive.filter(i =>\n        this.chart.data.datasets[i.datasetIndex] &&\n        this.chart.getDatasetMeta(i.datasetIndex).controller.getParsed(i.index) !== undefined\n      );\n    }\n\n    // Find Active Elements for tooltips\n    const active = this.chart.getElementsAtEventForMode(e, options.mode, options, replay);\n\n    if (options.reverse) {\n      active.reverse();\n    }\n\n    return active;\n  }\n\n  /**\n\t * Determine if the active elements + event combination changes the\n\t * tooltip position\n\t * @param {array} active - Active elements\n\t * @param {ChartEvent} e - Event that triggered the position change\n\t * @returns {boolean} True if the position has changed\n\t */\n  _positionChanged(active, e) {\n    const {caretX, caretY, options} = this;\n    const position = positioners[options.position].call(this, active, e);\n    return position !== false && (caretX !== position.x || caretY !== position.y);\n  }\n}\n\nexport default {\n  id: 'tooltip',\n  _element: Tooltip,\n  positioners,\n\n  afterInit(chart, _args, options) {\n    if (options) {\n      chart.tooltip = new Tooltip({chart, options});\n    }\n  },\n\n  beforeUpdate(chart, _args, options) {\n    if (chart.tooltip) {\n      chart.tooltip.initialize(options);\n    }\n  },\n\n  reset(chart, _args, options) {\n    if (chart.tooltip) {\n      chart.tooltip.initialize(options);\n    }\n  },\n\n  afterDraw(chart) {\n    const tooltip = chart.tooltip;\n\n    if (tooltip && tooltip._willRender()) {\n      const args = {\n        tooltip\n      };\n\n      if (chart.notifyPlugins('beforeTooltipDraw', {...args, cancelable: true}) === false) {\n        return;\n      }\n\n      tooltip.draw(chart.ctx);\n\n      chart.notifyPlugins('afterTooltipDraw', args);\n    }\n  },\n\n  afterEvent(chart, args) {\n    if (chart.tooltip) {\n      // If the event is replayed from `update`, we should evaluate with the final positions.\n      const useFinalPosition = args.replay;\n      if (chart.tooltip.handleEvent(args.event, useFinalPosition, args.inChartArea)) {\n        // notify chart about the change, so it will render\n        args.changed = true;\n      }\n    }\n  },\n\n  defaults: {\n    enabled: true,\n    external: null,\n    position: 'average',\n    backgroundColor: 'rgba(0,0,0,0.8)',\n    titleColor: '#fff',\n    titleFont: {\n      weight: 'bold',\n    },\n    titleSpacing: 2,\n    titleMarginBottom: 6,\n    titleAlign: 'left',\n    bodyColor: '#fff',\n    bodySpacing: 2,\n    bodyFont: {\n    },\n    bodyAlign: 'left',\n    footerColor: '#fff',\n    footerSpacing: 2,\n    footerMarginTop: 6,\n    footerFont: {\n      weight: 'bold',\n    },\n    footerAlign: 'left',\n    padding: 6,\n    caretPadding: 2,\n    caretSize: 5,\n    cornerRadius: 6,\n    boxHeight: (ctx, opts) => opts.bodyFont.size,\n    boxWidth: (ctx, opts) => opts.bodyFont.size,\n    multiKeyBackground: '#fff',\n    displayColors: true,\n    boxPadding: 0,\n    borderColor: 'rgba(0,0,0,0)',\n    borderWidth: 0,\n    animation: {\n      duration: 400,\n      easing: 'easeOutQuart',\n    },\n    animations: {\n      numbers: {\n        type: 'number',\n        properties: ['x', 'y', 'width', 'height', 'caretX', 'caretY'],\n      },\n      opacity: {\n        easing: 'linear',\n        duration: 200\n      }\n    },\n    callbacks: defaultCallbacks\n  },\n\n  defaultRoutes: {\n    bodyFont: 'font',\n    footerFont: 'font',\n    titleFont: 'font'\n  },\n\n  descriptors: {\n    _scriptable: (name) => name !== 'filter' && name !== 'itemSort' && name !== 'external',\n    _indexable: false,\n    callbacks: {\n      _scriptable: false,\n      _indexable: false,\n    },\n    animation: {\n      _fallback: false\n    },\n    animations: {\n      _fallback: 'animation'\n    }\n  },\n\n  // Resolve additionally from `interaction` options and defaults.\n  additionalOptionScopes: ['interaction']\n};\n","import Scale from '../core/core.scale.js';\nimport {isNullOrUndef, valueOrDefault, _limitValue} from '../helpers/index.js';\n\nconst addIfString = (labels, raw, index, addedLabels) => {\n  if (typeof raw === 'string') {\n    index = labels.push(raw) - 1;\n    addedLabels.unshift({index, label: raw});\n  } else if (isNaN(raw)) {\n    index = null;\n  }\n  return index;\n};\n\nfunction findOrAddLabel(labels, raw, index, addedLabels) {\n  const first = labels.indexOf(raw);\n  if (first === -1) {\n    return addIfString(labels, raw, index, addedLabels);\n  }\n  const last = labels.lastIndexOf(raw);\n  return first !== last ? index : first;\n}\n\nconst validIndex = (index, max) => index === null ? null : _limitValue(Math.round(index), 0, max);\n\nfunction _getLabelForValue(value) {\n  const labels = this.getLabels();\n\n  if (value >= 0 && value < labels.length) {\n    return labels[value];\n  }\n  return value;\n}\n\nexport default class CategoryScale extends Scale {\n\n  static id = 'category';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    ticks: {\n      callback: _getLabelForValue\n    }\n  };\n\n  constructor(cfg) {\n    super(cfg);\n\n    /** @type {number} */\n    this._startValue = undefined;\n    this._valueRange = 0;\n    this._addedLabels = [];\n  }\n\n  init(scaleOptions) {\n    const added = this._addedLabels;\n    if (added.length) {\n      const labels = this.getLabels();\n      for (const {index, label} of added) {\n        if (labels[index] === label) {\n          labels.splice(index, 1);\n        }\n      }\n      this._addedLabels = [];\n    }\n    super.init(scaleOptions);\n  }\n\n  parse(raw, index) {\n    if (isNullOrUndef(raw)) {\n      return null;\n    }\n    const labels = this.getLabels();\n    index = isFinite(index) && labels[index] === raw ? index\n      : findOrAddLabel(labels, raw, valueOrDefault(index, raw), this._addedLabels);\n    return validIndex(index, labels.length - 1);\n  }\n\n  determineDataLimits() {\n    const {minDefined, maxDefined} = this.getUserBounds();\n    let {min, max} = this.getMinMax(true);\n\n    if (this.options.bounds === 'ticks') {\n      if (!minDefined) {\n        min = 0;\n      }\n      if (!maxDefined) {\n        max = this.getLabels().length - 1;\n      }\n    }\n\n    this.min = min;\n    this.max = max;\n  }\n\n  buildTicks() {\n    const min = this.min;\n    const max = this.max;\n    const offset = this.options.offset;\n    const ticks = [];\n    let labels = this.getLabels();\n\n    // If we are viewing some subset of labels, slice the original array\n    labels = (min === 0 && max === labels.length - 1) ? labels : labels.slice(min, max + 1);\n\n    this._valueRange = Math.max(labels.length - (offset ? 0 : 1), 1);\n    this._startValue = this.min - (offset ? 0.5 : 0);\n\n    for (let value = min; value <= max; value++) {\n      ticks.push({value});\n    }\n    return ticks;\n  }\n\n  getLabelForValue(value) {\n    return _getLabelForValue.call(this, value);\n  }\n\n  /**\n\t * @protected\n\t */\n  configure() {\n    super.configure();\n\n    if (!this.isHorizontal()) {\n      // For backward compatibility, vertical category scale reverse is inverted.\n      this._reversePixels = !this._reversePixels;\n    }\n  }\n\n  // Used to get data value locations. Value can either be an index or a numerical value\n  getPixelForValue(value) {\n    if (typeof value !== 'number') {\n      value = this.parse(value);\n    }\n\n    return value === null ? NaN : this.getPixelForDecimal((value - this._startValue) / this._valueRange);\n  }\n\n  // Must override base implementation because it calls getPixelForValue\n  // and category scale can have duplicate values\n  getPixelForTick(index) {\n    const ticks = this.ticks;\n    if (index < 0 || index > ticks.length - 1) {\n      return null;\n    }\n    return this.getPixelForValue(ticks[index].value);\n  }\n\n  getValueForPixel(pixel) {\n    return Math.round(this._startValue + this.getDecimalForPixel(pixel) * this._valueRange);\n  }\n\n  getBasePixel() {\n    return this.bottom;\n  }\n}\n","import {isNullOrUndef} from '../helpers/helpers.core.js';\nimport {almostEquals, almostWhole, niceNum, _decimalPlaces, _setMinAndMaxByKey, sign, toRadians} from '../helpers/helpers.math.js';\nimport Scale from '../core/core.scale.js';\nimport {formatNumber} from '../helpers/helpers.intl.js';\n\n/**\n * Generate a set of linear ticks for an axis\n * 1. If generationOptions.min, generationOptions.max, and generationOptions.step are defined:\n *    if (max - min) / step is an integer, ticks are generated as [min, min + step, ..., max]\n *    Note that the generationOptions.maxCount setting is respected in this scenario\n *\n * 2. If generationOptions.min, generationOptions.max, and generationOptions.count is defined\n *    spacing = (max - min) / count\n *    Ticks are generated as [min, min + spacing, ..., max]\n *\n * 3. If generationOptions.count is defined\n *    spacing = (niceMax - niceMin) / count\n *\n * 4. Compute optimal spacing of ticks using niceNum algorithm\n *\n * @param generationOptions the options used to generate the ticks\n * @param dataRange the range of the data\n * @returns {object[]} array of tick objects\n */\nfunction generateTicks(generationOptions, dataRange) {\n  const ticks = [];\n  // To get a \"nice\" value for the tick spacing, we will use the appropriately named\n  // \"nice number\" algorithm. See https://stackoverflow.com/questions/8506881/nice-label-algorithm-for-charts-with-minimum-ticks\n  // for details.\n\n  const MIN_SPACING = 1e-14;\n  const {bounds, step, min, max, precision, count, maxTicks, maxDigits, includeBounds} = generationOptions;\n  const unit = step || 1;\n  const maxSpaces = maxTicks - 1;\n  const {min: rmin, max: rmax} = dataRange;\n  const minDefined = !isNullOrUndef(min);\n  const maxDefined = !isNullOrUndef(max);\n  const countDefined = !isNullOrUndef(count);\n  const minSpacing = (rmax - rmin) / (maxDigits + 1);\n  let spacing = niceNum((rmax - rmin) / maxSpaces / unit) * unit;\n  let factor, niceMin, niceMax, numSpaces;\n\n  // Beyond MIN_SPACING floating point numbers being to lose precision\n  // such that we can't do the math necessary to generate ticks\n  if (spacing < MIN_SPACING && !minDefined && !maxDefined) {\n    return [{value: rmin}, {value: rmax}];\n  }\n\n  numSpaces = Math.ceil(rmax / spacing) - Math.floor(rmin / spacing);\n  if (numSpaces > maxSpaces) {\n    // If the calculated num of spaces exceeds maxNumSpaces, recalculate it\n    spacing = niceNum(numSpaces * spacing / maxSpaces / unit) * unit;\n  }\n\n  if (!isNullOrUndef(precision)) {\n    // If the user specified a precision, round to that number of decimal places\n    factor = Math.pow(10, precision);\n    spacing = Math.ceil(spacing * factor) / factor;\n  }\n\n  if (bounds === 'ticks') {\n    niceMin = Math.floor(rmin / spacing) * spacing;\n    niceMax = Math.ceil(rmax / spacing) * spacing;\n  } else {\n    niceMin = rmin;\n    niceMax = rmax;\n  }\n\n  if (minDefined && maxDefined && step && almostWhole((max - min) / step, spacing / 1000)) {\n    // Case 1: If min, max and stepSize are set and they make an evenly spaced scale use it.\n    // spacing = step;\n    // numSpaces = (max - min) / spacing;\n    // Note that we round here to handle the case where almostWhole translated an FP error\n    numSpaces = Math.round(Math.min((max - min) / spacing, maxTicks));\n    spacing = (max - min) / numSpaces;\n    niceMin = min;\n    niceMax = max;\n  } else if (countDefined) {\n    // Cases 2 & 3, we have a count specified. Handle optional user defined edges to the range.\n    // Sometimes these are no-ops, but it makes the code a lot clearer\n    // and when a user defined range is specified, we want the correct ticks\n    niceMin = minDefined ? min : niceMin;\n    niceMax = maxDefined ? max : niceMax;\n    numSpaces = count - 1;\n    spacing = (niceMax - niceMin) / numSpaces;\n  } else {\n    // Case 4\n    numSpaces = (niceMax - niceMin) / spacing;\n\n    // If very close to our rounded value, use it.\n    if (almostEquals(numSpaces, Math.round(numSpaces), spacing / 1000)) {\n      numSpaces = Math.round(numSpaces);\n    } else {\n      numSpaces = Math.ceil(numSpaces);\n    }\n  }\n\n  // The spacing will have changed in cases 1, 2, and 3 so the factor cannot be computed\n  // until this point\n  const decimalPlaces = Math.max(\n    _decimalPlaces(spacing),\n    _decimalPlaces(niceMin)\n  );\n  factor = Math.pow(10, isNullOrUndef(precision) ? decimalPlaces : precision);\n  niceMin = Math.round(niceMin * factor) / factor;\n  niceMax = Math.round(niceMax * factor) / factor;\n\n  let j = 0;\n  if (minDefined) {\n    if (includeBounds && niceMin !== min) {\n      ticks.push({value: min});\n\n      if (niceMin < min) {\n        j++; // Skip niceMin\n      }\n      // If the next nice tick is close to min, skip it\n      if (almostEquals(Math.round((niceMin + j * spacing) * factor) / factor, min, relativeLabelSize(min, minSpacing, generationOptions))) {\n        j++;\n      }\n    } else if (niceMin < min) {\n      j++;\n    }\n  }\n\n  for (; j < numSpaces; ++j) {\n    const tickValue = Math.round((niceMin + j * spacing) * factor) / factor;\n    if (maxDefined && tickValue > max) {\n      break;\n    }\n    ticks.push({value: tickValue});\n  }\n\n  if (maxDefined && includeBounds && niceMax !== max) {\n    // If the previous tick is too close to max, replace it with max, else add max\n    if (ticks.length && almostEquals(ticks[ticks.length - 1].value, max, relativeLabelSize(max, minSpacing, generationOptions))) {\n      ticks[ticks.length - 1].value = max;\n    } else {\n      ticks.push({value: max});\n    }\n  } else if (!maxDefined || niceMax === max) {\n    ticks.push({value: niceMax});\n  }\n\n  return ticks;\n}\n\nfunction relativeLabelSize(value, minSpacing, {horizontal, minRotation}) {\n  const rad = toRadians(minRotation);\n  const ratio = (horizontal ? Math.sin(rad) : Math.cos(rad)) || 0.001;\n  const length = 0.75 * minSpacing * ('' + value).length;\n  return Math.min(minSpacing / ratio, length);\n}\n\nexport default class LinearScaleBase extends Scale {\n\n  constructor(cfg) {\n    super(cfg);\n\n    /** @type {number} */\n    this.start = undefined;\n    /** @type {number} */\n    this.end = undefined;\n    /** @type {number} */\n    this._startValue = undefined;\n    /** @type {number} */\n    this._endValue = undefined;\n    this._valueRange = 0;\n  }\n\n  parse(raw, index) { // eslint-disable-line no-unused-vars\n    if (isNullOrUndef(raw)) {\n      return null;\n    }\n    if ((typeof raw === 'number' || raw instanceof Number) && !isFinite(+raw)) {\n      return null;\n    }\n\n    return +raw;\n  }\n\n  handleTickRangeOptions() {\n    const {beginAtZero} = this.options;\n    const {minDefined, maxDefined} = this.getUserBounds();\n    let {min, max} = this;\n\n    const setMin = v => (min = minDefined ? min : v);\n    const setMax = v => (max = maxDefined ? max : v);\n\n    if (beginAtZero) {\n      const minSign = sign(min);\n      const maxSign = sign(max);\n\n      if (minSign < 0 && maxSign < 0) {\n        setMax(0);\n      } else if (minSign > 0 && maxSign > 0) {\n        setMin(0);\n      }\n    }\n\n    if (min === max) {\n      let offset = max === 0 ? 1 : Math.abs(max * 0.05);\n\n      setMax(max + offset);\n\n      if (!beginAtZero) {\n        setMin(min - offset);\n      }\n    }\n    this.min = min;\n    this.max = max;\n  }\n\n  getTickLimit() {\n    const tickOpts = this.options.ticks;\n    // eslint-disable-next-line prefer-const\n    let {maxTicksLimit, stepSize} = tickOpts;\n    let maxTicks;\n\n    if (stepSize) {\n      maxTicks = Math.ceil(this.max / stepSize) - Math.floor(this.min / stepSize) + 1;\n      if (maxTicks > 1000) {\n        console.warn(`scales.${this.id}.ticks.stepSize: ${stepSize} would result generating up to ${maxTicks} ticks. Limiting to 1000.`);\n        maxTicks = 1000;\n      }\n    } else {\n      maxTicks = this.computeTickLimit();\n      maxTicksLimit = maxTicksLimit || 11;\n    }\n\n    if (maxTicksLimit) {\n      maxTicks = Math.min(maxTicksLimit, maxTicks);\n    }\n\n    return maxTicks;\n  }\n\n  /**\n\t * @protected\n\t */\n  computeTickLimit() {\n    return Number.POSITIVE_INFINITY;\n  }\n\n  buildTicks() {\n    const opts = this.options;\n    const tickOpts = opts.ticks;\n\n    // Figure out what the max number of ticks we can support it is based on the size of\n    // the axis area. For now, we say that the minimum tick spacing in pixels must be 40\n    // We also limit the maximum number of ticks to 11 which gives a nice 10 squares on\n    // the graph. Make sure we always have at least 2 ticks\n    let maxTicks = this.getTickLimit();\n    maxTicks = Math.max(2, maxTicks);\n\n    const numericGeneratorOptions = {\n      maxTicks,\n      bounds: opts.bounds,\n      min: opts.min,\n      max: opts.max,\n      precision: tickOpts.precision,\n      step: tickOpts.stepSize,\n      count: tickOpts.count,\n      maxDigits: this._maxDigits(),\n      horizontal: this.isHorizontal(),\n      minRotation: tickOpts.minRotation || 0,\n      includeBounds: tickOpts.includeBounds !== false\n    };\n    const dataRange = this._range || this;\n    const ticks = generateTicks(numericGeneratorOptions, dataRange);\n\n    // At this point, we need to update our max and min given the tick values,\n    // since we probably have expanded the range of the scale\n    if (opts.bounds === 'ticks') {\n      _setMinAndMaxByKey(ticks, this, 'value');\n    }\n\n    if (opts.reverse) {\n      ticks.reverse();\n\n      this.start = this.max;\n      this.end = this.min;\n    } else {\n      this.start = this.min;\n      this.end = this.max;\n    }\n\n    return ticks;\n  }\n\n  /**\n\t * @protected\n\t */\n  configure() {\n    const ticks = this.ticks;\n    let start = this.min;\n    let end = this.max;\n\n    super.configure();\n\n    if (this.options.offset && ticks.length) {\n      const offset = (end - start) / Math.max(ticks.length - 1, 1) / 2;\n      start -= offset;\n      end += offset;\n    }\n    this._startValue = start;\n    this._endValue = end;\n    this._valueRange = end - start;\n  }\n\n  getLabelForValue(value) {\n    return formatNumber(value, this.chart.options.locale, this.options.ticks.format);\n  }\n}\n","import {isFinite} from '../helpers/helpers.core.js';\nimport LinearScaleBase from './scale.linearbase.js';\nimport Ticks from '../core/core.ticks.js';\nimport {toRadians} from '../helpers/index.js';\n\nexport default class LinearScale extends LinearScaleBase {\n\n  static id = 'linear';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    ticks: {\n      callback: Ticks.formatters.numeric\n    }\n  };\n\n\n  determineDataLimits() {\n    const {min, max} = this.getMinMax(true);\n\n    this.min = isFinite(min) ? min : 0;\n    this.max = isFinite(max) ? max : 1;\n\n    // Common base implementation to handle min, max, beginAtZero\n    this.handleTickRangeOptions();\n  }\n\n  /**\n\t * Returns the maximum number of ticks based on the scale dimension\n\t * @protected\n \t */\n  computeTickLimit() {\n    const horizontal = this.isHorizontal();\n    const length = horizontal ? this.width : this.height;\n    const minRotation = toRadians(this.options.ticks.minRotation);\n    const ratio = (horizontal ? Math.sin(minRotation) : Math.cos(minRotation)) || 0.001;\n    const tickFont = this._resolveTickFontOptions(0);\n    return Math.ceil(length / Math.min(40, tickFont.lineHeight / ratio));\n  }\n\n  // Utils\n  getPixelForValue(value) {\n    return value === null ? NaN : this.getPixelForDecimal((value - this._startValue) / this._valueRange);\n  }\n\n  getValueForPixel(pixel) {\n    return this._startValue + this.getDecimalForPixel(pixel) * this._valueRange;\n  }\n}\n","import {finiteOrDefault, isFinite} from '../helpers/helpers.core.js';\nimport {formatNumber} from '../helpers/helpers.intl.js';\nimport {_setMinAndMaxByKey, log10} from '../helpers/helpers.math.js';\nimport Scale from '../core/core.scale.js';\nimport LinearScaleBase from './scale.linearbase.js';\nimport Ticks from '../core/core.ticks.js';\n\nconst log10Floor = v => Math.floor(log10(v));\nconst changeExponent = (v, m) => Math.pow(10, log10Floor(v) + m);\n\nfunction isMajor(tickVal) {\n  const remain = tickVal / (Math.pow(10, log10Floor(tickVal)));\n  return remain === 1;\n}\n\nfunction steps(min, max, rangeExp) {\n  const rangeStep = Math.pow(10, rangeExp);\n  const start = Math.floor(min / rangeStep);\n  const end = Math.ceil(max / rangeStep);\n  return end - start;\n}\n\nfunction startExp(min, max) {\n  const range = max - min;\n  let rangeExp = log10Floor(range);\n  while (steps(min, max, rangeExp) > 10) {\n    rangeExp++;\n  }\n  while (steps(min, max, rangeExp) < 10) {\n    rangeExp--;\n  }\n  return Math.min(rangeExp, log10Floor(min));\n}\n\n\n/**\n * Generate a set of logarithmic ticks\n * @param generationOptions the options used to generate the ticks\n * @param dataRange the range of the data\n * @returns {object[]} array of tick objects\n */\nfunction generateTicks(generationOptions, {min, max}) {\n  min = finiteOrDefault(generationOptions.min, min);\n  const ticks = [];\n  const minExp = log10Floor(min);\n  let exp = startExp(min, max);\n  let precision = exp < 0 ? Math.pow(10, Math.abs(exp)) : 1;\n  const stepSize = Math.pow(10, exp);\n  const base = minExp > exp ? Math.pow(10, minExp) : 0;\n  const start = Math.round((min - base) * precision) / precision;\n  const offset = Math.floor((min - base) / stepSize / 10) * stepSize * 10;\n  let significand = Math.floor((start - offset) / Math.pow(10, exp));\n  let value = finiteOrDefault(generationOptions.min, Math.round((base + offset + significand * Math.pow(10, exp)) * precision) / precision);\n  while (value < max) {\n    ticks.push({value, major: isMajor(value), significand});\n    if (significand >= 10) {\n      significand = significand < 15 ? 15 : 20;\n    } else {\n      significand++;\n    }\n    if (significand >= 20) {\n      exp++;\n      significand = 2;\n      precision = exp >= 0 ? 1 : precision;\n    }\n    value = Math.round((base + offset + significand * Math.pow(10, exp)) * precision) / precision;\n  }\n  const lastTick = finiteOrDefault(generationOptions.max, value);\n  ticks.push({value: lastTick, major: isMajor(lastTick), significand});\n\n  return ticks;\n}\n\nexport default class LogarithmicScale extends Scale {\n\n  static id = 'logarithmic';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    ticks: {\n      callback: Ticks.formatters.logarithmic,\n      major: {\n        enabled: true\n      }\n    }\n  };\n\n\n  constructor(cfg) {\n    super(cfg);\n\n    /** @type {number} */\n    this.start = undefined;\n    /** @type {number} */\n    this.end = undefined;\n    /** @type {number} */\n    this._startValue = undefined;\n    this._valueRange = 0;\n  }\n\n  parse(raw, index) {\n    const value = LinearScaleBase.prototype.parse.apply(this, [raw, index]);\n    if (value === 0) {\n      this._zero = true;\n      return undefined;\n    }\n    return isFinite(value) && value > 0 ? value : null;\n  }\n\n  determineDataLimits() {\n    const {min, max} = this.getMinMax(true);\n\n    this.min = isFinite(min) ? Math.max(0, min) : null;\n    this.max = isFinite(max) ? Math.max(0, max) : null;\n\n    if (this.options.beginAtZero) {\n      this._zero = true;\n    }\n\n    // if data has `0` in it or `beginAtZero` is true, min (non zero) value is at bottom\n    // of scale, and it does not equal suggestedMin, lower the min bound by one exp.\n    if (this._zero && this.min !== this._suggestedMin && !isFinite(this._userMin)) {\n      this.min = min === changeExponent(this.min, 0) ? changeExponent(this.min, -1) : changeExponent(this.min, 0);\n    }\n\n    this.handleTickRangeOptions();\n  }\n\n  handleTickRangeOptions() {\n    const {minDefined, maxDefined} = this.getUserBounds();\n    let min = this.min;\n    let max = this.max;\n\n    const setMin = v => (min = minDefined ? min : v);\n    const setMax = v => (max = maxDefined ? max : v);\n\n    if (min === max) {\n      if (min <= 0) { // includes null\n        setMin(1);\n        setMax(10);\n      } else {\n        setMin(changeExponent(min, -1));\n        setMax(changeExponent(max, +1));\n      }\n    }\n    if (min <= 0) {\n      setMin(changeExponent(max, -1));\n    }\n    if (max <= 0) {\n\n      setMax(changeExponent(min, +1));\n    }\n\n    this.min = min;\n    this.max = max;\n  }\n\n  buildTicks() {\n    const opts = this.options;\n\n    const generationOptions = {\n      min: this._userMin,\n      max: this._userMax\n    };\n    const ticks = generateTicks(generationOptions, this);\n\n    // At this point, we need to update our max and min given the tick values,\n    // since we probably have expanded the range of the scale\n    if (opts.bounds === 'ticks') {\n      _setMinAndMaxByKey(ticks, this, 'value');\n    }\n\n    if (opts.reverse) {\n      ticks.reverse();\n\n      this.start = this.max;\n      this.end = this.min;\n    } else {\n      this.start = this.min;\n      this.end = this.max;\n    }\n\n    return ticks;\n  }\n\n  /**\n\t * @param {number} value\n\t * @return {string}\n\t */\n  getLabelForValue(value) {\n    return value === undefined\n      ? '0'\n      : formatNumber(value, this.chart.options.locale, this.options.ticks.format);\n  }\n\n  /**\n\t * @protected\n\t */\n  configure() {\n    const start = this.min;\n\n    super.configure();\n\n    this._startValue = log10(start);\n    this._valueRange = log10(this.max) - log10(start);\n  }\n\n  getPixelForValue(value) {\n    if (value === undefined || value === 0) {\n      value = this.min;\n    }\n    if (value === null || isNaN(value)) {\n      return NaN;\n    }\n    return this.getPixelForDecimal(value === this.min\n      ? 0\n      : (log10(value) - this._startValue) / this._valueRange);\n  }\n\n  getValueForPixel(pixel) {\n    const decimal = this.getDecimalForPixel(pixel);\n    return Math.pow(10, this._startValue + decimal * this._valueRange);\n  }\n}\n","import defaults from '../core/core.defaults.js';\nimport {_longestText, addRoundedRectPath, renderText, _isPointInArea} from '../helpers/helpers.canvas.js';\nimport {HALF_PI, TAU, toDegrees, toRadians, _normalizeAngle, PI} from '../helpers/helpers.math.js';\nimport LinearScaleBase from './scale.linearbase.js';\nimport Ticks from '../core/core.ticks.js';\nimport {valueOrDefault, isArray, isFinite, callback as callCallback, isNullOrUndef} from '../helpers/helpers.core.js';\nimport {createContext, toFont, toPadding, toTRBLCorners} from '../helpers/helpers.options.js';\n\nfunction getTickBackdropHeight(opts) {\n  const tickOpts = opts.ticks;\n\n  if (tickOpts.display && opts.display) {\n    const padding = toPadding(tickOpts.backdropPadding);\n    return valueOrDefault(tickOpts.font && tickOpts.font.size, defaults.font.size) + padding.height;\n  }\n  return 0;\n}\n\nfunction measureLabelSize(ctx, font, label) {\n  label = isArray(label) ? label : [label];\n  return {\n    w: _longestText(ctx, font.string, label),\n    h: label.length * font.lineHeight\n  };\n}\n\nfunction determineLimits(angle, pos, size, min, max) {\n  if (angle === min || angle === max) {\n    return {\n      start: pos - (size / 2),\n      end: pos + (size / 2)\n    };\n  } else if (angle < min || angle > max) {\n    return {\n      start: pos - size,\n      end: pos\n    };\n  }\n\n  return {\n    start: pos,\n    end: pos + size\n  };\n}\n\n/**\n * Helper function to fit a radial linear scale with point labels\n */\nfunction fitWithPointLabels(scale) {\n\n  // Right, this is really confusing and there is a lot of maths going on here\n  // The gist of the problem is here: https://gist.github.com/nnnick/696cc9c55f4b0beb8fe9\n  //\n  // Reaction: https://dl.dropboxusercontent.com/u/34601363/toomuchscience.gif\n  //\n  // Solution:\n  //\n  // We assume the radius of the polygon is half the size of the canvas at first\n  // at each index we check if the text overlaps.\n  //\n  // Where it does, we store that angle and that index.\n  //\n  // After finding the largest index and angle we calculate how much we need to remove\n  // from the shape radius to move the point inwards by that x.\n  //\n  // We average the left and right distances to get the maximum shape radius that can fit in the box\n  // along with labels.\n  //\n  // Once we have that, we can find the centre point for the chart, by taking the x text protrusion\n  // on each side, removing that from the size, halving it and adding the left x protrusion width.\n  //\n  // This will mean we have a shape fitted to the canvas, as large as it can be with the labels\n  // and position it in the most space efficient manner\n  //\n  // https://dl.dropboxusercontent.com/u/34601363/yeahscience.gif\n\n  // Get maximum radius of the polygon. Either half the height (minus the text width) or half the width.\n  // Use this to calculate the offset + change. - Make sure L/R protrusion is at least 0 to stop issues with centre points\n  const orig = {\n    l: scale.left + scale._padding.left,\n    r: scale.right - scale._padding.right,\n    t: scale.top + scale._padding.top,\n    b: scale.bottom - scale._padding.bottom\n  };\n  const limits = Object.assign({}, orig);\n  const labelSizes = [];\n  const padding = [];\n  const valueCount = scale._pointLabels.length;\n  const pointLabelOpts = scale.options.pointLabels;\n  const additionalAngle = pointLabelOpts.centerPointLabels ? PI / valueCount : 0;\n\n  for (let i = 0; i < valueCount; i++) {\n    const opts = pointLabelOpts.setContext(scale.getPointLabelContext(i));\n    padding[i] = opts.padding;\n    const pointPosition = scale.getPointPosition(i, scale.drawingArea + padding[i], additionalAngle);\n    const plFont = toFont(opts.font);\n    const textSize = measureLabelSize(scale.ctx, plFont, scale._pointLabels[i]);\n    labelSizes[i] = textSize;\n\n    const angleRadians = _normalizeAngle(scale.getIndexAngle(i) + additionalAngle);\n    const angle = Math.round(toDegrees(angleRadians));\n    const hLimits = determineLimits(angle, pointPosition.x, textSize.w, 0, 180);\n    const vLimits = determineLimits(angle, pointPosition.y, textSize.h, 90, 270);\n    updateLimits(limits, orig, angleRadians, hLimits, vLimits);\n  }\n\n  scale.setCenterPoint(\n    orig.l - limits.l,\n    limits.r - orig.r,\n    orig.t - limits.t,\n    limits.b - orig.b\n  );\n\n  // Now that text size is determined, compute the full positions\n  scale._pointLabelItems = buildPointLabelItems(scale, labelSizes, padding);\n}\n\nfunction updateLimits(limits, orig, angle, hLimits, vLimits) {\n  const sin = Math.abs(Math.sin(angle));\n  const cos = Math.abs(Math.cos(angle));\n  let x = 0;\n  let y = 0;\n  if (hLimits.start < orig.l) {\n    x = (orig.l - hLimits.start) / sin;\n    limits.l = Math.min(limits.l, orig.l - x);\n  } else if (hLimits.end > orig.r) {\n    x = (hLimits.end - orig.r) / sin;\n    limits.r = Math.max(limits.r, orig.r + x);\n  }\n  if (vLimits.start < orig.t) {\n    y = (orig.t - vLimits.start) / cos;\n    limits.t = Math.min(limits.t, orig.t - y);\n  } else if (vLimits.end > orig.b) {\n    y = (vLimits.end - orig.b) / cos;\n    limits.b = Math.max(limits.b, orig.b + y);\n  }\n}\n\nfunction createPointLabelItem(scale, index, itemOpts) {\n  const outerDistance = scale.drawingArea;\n  const {extra, additionalAngle, padding, size} = itemOpts;\n  const pointLabelPosition = scale.getPointPosition(index, outerDistance + extra + padding, additionalAngle);\n  const angle = Math.round(toDegrees(_normalizeAngle(pointLabelPosition.angle + HALF_PI)));\n  const y = yForAngle(pointLabelPosition.y, size.h, angle);\n  const textAlign = getTextAlignForAngle(angle);\n  const left = leftForTextAlign(pointLabelPosition.x, size.w, textAlign);\n  return {\n    // if to draw or overlapped\n    visible: true,\n\n    // Text position\n    x: pointLabelPosition.x,\n    y,\n\n    // Text rendering data\n    textAlign,\n\n    // Bounding box\n    left,\n    top: y,\n    right: left + size.w,\n    bottom: y + size.h\n  };\n}\n\nfunction isNotOverlapped(item, area) {\n  if (!area) {\n    return true;\n  }\n  const {left, top, right, bottom} = item;\n  const apexesInArea = _isPointInArea({x: left, y: top}, area) || _isPointInArea({x: left, y: bottom}, area) ||\n    _isPointInArea({x: right, y: top}, area) || _isPointInArea({x: right, y: bottom}, area);\n  return !apexesInArea;\n}\n\nfunction buildPointLabelItems(scale, labelSizes, padding) {\n  const items = [];\n  const valueCount = scale._pointLabels.length;\n  const opts = scale.options;\n  const {centerPointLabels, display} = opts.pointLabels;\n  const itemOpts = {\n    extra: getTickBackdropHeight(opts) / 2,\n    additionalAngle: centerPointLabels ? PI / valueCount : 0\n  };\n  let area;\n\n  for (let i = 0; i < valueCount; i++) {\n    itemOpts.padding = padding[i];\n    itemOpts.size = labelSizes[i];\n\n    const item = createPointLabelItem(scale, i, itemOpts);\n    items.push(item);\n    if (display === 'auto') {\n      item.visible = isNotOverlapped(item, area);\n      if (item.visible) {\n        area = item;\n      }\n    }\n  }\n  return items;\n}\n\nfunction getTextAlignForAngle(angle) {\n  if (angle === 0 || angle === 180) {\n    return 'center';\n  } else if (angle < 180) {\n    return 'left';\n  }\n\n  return 'right';\n}\n\nfunction leftForTextAlign(x, w, align) {\n  if (align === 'right') {\n    x -= w;\n  } else if (align === 'center') {\n    x -= (w / 2);\n  }\n  return x;\n}\n\nfunction yForAngle(y, h, angle) {\n  if (angle === 90 || angle === 270) {\n    y -= (h / 2);\n  } else if (angle > 270 || angle < 90) {\n    y -= h;\n  }\n  return y;\n}\n\nfunction drawPointLabelBox(ctx, opts, item) {\n  const {left, top, right, bottom} = item;\n  const {backdropColor} = opts;\n\n  if (!isNullOrUndef(backdropColor)) {\n    const borderRadius = toTRBLCorners(opts.borderRadius);\n    const padding = toPadding(opts.backdropPadding);\n    ctx.fillStyle = backdropColor;\n\n    const backdropLeft = left - padding.left;\n    const backdropTop = top - padding.top;\n    const backdropWidth = right - left + padding.width;\n    const backdropHeight = bottom - top + padding.height;\n\n    if (Object.values(borderRadius).some(v => v !== 0)) {\n      ctx.beginPath();\n      addRoundedRectPath(ctx, {\n        x: backdropLeft,\n        y: backdropTop,\n        w: backdropWidth,\n        h: backdropHeight,\n        radius: borderRadius,\n      });\n      ctx.fill();\n    } else {\n      ctx.fillRect(backdropLeft, backdropTop, backdropWidth, backdropHeight);\n    }\n  }\n}\n\nfunction drawPointLabels(scale, labelCount) {\n  const {ctx, options: {pointLabels}} = scale;\n\n  for (let i = labelCount - 1; i >= 0; i--) {\n    const item = scale._pointLabelItems[i];\n    if (!item.visible) {\n      // overlapping\n      continue;\n    }\n    const optsAtIndex = pointLabels.setContext(scale.getPointLabelContext(i));\n    drawPointLabelBox(ctx, optsAtIndex, item);\n    const plFont = toFont(optsAtIndex.font);\n    const {x, y, textAlign} = item;\n\n    renderText(\n      ctx,\n      scale._pointLabels[i],\n      x,\n      y + (plFont.lineHeight / 2),\n      plFont,\n      {\n        color: optsAtIndex.color,\n        textAlign: textAlign,\n        textBaseline: 'middle'\n      }\n    );\n  }\n}\n\nfunction pathRadiusLine(scale, radius, circular, labelCount) {\n  const {ctx} = scale;\n  if (circular) {\n    // Draw circular arcs between the points\n    ctx.arc(scale.xCenter, scale.yCenter, radius, 0, TAU);\n  } else {\n    // Draw straight lines connecting each index\n    let pointPosition = scale.getPointPosition(0, radius);\n    ctx.moveTo(pointPosition.x, pointPosition.y);\n\n    for (let i = 1; i < labelCount; i++) {\n      pointPosition = scale.getPointPosition(i, radius);\n      ctx.lineTo(pointPosition.x, pointPosition.y);\n    }\n  }\n}\n\nfunction drawRadiusLine(scale, gridLineOpts, radius, labelCount, borderOpts) {\n  const ctx = scale.ctx;\n  const circular = gridLineOpts.circular;\n\n  const {color, lineWidth} = gridLineOpts;\n\n  if ((!circular && !labelCount) || !color || !lineWidth || radius < 0) {\n    return;\n  }\n\n  ctx.save();\n  ctx.strokeStyle = color;\n  ctx.lineWidth = lineWidth;\n  ctx.setLineDash(borderOpts.dash || []);\n  ctx.lineDashOffset = borderOpts.dashOffset;\n\n  ctx.beginPath();\n  pathRadiusLine(scale, radius, circular, labelCount);\n  ctx.closePath();\n  ctx.stroke();\n  ctx.restore();\n}\n\nfunction createPointLabelContext(parent, index, label) {\n  return createContext(parent, {\n    label,\n    index,\n    type: 'pointLabel'\n  });\n}\n\nexport default class RadialLinearScale extends LinearScaleBase {\n\n  static id = 'radialLinear';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    display: true,\n\n    // Boolean - Whether to animate scaling the chart from the centre\n    animate: true,\n    position: 'chartArea',\n\n    angleLines: {\n      display: true,\n      lineWidth: 1,\n      borderDash: [],\n      borderDashOffset: 0.0\n    },\n\n    grid: {\n      circular: false\n    },\n\n    startAngle: 0,\n\n    // label settings\n    ticks: {\n      // Boolean - Show a backdrop to the scale label\n      showLabelBackdrop: true,\n\n      callback: Ticks.formatters.numeric\n    },\n\n    pointLabels: {\n      backdropColor: undefined,\n\n      // Number - The backdrop padding above & below the label in pixels\n      backdropPadding: 2,\n\n      // Boolean - if true, show point labels\n      display: true,\n\n      // Number - Point label font size in pixels\n      font: {\n        size: 10\n      },\n\n      // Function - Used to convert point labels\n      callback(label) {\n        return label;\n      },\n\n      // Number - Additionl padding between scale and pointLabel\n      padding: 5,\n\n      // Boolean - if true, center point labels to slices in polar chart\n      centerPointLabels: false\n    }\n  };\n\n  static defaultRoutes = {\n    'angleLines.color': 'borderColor',\n    'pointLabels.color': 'color',\n    'ticks.color': 'color'\n  };\n\n  static descriptors = {\n    angleLines: {\n      _fallback: 'grid'\n    }\n  };\n\n  constructor(cfg) {\n    super(cfg);\n\n    /** @type {number} */\n    this.xCenter = undefined;\n    /** @type {number} */\n    this.yCenter = undefined;\n    /** @type {number} */\n    this.drawingArea = undefined;\n    /** @type {string[]} */\n    this._pointLabels = [];\n    this._pointLabelItems = [];\n  }\n\n  setDimensions() {\n    // Set the unconstrained dimension before label rotation\n    const padding = this._padding = toPadding(getTickBackdropHeight(this.options) / 2);\n    const w = this.width = this.maxWidth - padding.width;\n    const h = this.height = this.maxHeight - padding.height;\n    this.xCenter = Math.floor(this.left + w / 2 + padding.left);\n    this.yCenter = Math.floor(this.top + h / 2 + padding.top);\n    this.drawingArea = Math.floor(Math.min(w, h) / 2);\n  }\n\n  determineDataLimits() {\n    const {min, max} = this.getMinMax(false);\n\n    this.min = isFinite(min) && !isNaN(min) ? min : 0;\n    this.max = isFinite(max) && !isNaN(max) ? max : 0;\n\n    // Common base implementation to handle min, max, beginAtZero\n    this.handleTickRangeOptions();\n  }\n\n  /**\n\t * Returns the maximum number of ticks based on the scale dimension\n\t * @protected\n\t */\n  computeTickLimit() {\n    return Math.ceil(this.drawingArea / getTickBackdropHeight(this.options));\n  }\n\n  generateTickLabels(ticks) {\n    LinearScaleBase.prototype.generateTickLabels.call(this, ticks);\n\n    // Point labels\n    this._pointLabels = this.getLabels()\n      .map((value, index) => {\n        const label = callCallback(this.options.pointLabels.callback, [value, index], this);\n        return label || label === 0 ? label : '';\n      })\n      .filter((v, i) => this.chart.getDataVisibility(i));\n  }\n\n  fit() {\n    const opts = this.options;\n\n    if (opts.display && opts.pointLabels.display) {\n      fitWithPointLabels(this);\n    } else {\n      this.setCenterPoint(0, 0, 0, 0);\n    }\n  }\n\n  setCenterPoint(leftMovement, rightMovement, topMovement, bottomMovement) {\n    this.xCenter += Math.floor((leftMovement - rightMovement) / 2);\n    this.yCenter += Math.floor((topMovement - bottomMovement) / 2);\n    this.drawingArea -= Math.min(this.drawingArea / 2, Math.max(leftMovement, rightMovement, topMovement, bottomMovement));\n  }\n\n  getIndexAngle(index) {\n    const angleMultiplier = TAU / (this._pointLabels.length || 1);\n    const startAngle = this.options.startAngle || 0;\n\n    return _normalizeAngle(index * angleMultiplier + toRadians(startAngle));\n  }\n\n  getDistanceFromCenterForValue(value) {\n    if (isNullOrUndef(value)) {\n      return NaN;\n    }\n\n    // Take into account half font size + the yPadding of the top value\n    const scalingFactor = this.drawingArea / (this.max - this.min);\n    if (this.options.reverse) {\n      return (this.max - value) * scalingFactor;\n    }\n    return (value - this.min) * scalingFactor;\n  }\n\n  getValueForDistanceFromCenter(distance) {\n    if (isNullOrUndef(distance)) {\n      return NaN;\n    }\n\n    const scaledDistance = distance / (this.drawingArea / (this.max - this.min));\n    return this.options.reverse ? this.max - scaledDistance : this.min + scaledDistance;\n  }\n\n  getPointLabelContext(index) {\n    const pointLabels = this._pointLabels || [];\n\n    if (index >= 0 && index < pointLabels.length) {\n      const pointLabel = pointLabels[index];\n      return createPointLabelContext(this.getContext(), index, pointLabel);\n    }\n  }\n\n  getPointPosition(index, distanceFromCenter, additionalAngle = 0) {\n    const angle = this.getIndexAngle(index) - HALF_PI + additionalAngle;\n    return {\n      x: Math.cos(angle) * distanceFromCenter + this.xCenter,\n      y: Math.sin(angle) * distanceFromCenter + this.yCenter,\n      angle\n    };\n  }\n\n  getPointPositionForValue(index, value) {\n    return this.getPointPosition(index, this.getDistanceFromCenterForValue(value));\n  }\n\n  getBasePosition(index) {\n    return this.getPointPositionForValue(index || 0, this.getBaseValue());\n  }\n\n  getPointLabelPosition(index) {\n    const {left, top, right, bottom} = this._pointLabelItems[index];\n    return {\n      left,\n      top,\n      right,\n      bottom,\n    };\n  }\n\n  /**\n\t * @protected\n\t */\n  drawBackground() {\n    const {backgroundColor, grid: {circular}} = this.options;\n    if (backgroundColor) {\n      const ctx = this.ctx;\n      ctx.save();\n      ctx.beginPath();\n      pathRadiusLine(this, this.getDistanceFromCenterForValue(this._endValue), circular, this._pointLabels.length);\n      ctx.closePath();\n      ctx.fillStyle = backgroundColor;\n      ctx.fill();\n      ctx.restore();\n    }\n  }\n\n  /**\n\t * @protected\n\t */\n  drawGrid() {\n    const ctx = this.ctx;\n    const opts = this.options;\n    const {angleLines, grid, border} = opts;\n    const labelCount = this._pointLabels.length;\n\n    let i, offset, position;\n\n    if (opts.pointLabels.display) {\n      drawPointLabels(this, labelCount);\n    }\n\n    if (grid.display) {\n      this.ticks.forEach((tick, index) => {\n        if (index !== 0 || (index === 0 && this.min < 0)) {\n          offset = this.getDistanceFromCenterForValue(tick.value);\n          const context = this.getContext(index);\n          const optsAtIndex = grid.setContext(context);\n          const optsAtIndexBorder = border.setContext(context);\n\n          drawRadiusLine(this, optsAtIndex, offset, labelCount, optsAtIndexBorder);\n        }\n      });\n    }\n\n    if (angleLines.display) {\n      ctx.save();\n\n      for (i = labelCount - 1; i >= 0; i--) {\n        const optsAtIndex = angleLines.setContext(this.getPointLabelContext(i));\n        const {color, lineWidth} = optsAtIndex;\n\n        if (!lineWidth || !color) {\n          continue;\n        }\n\n        ctx.lineWidth = lineWidth;\n        ctx.strokeStyle = color;\n\n        ctx.setLineDash(optsAtIndex.borderDash);\n        ctx.lineDashOffset = optsAtIndex.borderDashOffset;\n\n        offset = this.getDistanceFromCenterForValue(opts.reverse ? this.min : this.max);\n        position = this.getPointPosition(i, offset);\n        ctx.beginPath();\n        ctx.moveTo(this.xCenter, this.yCenter);\n        ctx.lineTo(position.x, position.y);\n        ctx.stroke();\n      }\n\n      ctx.restore();\n    }\n  }\n\n  /**\n\t * @protected\n\t */\n  drawBorder() {}\n\n  /**\n\t * @protected\n\t */\n  drawLabels() {\n    const ctx = this.ctx;\n    const opts = this.options;\n    const tickOpts = opts.ticks;\n\n    if (!tickOpts.display) {\n      return;\n    }\n\n    const startAngle = this.getIndexAngle(0);\n    let offset, width;\n\n    ctx.save();\n    ctx.translate(this.xCenter, this.yCenter);\n    ctx.rotate(startAngle);\n    ctx.textAlign = 'center';\n    ctx.textBaseline = 'middle';\n\n    this.ticks.forEach((tick, index) => {\n      if ((index === 0 && this.min >= 0) && !opts.reverse) {\n        return;\n      }\n\n      const optsAtIndex = tickOpts.setContext(this.getContext(index));\n      const tickFont = toFont(optsAtIndex.font);\n      offset = this.getDistanceFromCenterForValue(this.ticks[index].value);\n\n      if (optsAtIndex.showLabelBackdrop) {\n        ctx.font = tickFont.string;\n        width = ctx.measureText(tick.label).width;\n        ctx.fillStyle = optsAtIndex.backdropColor;\n\n        const padding = toPadding(optsAtIndex.backdropPadding);\n        ctx.fillRect(\n          -width / 2 - padding.left,\n          -offset - tickFont.size / 2 - padding.top,\n          width + padding.width,\n          tickFont.size + padding.height\n        );\n      }\n\n      renderText(ctx, tick.label, 0, -offset, tickFont, {\n        color: optsAtIndex.color,\n        strokeColor: optsAtIndex.textStrokeColor,\n        strokeWidth: optsAtIndex.textStrokeWidth,\n      });\n    });\n\n    ctx.restore();\n  }\n\n  /**\n\t * @protected\n\t */\n  drawTitle() {}\n}\n","import adapters from '../core/core.adapters.js';\nimport {callback as call, isFinite, isNullOrUndef, mergeIf, valueOrDefault} from '../helpers/helpers.core.js';\nimport {toRadians, isNumber, _limitValue} from '../helpers/helpers.math.js';\nimport Scale from '../core/core.scale.js';\nimport {_arrayUnique, _filterBetween, _lookup} from '../helpers/helpers.collection.js';\n\n/**\n * @typedef { import('../core/core.adapters.js').TimeUnit } Unit\n * @typedef {{common: boolean, size: number, steps?: number}} Interval\n * @typedef { import('../core/core.adapters.js').DateAdapter } DateAdapter\n */\n\n/**\n * @type {Object<Unit, Interval>}\n */\nconst INTERVALS = {\n  millisecond: {common: true, size: 1, steps: 1000},\n  second: {common: true, size: 1000, steps: 60},\n  minute: {common: true, size: 60000, steps: 60},\n  hour: {common: true, size: 3600000, steps: 24},\n  day: {common: true, size: 86400000, steps: 30},\n  week: {common: false, size: 604800000, steps: 4},\n  month: {common: true, size: 2.628e9, steps: 12},\n  quarter: {common: false, size: 7.884e9, steps: 4},\n  year: {common: true, size: 3.154e10}\n};\n\n/**\n * @type {Unit[]}\n */\nconst UNITS = /** @type Unit[] */ /* #__PURE__ */ (Object.keys(INTERVALS));\n\n/**\n * @param {number} a\n * @param {number} b\n */\nfunction sorter(a, b) {\n  return a - b;\n}\n\n/**\n * @param {TimeScale} scale\n * @param {*} input\n * @return {number}\n */\nfunction parse(scale, input) {\n  if (isNullOrUndef(input)) {\n    return null;\n  }\n\n  const adapter = scale._adapter;\n  const {parser, round, isoWeekday} = scale._parseOpts;\n  let value = input;\n\n  if (typeof parser === 'function') {\n    value = parser(value);\n  }\n\n  // Only parse if it's not a timestamp already\n  if (!isFinite(value)) {\n    value = typeof parser === 'string'\n      ? adapter.parse(value, /** @type {Unit} */ (parser))\n      : adapter.parse(value);\n  }\n\n  if (value === null) {\n    return null;\n  }\n\n  if (round) {\n    value = round === 'week' && (isNumber(isoWeekday) || isoWeekday === true)\n      ? adapter.startOf(value, 'isoWeek', isoWeekday)\n      : adapter.startOf(value, round);\n  }\n\n  return +value;\n}\n\n/**\n * Figures out what unit results in an appropriate number of auto-generated ticks\n * @param {Unit} minUnit\n * @param {number} min\n * @param {number} max\n * @param {number} capacity\n * @return {object}\n */\nfunction determineUnitForAutoTicks(minUnit, min, max, capacity) {\n  const ilen = UNITS.length;\n\n  for (let i = UNITS.indexOf(minUnit); i < ilen - 1; ++i) {\n    const interval = INTERVALS[UNITS[i]];\n    const factor = interval.steps ? interval.steps : Number.MAX_SAFE_INTEGER;\n\n    if (interval.common && Math.ceil((max - min) / (factor * interval.size)) <= capacity) {\n      return UNITS[i];\n    }\n  }\n\n  return UNITS[ilen - 1];\n}\n\n/**\n * Figures out what unit to format a set of ticks with\n * @param {TimeScale} scale\n * @param {number} numTicks\n * @param {Unit} minUnit\n * @param {number} min\n * @param {number} max\n * @return {Unit}\n */\nfunction determineUnitForFormatting(scale, numTicks, minUnit, min, max) {\n  for (let i = UNITS.length - 1; i >= UNITS.indexOf(minUnit); i--) {\n    const unit = UNITS[i];\n    if (INTERVALS[unit].common && scale._adapter.diff(max, min, unit) >= numTicks - 1) {\n      return unit;\n    }\n  }\n\n  return UNITS[minUnit ? UNITS.indexOf(minUnit) : 0];\n}\n\n/**\n * @param {Unit} unit\n * @return {object}\n */\nfunction determineMajorUnit(unit) {\n  for (let i = UNITS.indexOf(unit) + 1, ilen = UNITS.length; i < ilen; ++i) {\n    if (INTERVALS[UNITS[i]].common) {\n      return UNITS[i];\n    }\n  }\n}\n\n/**\n * @param {object} ticks\n * @param {number} time\n * @param {number[]} [timestamps] - if defined, snap to these timestamps\n */\nfunction addTick(ticks, time, timestamps) {\n  if (!timestamps) {\n    ticks[time] = true;\n  } else if (timestamps.length) {\n    const {lo, hi} = _lookup(timestamps, time);\n    const timestamp = timestamps[lo] >= time ? timestamps[lo] : timestamps[hi];\n    ticks[timestamp] = true;\n  }\n}\n\n/**\n * @param {TimeScale} scale\n * @param {object[]} ticks\n * @param {object} map\n * @param {Unit} majorUnit\n * @return {object[]}\n */\nfunction setMajorTicks(scale, ticks, map, majorUnit) {\n  const adapter = scale._adapter;\n  const first = +adapter.startOf(ticks[0].value, majorUnit);\n  const last = ticks[ticks.length - 1].value;\n  let major, index;\n\n  for (major = first; major <= last; major = +adapter.add(major, 1, majorUnit)) {\n    index = map[major];\n    if (index >= 0) {\n      ticks[index].major = true;\n    }\n  }\n  return ticks;\n}\n\n/**\n * @param {TimeScale} scale\n * @param {number[]} values\n * @param {Unit|undefined} [majorUnit]\n * @return {object[]}\n */\nfunction ticksFromTimestamps(scale, values, majorUnit) {\n  const ticks = [];\n  /** @type {Object<number,object>} */\n  const map = {};\n  const ilen = values.length;\n  let i, value;\n\n  for (i = 0; i < ilen; ++i) {\n    value = values[i];\n    map[value] = i;\n\n    ticks.push({\n      value,\n      major: false\n    });\n  }\n\n  // We set the major ticks separately from the above loop because calling startOf for every tick\n  // is expensive when there is a large number of ticks\n  return (ilen === 0 || !majorUnit) ? ticks : setMajorTicks(scale, ticks, map, majorUnit);\n}\n\nexport default class TimeScale extends Scale {\n\n  static id = 'time';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    /**\n     * Scale boundary strategy (bypassed by min/max time options)\n     * - `data`: make sure data are fully visible, ticks outside are removed\n     * - `ticks`: make sure ticks are fully visible, data outside are truncated\n     * @see https://github.com/chartjs/Chart.js/pull/4556\n     * @since 2.7.0\n     */\n    bounds: 'data',\n\n    adapters: {},\n    time: {\n      parser: false, // false == a pattern string from or a custom callback that converts its argument to a timestamp\n      unit: false, // false == automatic or override with week, month, year, etc.\n      round: false, // none, or override with week, month, year, etc.\n      isoWeekday: false, // override week start day\n      minUnit: 'millisecond',\n      displayFormats: {}\n    },\n    ticks: {\n      /**\n       * Ticks generation input values:\n       * - 'auto': generates \"optimal\" ticks based on scale size and time options.\n       * - 'data': generates ticks from data (including labels from data {t|x|y} objects).\n       * - 'labels': generates ticks from user given `data.labels` values ONLY.\n       * @see https://github.com/chartjs/Chart.js/pull/4507\n       * @since 2.7.0\n       */\n      source: 'auto',\n\n      callback: false,\n\n      major: {\n        enabled: false\n      }\n    }\n  };\n\n  /**\n\t * @param {object} props\n\t */\n  constructor(props) {\n    super(props);\n\n    /** @type {{data: number[], labels: number[], all: number[]}} */\n    this._cache = {\n      data: [],\n      labels: [],\n      all: []\n    };\n\n    /** @type {Unit} */\n    this._unit = 'day';\n    /** @type {Unit=} */\n    this._majorUnit = undefined;\n    this._offsets = {};\n    this._normalized = false;\n    this._parseOpts = undefined;\n  }\n\n  init(scaleOpts, opts = {}) {\n    const time = scaleOpts.time || (scaleOpts.time = {});\n    /** @type {DateAdapter} */\n    const adapter = this._adapter = new adapters._date(scaleOpts.adapters.date);\n\n    adapter.init(opts);\n\n    // Backward compatibility: before introducing adapter, `displayFormats` was\n    // supposed to contain *all* unit/string pairs but this can't be resolved\n    // when loading the scale (adapters are loaded afterward), so let's populate\n    // missing formats on update\n    mergeIf(time.displayFormats, adapter.formats());\n\n    this._parseOpts = {\n      parser: time.parser,\n      round: time.round,\n      isoWeekday: time.isoWeekday\n    };\n\n    super.init(scaleOpts);\n\n    this._normalized = opts.normalized;\n  }\n\n  /**\n\t * @param {*} raw\n\t * @param {number?} [index]\n\t * @return {number}\n\t */\n  parse(raw, index) { // eslint-disable-line no-unused-vars\n    if (raw === undefined) {\n      return null;\n    }\n    return parse(this, raw);\n  }\n\n  beforeLayout() {\n    super.beforeLayout();\n    this._cache = {\n      data: [],\n      labels: [],\n      all: []\n    };\n  }\n\n  determineDataLimits() {\n    const options = this.options;\n    const adapter = this._adapter;\n    const unit = options.time.unit || 'day';\n    // eslint-disable-next-line prefer-const\n    let {min, max, minDefined, maxDefined} = this.getUserBounds();\n\n    /**\n\t\t * @param {object} bounds\n\t\t */\n    function _applyBounds(bounds) {\n      if (!minDefined && !isNaN(bounds.min)) {\n        min = Math.min(min, bounds.min);\n      }\n      if (!maxDefined && !isNaN(bounds.max)) {\n        max = Math.max(max, bounds.max);\n      }\n    }\n\n    // If we have user provided `min` and `max` labels / data bounds can be ignored\n    if (!minDefined || !maxDefined) {\n      // Labels are always considered, when user did not force bounds\n      _applyBounds(this._getLabelBounds());\n\n      // If `bounds` is `'ticks'` and `ticks.source` is `'labels'`,\n      // data bounds are ignored (and don't need to be determined)\n      if (options.bounds !== 'ticks' || options.ticks.source !== 'labels') {\n        _applyBounds(this.getMinMax(false));\n      }\n    }\n\n    min = isFinite(min) && !isNaN(min) ? min : +adapter.startOf(Date.now(), unit);\n    max = isFinite(max) && !isNaN(max) ? max : +adapter.endOf(Date.now(), unit) + 1;\n\n    // Make sure that max is strictly higher than min (required by the timeseries lookup table)\n    this.min = Math.min(min, max - 1);\n    this.max = Math.max(min + 1, max);\n  }\n\n  /**\n\t * @private\n\t */\n  _getLabelBounds() {\n    const arr = this.getLabelTimestamps();\n    let min = Number.POSITIVE_INFINITY;\n    let max = Number.NEGATIVE_INFINITY;\n\n    if (arr.length) {\n      min = arr[0];\n      max = arr[arr.length - 1];\n    }\n    return {min, max};\n  }\n\n  /**\n\t * @return {object[]}\n\t */\n  buildTicks() {\n    const options = this.options;\n    const timeOpts = options.time;\n    const tickOpts = options.ticks;\n    const timestamps = tickOpts.source === 'labels' ? this.getLabelTimestamps() : this._generate();\n\n    if (options.bounds === 'ticks' && timestamps.length) {\n      this.min = this._userMin || timestamps[0];\n      this.max = this._userMax || timestamps[timestamps.length - 1];\n    }\n\n    const min = this.min;\n    const max = this.max;\n\n    const ticks = _filterBetween(timestamps, min, max);\n\n    // PRIVATE\n    // determineUnitForFormatting relies on the number of ticks so we don't use it when\n    // autoSkip is enabled because we don't yet know what the final number of ticks will be\n    this._unit = timeOpts.unit || (tickOpts.autoSkip\n      ? determineUnitForAutoTicks(timeOpts.minUnit, this.min, this.max, this._getLabelCapacity(min))\n      : determineUnitForFormatting(this, ticks.length, timeOpts.minUnit, this.min, this.max));\n    this._majorUnit = !tickOpts.major.enabled || this._unit === 'year' ? undefined\n      : determineMajorUnit(this._unit);\n    this.initOffsets(timestamps);\n\n    if (options.reverse) {\n      ticks.reverse();\n    }\n\n    return ticksFromTimestamps(this, ticks, this._majorUnit);\n  }\n\n  afterAutoSkip() {\n    // Offsets for bar charts need to be handled with the auto skipped\n    // ticks. Once ticks have been skipped, we re-compute the offsets.\n    if (this.options.offsetAfterAutoskip) {\n      this.initOffsets(this.ticks.map(tick => +tick.value));\n    }\n  }\n\n  /**\n\t * Returns the start and end offsets from edges in the form of {start, end}\n\t * where each value is a relative width to the scale and ranges between 0 and 1.\n\t * They add extra margins on the both sides by scaling down the original scale.\n\t * Offsets are added when the `offset` option is true.\n\t * @param {number[]} timestamps\n\t * @protected\n\t */\n  initOffsets(timestamps = []) {\n    let start = 0;\n    let end = 0;\n    let first, last;\n\n    if (this.options.offset && timestamps.length) {\n      first = this.getDecimalForValue(timestamps[0]);\n      if (timestamps.length === 1) {\n        start = 1 - first;\n      } else {\n        start = (this.getDecimalForValue(timestamps[1]) - first) / 2;\n      }\n      last = this.getDecimalForValue(timestamps[timestamps.length - 1]);\n      if (timestamps.length === 1) {\n        end = last;\n      } else {\n        end = (last - this.getDecimalForValue(timestamps[timestamps.length - 2])) / 2;\n      }\n    }\n    const limit = timestamps.length < 3 ? 0.5 : 0.25;\n    start = _limitValue(start, 0, limit);\n    end = _limitValue(end, 0, limit);\n\n    this._offsets = {start, end, factor: 1 / (start + 1 + end)};\n  }\n\n  /**\n\t * Generates a maximum of `capacity` timestamps between min and max, rounded to the\n\t * `minor` unit using the given scale time `options`.\n\t * Important: this method can return ticks outside the min and max range, it's the\n\t * responsibility of the calling code to clamp values if needed.\n\t * @protected\n\t */\n  _generate() {\n    const adapter = this._adapter;\n    const min = this.min;\n    const max = this.max;\n    const options = this.options;\n    const timeOpts = options.time;\n    // @ts-ignore\n    const minor = timeOpts.unit || determineUnitForAutoTicks(timeOpts.minUnit, min, max, this._getLabelCapacity(min));\n    const stepSize = valueOrDefault(options.ticks.stepSize, 1);\n    const weekday = minor === 'week' ? timeOpts.isoWeekday : false;\n    const hasWeekday = isNumber(weekday) || weekday === true;\n    const ticks = {};\n    let first = min;\n    let time, count;\n\n    // For 'week' unit, handle the first day of week option\n    if (hasWeekday) {\n      first = +adapter.startOf(first, 'isoWeek', weekday);\n    }\n\n    // Align first ticks on unit\n    first = +adapter.startOf(first, hasWeekday ? 'day' : minor);\n\n    // Prevent browser from freezing in case user options request millions of milliseconds\n    if (adapter.diff(max, min, minor) > 100000 * stepSize) {\n      throw new Error(min + ' and ' + max + ' are too far apart with stepSize of ' + stepSize + ' ' + minor);\n    }\n\n    const timestamps = options.ticks.source === 'data' && this.getDataTimestamps();\n    for (time = first, count = 0; time < max; time = +adapter.add(time, stepSize, minor), count++) {\n      addTick(ticks, time, timestamps);\n    }\n\n    if (time === max || options.bounds === 'ticks' || count === 1) {\n      addTick(ticks, time, timestamps);\n    }\n\n    // @ts-ignore\n    return Object.keys(ticks).sort(sorter).map(x => +x);\n  }\n\n  /**\n\t * @param {number} value\n\t * @return {string}\n\t */\n  getLabelForValue(value) {\n    const adapter = this._adapter;\n    const timeOpts = this.options.time;\n\n    if (timeOpts.tooltipFormat) {\n      return adapter.format(value, timeOpts.tooltipFormat);\n    }\n    return adapter.format(value, timeOpts.displayFormats.datetime);\n  }\n\n  /**\n\t * @param {number} value\n\t * @param {string|undefined} format\n\t * @return {string}\n\t */\n  format(value, format) {\n    const options = this.options;\n    const formats = options.time.displayFormats;\n    const unit = this._unit;\n    const fmt = format || formats[unit];\n    return this._adapter.format(value, fmt);\n  }\n\n  /**\n\t * Function to format an individual tick mark\n\t * @param {number} time\n\t * @param {number} index\n\t * @param {object[]} ticks\n\t * @param {string|undefined} [format]\n\t * @return {string}\n\t * @private\n\t */\n  _tickFormatFunction(time, index, ticks, format) {\n    const options = this.options;\n    const formatter = options.ticks.callback;\n\n    if (formatter) {\n      return call(formatter, [time, index, ticks], this);\n    }\n\n    const formats = options.time.displayFormats;\n    const unit = this._unit;\n    const majorUnit = this._majorUnit;\n    const minorFormat = unit && formats[unit];\n    const majorFormat = majorUnit && formats[majorUnit];\n    const tick = ticks[index];\n    const major = majorUnit && majorFormat && tick && tick.major;\n\n    return this._adapter.format(time, format || (major ? majorFormat : minorFormat));\n  }\n\n  /**\n\t * @param {object[]} ticks\n\t */\n  generateTickLabels(ticks) {\n    let i, ilen, tick;\n\n    for (i = 0, ilen = ticks.length; i < ilen; ++i) {\n      tick = ticks[i];\n      tick.label = this._tickFormatFunction(tick.value, i, ticks);\n    }\n  }\n\n  /**\n\t * @param {number} value - Milliseconds since epoch (1 January 1970 00:00:00 UTC)\n\t * @return {number}\n\t */\n  getDecimalForValue(value) {\n    return value === null ? NaN : (value - this.min) / (this.max - this.min);\n  }\n\n  /**\n\t * @param {number} value - Milliseconds since epoch (1 January 1970 00:00:00 UTC)\n\t * @return {number}\n\t */\n  getPixelForValue(value) {\n    const offsets = this._offsets;\n    const pos = this.getDecimalForValue(value);\n    return this.getPixelForDecimal((offsets.start + pos) * offsets.factor);\n  }\n\n  /**\n\t * @param {number} pixel\n\t * @return {number}\n\t */\n  getValueForPixel(pixel) {\n    const offsets = this._offsets;\n    const pos = this.getDecimalForPixel(pixel) / offsets.factor - offsets.end;\n    return this.min + pos * (this.max - this.min);\n  }\n\n  /**\n\t * @param {string} label\n\t * @return {{w:number, h:number}}\n\t * @private\n\t */\n  _getLabelSize(label) {\n    const ticksOpts = this.options.ticks;\n    const tickLabelWidth = this.ctx.measureText(label).width;\n    const angle = toRadians(this.isHorizontal() ? ticksOpts.maxRotation : ticksOpts.minRotation);\n    const cosRotation = Math.cos(angle);\n    const sinRotation = Math.sin(angle);\n    const tickFontSize = this._resolveTickFontOptions(0).size;\n\n    return {\n      w: (tickLabelWidth * cosRotation) + (tickFontSize * sinRotation),\n      h: (tickLabelWidth * sinRotation) + (tickFontSize * cosRotation)\n    };\n  }\n\n  /**\n\t * @param {number} exampleTime\n\t * @return {number}\n\t * @private\n\t */\n  _getLabelCapacity(exampleTime) {\n    const timeOpts = this.options.time;\n    const displayFormats = timeOpts.displayFormats;\n\n    // pick the longest format (milliseconds) for guesstimation\n    const format = displayFormats[timeOpts.unit] || displayFormats.millisecond;\n    const exampleLabel = this._tickFormatFunction(exampleTime, 0, ticksFromTimestamps(this, [exampleTime], this._majorUnit), format);\n    const size = this._getLabelSize(exampleLabel);\n    // subtract 1 - if offset then there's one less label than tick\n    // if not offset then one half label padding is added to each end leaving room for one less label\n    const capacity = Math.floor(this.isHorizontal() ? this.width / size.w : this.height / size.h) - 1;\n    return capacity > 0 ? capacity : 1;\n  }\n\n  /**\n\t * @protected\n\t */\n  getDataTimestamps() {\n    let timestamps = this._cache.data || [];\n    let i, ilen;\n\n    if (timestamps.length) {\n      return timestamps;\n    }\n\n    const metas = this.getMatchingVisibleMetas();\n\n    if (this._normalized && metas.length) {\n      return (this._cache.data = metas[0].controller.getAllParsedValues(this));\n    }\n\n    for (i = 0, ilen = metas.length; i < ilen; ++i) {\n      timestamps = timestamps.concat(metas[i].controller.getAllParsedValues(this));\n    }\n\n    return (this._cache.data = this.normalize(timestamps));\n  }\n\n  /**\n\t * @protected\n\t */\n  getLabelTimestamps() {\n    const timestamps = this._cache.labels || [];\n    let i, ilen;\n\n    if (timestamps.length) {\n      return timestamps;\n    }\n\n    const labels = this.getLabels();\n    for (i = 0, ilen = labels.length; i < ilen; ++i) {\n      timestamps.push(parse(this, labels[i]));\n    }\n\n    return (this._cache.labels = this._normalized ? timestamps : this.normalize(timestamps));\n  }\n\n  /**\n\t * @param {number[]} values\n\t * @protected\n\t */\n  normalize(values) {\n    // It seems to be somewhat faster to do sorting first\n    return _arrayUnique(values.sort(sorter));\n  }\n}\n","import TimeScale from './scale.time.js';\nimport {_lookupByKey} from '../helpers/helpers.collection.js';\n\n/**\n * Linearly interpolates the given source `val` using the table. If value is out of bounds, values\n * at edges are used for the interpolation.\n * @param {object} table\n * @param {number} val\n * @param {boolean} [reverse] lookup time based on position instead of vice versa\n * @return {object}\n */\nfunction interpolate(table, val, reverse) {\n  let lo = 0;\n  let hi = table.length - 1;\n  let prevSource, nextSource, prevTarget, nextTarget;\n  if (reverse) {\n    if (val >= table[lo].pos && val <= table[hi].pos) {\n      ({lo, hi} = _lookupByKey(table, 'pos', val));\n    }\n    ({pos: prevSource, time: prevTarget} = table[lo]);\n    ({pos: nextSource, time: nextTarget} = table[hi]);\n  } else {\n    if (val >= table[lo].time && val <= table[hi].time) {\n      ({lo, hi} = _lookupByKey(table, 'time', val));\n    }\n    ({time: prevSource, pos: prevTarget} = table[lo]);\n    ({time: nextSource, pos: nextTarget} = table[hi]);\n  }\n\n  const span = nextSource - prevSource;\n  return span ? prevTarget + (nextTarget - prevTarget) * (val - prevSource) / span : prevTarget;\n}\n\nclass TimeSeriesScale extends TimeScale {\n\n  static id = 'timeseries';\n\n  /**\n   * @type {any}\n   */\n  static defaults = TimeScale.defaults;\n\n  /**\n\t * @param {object} props\n\t */\n  constructor(props) {\n    super(props);\n\n    /** @type {object[]} */\n    this._table = [];\n    /** @type {number} */\n    this._minPos = undefined;\n    /** @type {number} */\n    this._tableRange = undefined;\n  }\n\n  /**\n\t * @protected\n\t */\n  initOffsets() {\n    const timestamps = this._getTimestampsForTable();\n    const table = this._table = this.buildLookupTable(timestamps);\n    this._minPos = interpolate(table, this.min);\n    this._tableRange = interpolate(table, this.max) - this._minPos;\n    super.initOffsets(timestamps);\n  }\n\n  /**\n\t * Returns an array of {time, pos} objects used to interpolate a specific `time` or position\n\t * (`pos`) on the scale, by searching entries before and after the requested value. `pos` is\n\t * a decimal between 0 and 1: 0 being the start of the scale (left or top) and 1 the other\n\t * extremity (left + width or top + height). Note that it would be more optimized to directly\n\t * store pre-computed pixels, but the scale dimensions are not guaranteed at the time we need\n\t * to create the lookup table. The table ALWAYS contains at least two items: min and max.\n\t * @param {number[]} timestamps\n\t * @return {object[]}\n\t * @protected\n\t */\n  buildLookupTable(timestamps) {\n    const {min, max} = this;\n    const items = [];\n    const table = [];\n    let i, ilen, prev, curr, next;\n\n    for (i = 0, ilen = timestamps.length; i < ilen; ++i) {\n      curr = timestamps[i];\n      if (curr >= min && curr <= max) {\n        items.push(curr);\n      }\n    }\n\n    if (items.length < 2) {\n      // In case there is less that 2 timestamps between min and max, the scale is defined by min and max\n      return [\n        {time: min, pos: 0},\n        {time: max, pos: 1}\n      ];\n    }\n\n    for (i = 0, ilen = items.length; i < ilen; ++i) {\n      next = items[i + 1];\n      prev = items[i - 1];\n      curr = items[i];\n\n      // only add points that breaks the scale linearity\n      if (Math.round((next + prev) / 2) !== curr) {\n        table.push({time: curr, pos: i / (ilen - 1)});\n      }\n    }\n    return table;\n  }\n\n  /**\n    * Generates all timestamps defined in the data.\n    * Important: this method can return ticks outside the min and max range, it's the\n    * responsibility of the calling code to clamp values if needed.\n    * @protected\n    */\n  _generate() {\n    const min = this.min;\n    const max = this.max;\n    let timestamps = super.getDataTimestamps();\n    if (!timestamps.includes(min) || !timestamps.length) {\n      timestamps.splice(0, 0, min);\n    }\n    if (!timestamps.includes(max) || timestamps.length === 1) {\n      timestamps.push(max);\n    }\n    return timestamps.sort((a, b) => a - b);\n  }\n\n  /**\n\t * Returns all timestamps\n\t * @return {number[]}\n\t * @private\n\t */\n  _getTimestampsForTable() {\n    let timestamps = this._cache.all || [];\n\n    if (timestamps.length) {\n      return timestamps;\n    }\n\n    const data = this.getDataTimestamps();\n    const label = this.getLabelTimestamps();\n    if (data.length && label.length) {\n      // If combining labels and data (data might not contain all labels),\n      // we need to recheck uniqueness and sort\n      timestamps = this.normalize(data.concat(label));\n    } else {\n      timestamps = data.length ? data : label;\n    }\n    timestamps = this._cache.all = timestamps;\n\n    return timestamps;\n  }\n\n  /**\n\t * @param {number} value - Milliseconds since epoch (1 January 1970 00:00:00 UTC)\n\t * @return {number}\n\t */\n  getDecimalForValue(value) {\n    return (interpolate(this._table, value) - this._minPos) / this._tableRange;\n  }\n\n  /**\n\t * @param {number} pixel\n\t * @return {number}\n\t */\n  getValueForPixel(pixel) {\n    const offsets = this._offsets;\n    const decimal = this.getDecimalForPixel(pixel) / offsets.factor - offsets.end;\n    return interpolate(this._table, decimal * this._tableRange + this._minPos, true);\n  }\n}\n\nexport default TimeSeriesScale;\n","export * from './controllers/index.js';\nexport * from './core/index.js';\nexport * from './elements/index.js';\nexport * from './platform/index.js';\nexport * from './plugins/index.js';\nexport * from './scales/index.js';\n\nimport * as controllers from './controllers/index.js';\nimport * as elements from './elements/index.js';\nimport * as plugins from './plugins/index.js';\nimport * as scales from './scales/index.js';\n\nexport {\n  controllers,\n  elements,\n  plugins,\n  scales,\n};\n\nexport const registerables = [\n  controllers,\n  elements,\n  plugins,\n  scales,\n];\n","/*!\n * Chart.js v4.4.5\n * https://www.chartjs.org\n * (c) 2024 Chart.js Contributors\n * Released under the MIT License\n */\nimport { Color } from '@kurkle/color';\n\n/**\n * @namespace Chart.helpers\n */ /**\n * An empty function that can be used, for example, for optional callback.\n */ function noop() {\n/* noop */ }\n/**\n * Returns a unique id, sequentially generated from a global variable.\n */ const uid = (()=>{\n    let id = 0;\n    return ()=>id++;\n})();\n/**\n * Returns true if `value` is neither null nor undefined, else returns false.\n * @param value - The value to test.\n * @since 2.7.0\n */ function isNullOrUndef(value) {\n    return value === null || typeof value === 'undefined';\n}\n/**\n * Returns true if `value` is an array (including typed arrays), else returns false.\n * @param value - The value to test.\n * @function\n */ function isArray(value) {\n    if (Array.isArray && Array.isArray(value)) {\n        return true;\n    }\n    const type = Object.prototype.toString.call(value);\n    if (type.slice(0, 7) === '[object' && type.slice(-6) === 'Array]') {\n        return true;\n    }\n    return false;\n}\n/**\n * Returns true if `value` is an object (excluding null), else returns false.\n * @param value - The value to test.\n * @since 2.7.0\n */ function isObject(value) {\n    return value !== null && Object.prototype.toString.call(value) === '[object Object]';\n}\n/**\n * Returns true if `value` is a finite number, else returns false\n * @param value  - The value to test.\n */ function isNumberFinite(value) {\n    return (typeof value === 'number' || value instanceof Number) && isFinite(+value);\n}\n/**\n * Returns `value` if finite, else returns `defaultValue`.\n * @param value - The value to return if defined.\n * @param defaultValue - The value to return if `value` is not finite.\n */ function finiteOrDefault(value, defaultValue) {\n    return isNumberFinite(value) ? value : defaultValue;\n}\n/**\n * Returns `value` if defined, else returns `defaultValue`.\n * @param value - The value to return if defined.\n * @param defaultValue - The value to return if `value` is undefined.\n */ function valueOrDefault(value, defaultValue) {\n    return typeof value === 'undefined' ? defaultValue : value;\n}\nconst toPercentage = (value, dimension)=>typeof value === 'string' && value.endsWith('%') ? parseFloat(value) / 100 : +value / dimension;\nconst toDimension = (value, dimension)=>typeof value === 'string' && value.endsWith('%') ? parseFloat(value) / 100 * dimension : +value;\n/**\n * Calls `fn` with the given `args` in the scope defined by `thisArg` and returns the\n * value returned by `fn`. If `fn` is not a function, this method returns undefined.\n * @param fn - The function to call.\n * @param args - The arguments with which `fn` should be called.\n * @param [thisArg] - The value of `this` provided for the call to `fn`.\n */ function callback(fn, args, thisArg) {\n    if (fn && typeof fn.call === 'function') {\n        return fn.apply(thisArg, args);\n    }\n}\nfunction each(loopable, fn, thisArg, reverse) {\n    let i, len, keys;\n    if (isArray(loopable)) {\n        len = loopable.length;\n        if (reverse) {\n            for(i = len - 1; i >= 0; i--){\n                fn.call(thisArg, loopable[i], i);\n            }\n        } else {\n            for(i = 0; i < len; i++){\n                fn.call(thisArg, loopable[i], i);\n            }\n        }\n    } else if (isObject(loopable)) {\n        keys = Object.keys(loopable);\n        len = keys.length;\n        for(i = 0; i < len; i++){\n            fn.call(thisArg, loopable[keys[i]], keys[i]);\n        }\n    }\n}\n/**\n * Returns true if the `a0` and `a1` arrays have the same content, else returns false.\n * @param a0 - The array to compare\n * @param a1 - The array to compare\n * @private\n */ function _elementsEqual(a0, a1) {\n    let i, ilen, v0, v1;\n    if (!a0 || !a1 || a0.length !== a1.length) {\n        return false;\n    }\n    for(i = 0, ilen = a0.length; i < ilen; ++i){\n        v0 = a0[i];\n        v1 = a1[i];\n        if (v0.datasetIndex !== v1.datasetIndex || v0.index !== v1.index) {\n            return false;\n        }\n    }\n    return true;\n}\n/**\n * Returns a deep copy of `source` without keeping references on objects and arrays.\n * @param source - The value to clone.\n */ function clone(source) {\n    if (isArray(source)) {\n        return source.map(clone);\n    }\n    if (isObject(source)) {\n        const target = Object.create(null);\n        const keys = Object.keys(source);\n        const klen = keys.length;\n        let k = 0;\n        for(; k < klen; ++k){\n            target[keys[k]] = clone(source[keys[k]]);\n        }\n        return target;\n    }\n    return source;\n}\nfunction isValidKey(key) {\n    return [\n        '__proto__',\n        'prototype',\n        'constructor'\n    ].indexOf(key) === -1;\n}\n/**\n * The default merger when Chart.helpers.merge is called without merger option.\n * Note(SB): also used by mergeConfig and mergeScaleConfig as fallback.\n * @private\n */ function _merger(key, target, source, options) {\n    if (!isValidKey(key)) {\n        return;\n    }\n    const tval = target[key];\n    const sval = source[key];\n    if (isObject(tval) && isObject(sval)) {\n        // eslint-disable-next-line @typescript-eslint/no-use-before-define\n        merge(tval, sval, options);\n    } else {\n        target[key] = clone(sval);\n    }\n}\nfunction merge(target, source, options) {\n    const sources = isArray(source) ? source : [\n        source\n    ];\n    const ilen = sources.length;\n    if (!isObject(target)) {\n        return target;\n    }\n    options = options || {};\n    const merger = options.merger || _merger;\n    let current;\n    for(let i = 0; i < ilen; ++i){\n        current = sources[i];\n        if (!isObject(current)) {\n            continue;\n        }\n        const keys = Object.keys(current);\n        for(let k = 0, klen = keys.length; k < klen; ++k){\n            merger(keys[k], target, current, options);\n        }\n    }\n    return target;\n}\nfunction mergeIf(target, source) {\n    // eslint-disable-next-line @typescript-eslint/no-use-before-define\n    return merge(target, source, {\n        merger: _mergerIf\n    });\n}\n/**\n * Merges source[key] in target[key] only if target[key] is undefined.\n * @private\n */ function _mergerIf(key, target, source) {\n    if (!isValidKey(key)) {\n        return;\n    }\n    const tval = target[key];\n    const sval = source[key];\n    if (isObject(tval) && isObject(sval)) {\n        mergeIf(tval, sval);\n    } else if (!Object.prototype.hasOwnProperty.call(target, key)) {\n        target[key] = clone(sval);\n    }\n}\n/**\n * @private\n */ function _deprecated(scope, value, previous, current) {\n    if (value !== undefined) {\n        console.warn(scope + ': \"' + previous + '\" is deprecated. Please use \"' + current + '\" instead');\n    }\n}\n// resolveObjectKey resolver cache\nconst keyResolvers = {\n    // Chart.helpers.core resolveObjectKey should resolve empty key to root object\n    '': (v)=>v,\n    // default resolvers\n    x: (o)=>o.x,\n    y: (o)=>o.y\n};\n/**\n * @private\n */ function _splitKey(key) {\n    const parts = key.split('.');\n    const keys = [];\n    let tmp = '';\n    for (const part of parts){\n        tmp += part;\n        if (tmp.endsWith('\\\\')) {\n            tmp = tmp.slice(0, -1) + '.';\n        } else {\n            keys.push(tmp);\n            tmp = '';\n        }\n    }\n    return keys;\n}\nfunction _getKeyResolver(key) {\n    const keys = _splitKey(key);\n    return (obj)=>{\n        for (const k of keys){\n            if (k === '') {\n                break;\n            }\n            obj = obj && obj[k];\n        }\n        return obj;\n    };\n}\nfunction resolveObjectKey(obj, key) {\n    const resolver = keyResolvers[key] || (keyResolvers[key] = _getKeyResolver(key));\n    return resolver(obj);\n}\n/**\n * @private\n */ function _capitalize(str) {\n    return str.charAt(0).toUpperCase() + str.slice(1);\n}\nconst defined = (value)=>typeof value !== 'undefined';\nconst isFunction = (value)=>typeof value === 'function';\n// Adapted from https://stackoverflow.com/questions/31128855/comparing-ecma6-sets-for-equality#31129384\nconst setsEqual = (a, b)=>{\n    if (a.size !== b.size) {\n        return false;\n    }\n    for (const item of a){\n        if (!b.has(item)) {\n            return false;\n        }\n    }\n    return true;\n};\n/**\n * @param e - The event\n * @private\n */ function _isClickEvent(e) {\n    return e.type === 'mouseup' || e.type === 'click' || e.type === 'contextmenu';\n}\n\n/**\n * @alias Chart.helpers.math\n * @namespace\n */ const PI = Math.PI;\nconst TAU = 2 * PI;\nconst PITAU = TAU + PI;\nconst INFINITY = Number.POSITIVE_INFINITY;\nconst RAD_PER_DEG = PI / 180;\nconst HALF_PI = PI / 2;\nconst QUARTER_PI = PI / 4;\nconst TWO_THIRDS_PI = PI * 2 / 3;\nconst log10 = Math.log10;\nconst sign = Math.sign;\nfunction almostEquals(x, y, epsilon) {\n    return Math.abs(x - y) < epsilon;\n}\n/**\n * Implementation of the nice number algorithm used in determining where axis labels will go\n */ function niceNum(range) {\n    const roundedRange = Math.round(range);\n    range = almostEquals(range, roundedRange, range / 1000) ? roundedRange : range;\n    const niceRange = Math.pow(10, Math.floor(log10(range)));\n    const fraction = range / niceRange;\n    const niceFraction = fraction <= 1 ? 1 : fraction <= 2 ? 2 : fraction <= 5 ? 5 : 10;\n    return niceFraction * niceRange;\n}\n/**\n * Returns an array of factors sorted from 1 to sqrt(value)\n * @private\n */ function _factorize(value) {\n    const result = [];\n    const sqrt = Math.sqrt(value);\n    let i;\n    for(i = 1; i < sqrt; i++){\n        if (value % i === 0) {\n            result.push(i);\n            result.push(value / i);\n        }\n    }\n    if (sqrt === (sqrt | 0)) {\n        result.push(sqrt);\n    }\n    result.sort((a, b)=>a - b).pop();\n    return result;\n}\nfunction isNumber(n) {\n    return !isNaN(parseFloat(n)) && isFinite(n);\n}\nfunction almostWhole(x, epsilon) {\n    const rounded = Math.round(x);\n    return rounded - epsilon <= x && rounded + epsilon >= x;\n}\n/**\n * @private\n */ function _setMinAndMaxByKey(array, target, property) {\n    let i, ilen, value;\n    for(i = 0, ilen = array.length; i < ilen; i++){\n        value = array[i][property];\n        if (!isNaN(value)) {\n            target.min = Math.min(target.min, value);\n            target.max = Math.max(target.max, value);\n        }\n    }\n}\nfunction toRadians(degrees) {\n    return degrees * (PI / 180);\n}\nfunction toDegrees(radians) {\n    return radians * (180 / PI);\n}\n/**\n * Returns the number of decimal places\n * i.e. the number of digits after the decimal point, of the value of this Number.\n * @param x - A number.\n * @returns The number of decimal places.\n * @private\n */ function _decimalPlaces(x) {\n    if (!isNumberFinite(x)) {\n        return;\n    }\n    let e = 1;\n    let p = 0;\n    while(Math.round(x * e) / e !== x){\n        e *= 10;\n        p++;\n    }\n    return p;\n}\n// Gets the angle from vertical upright to the point about a centre.\nfunction getAngleFromPoint(centrePoint, anglePoint) {\n    const distanceFromXCenter = anglePoint.x - centrePoint.x;\n    const distanceFromYCenter = anglePoint.y - centrePoint.y;\n    const radialDistanceFromCenter = Math.sqrt(distanceFromXCenter * distanceFromXCenter + distanceFromYCenter * distanceFromYCenter);\n    let angle = Math.atan2(distanceFromYCenter, distanceFromXCenter);\n    if (angle < -0.5 * PI) {\n        angle += TAU; // make sure the returned angle is in the range of (-PI/2, 3PI/2]\n    }\n    return {\n        angle,\n        distance: radialDistanceFromCenter\n    };\n}\nfunction distanceBetweenPoints(pt1, pt2) {\n    return Math.sqrt(Math.pow(pt2.x - pt1.x, 2) + Math.pow(pt2.y - pt1.y, 2));\n}\n/**\n * Shortest distance between angles, in either direction.\n * @private\n */ function _angleDiff(a, b) {\n    return (a - b + PITAU) % TAU - PI;\n}\n/**\n * Normalize angle to be between 0 and 2*PI\n * @private\n */ function _normalizeAngle(a) {\n    return (a % TAU + TAU) % TAU;\n}\n/**\n * @private\n */ function _angleBetween(angle, start, end, sameAngleIsFullCircle) {\n    const a = _normalizeAngle(angle);\n    const s = _normalizeAngle(start);\n    const e = _normalizeAngle(end);\n    const angleToStart = _normalizeAngle(s - a);\n    const angleToEnd = _normalizeAngle(e - a);\n    const startToAngle = _normalizeAngle(a - s);\n    const endToAngle = _normalizeAngle(a - e);\n    return a === s || a === e || sameAngleIsFullCircle && s === e || angleToStart > angleToEnd && startToAngle < endToAngle;\n}\n/**\n * Limit `value` between `min` and `max`\n * @param value\n * @param min\n * @param max\n * @private\n */ function _limitValue(value, min, max) {\n    return Math.max(min, Math.min(max, value));\n}\n/**\n * @param {number} value\n * @private\n */ function _int16Range(value) {\n    return _limitValue(value, -32768, 32767);\n}\n/**\n * @param value\n * @param start\n * @param end\n * @param [epsilon]\n * @private\n */ function _isBetween(value, start, end, epsilon = 1e-6) {\n    return value >= Math.min(start, end) - epsilon && value <= Math.max(start, end) + epsilon;\n}\n\nfunction _lookup(table, value, cmp) {\n    cmp = cmp || ((index)=>table[index] < value);\n    let hi = table.length - 1;\n    let lo = 0;\n    let mid;\n    while(hi - lo > 1){\n        mid = lo + hi >> 1;\n        if (cmp(mid)) {\n            lo = mid;\n        } else {\n            hi = mid;\n        }\n    }\n    return {\n        lo,\n        hi\n    };\n}\n/**\n * Binary search\n * @param table - the table search. must be sorted!\n * @param key - property name for the value in each entry\n * @param value - value to find\n * @param last - lookup last index\n * @private\n */ const _lookupByKey = (table, key, value, last)=>_lookup(table, value, last ? (index)=>{\n        const ti = table[index][key];\n        return ti < value || ti === value && table[index + 1][key] === value;\n    } : (index)=>table[index][key] < value);\n/**\n * Reverse binary search\n * @param table - the table search. must be sorted!\n * @param key - property name for the value in each entry\n * @param value - value to find\n * @private\n */ const _rlookupByKey = (table, key, value)=>_lookup(table, value, (index)=>table[index][key] >= value);\n/**\n * Return subset of `values` between `min` and `max` inclusive.\n * Values are assumed to be in sorted order.\n * @param values - sorted array of values\n * @param min - min value\n * @param max - max value\n */ function _filterBetween(values, min, max) {\n    let start = 0;\n    let end = values.length;\n    while(start < end && values[start] < min){\n        start++;\n    }\n    while(end > start && values[end - 1] > max){\n        end--;\n    }\n    return start > 0 || end < values.length ? values.slice(start, end) : values;\n}\nconst arrayEvents = [\n    'push',\n    'pop',\n    'shift',\n    'splice',\n    'unshift'\n];\nfunction listenArrayEvents(array, listener) {\n    if (array._chartjs) {\n        array._chartjs.listeners.push(listener);\n        return;\n    }\n    Object.defineProperty(array, '_chartjs', {\n        configurable: true,\n        enumerable: false,\n        value: {\n            listeners: [\n                listener\n            ]\n        }\n    });\n    arrayEvents.forEach((key)=>{\n        const method = '_onData' + _capitalize(key);\n        const base = array[key];\n        Object.defineProperty(array, key, {\n            configurable: true,\n            enumerable: false,\n            value (...args) {\n                const res = base.apply(this, args);\n                array._chartjs.listeners.forEach((object)=>{\n                    if (typeof object[method] === 'function') {\n                        object[method](...args);\n                    }\n                });\n                return res;\n            }\n        });\n    });\n}\nfunction unlistenArrayEvents(array, listener) {\n    const stub = array._chartjs;\n    if (!stub) {\n        return;\n    }\n    const listeners = stub.listeners;\n    const index = listeners.indexOf(listener);\n    if (index !== -1) {\n        listeners.splice(index, 1);\n    }\n    if (listeners.length > 0) {\n        return;\n    }\n    arrayEvents.forEach((key)=>{\n        delete array[key];\n    });\n    delete array._chartjs;\n}\n/**\n * @param items\n */ function _arrayUnique(items) {\n    const set = new Set(items);\n    if (set.size === items.length) {\n        return items;\n    }\n    return Array.from(set);\n}\n\nfunction fontString(pixelSize, fontStyle, fontFamily) {\n    return fontStyle + ' ' + pixelSize + 'px ' + fontFamily;\n}\n/**\n* Request animation polyfill\n*/ const requestAnimFrame = function() {\n    if (typeof window === 'undefined') {\n        return function(callback) {\n            return callback();\n        };\n    }\n    return window.requestAnimationFrame;\n}();\n/**\n * Throttles calling `fn` once per animation frame\n * Latest arguments are used on the actual call\n */ function throttled(fn, thisArg) {\n    let argsToUse = [];\n    let ticking = false;\n    return function(...args) {\n        // Save the args for use later\n        argsToUse = args;\n        if (!ticking) {\n            ticking = true;\n            requestAnimFrame.call(window, ()=>{\n                ticking = false;\n                fn.apply(thisArg, argsToUse);\n            });\n        }\n    };\n}\n/**\n * Debounces calling `fn` for `delay` ms\n */ function debounce(fn, delay) {\n    let timeout;\n    return function(...args) {\n        if (delay) {\n            clearTimeout(timeout);\n            timeout = setTimeout(fn, delay, args);\n        } else {\n            fn.apply(this, args);\n        }\n        return delay;\n    };\n}\n/**\n * Converts 'start' to 'left', 'end' to 'right' and others to 'center'\n * @private\n */ const _toLeftRightCenter = (align)=>align === 'start' ? 'left' : align === 'end' ? 'right' : 'center';\n/**\n * Returns `start`, `end` or `(start + end) / 2` depending on `align`. Defaults to `center`\n * @private\n */ const _alignStartEnd = (align, start, end)=>align === 'start' ? start : align === 'end' ? end : (start + end) / 2;\n/**\n * Returns `left`, `right` or `(left + right) / 2` depending on `align`. Defaults to `left`\n * @private\n */ const _textX = (align, left, right, rtl)=>{\n    const check = rtl ? 'left' : 'right';\n    return align === check ? right : align === 'center' ? (left + right) / 2 : left;\n};\n/**\n * Return start and count of visible points.\n * @private\n */ function _getStartAndCountOfVisiblePoints(meta, points, animationsDisabled) {\n    const pointCount = points.length;\n    let start = 0;\n    let count = pointCount;\n    if (meta._sorted) {\n        const { iScale , _parsed  } = meta;\n        const axis = iScale.axis;\n        const { min , max , minDefined , maxDefined  } = iScale.getUserBounds();\n        if (minDefined) {\n            start = _limitValue(Math.min(// @ts-expect-error Need to type _parsed\n            _lookupByKey(_parsed, axis, min).lo, // @ts-expect-error Need to fix types on _lookupByKey\n            animationsDisabled ? pointCount : _lookupByKey(points, axis, iScale.getPixelForValue(min)).lo), 0, pointCount - 1);\n        }\n        if (maxDefined) {\n            count = _limitValue(Math.max(// @ts-expect-error Need to type _parsed\n            _lookupByKey(_parsed, iScale.axis, max, true).hi + 1, // @ts-expect-error Need to fix types on _lookupByKey\n            animationsDisabled ? 0 : _lookupByKey(points, axis, iScale.getPixelForValue(max), true).hi + 1), start, pointCount) - start;\n        } else {\n            count = pointCount - start;\n        }\n    }\n    return {\n        start,\n        count\n    };\n}\n/**\n * Checks if the scale ranges have changed.\n * @param {object} meta - dataset meta.\n * @returns {boolean}\n * @private\n */ function _scaleRangesChanged(meta) {\n    const { xScale , yScale , _scaleRanges  } = meta;\n    const newRanges = {\n        xmin: xScale.min,\n        xmax: xScale.max,\n        ymin: yScale.min,\n        ymax: yScale.max\n    };\n    if (!_scaleRanges) {\n        meta._scaleRanges = newRanges;\n        return true;\n    }\n    const changed = _scaleRanges.xmin !== xScale.min || _scaleRanges.xmax !== xScale.max || _scaleRanges.ymin !== yScale.min || _scaleRanges.ymax !== yScale.max;\n    Object.assign(_scaleRanges, newRanges);\n    return changed;\n}\n\nconst atEdge = (t)=>t === 0 || t === 1;\nconst elasticIn = (t, s, p)=>-(Math.pow(2, 10 * (t -= 1)) * Math.sin((t - s) * TAU / p));\nconst elasticOut = (t, s, p)=>Math.pow(2, -10 * t) * Math.sin((t - s) * TAU / p) + 1;\n/**\n * Easing functions adapted from Robert Penner's easing equations.\n * @namespace Chart.helpers.easing.effects\n * @see http://www.robertpenner.com/easing/\n */ const effects = {\n    linear: (t)=>t,\n    easeInQuad: (t)=>t * t,\n    easeOutQuad: (t)=>-t * (t - 2),\n    easeInOutQuad: (t)=>(t /= 0.5) < 1 ? 0.5 * t * t : -0.5 * (--t * (t - 2) - 1),\n    easeInCubic: (t)=>t * t * t,\n    easeOutCubic: (t)=>(t -= 1) * t * t + 1,\n    easeInOutCubic: (t)=>(t /= 0.5) < 1 ? 0.5 * t * t * t : 0.5 * ((t -= 2) * t * t + 2),\n    easeInQuart: (t)=>t * t * t * t,\n    easeOutQuart: (t)=>-((t -= 1) * t * t * t - 1),\n    easeInOutQuart: (t)=>(t /= 0.5) < 1 ? 0.5 * t * t * t * t : -0.5 * ((t -= 2) * t * t * t - 2),\n    easeInQuint: (t)=>t * t * t * t * t,\n    easeOutQuint: (t)=>(t -= 1) * t * t * t * t + 1,\n    easeInOutQuint: (t)=>(t /= 0.5) < 1 ? 0.5 * t * t * t * t * t : 0.5 * ((t -= 2) * t * t * t * t + 2),\n    easeInSine: (t)=>-Math.cos(t * HALF_PI) + 1,\n    easeOutSine: (t)=>Math.sin(t * HALF_PI),\n    easeInOutSine: (t)=>-0.5 * (Math.cos(PI * t) - 1),\n    easeInExpo: (t)=>t === 0 ? 0 : Math.pow(2, 10 * (t - 1)),\n    easeOutExpo: (t)=>t === 1 ? 1 : -Math.pow(2, -10 * t) + 1,\n    easeInOutExpo: (t)=>atEdge(t) ? t : t < 0.5 ? 0.5 * Math.pow(2, 10 * (t * 2 - 1)) : 0.5 * (-Math.pow(2, -10 * (t * 2 - 1)) + 2),\n    easeInCirc: (t)=>t >= 1 ? t : -(Math.sqrt(1 - t * t) - 1),\n    easeOutCirc: (t)=>Math.sqrt(1 - (t -= 1) * t),\n    easeInOutCirc: (t)=>(t /= 0.5) < 1 ? -0.5 * (Math.sqrt(1 - t * t) - 1) : 0.5 * (Math.sqrt(1 - (t -= 2) * t) + 1),\n    easeInElastic: (t)=>atEdge(t) ? t : elasticIn(t, 0.075, 0.3),\n    easeOutElastic: (t)=>atEdge(t) ? t : elasticOut(t, 0.075, 0.3),\n    easeInOutElastic (t) {\n        const s = 0.1125;\n        const p = 0.45;\n        return atEdge(t) ? t : t < 0.5 ? 0.5 * elasticIn(t * 2, s, p) : 0.5 + 0.5 * elasticOut(t * 2 - 1, s, p);\n    },\n    easeInBack (t) {\n        const s = 1.70158;\n        return t * t * ((s + 1) * t - s);\n    },\n    easeOutBack (t) {\n        const s = 1.70158;\n        return (t -= 1) * t * ((s + 1) * t + s) + 1;\n    },\n    easeInOutBack (t) {\n        let s = 1.70158;\n        if ((t /= 0.5) < 1) {\n            return 0.5 * (t * t * (((s *= 1.525) + 1) * t - s));\n        }\n        return 0.5 * ((t -= 2) * t * (((s *= 1.525) + 1) * t + s) + 2);\n    },\n    easeInBounce: (t)=>1 - effects.easeOutBounce(1 - t),\n    easeOutBounce (t) {\n        const m = 7.5625;\n        const d = 2.75;\n        if (t < 1 / d) {\n            return m * t * t;\n        }\n        if (t < 2 / d) {\n            return m * (t -= 1.5 / d) * t + 0.75;\n        }\n        if (t < 2.5 / d) {\n            return m * (t -= 2.25 / d) * t + 0.9375;\n        }\n        return m * (t -= 2.625 / d) * t + 0.984375;\n    },\n    easeInOutBounce: (t)=>t < 0.5 ? effects.easeInBounce(t * 2) * 0.5 : effects.easeOutBounce(t * 2 - 1) * 0.5 + 0.5\n};\n\nfunction isPatternOrGradient(value) {\n    if (value && typeof value === 'object') {\n        const type = value.toString();\n        return type === '[object CanvasPattern]' || type === '[object CanvasGradient]';\n    }\n    return false;\n}\nfunction color(value) {\n    return isPatternOrGradient(value) ? value : new Color(value);\n}\nfunction getHoverColor(value) {\n    return isPatternOrGradient(value) ? value : new Color(value).saturate(0.5).darken(0.1).hexString();\n}\n\nconst numbers = [\n    'x',\n    'y',\n    'borderWidth',\n    'radius',\n    'tension'\n];\nconst colors = [\n    'color',\n    'borderColor',\n    'backgroundColor'\n];\nfunction applyAnimationsDefaults(defaults) {\n    defaults.set('animation', {\n        delay: undefined,\n        duration: 1000,\n        easing: 'easeOutQuart',\n        fn: undefined,\n        from: undefined,\n        loop: undefined,\n        to: undefined,\n        type: undefined\n    });\n    defaults.describe('animation', {\n        _fallback: false,\n        _indexable: false,\n        _scriptable: (name)=>name !== 'onProgress' && name !== 'onComplete' && name !== 'fn'\n    });\n    defaults.set('animations', {\n        colors: {\n            type: 'color',\n            properties: colors\n        },\n        numbers: {\n            type: 'number',\n            properties: numbers\n        }\n    });\n    defaults.describe('animations', {\n        _fallback: 'animation'\n    });\n    defaults.set('transitions', {\n        active: {\n            animation: {\n                duration: 400\n            }\n        },\n        resize: {\n            animation: {\n                duration: 0\n            }\n        },\n        show: {\n            animations: {\n                colors: {\n                    from: 'transparent'\n                },\n                visible: {\n                    type: 'boolean',\n                    duration: 0\n                }\n            }\n        },\n        hide: {\n            animations: {\n                colors: {\n                    to: 'transparent'\n                },\n                visible: {\n                    type: 'boolean',\n                    easing: 'linear',\n                    fn: (v)=>v | 0\n                }\n            }\n        }\n    });\n}\n\nfunction applyLayoutsDefaults(defaults) {\n    defaults.set('layout', {\n        autoPadding: true,\n        padding: {\n            top: 0,\n            right: 0,\n            bottom: 0,\n            left: 0\n        }\n    });\n}\n\nconst intlCache = new Map();\nfunction getNumberFormat(locale, options) {\n    options = options || {};\n    const cacheKey = locale + JSON.stringify(options);\n    let formatter = intlCache.get(cacheKey);\n    if (!formatter) {\n        formatter = new Intl.NumberFormat(locale, options);\n        intlCache.set(cacheKey, formatter);\n    }\n    return formatter;\n}\nfunction formatNumber(num, locale, options) {\n    return getNumberFormat(locale, options).format(num);\n}\n\nconst formatters = {\n values (value) {\n        return isArray(value) ?  value : '' + value;\n    },\n numeric (tickValue, index, ticks) {\n        if (tickValue === 0) {\n            return '0';\n        }\n        const locale = this.chart.options.locale;\n        let notation;\n        let delta = tickValue;\n        if (ticks.length > 1) {\n            const maxTick = Math.max(Math.abs(ticks[0].value), Math.abs(ticks[ticks.length - 1].value));\n            if (maxTick < 1e-4 || maxTick > 1e+15) {\n                notation = 'scientific';\n            }\n            delta = calculateDelta(tickValue, ticks);\n        }\n        const logDelta = log10(Math.abs(delta));\n        const numDecimal = isNaN(logDelta) ? 1 : Math.max(Math.min(-1 * Math.floor(logDelta), 20), 0);\n        const options = {\n            notation,\n            minimumFractionDigits: numDecimal,\n            maximumFractionDigits: numDecimal\n        };\n        Object.assign(options, this.options.ticks.format);\n        return formatNumber(tickValue, locale, options);\n    },\n logarithmic (tickValue, index, ticks) {\n        if (tickValue === 0) {\n            return '0';\n        }\n        const remain = ticks[index].significand || tickValue / Math.pow(10, Math.floor(log10(tickValue)));\n        if ([\n            1,\n            2,\n            3,\n            5,\n            10,\n            15\n        ].includes(remain) || index > 0.8 * ticks.length) {\n            return formatters.numeric.call(this, tickValue, index, ticks);\n        }\n        return '';\n    }\n};\nfunction calculateDelta(tickValue, ticks) {\n    let delta = ticks.length > 3 ? ticks[2].value - ticks[1].value : ticks[1].value - ticks[0].value;\n    if (Math.abs(delta) >= 1 && tickValue !== Math.floor(tickValue)) {\n        delta = tickValue - Math.floor(tickValue);\n    }\n    return delta;\n}\n var Ticks = {\n    formatters\n};\n\nfunction applyScaleDefaults(defaults) {\n    defaults.set('scale', {\n        display: true,\n        offset: false,\n        reverse: false,\n        beginAtZero: false,\n bounds: 'ticks',\n        clip: true,\n grace: 0,\n        grid: {\n            display: true,\n            lineWidth: 1,\n            drawOnChartArea: true,\n            drawTicks: true,\n            tickLength: 8,\n            tickWidth: (_ctx, options)=>options.lineWidth,\n            tickColor: (_ctx, options)=>options.color,\n            offset: false\n        },\n        border: {\n            display: true,\n            dash: [],\n            dashOffset: 0.0,\n            width: 1\n        },\n        title: {\n            display: false,\n            text: '',\n            padding: {\n                top: 4,\n                bottom: 4\n            }\n        },\n        ticks: {\n            minRotation: 0,\n            maxRotation: 50,\n            mirror: false,\n            textStrokeWidth: 0,\n            textStrokeColor: '',\n            padding: 3,\n            display: true,\n            autoSkip: true,\n            autoSkipPadding: 3,\n            labelOffset: 0,\n            callback: Ticks.formatters.values,\n            minor: {},\n            major: {},\n            align: 'center',\n            crossAlign: 'near',\n            showLabelBackdrop: false,\n            backdropColor: 'rgba(255, 255, 255, 0.75)',\n            backdropPadding: 2\n        }\n    });\n    defaults.route('scale.ticks', 'color', '', 'color');\n    defaults.route('scale.grid', 'color', '', 'borderColor');\n    defaults.route('scale.border', 'color', '', 'borderColor');\n    defaults.route('scale.title', 'color', '', 'color');\n    defaults.describe('scale', {\n        _fallback: false,\n        _scriptable: (name)=>!name.startsWith('before') && !name.startsWith('after') && name !== 'callback' && name !== 'parser',\n        _indexable: (name)=>name !== 'borderDash' && name !== 'tickBorderDash' && name !== 'dash'\n    });\n    defaults.describe('scales', {\n        _fallback: 'scale'\n    });\n    defaults.describe('scale.ticks', {\n        _scriptable: (name)=>name !== 'backdropPadding' && name !== 'callback',\n        _indexable: (name)=>name !== 'backdropPadding'\n    });\n}\n\nconst overrides = Object.create(null);\nconst descriptors = Object.create(null);\n function getScope$1(node, key) {\n    if (!key) {\n        return node;\n    }\n    const keys = key.split('.');\n    for(let i = 0, n = keys.length; i < n; ++i){\n        const k = keys[i];\n        node = node[k] || (node[k] = Object.create(null));\n    }\n    return node;\n}\nfunction set(root, scope, values) {\n    if (typeof scope === 'string') {\n        return merge(getScope$1(root, scope), values);\n    }\n    return merge(getScope$1(root, ''), scope);\n}\n class Defaults {\n    constructor(_descriptors, _appliers){\n        this.animation = undefined;\n        this.backgroundColor = 'rgba(0,0,0,0.1)';\n        this.borderColor = 'rgba(0,0,0,0.1)';\n        this.color = '#666';\n        this.datasets = {};\n        this.devicePixelRatio = (context)=>context.chart.platform.getDevicePixelRatio();\n        this.elements = {};\n        this.events = [\n            'mousemove',\n            'mouseout',\n            'click',\n            'touchstart',\n            'touchmove'\n        ];\n        this.font = {\n            family: \"'Helvetica Neue', 'Helvetica', 'Arial', sans-serif\",\n            size: 12,\n            style: 'normal',\n            lineHeight: 1.2,\n            weight: null\n        };\n        this.hover = {};\n        this.hoverBackgroundColor = (ctx, options)=>getHoverColor(options.backgroundColor);\n        this.hoverBorderColor = (ctx, options)=>getHoverColor(options.borderColor);\n        this.hoverColor = (ctx, options)=>getHoverColor(options.color);\n        this.indexAxis = 'x';\n        this.interaction = {\n            mode: 'nearest',\n            intersect: true,\n            includeInvisible: false\n        };\n        this.maintainAspectRatio = true;\n        this.onHover = null;\n        this.onClick = null;\n        this.parsing = true;\n        this.plugins = {};\n        this.responsive = true;\n        this.scale = undefined;\n        this.scales = {};\n        this.showLine = true;\n        this.drawActiveElementsOnTop = true;\n        this.describe(_descriptors);\n        this.apply(_appliers);\n    }\n set(scope, values) {\n        return set(this, scope, values);\n    }\n get(scope) {\n        return getScope$1(this, scope);\n    }\n describe(scope, values) {\n        return set(descriptors, scope, values);\n    }\n    override(scope, values) {\n        return set(overrides, scope, values);\n    }\n route(scope, name, targetScope, targetName) {\n        const scopeObject = getScope$1(this, scope);\n        const targetScopeObject = getScope$1(this, targetScope);\n        const privateName = '_' + name;\n        Object.defineProperties(scopeObject, {\n            [privateName]: {\n                value: scopeObject[name],\n                writable: true\n            },\n            [name]: {\n                enumerable: true,\n                get () {\n                    const local = this[privateName];\n                    const target = targetScopeObject[targetName];\n                    if (isObject(local)) {\n                        return Object.assign({}, target, local);\n                    }\n                    return valueOrDefault(local, target);\n                },\n                set (value) {\n                    this[privateName] = value;\n                }\n            }\n        });\n    }\n    apply(appliers) {\n        appliers.forEach((apply)=>apply(this));\n    }\n}\nvar defaults = /* #__PURE__ */ new Defaults({\n    _scriptable: (name)=>!name.startsWith('on'),\n    _indexable: (name)=>name !== 'events',\n    hover: {\n        _fallback: 'interaction'\n    },\n    interaction: {\n        _scriptable: false,\n        _indexable: false\n    }\n}, [\n    applyAnimationsDefaults,\n    applyLayoutsDefaults,\n    applyScaleDefaults\n]);\n\n/**\n * Converts the given font object into a CSS font string.\n * @param font - A font object.\n * @return The CSS font string. See https://developer.mozilla.org/en-US/docs/Web/CSS/font\n * @private\n */ function toFontString(font) {\n    if (!font || isNullOrUndef(font.size) || isNullOrUndef(font.family)) {\n        return null;\n    }\n    return (font.style ? font.style + ' ' : '') + (font.weight ? font.weight + ' ' : '') + font.size + 'px ' + font.family;\n}\n/**\n * @private\n */ function _measureText(ctx, data, gc, longest, string) {\n    let textWidth = data[string];\n    if (!textWidth) {\n        textWidth = data[string] = ctx.measureText(string).width;\n        gc.push(string);\n    }\n    if (textWidth > longest) {\n        longest = textWidth;\n    }\n    return longest;\n}\n/**\n * @private\n */ // eslint-disable-next-line complexity\nfunction _longestText(ctx, font, arrayOfThings, cache) {\n    cache = cache || {};\n    let data = cache.data = cache.data || {};\n    let gc = cache.garbageCollect = cache.garbageCollect || [];\n    if (cache.font !== font) {\n        data = cache.data = {};\n        gc = cache.garbageCollect = [];\n        cache.font = font;\n    }\n    ctx.save();\n    ctx.font = font;\n    let longest = 0;\n    const ilen = arrayOfThings.length;\n    let i, j, jlen, thing, nestedThing;\n    for(i = 0; i < ilen; i++){\n        thing = arrayOfThings[i];\n        // Undefined strings and arrays should not be measured\n        if (thing !== undefined && thing !== null && !isArray(thing)) {\n            longest = _measureText(ctx, data, gc, longest, thing);\n        } else if (isArray(thing)) {\n            // if it is an array lets measure each element\n            // to do maybe simplify this function a bit so we can do this more recursively?\n            for(j = 0, jlen = thing.length; j < jlen; j++){\n                nestedThing = thing[j];\n                // Undefined strings and arrays should not be measured\n                if (nestedThing !== undefined && nestedThing !== null && !isArray(nestedThing)) {\n                    longest = _measureText(ctx, data, gc, longest, nestedThing);\n                }\n            }\n        }\n    }\n    ctx.restore();\n    const gcLen = gc.length / 2;\n    if (gcLen > arrayOfThings.length) {\n        for(i = 0; i < gcLen; i++){\n            delete data[gc[i]];\n        }\n        gc.splice(0, gcLen);\n    }\n    return longest;\n}\n/**\n * Returns the aligned pixel value to avoid anti-aliasing blur\n * @param chart - The chart instance.\n * @param pixel - A pixel value.\n * @param width - The width of the element.\n * @returns The aligned pixel value.\n * @private\n */ function _alignPixel(chart, pixel, width) {\n    const devicePixelRatio = chart.currentDevicePixelRatio;\n    const halfWidth = width !== 0 ? Math.max(width / 2, 0.5) : 0;\n    return Math.round((pixel - halfWidth) * devicePixelRatio) / devicePixelRatio + halfWidth;\n}\n/**\n * Clears the entire canvas.\n */ function clearCanvas(canvas, ctx) {\n    if (!ctx && !canvas) {\n        return;\n    }\n    ctx = ctx || canvas.getContext('2d');\n    ctx.save();\n    // canvas.width and canvas.height do not consider the canvas transform,\n    // while clearRect does\n    ctx.resetTransform();\n    ctx.clearRect(0, 0, canvas.width, canvas.height);\n    ctx.restore();\n}\nfunction drawPoint(ctx, options, x, y) {\n    // eslint-disable-next-line @typescript-eslint/no-use-before-define\n    drawPointLegend(ctx, options, x, y, null);\n}\n// eslint-disable-next-line complexity\nfunction drawPointLegend(ctx, options, x, y, w) {\n    let type, xOffset, yOffset, size, cornerRadius, width, xOffsetW, yOffsetW;\n    const style = options.pointStyle;\n    const rotation = options.rotation;\n    const radius = options.radius;\n    let rad = (rotation || 0) * RAD_PER_DEG;\n    if (style && typeof style === 'object') {\n        type = style.toString();\n        if (type === '[object HTMLImageElement]' || type === '[object HTMLCanvasElement]') {\n            ctx.save();\n            ctx.translate(x, y);\n            ctx.rotate(rad);\n            ctx.drawImage(style, -style.width / 2, -style.height / 2, style.width, style.height);\n            ctx.restore();\n            return;\n        }\n    }\n    if (isNaN(radius) || radius <= 0) {\n        return;\n    }\n    ctx.beginPath();\n    switch(style){\n        // Default includes circle\n        default:\n            if (w) {\n                ctx.ellipse(x, y, w / 2, radius, 0, 0, TAU);\n            } else {\n                ctx.arc(x, y, radius, 0, TAU);\n            }\n            ctx.closePath();\n            break;\n        case 'triangle':\n            width = w ? w / 2 : radius;\n            ctx.moveTo(x + Math.sin(rad) * width, y - Math.cos(rad) * radius);\n            rad += TWO_THIRDS_PI;\n            ctx.lineTo(x + Math.sin(rad) * width, y - Math.cos(rad) * radius);\n            rad += TWO_THIRDS_PI;\n            ctx.lineTo(x + Math.sin(rad) * width, y - Math.cos(rad) * radius);\n            ctx.closePath();\n            break;\n        case 'rectRounded':\n            // NOTE: the rounded rect implementation changed to use `arc` instead of\n            // `quadraticCurveTo` since it generates better results when rect is\n            // almost a circle. 0.516 (instead of 0.5) produces results with visually\n            // closer proportion to the previous impl and it is inscribed in the\n            // circle with `radius`. For more details, see the following PRs:\n            // https://github.com/chartjs/Chart.js/issues/5597\n            // https://github.com/chartjs/Chart.js/issues/5858\n            cornerRadius = radius * 0.516;\n            size = radius - cornerRadius;\n            xOffset = Math.cos(rad + QUARTER_PI) * size;\n            xOffsetW = Math.cos(rad + QUARTER_PI) * (w ? w / 2 - cornerRadius : size);\n            yOffset = Math.sin(rad + QUARTER_PI) * size;\n            yOffsetW = Math.sin(rad + QUARTER_PI) * (w ? w / 2 - cornerRadius : size);\n            ctx.arc(x - xOffsetW, y - yOffset, cornerRadius, rad - PI, rad - HALF_PI);\n            ctx.arc(x + yOffsetW, y - xOffset, cornerRadius, rad - HALF_PI, rad);\n            ctx.arc(x + xOffsetW, y + yOffset, cornerRadius, rad, rad + HALF_PI);\n            ctx.arc(x - yOffsetW, y + xOffset, cornerRadius, rad + HALF_PI, rad + PI);\n            ctx.closePath();\n            break;\n        case 'rect':\n            if (!rotation) {\n                size = Math.SQRT1_2 * radius;\n                width = w ? w / 2 : size;\n                ctx.rect(x - width, y - size, 2 * width, 2 * size);\n                break;\n            }\n            rad += QUARTER_PI;\n        /* falls through */ case 'rectRot':\n            xOffsetW = Math.cos(rad) * (w ? w / 2 : radius);\n            xOffset = Math.cos(rad) * radius;\n            yOffset = Math.sin(rad) * radius;\n            yOffsetW = Math.sin(rad) * (w ? w / 2 : radius);\n            ctx.moveTo(x - xOffsetW, y - yOffset);\n            ctx.lineTo(x + yOffsetW, y - xOffset);\n            ctx.lineTo(x + xOffsetW, y + yOffset);\n            ctx.lineTo(x - yOffsetW, y + xOffset);\n            ctx.closePath();\n            break;\n        case 'crossRot':\n            rad += QUARTER_PI;\n        /* falls through */ case 'cross':\n            xOffsetW = Math.cos(rad) * (w ? w / 2 : radius);\n            xOffset = Math.cos(rad) * radius;\n            yOffset = Math.sin(rad) * radius;\n            yOffsetW = Math.sin(rad) * (w ? w / 2 : radius);\n            ctx.moveTo(x - xOffsetW, y - yOffset);\n            ctx.lineTo(x + xOffsetW, y + yOffset);\n            ctx.moveTo(x + yOffsetW, y - xOffset);\n            ctx.lineTo(x - yOffsetW, y + xOffset);\n            break;\n        case 'star':\n            xOffsetW = Math.cos(rad) * (w ? w / 2 : radius);\n            xOffset = Math.cos(rad) * radius;\n            yOffset = Math.sin(rad) * radius;\n            yOffsetW = Math.sin(rad) * (w ? w / 2 : radius);\n            ctx.moveTo(x - xOffsetW, y - yOffset);\n            ctx.lineTo(x + xOffsetW, y + yOffset);\n            ctx.moveTo(x + yOffsetW, y - xOffset);\n            ctx.lineTo(x - yOffsetW, y + xOffset);\n            rad += QUARTER_PI;\n            xOffsetW = Math.cos(rad) * (w ? w / 2 : radius);\n            xOffset = Math.cos(rad) * radius;\n            yOffset = Math.sin(rad) * radius;\n            yOffsetW = Math.sin(rad) * (w ? w / 2 : radius);\n            ctx.moveTo(x - xOffsetW, y - yOffset);\n            ctx.lineTo(x + xOffsetW, y + yOffset);\n            ctx.moveTo(x + yOffsetW, y - xOffset);\n            ctx.lineTo(x - yOffsetW, y + xOffset);\n            break;\n        case 'line':\n            xOffset = w ? w / 2 : Math.cos(rad) * radius;\n            yOffset = Math.sin(rad) * radius;\n            ctx.moveTo(x - xOffset, y - yOffset);\n            ctx.lineTo(x + xOffset, y + yOffset);\n            break;\n        case 'dash':\n            ctx.moveTo(x, y);\n            ctx.lineTo(x + Math.cos(rad) * (w ? w / 2 : radius), y + Math.sin(rad) * radius);\n            break;\n        case false:\n            ctx.closePath();\n            break;\n    }\n    ctx.fill();\n    if (options.borderWidth > 0) {\n        ctx.stroke();\n    }\n}\n/**\n * Returns true if the point is inside the rectangle\n * @param point - The point to test\n * @param area - The rectangle\n * @param margin - allowed margin\n * @private\n */ function _isPointInArea(point, area, margin) {\n    margin = margin || 0.5; // margin - default is to match rounded decimals\n    return !area || point && point.x > area.left - margin && point.x < area.right + margin && point.y > area.top - margin && point.y < area.bottom + margin;\n}\nfunction clipArea(ctx, area) {\n    ctx.save();\n    ctx.beginPath();\n    ctx.rect(area.left, area.top, area.right - area.left, area.bottom - area.top);\n    ctx.clip();\n}\nfunction unclipArea(ctx) {\n    ctx.restore();\n}\n/**\n * @private\n */ function _steppedLineTo(ctx, previous, target, flip, mode) {\n    if (!previous) {\n        return ctx.lineTo(target.x, target.y);\n    }\n    if (mode === 'middle') {\n        const midpoint = (previous.x + target.x) / 2.0;\n        ctx.lineTo(midpoint, previous.y);\n        ctx.lineTo(midpoint, target.y);\n    } else if (mode === 'after' !== !!flip) {\n        ctx.lineTo(previous.x, target.y);\n    } else {\n        ctx.lineTo(target.x, previous.y);\n    }\n    ctx.lineTo(target.x, target.y);\n}\n/**\n * @private\n */ function _bezierCurveTo(ctx, previous, target, flip) {\n    if (!previous) {\n        return ctx.lineTo(target.x, target.y);\n    }\n    ctx.bezierCurveTo(flip ? previous.cp1x : previous.cp2x, flip ? previous.cp1y : previous.cp2y, flip ? target.cp2x : target.cp1x, flip ? target.cp2y : target.cp1y, target.x, target.y);\n}\nfunction setRenderOpts(ctx, opts) {\n    if (opts.translation) {\n        ctx.translate(opts.translation[0], opts.translation[1]);\n    }\n    if (!isNullOrUndef(opts.rotation)) {\n        ctx.rotate(opts.rotation);\n    }\n    if (opts.color) {\n        ctx.fillStyle = opts.color;\n    }\n    if (opts.textAlign) {\n        ctx.textAlign = opts.textAlign;\n    }\n    if (opts.textBaseline) {\n        ctx.textBaseline = opts.textBaseline;\n    }\n}\nfunction decorateText(ctx, x, y, line, opts) {\n    if (opts.strikethrough || opts.underline) {\n        /**\n     * Now that IE11 support has been dropped, we can use more\n     * of the TextMetrics object. The actual bounding boxes\n     * are unflagged in Chrome, Firefox, Edge, and Safari so they\n     * can be safely used.\n     * See https://developer.mozilla.org/en-US/docs/Web/API/TextMetrics#Browser_compatibility\n     */ const metrics = ctx.measureText(line);\n        const left = x - metrics.actualBoundingBoxLeft;\n        const right = x + metrics.actualBoundingBoxRight;\n        const top = y - metrics.actualBoundingBoxAscent;\n        const bottom = y + metrics.actualBoundingBoxDescent;\n        const yDecoration = opts.strikethrough ? (top + bottom) / 2 : bottom;\n        ctx.strokeStyle = ctx.fillStyle;\n        ctx.beginPath();\n        ctx.lineWidth = opts.decorationWidth || 2;\n        ctx.moveTo(left, yDecoration);\n        ctx.lineTo(right, yDecoration);\n        ctx.stroke();\n    }\n}\nfunction drawBackdrop(ctx, opts) {\n    const oldColor = ctx.fillStyle;\n    ctx.fillStyle = opts.color;\n    ctx.fillRect(opts.left, opts.top, opts.width, opts.height);\n    ctx.fillStyle = oldColor;\n}\n/**\n * Render text onto the canvas\n */ function renderText(ctx, text, x, y, font, opts = {}) {\n    const lines = isArray(text) ? text : [\n        text\n    ];\n    const stroke = opts.strokeWidth > 0 && opts.strokeColor !== '';\n    let i, line;\n    ctx.save();\n    ctx.font = font.string;\n    setRenderOpts(ctx, opts);\n    for(i = 0; i < lines.length; ++i){\n        line = lines[i];\n        if (opts.backdrop) {\n            drawBackdrop(ctx, opts.backdrop);\n        }\n        if (stroke) {\n            if (opts.strokeColor) {\n                ctx.strokeStyle = opts.strokeColor;\n            }\n            if (!isNullOrUndef(opts.strokeWidth)) {\n                ctx.lineWidth = opts.strokeWidth;\n            }\n            ctx.strokeText(line, x, y, opts.maxWidth);\n        }\n        ctx.fillText(line, x, y, opts.maxWidth);\n        decorateText(ctx, x, y, line, opts);\n        y += Number(font.lineHeight);\n    }\n    ctx.restore();\n}\n/**\n * Add a path of a rectangle with rounded corners to the current sub-path\n * @param ctx - Context\n * @param rect - Bounding rect\n */ function addRoundedRectPath(ctx, rect) {\n    const { x , y , w , h , radius  } = rect;\n    // top left arc\n    ctx.arc(x + radius.topLeft, y + radius.topLeft, radius.topLeft, 1.5 * PI, PI, true);\n    // line from top left to bottom left\n    ctx.lineTo(x, y + h - radius.bottomLeft);\n    // bottom left arc\n    ctx.arc(x + radius.bottomLeft, y + h - radius.bottomLeft, radius.bottomLeft, PI, HALF_PI, true);\n    // line from bottom left to bottom right\n    ctx.lineTo(x + w - radius.bottomRight, y + h);\n    // bottom right arc\n    ctx.arc(x + w - radius.bottomRight, y + h - radius.bottomRight, radius.bottomRight, HALF_PI, 0, true);\n    // line from bottom right to top right\n    ctx.lineTo(x + w, y + radius.topRight);\n    // top right arc\n    ctx.arc(x + w - radius.topRight, y + radius.topRight, radius.topRight, 0, -HALF_PI, true);\n    // line from top right to top left\n    ctx.lineTo(x + radius.topLeft, y);\n}\n\nconst LINE_HEIGHT = /^(normal|(\\d+(?:\\.\\d+)?)(px|em|%)?)$/;\nconst FONT_STYLE = /^(normal|italic|initial|inherit|unset|(oblique( -?[0-9]?[0-9]deg)?))$/;\n/**\n * @alias Chart.helpers.options\n * @namespace\n */ /**\n * Converts the given line height `value` in pixels for a specific font `size`.\n * @param value - The lineHeight to parse (eg. 1.6, '14px', '75%', '1.6em').\n * @param size - The font size (in pixels) used to resolve relative `value`.\n * @returns The effective line height in pixels (size * 1.2 if value is invalid).\n * @see https://developer.mozilla.org/en-US/docs/Web/CSS/line-height\n * @since 2.7.0\n */ function toLineHeight(value, size) {\n    const matches = ('' + value).match(LINE_HEIGHT);\n    if (!matches || matches[1] === 'normal') {\n        return size * 1.2;\n    }\n    value = +matches[2];\n    switch(matches[3]){\n        case 'px':\n            return value;\n        case '%':\n            value /= 100;\n            break;\n    }\n    return size * value;\n}\nconst numberOrZero = (v)=>+v || 0;\nfunction _readValueToProps(value, props) {\n    const ret = {};\n    const objProps = isObject(props);\n    const keys = objProps ? Object.keys(props) : props;\n    const read = isObject(value) ? objProps ? (prop)=>valueOrDefault(value[prop], value[props[prop]]) : (prop)=>value[prop] : ()=>value;\n    for (const prop of keys){\n        ret[prop] = numberOrZero(read(prop));\n    }\n    return ret;\n}\n/**\n * Converts the given value into a TRBL object.\n * @param value - If a number, set the value to all TRBL component,\n *  else, if an object, use defined properties and sets undefined ones to 0.\n *  x / y are shorthands for same value for left/right and top/bottom.\n * @returns The padding values (top, right, bottom, left)\n * @since 3.0.0\n */ function toTRBL(value) {\n    return _readValueToProps(value, {\n        top: 'y',\n        right: 'x',\n        bottom: 'y',\n        left: 'x'\n    });\n}\n/**\n * Converts the given value into a TRBL corners object (similar with css border-radius).\n * @param value - If a number, set the value to all TRBL corner components,\n *  else, if an object, use defined properties and sets undefined ones to 0.\n * @returns The TRBL corner values (topLeft, topRight, bottomLeft, bottomRight)\n * @since 3.0.0\n */ function toTRBLCorners(value) {\n    return _readValueToProps(value, [\n        'topLeft',\n        'topRight',\n        'bottomLeft',\n        'bottomRight'\n    ]);\n}\n/**\n * Converts the given value into a padding object with pre-computed width/height.\n * @param value - If a number, set the value to all TRBL component,\n *  else, if an object, use defined properties and sets undefined ones to 0.\n *  x / y are shorthands for same value for left/right and top/bottom.\n * @returns The padding values (top, right, bottom, left, width, height)\n * @since 2.7.0\n */ function toPadding(value) {\n    const obj = toTRBL(value);\n    obj.width = obj.left + obj.right;\n    obj.height = obj.top + obj.bottom;\n    return obj;\n}\n/**\n * Parses font options and returns the font object.\n * @param options - A object that contains font options to be parsed.\n * @param fallback - A object that contains fallback font options.\n * @return The font object.\n * @private\n */ function toFont(options, fallback) {\n    options = options || {};\n    fallback = fallback || defaults.font;\n    let size = valueOrDefault(options.size, fallback.size);\n    if (typeof size === 'string') {\n        size = parseInt(size, 10);\n    }\n    let style = valueOrDefault(options.style, fallback.style);\n    if (style && !('' + style).match(FONT_STYLE)) {\n        console.warn('Invalid font style specified: \"' + style + '\"');\n        style = undefined;\n    }\n    const font = {\n        family: valueOrDefault(options.family, fallback.family),\n        lineHeight: toLineHeight(valueOrDefault(options.lineHeight, fallback.lineHeight), size),\n        size,\n        style,\n        weight: valueOrDefault(options.weight, fallback.weight),\n        string: ''\n    };\n    font.string = toFontString(font);\n    return font;\n}\n/**\n * Evaluates the given `inputs` sequentially and returns the first defined value.\n * @param inputs - An array of values, falling back to the last value.\n * @param context - If defined and the current value is a function, the value\n * is called with `context` as first argument and the result becomes the new input.\n * @param index - If defined and the current value is an array, the value\n * at `index` become the new input.\n * @param info - object to return information about resolution in\n * @param info.cacheable - Will be set to `false` if option is not cacheable.\n * @since 2.7.0\n */ function resolve(inputs, context, index, info) {\n    let cacheable = true;\n    let i, ilen, value;\n    for(i = 0, ilen = inputs.length; i < ilen; ++i){\n        value = inputs[i];\n        if (value === undefined) {\n            continue;\n        }\n        if (context !== undefined && typeof value === 'function') {\n            value = value(context);\n            cacheable = false;\n        }\n        if (index !== undefined && isArray(value)) {\n            value = value[index % value.length];\n            cacheable = false;\n        }\n        if (value !== undefined) {\n            if (info && !cacheable) {\n                info.cacheable = false;\n            }\n            return value;\n        }\n    }\n}\n/**\n * @param minmax\n * @param grace\n * @param beginAtZero\n * @private\n */ function _addGrace(minmax, grace, beginAtZero) {\n    const { min , max  } = minmax;\n    const change = toDimension(grace, (max - min) / 2);\n    const keepZero = (value, add)=>beginAtZero && value === 0 ? 0 : value + add;\n    return {\n        min: keepZero(min, -Math.abs(change)),\n        max: keepZero(max, change)\n    };\n}\nfunction createContext(parentContext, context) {\n    return Object.assign(Object.create(parentContext), context);\n}\n\n/**\n * Creates a Proxy for resolving raw values for options.\n * @param scopes - The option scopes to look for values, in resolution order\n * @param prefixes - The prefixes for values, in resolution order.\n * @param rootScopes - The root option scopes\n * @param fallback - Parent scopes fallback\n * @param getTarget - callback for getting the target for changed values\n * @returns Proxy\n * @private\n */ function _createResolver(scopes, prefixes = [\n    ''\n], rootScopes, fallback, getTarget = ()=>scopes[0]) {\n    const finalRootScopes = rootScopes || scopes;\n    if (typeof fallback === 'undefined') {\n        fallback = _resolve('_fallback', scopes);\n    }\n    const cache = {\n        [Symbol.toStringTag]: 'Object',\n        _cacheable: true,\n        _scopes: scopes,\n        _rootScopes: finalRootScopes,\n        _fallback: fallback,\n        _getTarget: getTarget,\n        override: (scope)=>_createResolver([\n                scope,\n                ...scopes\n            ], prefixes, finalRootScopes, fallback)\n    };\n    return new Proxy(cache, {\n        /**\n     * A trap for the delete operator.\n     */ deleteProperty (target, prop) {\n            delete target[prop]; // remove from cache\n            delete target._keys; // remove cached keys\n            delete scopes[0][prop]; // remove from top level scope\n            return true;\n        },\n        /**\n     * A trap for getting property values.\n     */ get (target, prop) {\n            return _cached(target, prop, ()=>_resolveWithPrefixes(prop, prefixes, scopes, target));\n        },\n        /**\n     * A trap for Object.getOwnPropertyDescriptor.\n     * Also used by Object.hasOwnProperty.\n     */ getOwnPropertyDescriptor (target, prop) {\n            return Reflect.getOwnPropertyDescriptor(target._scopes[0], prop);\n        },\n        /**\n     * A trap for Object.getPrototypeOf.\n     */ getPrototypeOf () {\n            return Reflect.getPrototypeOf(scopes[0]);\n        },\n        /**\n     * A trap for the in operator.\n     */ has (target, prop) {\n            return getKeysFromAllScopes(target).includes(prop);\n        },\n        /**\n     * A trap for Object.getOwnPropertyNames and Object.getOwnPropertySymbols.\n     */ ownKeys (target) {\n            return getKeysFromAllScopes(target);\n        },\n        /**\n     * A trap for setting property values.\n     */ set (target, prop, value) {\n            const storage = target._storage || (target._storage = getTarget());\n            target[prop] = storage[prop] = value; // set to top level scope + cache\n            delete target._keys; // remove cached keys\n            return true;\n        }\n    });\n}\n/**\n * Returns an Proxy for resolving option values with context.\n * @param proxy - The Proxy returned by `_createResolver`\n * @param context - Context object for scriptable/indexable options\n * @param subProxy - The proxy provided for scriptable options\n * @param descriptorDefaults - Defaults for descriptors\n * @private\n */ function _attachContext(proxy, context, subProxy, descriptorDefaults) {\n    const cache = {\n        _cacheable: false,\n        _proxy: proxy,\n        _context: context,\n        _subProxy: subProxy,\n        _stack: new Set(),\n        _descriptors: _descriptors(proxy, descriptorDefaults),\n        setContext: (ctx)=>_attachContext(proxy, ctx, subProxy, descriptorDefaults),\n        override: (scope)=>_attachContext(proxy.override(scope), context, subProxy, descriptorDefaults)\n    };\n    return new Proxy(cache, {\n        /**\n     * A trap for the delete operator.\n     */ deleteProperty (target, prop) {\n            delete target[prop]; // remove from cache\n            delete proxy[prop]; // remove from proxy\n            return true;\n        },\n        /**\n     * A trap for getting property values.\n     */ get (target, prop, receiver) {\n            return _cached(target, prop, ()=>_resolveWithContext(target, prop, receiver));\n        },\n        /**\n     * A trap for Object.getOwnPropertyDescriptor.\n     * Also used by Object.hasOwnProperty.\n     */ getOwnPropertyDescriptor (target, prop) {\n            return target._descriptors.allKeys ? Reflect.has(proxy, prop) ? {\n                enumerable: true,\n                configurable: true\n            } : undefined : Reflect.getOwnPropertyDescriptor(proxy, prop);\n        },\n        /**\n     * A trap for Object.getPrototypeOf.\n     */ getPrototypeOf () {\n            return Reflect.getPrototypeOf(proxy);\n        },\n        /**\n     * A trap for the in operator.\n     */ has (target, prop) {\n            return Reflect.has(proxy, prop);\n        },\n        /**\n     * A trap for Object.getOwnPropertyNames and Object.getOwnPropertySymbols.\n     */ ownKeys () {\n            return Reflect.ownKeys(proxy);\n        },\n        /**\n     * A trap for setting property values.\n     */ set (target, prop, value) {\n            proxy[prop] = value; // set to proxy\n            delete target[prop]; // remove from cache\n            return true;\n        }\n    });\n}\n/**\n * @private\n */ function _descriptors(proxy, defaults = {\n    scriptable: true,\n    indexable: true\n}) {\n    const { _scriptable =defaults.scriptable , _indexable =defaults.indexable , _allKeys =defaults.allKeys  } = proxy;\n    return {\n        allKeys: _allKeys,\n        scriptable: _scriptable,\n        indexable: _indexable,\n        isScriptable: isFunction(_scriptable) ? _scriptable : ()=>_scriptable,\n        isIndexable: isFunction(_indexable) ? _indexable : ()=>_indexable\n    };\n}\nconst readKey = (prefix, name)=>prefix ? prefix + _capitalize(name) : name;\nconst needsSubResolver = (prop, value)=>isObject(value) && prop !== 'adapters' && (Object.getPrototypeOf(value) === null || value.constructor === Object);\nfunction _cached(target, prop, resolve) {\n    if (Object.prototype.hasOwnProperty.call(target, prop) || prop === 'constructor') {\n        return target[prop];\n    }\n    const value = resolve();\n    // cache the resolved value\n    target[prop] = value;\n    return value;\n}\nfunction _resolveWithContext(target, prop, receiver) {\n    const { _proxy , _context , _subProxy , _descriptors: descriptors  } = target;\n    let value = _proxy[prop]; // resolve from proxy\n    // resolve with context\n    if (isFunction(value) && descriptors.isScriptable(prop)) {\n        value = _resolveScriptable(prop, value, target, receiver);\n    }\n    if (isArray(value) && value.length) {\n        value = _resolveArray(prop, value, target, descriptors.isIndexable);\n    }\n    if (needsSubResolver(prop, value)) {\n        // if the resolved value is an object, create a sub resolver for it\n        value = _attachContext(value, _context, _subProxy && _subProxy[prop], descriptors);\n    }\n    return value;\n}\nfunction _resolveScriptable(prop, getValue, target, receiver) {\n    const { _proxy , _context , _subProxy , _stack  } = target;\n    if (_stack.has(prop)) {\n        throw new Error('Recursion detected: ' + Array.from(_stack).join('->') + '->' + prop);\n    }\n    _stack.add(prop);\n    let value = getValue(_context, _subProxy || receiver);\n    _stack.delete(prop);\n    if (needsSubResolver(prop, value)) {\n        // When scriptable option returns an object, create a resolver on that.\n        value = createSubResolver(_proxy._scopes, _proxy, prop, value);\n    }\n    return value;\n}\nfunction _resolveArray(prop, value, target, isIndexable) {\n    const { _proxy , _context , _subProxy , _descriptors: descriptors  } = target;\n    if (typeof _context.index !== 'undefined' && isIndexable(prop)) {\n        return value[_context.index % value.length];\n    } else if (isObject(value[0])) {\n        // Array of objects, return array or resolvers\n        const arr = value;\n        const scopes = _proxy._scopes.filter((s)=>s !== arr);\n        value = [];\n        for (const item of arr){\n            const resolver = createSubResolver(scopes, _proxy, prop, item);\n            value.push(_attachContext(resolver, _context, _subProxy && _subProxy[prop], descriptors));\n        }\n    }\n    return value;\n}\nfunction resolveFallback(fallback, prop, value) {\n    return isFunction(fallback) ? fallback(prop, value) : fallback;\n}\nconst getScope = (key, parent)=>key === true ? parent : typeof key === 'string' ? resolveObjectKey(parent, key) : undefined;\nfunction addScopes(set, parentScopes, key, parentFallback, value) {\n    for (const parent of parentScopes){\n        const scope = getScope(key, parent);\n        if (scope) {\n            set.add(scope);\n            const fallback = resolveFallback(scope._fallback, key, value);\n            if (typeof fallback !== 'undefined' && fallback !== key && fallback !== parentFallback) {\n                // When we reach the descriptor that defines a new _fallback, return that.\n                // The fallback will resume to that new scope.\n                return fallback;\n            }\n        } else if (scope === false && typeof parentFallback !== 'undefined' && key !== parentFallback) {\n            // Fallback to `false` results to `false`, when falling back to different key.\n            // For example `interaction` from `hover` or `plugins.tooltip` and `animation` from `animations`\n            return null;\n        }\n    }\n    return false;\n}\nfunction createSubResolver(parentScopes, resolver, prop, value) {\n    const rootScopes = resolver._rootScopes;\n    const fallback = resolveFallback(resolver._fallback, prop, value);\n    const allScopes = [\n        ...parentScopes,\n        ...rootScopes\n    ];\n    const set = new Set();\n    set.add(value);\n    let key = addScopesFromKey(set, allScopes, prop, fallback || prop, value);\n    if (key === null) {\n        return false;\n    }\n    if (typeof fallback !== 'undefined' && fallback !== prop) {\n        key = addScopesFromKey(set, allScopes, fallback, key, value);\n        if (key === null) {\n            return false;\n        }\n    }\n    return _createResolver(Array.from(set), [\n        ''\n    ], rootScopes, fallback, ()=>subGetTarget(resolver, prop, value));\n}\nfunction addScopesFromKey(set, allScopes, key, fallback, item) {\n    while(key){\n        key = addScopes(set, allScopes, key, fallback, item);\n    }\n    return key;\n}\nfunction subGetTarget(resolver, prop, value) {\n    const parent = resolver._getTarget();\n    if (!(prop in parent)) {\n        parent[prop] = {};\n    }\n    const target = parent[prop];\n    if (isArray(target) && isObject(value)) {\n        // For array of objects, the object is used to store updated values\n        return value;\n    }\n    return target || {};\n}\nfunction _resolveWithPrefixes(prop, prefixes, scopes, proxy) {\n    let value;\n    for (const prefix of prefixes){\n        value = _resolve(readKey(prefix, prop), scopes);\n        if (typeof value !== 'undefined') {\n            return needsSubResolver(prop, value) ? createSubResolver(scopes, proxy, prop, value) : value;\n        }\n    }\n}\nfunction _resolve(key, scopes) {\n    for (const scope of scopes){\n        if (!scope) {\n            continue;\n        }\n        const value = scope[key];\n        if (typeof value !== 'undefined') {\n            return value;\n        }\n    }\n}\nfunction getKeysFromAllScopes(target) {\n    let keys = target._keys;\n    if (!keys) {\n        keys = target._keys = resolveKeysFromAllScopes(target._scopes);\n    }\n    return keys;\n}\nfunction resolveKeysFromAllScopes(scopes) {\n    const set = new Set();\n    for (const scope of scopes){\n        for (const key of Object.keys(scope).filter((k)=>!k.startsWith('_'))){\n            set.add(key);\n        }\n    }\n    return Array.from(set);\n}\nfunction _parseObjectDataRadialScale(meta, data, start, count) {\n    const { iScale  } = meta;\n    const { key ='r'  } = this._parsing;\n    const parsed = new Array(count);\n    let i, ilen, index, item;\n    for(i = 0, ilen = count; i < ilen; ++i){\n        index = i + start;\n        item = data[index];\n        parsed[i] = {\n            r: iScale.parse(resolveObjectKey(item, key), index)\n        };\n    }\n    return parsed;\n}\n\nconst EPSILON = Number.EPSILON || 1e-14;\nconst getPoint = (points, i)=>i < points.length && !points[i].skip && points[i];\nconst getValueAxis = (indexAxis)=>indexAxis === 'x' ? 'y' : 'x';\nfunction splineCurve(firstPoint, middlePoint, afterPoint, t) {\n    // Props to Rob Spencer at scaled innovation for his post on splining between points\n    // http://scaledinnovation.com/analytics/splines/aboutSplines.html\n    // This function must also respect \"skipped\" points\n    const previous = firstPoint.skip ? middlePoint : firstPoint;\n    const current = middlePoint;\n    const next = afterPoint.skip ? middlePoint : afterPoint;\n    const d01 = distanceBetweenPoints(current, previous);\n    const d12 = distanceBetweenPoints(next, current);\n    let s01 = d01 / (d01 + d12);\n    let s12 = d12 / (d01 + d12);\n    // If all points are the same, s01 & s02 will be inf\n    s01 = isNaN(s01) ? 0 : s01;\n    s12 = isNaN(s12) ? 0 : s12;\n    const fa = t * s01; // scaling factor for triangle Ta\n    const fb = t * s12;\n    return {\n        previous: {\n            x: current.x - fa * (next.x - previous.x),\n            y: current.y - fa * (next.y - previous.y)\n        },\n        next: {\n            x: current.x + fb * (next.x - previous.x),\n            y: current.y + fb * (next.y - previous.y)\n        }\n    };\n}\n/**\n * Adjust tangents to ensure monotonic properties\n */ function monotoneAdjust(points, deltaK, mK) {\n    const pointsLen = points.length;\n    let alphaK, betaK, tauK, squaredMagnitude, pointCurrent;\n    let pointAfter = getPoint(points, 0);\n    for(let i = 0; i < pointsLen - 1; ++i){\n        pointCurrent = pointAfter;\n        pointAfter = getPoint(points, i + 1);\n        if (!pointCurrent || !pointAfter) {\n            continue;\n        }\n        if (almostEquals(deltaK[i], 0, EPSILON)) {\n            mK[i] = mK[i + 1] = 0;\n            continue;\n        }\n        alphaK = mK[i] / deltaK[i];\n        betaK = mK[i + 1] / deltaK[i];\n        squaredMagnitude = Math.pow(alphaK, 2) + Math.pow(betaK, 2);\n        if (squaredMagnitude <= 9) {\n            continue;\n        }\n        tauK = 3 / Math.sqrt(squaredMagnitude);\n        mK[i] = alphaK * tauK * deltaK[i];\n        mK[i + 1] = betaK * tauK * deltaK[i];\n    }\n}\nfunction monotoneCompute(points, mK, indexAxis = 'x') {\n    const valueAxis = getValueAxis(indexAxis);\n    const pointsLen = points.length;\n    let delta, pointBefore, pointCurrent;\n    let pointAfter = getPoint(points, 0);\n    for(let i = 0; i < pointsLen; ++i){\n        pointBefore = pointCurrent;\n        pointCurrent = pointAfter;\n        pointAfter = getPoint(points, i + 1);\n        if (!pointCurrent) {\n            continue;\n        }\n        const iPixel = pointCurrent[indexAxis];\n        const vPixel = pointCurrent[valueAxis];\n        if (pointBefore) {\n            delta = (iPixel - pointBefore[indexAxis]) / 3;\n            pointCurrent[`cp1${indexAxis}`] = iPixel - delta;\n            pointCurrent[`cp1${valueAxis}`] = vPixel - delta * mK[i];\n        }\n        if (pointAfter) {\n            delta = (pointAfter[indexAxis] - iPixel) / 3;\n            pointCurrent[`cp2${indexAxis}`] = iPixel + delta;\n            pointCurrent[`cp2${valueAxis}`] = vPixel + delta * mK[i];\n        }\n    }\n}\n/**\n * This function calculates Bézier control points in a similar way than |splineCurve|,\n * but preserves monotonicity of the provided data and ensures no local extremums are added\n * between the dataset discrete points due to the interpolation.\n * See : https://en.wikipedia.org/wiki/Monotone_cubic_interpolation\n */ function splineCurveMonotone(points, indexAxis = 'x') {\n    const valueAxis = getValueAxis(indexAxis);\n    const pointsLen = points.length;\n    const deltaK = Array(pointsLen).fill(0);\n    const mK = Array(pointsLen);\n    // Calculate slopes (deltaK) and initialize tangents (mK)\n    let i, pointBefore, pointCurrent;\n    let pointAfter = getPoint(points, 0);\n    for(i = 0; i < pointsLen; ++i){\n        pointBefore = pointCurrent;\n        pointCurrent = pointAfter;\n        pointAfter = getPoint(points, i + 1);\n        if (!pointCurrent) {\n            continue;\n        }\n        if (pointAfter) {\n            const slopeDelta = pointAfter[indexAxis] - pointCurrent[indexAxis];\n            // In the case of two points that appear at the same x pixel, slopeDeltaX is 0\n            deltaK[i] = slopeDelta !== 0 ? (pointAfter[valueAxis] - pointCurrent[valueAxis]) / slopeDelta : 0;\n        }\n        mK[i] = !pointBefore ? deltaK[i] : !pointAfter ? deltaK[i - 1] : sign(deltaK[i - 1]) !== sign(deltaK[i]) ? 0 : (deltaK[i - 1] + deltaK[i]) / 2;\n    }\n    monotoneAdjust(points, deltaK, mK);\n    monotoneCompute(points, mK, indexAxis);\n}\nfunction capControlPoint(pt, min, max) {\n    return Math.max(Math.min(pt, max), min);\n}\nfunction capBezierPoints(points, area) {\n    let i, ilen, point, inArea, inAreaPrev;\n    let inAreaNext = _isPointInArea(points[0], area);\n    for(i = 0, ilen = points.length; i < ilen; ++i){\n        inAreaPrev = inArea;\n        inArea = inAreaNext;\n        inAreaNext = i < ilen - 1 && _isPointInArea(points[i + 1], area);\n        if (!inArea) {\n            continue;\n        }\n        point = points[i];\n        if (inAreaPrev) {\n            point.cp1x = capControlPoint(point.cp1x, area.left, area.right);\n            point.cp1y = capControlPoint(point.cp1y, area.top, area.bottom);\n        }\n        if (inAreaNext) {\n            point.cp2x = capControlPoint(point.cp2x, area.left, area.right);\n            point.cp2y = capControlPoint(point.cp2y, area.top, area.bottom);\n        }\n    }\n}\n/**\n * @private\n */ function _updateBezierControlPoints(points, options, area, loop, indexAxis) {\n    let i, ilen, point, controlPoints;\n    // Only consider points that are drawn in case the spanGaps option is used\n    if (options.spanGaps) {\n        points = points.filter((pt)=>!pt.skip);\n    }\n    if (options.cubicInterpolationMode === 'monotone') {\n        splineCurveMonotone(points, indexAxis);\n    } else {\n        let prev = loop ? points[points.length - 1] : points[0];\n        for(i = 0, ilen = points.length; i < ilen; ++i){\n            point = points[i];\n            controlPoints = splineCurve(prev, point, points[Math.min(i + 1, ilen - (loop ? 0 : 1)) % ilen], options.tension);\n            point.cp1x = controlPoints.previous.x;\n            point.cp1y = controlPoints.previous.y;\n            point.cp2x = controlPoints.next.x;\n            point.cp2y = controlPoints.next.y;\n            prev = point;\n        }\n    }\n    if (options.capBezierPoints) {\n        capBezierPoints(points, area);\n    }\n}\n\n/**\n * Note: typedefs are auto-exported, so use a made-up `dom` namespace where\n * necessary to avoid duplicates with `export * from './helpers`; see\n * https://github.com/microsoft/TypeScript/issues/46011\n * @typedef { import('../core/core.controller.js').default } dom.Chart\n * @typedef { import('../../types').ChartEvent } ChartEvent\n */ /**\n * @private\n */ function _isDomSupported() {\n    return typeof window !== 'undefined' && typeof document !== 'undefined';\n}\n/**\n * @private\n */ function _getParentNode(domNode) {\n    let parent = domNode.parentNode;\n    if (parent && parent.toString() === '[object ShadowRoot]') {\n        parent = parent.host;\n    }\n    return parent;\n}\n/**\n * convert max-width/max-height values that may be percentages into a number\n * @private\n */ function parseMaxStyle(styleValue, node, parentProperty) {\n    let valueInPixels;\n    if (typeof styleValue === 'string') {\n        valueInPixels = parseInt(styleValue, 10);\n        if (styleValue.indexOf('%') !== -1) {\n            // percentage * size in dimension\n            valueInPixels = valueInPixels / 100 * node.parentNode[parentProperty];\n        }\n    } else {\n        valueInPixels = styleValue;\n    }\n    return valueInPixels;\n}\nconst getComputedStyle = (element)=>element.ownerDocument.defaultView.getComputedStyle(element, null);\nfunction getStyle(el, property) {\n    return getComputedStyle(el).getPropertyValue(property);\n}\nconst positions = [\n    'top',\n    'right',\n    'bottom',\n    'left'\n];\nfunction getPositionedStyle(styles, style, suffix) {\n    const result = {};\n    suffix = suffix ? '-' + suffix : '';\n    for(let i = 0; i < 4; i++){\n        const pos = positions[i];\n        result[pos] = parseFloat(styles[style + '-' + pos + suffix]) || 0;\n    }\n    result.width = result.left + result.right;\n    result.height = result.top + result.bottom;\n    return result;\n}\nconst useOffsetPos = (x, y, target)=>(x > 0 || y > 0) && (!target || !target.shadowRoot);\n/**\n * @param e\n * @param canvas\n * @returns Canvas position\n */ function getCanvasPosition(e, canvas) {\n    const touches = e.touches;\n    const source = touches && touches.length ? touches[0] : e;\n    const { offsetX , offsetY  } = source;\n    let box = false;\n    let x, y;\n    if (useOffsetPos(offsetX, offsetY, e.target)) {\n        x = offsetX;\n        y = offsetY;\n    } else {\n        const rect = canvas.getBoundingClientRect();\n        x = source.clientX - rect.left;\n        y = source.clientY - rect.top;\n        box = true;\n    }\n    return {\n        x,\n        y,\n        box\n    };\n}\n/**\n * Gets an event's x, y coordinates, relative to the chart area\n * @param event\n * @param chart\n * @returns x and y coordinates of the event\n */ function getRelativePosition(event, chart) {\n    if ('native' in event) {\n        return event;\n    }\n    const { canvas , currentDevicePixelRatio  } = chart;\n    const style = getComputedStyle(canvas);\n    const borderBox = style.boxSizing === 'border-box';\n    const paddings = getPositionedStyle(style, 'padding');\n    const borders = getPositionedStyle(style, 'border', 'width');\n    const { x , y , box  } = getCanvasPosition(event, canvas);\n    const xOffset = paddings.left + (box && borders.left);\n    const yOffset = paddings.top + (box && borders.top);\n    let { width , height  } = chart;\n    if (borderBox) {\n        width -= paddings.width + borders.width;\n        height -= paddings.height + borders.height;\n    }\n    return {\n        x: Math.round((x - xOffset) / width * canvas.width / currentDevicePixelRatio),\n        y: Math.round((y - yOffset) / height * canvas.height / currentDevicePixelRatio)\n    };\n}\nfunction getContainerSize(canvas, width, height) {\n    let maxWidth, maxHeight;\n    if (width === undefined || height === undefined) {\n        const container = canvas && _getParentNode(canvas);\n        if (!container) {\n            width = canvas.clientWidth;\n            height = canvas.clientHeight;\n        } else {\n            const rect = container.getBoundingClientRect(); // this is the border box of the container\n            const containerStyle = getComputedStyle(container);\n            const containerBorder = getPositionedStyle(containerStyle, 'border', 'width');\n            const containerPadding = getPositionedStyle(containerStyle, 'padding');\n            width = rect.width - containerPadding.width - containerBorder.width;\n            height = rect.height - containerPadding.height - containerBorder.height;\n            maxWidth = parseMaxStyle(containerStyle.maxWidth, container, 'clientWidth');\n            maxHeight = parseMaxStyle(containerStyle.maxHeight, container, 'clientHeight');\n        }\n    }\n    return {\n        width,\n        height,\n        maxWidth: maxWidth || INFINITY,\n        maxHeight: maxHeight || INFINITY\n    };\n}\nconst round1 = (v)=>Math.round(v * 10) / 10;\n// eslint-disable-next-line complexity\nfunction getMaximumSize(canvas, bbWidth, bbHeight, aspectRatio) {\n    const style = getComputedStyle(canvas);\n    const margins = getPositionedStyle(style, 'margin');\n    const maxWidth = parseMaxStyle(style.maxWidth, canvas, 'clientWidth') || INFINITY;\n    const maxHeight = parseMaxStyle(style.maxHeight, canvas, 'clientHeight') || INFINITY;\n    const containerSize = getContainerSize(canvas, bbWidth, bbHeight);\n    let { width , height  } = containerSize;\n    if (style.boxSizing === 'content-box') {\n        const borders = getPositionedStyle(style, 'border', 'width');\n        const paddings = getPositionedStyle(style, 'padding');\n        width -= paddings.width + borders.width;\n        height -= paddings.height + borders.height;\n    }\n    width = Math.max(0, width - margins.width);\n    height = Math.max(0, aspectRatio ? width / aspectRatio : height - margins.height);\n    width = round1(Math.min(width, maxWidth, containerSize.maxWidth));\n    height = round1(Math.min(height, maxHeight, containerSize.maxHeight));\n    if (width && !height) {\n        // https://github.com/chartjs/Chart.js/issues/4659\n        // If the canvas has width, but no height, default to aspectRatio of 2 (canvas default)\n        height = round1(width / 2);\n    }\n    const maintainHeight = bbWidth !== undefined || bbHeight !== undefined;\n    if (maintainHeight && aspectRatio && containerSize.height && height > containerSize.height) {\n        height = containerSize.height;\n        width = round1(Math.floor(height * aspectRatio));\n    }\n    return {\n        width,\n        height\n    };\n}\n/**\n * @param chart\n * @param forceRatio\n * @param forceStyle\n * @returns True if the canvas context size or transformation has changed.\n */ function retinaScale(chart, forceRatio, forceStyle) {\n    const pixelRatio = forceRatio || 1;\n    const deviceHeight = Math.floor(chart.height * pixelRatio);\n    const deviceWidth = Math.floor(chart.width * pixelRatio);\n    chart.height = Math.floor(chart.height);\n    chart.width = Math.floor(chart.width);\n    const canvas = chart.canvas;\n    // If no style has been set on the canvas, the render size is used as display size,\n    // making the chart visually bigger, so let's enforce it to the \"correct\" values.\n    // See https://github.com/chartjs/Chart.js/issues/3575\n    if (canvas.style && (forceStyle || !canvas.style.height && !canvas.style.width)) {\n        canvas.style.height = `${chart.height}px`;\n        canvas.style.width = `${chart.width}px`;\n    }\n    if (chart.currentDevicePixelRatio !== pixelRatio || canvas.height !== deviceHeight || canvas.width !== deviceWidth) {\n        chart.currentDevicePixelRatio = pixelRatio;\n        canvas.height = deviceHeight;\n        canvas.width = deviceWidth;\n        chart.ctx.setTransform(pixelRatio, 0, 0, pixelRatio, 0, 0);\n        return true;\n    }\n    return false;\n}\n/**\n * Detects support for options object argument in addEventListener.\n * https://developer.mozilla.org/en-US/docs/Web/API/EventTarget/addEventListener#Safely_detecting_option_support\n * @private\n */ const supportsEventListenerOptions = function() {\n    let passiveSupported = false;\n    try {\n        const options = {\n            get passive () {\n                passiveSupported = true;\n                return false;\n            }\n        };\n        if (_isDomSupported()) {\n            window.addEventListener('test', null, options);\n            window.removeEventListener('test', null, options);\n        }\n    } catch (e) {\n    // continue regardless of error\n    }\n    return passiveSupported;\n}();\n/**\n * The \"used\" size is the final value of a dimension property after all calculations have\n * been performed. This method uses the computed style of `element` but returns undefined\n * if the computed style is not expressed in pixels. That can happen in some cases where\n * `element` has a size relative to its parent and this last one is not yet displayed,\n * for example because of `display: none` on a parent node.\n * @see https://developer.mozilla.org/en-US/docs/Web/CSS/used_value\n * @returns Size in pixels or undefined if unknown.\n */ function readUsedSize(element, property) {\n    const value = getStyle(element, property);\n    const matches = value && value.match(/^(\\d+)(\\.\\d+)?px$/);\n    return matches ? +matches[1] : undefined;\n}\n\n/**\n * @private\n */ function _pointInLine(p1, p2, t, mode) {\n    return {\n        x: p1.x + t * (p2.x - p1.x),\n        y: p1.y + t * (p2.y - p1.y)\n    };\n}\n/**\n * @private\n */ function _steppedInterpolation(p1, p2, t, mode) {\n    return {\n        x: p1.x + t * (p2.x - p1.x),\n        y: mode === 'middle' ? t < 0.5 ? p1.y : p2.y : mode === 'after' ? t < 1 ? p1.y : p2.y : t > 0 ? p2.y : p1.y\n    };\n}\n/**\n * @private\n */ function _bezierInterpolation(p1, p2, t, mode) {\n    const cp1 = {\n        x: p1.cp2x,\n        y: p1.cp2y\n    };\n    const cp2 = {\n        x: p2.cp1x,\n        y: p2.cp1y\n    };\n    const a = _pointInLine(p1, cp1, t);\n    const b = _pointInLine(cp1, cp2, t);\n    const c = _pointInLine(cp2, p2, t);\n    const d = _pointInLine(a, b, t);\n    const e = _pointInLine(b, c, t);\n    return _pointInLine(d, e, t);\n}\n\nconst getRightToLeftAdapter = function(rectX, width) {\n    return {\n        x (x) {\n            return rectX + rectX + width - x;\n        },\n        setWidth (w) {\n            width = w;\n        },\n        textAlign (align) {\n            if (align === 'center') {\n                return align;\n            }\n            return align === 'right' ? 'left' : 'right';\n        },\n        xPlus (x, value) {\n            return x - value;\n        },\n        leftForLtr (x, itemWidth) {\n            return x - itemWidth;\n        }\n    };\n};\nconst getLeftToRightAdapter = function() {\n    return {\n        x (x) {\n            return x;\n        },\n        setWidth (w) {},\n        textAlign (align) {\n            return align;\n        },\n        xPlus (x, value) {\n            return x + value;\n        },\n        leftForLtr (x, _itemWidth) {\n            return x;\n        }\n    };\n};\nfunction getRtlAdapter(rtl, rectX, width) {\n    return rtl ? getRightToLeftAdapter(rectX, width) : getLeftToRightAdapter();\n}\nfunction overrideTextDirection(ctx, direction) {\n    let style, original;\n    if (direction === 'ltr' || direction === 'rtl') {\n        style = ctx.canvas.style;\n        original = [\n            style.getPropertyValue('direction'),\n            style.getPropertyPriority('direction')\n        ];\n        style.setProperty('direction', direction, 'important');\n        ctx.prevTextDirection = original;\n    }\n}\nfunction restoreTextDirection(ctx, original) {\n    if (original !== undefined) {\n        delete ctx.prevTextDirection;\n        ctx.canvas.style.setProperty('direction', original[0], original[1]);\n    }\n}\n\nfunction propertyFn(property) {\n    if (property === 'angle') {\n        return {\n            between: _angleBetween,\n            compare: _angleDiff,\n            normalize: _normalizeAngle\n        };\n    }\n    return {\n        between: _isBetween,\n        compare: (a, b)=>a - b,\n        normalize: (x)=>x\n    };\n}\nfunction normalizeSegment({ start , end , count , loop , style  }) {\n    return {\n        start: start % count,\n        end: end % count,\n        loop: loop && (end - start + 1) % count === 0,\n        style\n    };\n}\nfunction getSegment(segment, points, bounds) {\n    const { property , start: startBound , end: endBound  } = bounds;\n    const { between , normalize  } = propertyFn(property);\n    const count = points.length;\n    let { start , end , loop  } = segment;\n    let i, ilen;\n    if (loop) {\n        start += count;\n        end += count;\n        for(i = 0, ilen = count; i < ilen; ++i){\n            if (!between(normalize(points[start % count][property]), startBound, endBound)) {\n                break;\n            }\n            start--;\n            end--;\n        }\n        start %= count;\n        end %= count;\n    }\n    if (end < start) {\n        end += count;\n    }\n    return {\n        start,\n        end,\n        loop,\n        style: segment.style\n    };\n}\n function _boundSegment(segment, points, bounds) {\n    if (!bounds) {\n        return [\n            segment\n        ];\n    }\n    const { property , start: startBound , end: endBound  } = bounds;\n    const count = points.length;\n    const { compare , between , normalize  } = propertyFn(property);\n    const { start , end , loop , style  } = getSegment(segment, points, bounds);\n    const result = [];\n    let inside = false;\n    let subStart = null;\n    let value, point, prevValue;\n    const startIsBefore = ()=>between(startBound, prevValue, value) && compare(startBound, prevValue) !== 0;\n    const endIsBefore = ()=>compare(endBound, value) === 0 || between(endBound, prevValue, value);\n    const shouldStart = ()=>inside || startIsBefore();\n    const shouldStop = ()=>!inside || endIsBefore();\n    for(let i = start, prev = start; i <= end; ++i){\n        point = points[i % count];\n        if (point.skip) {\n            continue;\n        }\n        value = normalize(point[property]);\n        if (value === prevValue) {\n            continue;\n        }\n        inside = between(value, startBound, endBound);\n        if (subStart === null && shouldStart()) {\n            subStart = compare(value, startBound) === 0 ? i : prev;\n        }\n        if (subStart !== null && shouldStop()) {\n            result.push(normalizeSegment({\n                start: subStart,\n                end: i,\n                loop,\n                count,\n                style\n            }));\n            subStart = null;\n        }\n        prev = i;\n        prevValue = value;\n    }\n    if (subStart !== null) {\n        result.push(normalizeSegment({\n            start: subStart,\n            end,\n            loop,\n            count,\n            style\n        }));\n    }\n    return result;\n}\n function _boundSegments(line, bounds) {\n    const result = [];\n    const segments = line.segments;\n    for(let i = 0; i < segments.length; i++){\n        const sub = _boundSegment(segments[i], line.points, bounds);\n        if (sub.length) {\n            result.push(...sub);\n        }\n    }\n    return result;\n}\n function findStartAndEnd(points, count, loop, spanGaps) {\n    let start = 0;\n    let end = count - 1;\n    if (loop && !spanGaps) {\n        while(start < count && !points[start].skip){\n            start++;\n        }\n    }\n    while(start < count && points[start].skip){\n        start++;\n    }\n    start %= count;\n    if (loop) {\n        end += start;\n    }\n    while(end > start && points[end % count].skip){\n        end--;\n    }\n    end %= count;\n    return {\n        start,\n        end\n    };\n}\n function solidSegments(points, start, max, loop) {\n    const count = points.length;\n    const result = [];\n    let last = start;\n    let prev = points[start];\n    let end;\n    for(end = start + 1; end <= max; ++end){\n        const cur = points[end % count];\n        if (cur.skip || cur.stop) {\n            if (!prev.skip) {\n                loop = false;\n                result.push({\n                    start: start % count,\n                    end: (end - 1) % count,\n                    loop\n                });\n                start = last = cur.stop ? end : null;\n            }\n        } else {\n            last = end;\n            if (prev.skip) {\n                start = end;\n            }\n        }\n        prev = cur;\n    }\n    if (last !== null) {\n        result.push({\n            start: start % count,\n            end: last % count,\n            loop\n        });\n    }\n    return result;\n}\n function _computeSegments(line, segmentOptions) {\n    const points = line.points;\n    const spanGaps = line.options.spanGaps;\n    const count = points.length;\n    if (!count) {\n        return [];\n    }\n    const loop = !!line._loop;\n    const { start , end  } = findStartAndEnd(points, count, loop, spanGaps);\n    if (spanGaps === true) {\n        return splitByStyles(line, [\n            {\n                start,\n                end,\n                loop\n            }\n        ], points, segmentOptions);\n    }\n    const max = end < start ? end + count : end;\n    const completeLoop = !!line._fullLoop && start === 0 && end === count - 1;\n    return splitByStyles(line, solidSegments(points, start, max, completeLoop), points, segmentOptions);\n}\n function splitByStyles(line, segments, points, segmentOptions) {\n    if (!segmentOptions || !segmentOptions.setContext || !points) {\n        return segments;\n    }\n    return doSplitByStyles(line, segments, points, segmentOptions);\n}\n function doSplitByStyles(line, segments, points, segmentOptions) {\n    const chartContext = line._chart.getContext();\n    const baseStyle = readStyle(line.options);\n    const { _datasetIndex: datasetIndex , options: { spanGaps  }  } = line;\n    const count = points.length;\n    const result = [];\n    let prevStyle = baseStyle;\n    let start = segments[0].start;\n    let i = start;\n    function addStyle(s, e, l, st) {\n        const dir = spanGaps ? -1 : 1;\n        if (s === e) {\n            return;\n        }\n        s += count;\n        while(points[s % count].skip){\n            s -= dir;\n        }\n        while(points[e % count].skip){\n            e += dir;\n        }\n        if (s % count !== e % count) {\n            result.push({\n                start: s % count,\n                end: e % count,\n                loop: l,\n                style: st\n            });\n            prevStyle = st;\n            start = e % count;\n        }\n    }\n    for (const segment of segments){\n        start = spanGaps ? start : segment.start;\n        let prev = points[start % count];\n        let style;\n        for(i = start + 1; i <= segment.end; i++){\n            const pt = points[i % count];\n            style = readStyle(segmentOptions.setContext(createContext(chartContext, {\n                type: 'segment',\n                p0: prev,\n                p1: pt,\n                p0DataIndex: (i - 1) % count,\n                p1DataIndex: i % count,\n                datasetIndex\n            })));\n            if (styleChanged(style, prevStyle)) {\n                addStyle(start, i - 1, segment.loop, prevStyle);\n            }\n            prev = pt;\n            prevStyle = style;\n        }\n        if (start < i - 1) {\n            addStyle(start, i - 1, segment.loop, prevStyle);\n        }\n    }\n    return result;\n}\nfunction readStyle(options) {\n    return {\n        backgroundColor: options.backgroundColor,\n        borderCapStyle: options.borderCapStyle,\n        borderDash: options.borderDash,\n        borderDashOffset: options.borderDashOffset,\n        borderJoinStyle: options.borderJoinStyle,\n        borderWidth: options.borderWidth,\n        borderColor: options.borderColor\n    };\n}\nfunction styleChanged(style, prevStyle) {\n    if (!prevStyle) {\n        return false;\n    }\n    const cache = [];\n    const replacer = function(key, value) {\n        if (!isPatternOrGradient(value)) {\n            return value;\n        }\n        if (!cache.includes(value)) {\n            cache.push(value);\n        }\n        return cache.indexOf(value);\n    };\n    return JSON.stringify(style, replacer) !== JSON.stringify(prevStyle, replacer);\n}\n\nexport { unclipArea as $, _rlookupByKey as A, _lookupByKey as B, _isPointInArea as C, getAngleFromPoint as D, toPadding as E, each as F, getMaximumSize as G, HALF_PI as H, _getParentNode as I, readUsedSize as J, supportsEventListenerOptions as K, throttled as L, _isDomSupported as M, _factorize as N, finiteOrDefault as O, PI as P, callback as Q, _addGrace as R, _limitValue as S, TAU as T, toDegrees as U, _measureText as V, _int16Range as W, _alignPixel as X, clipArea as Y, renderText as Z, _arrayUnique as _, resolve as a, fontString as a$, toFont as a0, _toLeftRightCenter as a1, _alignStartEnd as a2, overrides as a3, merge as a4, _capitalize as a5, descriptors as a6, isFunction as a7, _attachContext as a8, _createResolver as a9, overrideTextDirection as aA, _textX as aB, restoreTextDirection as aC, drawPointLegend as aD, distanceBetweenPoints as aE, noop as aF, _setMinAndMaxByKey as aG, niceNum as aH, almostWhole as aI, almostEquals as aJ, _decimalPlaces as aK, Ticks as aL, log10 as aM, _longestText as aN, _filterBetween as aO, _lookup as aP, isPatternOrGradient as aQ, getHoverColor as aR, clone as aS, _merger as aT, _mergerIf as aU, _deprecated as aV, _splitKey as aW, toFontString as aX, splineCurve as aY, splineCurveMonotone as aZ, getStyle as a_, _descriptors as aa, mergeIf as ab, uid as ac, debounce as ad, retinaScale as ae, clearCanvas as af, setsEqual as ag, _elementsEqual as ah, _isClickEvent as ai, _isBetween as aj, _readValueToProps as ak, _updateBezierControlPoints as al, _computeSegments as am, _boundSegments as an, _steppedInterpolation as ao, _bezierInterpolation as ap, _pointInLine as aq, _steppedLineTo as ar, _bezierCurveTo as as, drawPoint as at, addRoundedRectPath as au, toTRBL as av, toTRBLCorners as aw, _boundSegment as ax, _normalizeAngle as ay, getRtlAdapter as az, isArray as b, toLineHeight as b0, PITAU as b1, INFINITY as b2, RAD_PER_DEG as b3, QUARTER_PI as b4, TWO_THIRDS_PI as b5, _angleDiff as b6, color as c, defaults as d, effects as e, resolveObjectKey as f, isNumberFinite as g, defined as h, isObject as i, createContext as j, isNullOrUndef as k, listenArrayEvents as l, toPercentage as m, toDimension as n, formatNumber as o, _angleBetween as p, _getStartAndCountOfVisiblePoints as q, requestAnimFrame as r, sign as s, toRadians as t, unlistenArrayEvents as u, valueOrDefault as v, _scaleRangesChanged as w, isNumber as x, _parseObjectDataRadialScale as y, getRelativePosition as z };\n//# sourceMappingURL=helpers.segment.js.map\n","/**\n * @namespace Chart.helpers\n */\n\nimport type {AnyObject} from '../types/basic.js';\nimport type {ActiveDataPoint, ChartEvent} from '../types/index.js';\n\n/**\n * An empty function that can be used, for example, for optional callback.\n */\nexport function noop() {\n  /* noop */\n}\n\n/**\n * Returns a unique id, sequentially generated from a global variable.\n */\nexport const uid = (() => {\n  let id = 0;\n  return () => id++;\n})();\n\n/**\n * Returns true if `value` is neither null nor undefined, else returns false.\n * @param value - The value to test.\n * @since 2.7.0\n */\nexport function isNullOrUndef(value: unknown): value is null | undefined {\n  return value === null || typeof value === 'undefined';\n}\n\n/**\n * Returns true if `value` is an array (including typed arrays), else returns false.\n * @param value - The value to test.\n * @function\n */\nexport function isArray<T = unknown>(value: unknown): value is T[] {\n  if (Array.isArray && Array.isArray(value)) {\n    return true;\n  }\n  const type = Object.prototype.toString.call(value);\n  if (type.slice(0, 7) === '[object' && type.slice(-6) === 'Array]') {\n    return true;\n  }\n  return false;\n}\n\n/**\n * Returns true if `value` is an object (excluding null), else returns false.\n * @param value - The value to test.\n * @since 2.7.0\n */\nexport function isObject(value: unknown): value is AnyObject {\n  return value !== null && Object.prototype.toString.call(value) === '[object Object]';\n}\n\n/**\n * Returns true if `value` is a finite number, else returns false\n * @param value  - The value to test.\n */\nfunction isNumberFinite(value: unknown): value is number {\n  return (typeof value === 'number' || value instanceof Number) && isFinite(+value);\n}\nexport {\n  isNumberFinite as isFinite,\n};\n\n/**\n * Returns `value` if finite, else returns `defaultValue`.\n * @param value - The value to return if defined.\n * @param defaultValue - The value to return if `value` is not finite.\n */\nexport function finiteOrDefault(value: unknown, defaultValue: number) {\n  return isNumberFinite(value) ? value : defaultValue;\n}\n\n/**\n * Returns `value` if defined, else returns `defaultValue`.\n * @param value - The value to return if defined.\n * @param defaultValue - The value to return if `value` is undefined.\n */\nexport function valueOrDefault<T>(value: T | undefined, defaultValue: T) {\n  return typeof value === 'undefined' ? defaultValue : value;\n}\n\nexport const toPercentage = (value: number | string, dimension: number) =>\n  typeof value === 'string' && value.endsWith('%') ?\n    parseFloat(value) / 100\n    : +value / dimension;\n\nexport const toDimension = (value: number | string, dimension: number) =>\n  typeof value === 'string' && value.endsWith('%') ?\n    parseFloat(value) / 100 * dimension\n    : +value;\n\n/**\n * Calls `fn` with the given `args` in the scope defined by `thisArg` and returns the\n * value returned by `fn`. If `fn` is not a function, this method returns undefined.\n * @param fn - The function to call.\n * @param args - The arguments with which `fn` should be called.\n * @param [thisArg] - The value of `this` provided for the call to `fn`.\n */\nexport function callback<T extends (this: TA, ...restArgs: unknown[]) => R, TA, R>(\n  fn: T | undefined,\n  args: unknown[],\n  thisArg?: TA\n): R | undefined {\n  if (fn && typeof fn.call === 'function') {\n    return fn.apply(thisArg, args);\n  }\n}\n\n/**\n * Note(SB) for performance sake, this method should only be used when loopable type\n * is unknown or in none intensive code (not called often and small loopable). Else\n * it's preferable to use a regular for() loop and save extra function calls.\n * @param loopable - The object or array to be iterated.\n * @param fn - The function to call for each item.\n * @param [thisArg] - The value of `this` provided for the call to `fn`.\n * @param [reverse] - If true, iterates backward on the loopable.\n */\nexport function each<T, TA>(\n  loopable: Record<string, T>,\n  fn: (this: TA, v: T, i: string) => void,\n  thisArg?: TA,\n  reverse?: boolean\n): void;\nexport function each<T, TA>(\n  loopable: T[],\n  fn: (this: TA, v: T, i: number) => void,\n  thisArg?: TA,\n  reverse?: boolean\n): void;\nexport function each<T, TA>(\n  loopable: T[] | Record<string, T>,\n  fn: (this: TA, v: T, i: any) => void,\n  thisArg?: TA,\n  reverse?: boolean\n) {\n  let i: number, len: number, keys: string[];\n  if (isArray(loopable)) {\n    len = loopable.length;\n    if (reverse) {\n      for (i = len - 1; i >= 0; i--) {\n        fn.call(thisArg, loopable[i], i);\n      }\n    } else {\n      for (i = 0; i < len; i++) {\n        fn.call(thisArg, loopable[i], i);\n      }\n    }\n  } else if (isObject(loopable)) {\n    keys = Object.keys(loopable);\n    len = keys.length;\n    for (i = 0; i < len; i++) {\n      fn.call(thisArg, loopable[keys[i]], keys[i]);\n    }\n  }\n}\n\n/**\n * Returns true if the `a0` and `a1` arrays have the same content, else returns false.\n * @param a0 - The array to compare\n * @param a1 - The array to compare\n * @private\n */\nexport function _elementsEqual(a0: ActiveDataPoint[], a1: ActiveDataPoint[]) {\n  let i: number, ilen: number, v0: ActiveDataPoint, v1: ActiveDataPoint;\n\n  if (!a0 || !a1 || a0.length !== a1.length) {\n    return false;\n  }\n\n  for (i = 0, ilen = a0.length; i < ilen; ++i) {\n    v0 = a0[i];\n    v1 = a1[i];\n\n    if (v0.datasetIndex !== v1.datasetIndex || v0.index !== v1.index) {\n      return false;\n    }\n  }\n\n  return true;\n}\n\n/**\n * Returns a deep copy of `source` without keeping references on objects and arrays.\n * @param source - The value to clone.\n */\nexport function clone<T>(source: T): T {\n  if (isArray(source)) {\n    return source.map(clone) as unknown as T;\n  }\n\n  if (isObject(source)) {\n    const target = Object.create(null);\n    const keys = Object.keys(source);\n    const klen = keys.length;\n    let k = 0;\n\n    for (; k < klen; ++k) {\n      target[keys[k]] = clone(source[keys[k]]);\n    }\n\n    return target;\n  }\n\n  return source;\n}\n\nfunction isValidKey(key: string) {\n  return ['__proto__', 'prototype', 'constructor'].indexOf(key) === -1;\n}\n\n/**\n * The default merger when Chart.helpers.merge is called without merger option.\n * Note(SB): also used by mergeConfig and mergeScaleConfig as fallback.\n * @private\n */\nexport function _merger(key: string, target: AnyObject, source: AnyObject, options: AnyObject) {\n  if (!isValidKey(key)) {\n    return;\n  }\n\n  const tval = target[key];\n  const sval = source[key];\n\n  if (isObject(tval) && isObject(sval)) {\n    // eslint-disable-next-line @typescript-eslint/no-use-before-define\n    merge(tval, sval, options);\n  } else {\n    target[key] = clone(sval);\n  }\n}\n\nexport interface MergeOptions {\n  merger?: (key: string, target: AnyObject, source: AnyObject, options?: AnyObject) => void;\n}\n\n/**\n * Recursively deep copies `source` properties into `target` with the given `options`.\n * IMPORTANT: `target` is not cloned and will be updated with `source` properties.\n * @param target - The target object in which all sources are merged into.\n * @param source - Object(s) to merge into `target`.\n * @param [options] - Merging options:\n * @param [options.merger] - The merge method (key, target, source, options)\n * @returns The `target` object.\n */\nexport function merge<T>(target: T, source: [], options?: MergeOptions): T;\nexport function merge<T, S1>(target: T, source: S1, options?: MergeOptions): T & S1;\nexport function merge<T, S1>(target: T, source: [S1], options?: MergeOptions): T & S1;\nexport function merge<T, S1, S2>(target: T, source: [S1, S2], options?: MergeOptions): T & S1 & S2;\nexport function merge<T, S1, S2, S3>(target: T, source: [S1, S2, S3], options?: MergeOptions): T & S1 & S2 & S3;\nexport function merge<T, S1, S2, S3, S4>(\n  target: T,\n  source: [S1, S2, S3, S4],\n  options?: MergeOptions\n): T & S1 & S2 & S3 & S4;\nexport function merge<T>(target: T, source: AnyObject[], options?: MergeOptions): AnyObject;\nexport function merge<T>(target: T, source: AnyObject[], options?: MergeOptions): AnyObject {\n  const sources = isArray(source) ? source : [source];\n  const ilen = sources.length;\n\n  if (!isObject(target)) {\n    return target as AnyObject;\n  }\n\n  options = options || {};\n  const merger = options.merger || _merger;\n  let current: AnyObject;\n\n  for (let i = 0; i < ilen; ++i) {\n    current = sources[i];\n    if (!isObject(current)) {\n      continue;\n    }\n\n    const keys = Object.keys(current);\n    for (let k = 0, klen = keys.length; k < klen; ++k) {\n      merger(keys[k], target, current, options as AnyObject);\n    }\n  }\n\n  return target;\n}\n\n/**\n * Recursively deep copies `source` properties into `target` *only* if not defined in target.\n * IMPORTANT: `target` is not cloned and will be updated with `source` properties.\n * @param target - The target object in which all sources are merged into.\n * @param source - Object(s) to merge into `target`.\n * @returns The `target` object.\n */\nexport function mergeIf<T>(target: T, source: []): T;\nexport function mergeIf<T, S1>(target: T, source: S1): T & S1;\nexport function mergeIf<T, S1>(target: T, source: [S1]): T & S1;\nexport function mergeIf<T, S1, S2>(target: T, source: [S1, S2]): T & S1 & S2;\nexport function mergeIf<T, S1, S2, S3>(target: T, source: [S1, S2, S3]): T & S1 & S2 & S3;\nexport function mergeIf<T, S1, S2, S3, S4>(target: T, source: [S1, S2, S3, S4]): T & S1 & S2 & S3 & S4;\nexport function mergeIf<T>(target: T, source: AnyObject[]): AnyObject;\nexport function mergeIf<T>(target: T, source: AnyObject[]): AnyObject {\n  // eslint-disable-next-line @typescript-eslint/no-use-before-define\n  return merge<T>(target, source, {merger: _mergerIf});\n}\n\n/**\n * Merges source[key] in target[key] only if target[key] is undefined.\n * @private\n */\nexport function _mergerIf(key: string, target: AnyObject, source: AnyObject) {\n  if (!isValidKey(key)) {\n    return;\n  }\n\n  const tval = target[key];\n  const sval = source[key];\n\n  if (isObject(tval) && isObject(sval)) {\n    mergeIf(tval, sval);\n  } else if (!Object.prototype.hasOwnProperty.call(target, key)) {\n    target[key] = clone(sval);\n  }\n}\n\n/**\n * @private\n */\nexport function _deprecated(scope: string, value: unknown, previous: string, current: string) {\n  if (value !== undefined) {\n    console.warn(scope + ': \"' + previous +\n      '\" is deprecated. Please use \"' + current + '\" instead');\n  }\n}\n\n// resolveObjectKey resolver cache\nconst keyResolvers = {\n  // Chart.helpers.core resolveObjectKey should resolve empty key to root object\n  '': v => v,\n  // default resolvers\n  x: o => o.x,\n  y: o => o.y\n};\n\n/**\n * @private\n */\nexport function _splitKey(key: string) {\n  const parts = key.split('.');\n  const keys: string[] = [];\n  let tmp = '';\n  for (const part of parts) {\n    tmp += part;\n    if (tmp.endsWith('\\\\')) {\n      tmp = tmp.slice(0, -1) + '.';\n    } else {\n      keys.push(tmp);\n      tmp = '';\n    }\n  }\n  return keys;\n}\n\nfunction _getKeyResolver(key: string) {\n  const keys = _splitKey(key);\n  return obj => {\n    for (const k of keys) {\n      if (k === '') {\n        // For backward compatibility:\n        // Chart.helpers.core resolveObjectKey should break at empty key\n        break;\n      }\n      obj = obj && obj[k];\n    }\n    return obj;\n  };\n}\n\nexport function resolveObjectKey(obj: AnyObject, key: string): any {\n  const resolver = keyResolvers[key] || (keyResolvers[key] = _getKeyResolver(key));\n  return resolver(obj);\n}\n\n/**\n * @private\n */\nexport function _capitalize(str: string) {\n  return str.charAt(0).toUpperCase() + str.slice(1);\n}\n\n\nexport const defined = (value: unknown) => typeof value !== 'undefined';\n\nexport const isFunction = (value: unknown): value is (...args: any[]) => any => typeof value === 'function';\n\n// Adapted from https://stackoverflow.com/questions/31128855/comparing-ecma6-sets-for-equality#31129384\nexport const setsEqual = <T>(a: Set<T>, b: Set<T>) => {\n  if (a.size !== b.size) {\n    return false;\n  }\n\n  for (const item of a) {\n    if (!b.has(item)) {\n      return false;\n    }\n  }\n\n  return true;\n};\n\n/**\n * @param e - The event\n * @private\n */\nexport function _isClickEvent(e: ChartEvent) {\n  return e.type === 'mouseup' || e.type === 'click' || e.type === 'contextmenu';\n}\n","import type {Point} from '../types/geometric.js';\nimport {isFinite as isFiniteNumber} from './helpers.core.js';\n\n/**\n * @alias Chart.helpers.math\n * @namespace\n */\n\nexport const PI = Math.PI;\nexport const TAU = 2 * PI;\nexport const PITAU = TAU + PI;\nexport const INFINITY = Number.POSITIVE_INFINITY;\nexport const RAD_PER_DEG = PI / 180;\nexport const HALF_PI = PI / 2;\nexport const QUARTER_PI = PI / 4;\nexport const TWO_THIRDS_PI = PI * 2 / 3;\n\nexport const log10 = Math.log10;\nexport const sign = Math.sign;\n\nexport function almostEquals(x: number, y: number, epsilon: number) {\n  return Math.abs(x - y) < epsilon;\n}\n\n/**\n * Implementation of the nice number algorithm used in determining where axis labels will go\n */\nexport function niceNum(range: number) {\n  const roundedRange = Math.round(range);\n  range = almostEquals(range, roundedRange, range / 1000) ? roundedRange : range;\n  const niceRange = Math.pow(10, Math.floor(log10(range)));\n  const fraction = range / niceRange;\n  const niceFraction = fraction <= 1 ? 1 : fraction <= 2 ? 2 : fraction <= 5 ? 5 : 10;\n  return niceFraction * niceRange;\n}\n\n/**\n * Returns an array of factors sorted from 1 to sqrt(value)\n * @private\n */\nexport function _factorize(value: number) {\n  const result: number[] = [];\n  const sqrt = Math.sqrt(value);\n  let i: number;\n\n  for (i = 1; i < sqrt; i++) {\n    if (value % i === 0) {\n      result.push(i);\n      result.push(value / i);\n    }\n  }\n  if (sqrt === (sqrt | 0)) { // if value is a square number\n    result.push(sqrt);\n  }\n\n  result.sort((a, b) => a - b).pop();\n  return result;\n}\n\nexport function isNumber(n: unknown): n is number {\n  return !isNaN(parseFloat(n as string)) && isFinite(n as number);\n}\n\nexport function almostWhole(x: number, epsilon: number) {\n  const rounded = Math.round(x);\n  return ((rounded - epsilon) <= x) && ((rounded + epsilon) >= x);\n}\n\n/**\n * @private\n */\nexport function _setMinAndMaxByKey(\n  array: Record<string, number>[],\n  target: { min: number, max: number },\n  property: string\n) {\n  let i: number, ilen: number, value: number;\n\n  for (i = 0, ilen = array.length; i < ilen; i++) {\n    value = array[i][property];\n    if (!isNaN(value)) {\n      target.min = Math.min(target.min, value);\n      target.max = Math.max(target.max, value);\n    }\n  }\n}\n\nexport function toRadians(degrees: number) {\n  return degrees * (PI / 180);\n}\n\nexport function toDegrees(radians: number) {\n  return radians * (180 / PI);\n}\n\n/**\n * Returns the number of decimal places\n * i.e. the number of digits after the decimal point, of the value of this Number.\n * @param x - A number.\n * @returns The number of decimal places.\n * @private\n */\nexport function _decimalPlaces(x: number) {\n  if (!isFiniteNumber(x)) {\n    return;\n  }\n  let e = 1;\n  let p = 0;\n  while (Math.round(x * e) / e !== x) {\n    e *= 10;\n    p++;\n  }\n  return p;\n}\n\n// Gets the angle from vertical upright to the point about a centre.\nexport function getAngleFromPoint(\n  centrePoint: Point,\n  anglePoint: Point\n) {\n  const distanceFromXCenter = anglePoint.x - centrePoint.x;\n  const distanceFromYCenter = anglePoint.y - centrePoint.y;\n  const radialDistanceFromCenter = Math.sqrt(distanceFromXCenter * distanceFromXCenter + distanceFromYCenter * distanceFromYCenter);\n\n  let angle = Math.atan2(distanceFromYCenter, distanceFromXCenter);\n\n  if (angle < (-0.5 * PI)) {\n    angle += TAU; // make sure the returned angle is in the range of (-PI/2, 3PI/2]\n  }\n\n  return {\n    angle,\n    distance: radialDistanceFromCenter\n  };\n}\n\nexport function distanceBetweenPoints(pt1: Point, pt2: Point) {\n  return Math.sqrt(Math.pow(pt2.x - pt1.x, 2) + Math.pow(pt2.y - pt1.y, 2));\n}\n\n/**\n * Shortest distance between angles, in either direction.\n * @private\n */\nexport function _angleDiff(a: number, b: number) {\n  return (a - b + PITAU) % TAU - PI;\n}\n\n/**\n * Normalize angle to be between 0 and 2*PI\n * @private\n */\nexport function _normalizeAngle(a: number) {\n  return (a % TAU + TAU) % TAU;\n}\n\n/**\n * @private\n */\nexport function _angleBetween(angle: number, start: number, end: number, sameAngleIsFullCircle?: boolean) {\n  const a = _normalizeAngle(angle);\n  const s = _normalizeAngle(start);\n  const e = _normalizeAngle(end);\n  const angleToStart = _normalizeAngle(s - a);\n  const angleToEnd = _normalizeAngle(e - a);\n  const startToAngle = _normalizeAngle(a - s);\n  const endToAngle = _normalizeAngle(a - e);\n  return a === s || a === e || (sameAngleIsFullCircle && s === e)\n    || (angleToStart > angleToEnd && startToAngle < endToAngle);\n}\n\n/**\n * Limit `value` between `min` and `max`\n * @param value\n * @param min\n * @param max\n * @private\n */\nexport function _limitValue(value: number, min: number, max: number) {\n  return Math.max(min, Math.min(max, value));\n}\n\n/**\n * @param {number} value\n * @private\n */\nexport function _int16Range(value: number) {\n  return _limitValue(value, -32768, 32767);\n}\n\n/**\n * @param value\n * @param start\n * @param end\n * @param [epsilon]\n * @private\n */\nexport function _isBetween(value: number, start: number, end: number, epsilon = 1e-6) {\n  return value >= Math.min(start, end) - epsilon && value <= Math.max(start, end) + epsilon;\n}\n","import {_capitalize} from './helpers.core.js';\n\n/**\n * Binary search\n * @param table - the table search. must be sorted!\n * @param value - value to find\n * @param cmp\n * @private\n */\nexport function _lookup(\n  table: number[],\n  value: number,\n  cmp?: (value: number) => boolean\n): {lo: number, hi: number};\nexport function _lookup<T>(\n  table: T[],\n  value: number,\n  cmp: (value: number) => boolean\n): {lo: number, hi: number};\nexport function _lookup(\n  table: unknown[],\n  value: number,\n  cmp?: (value: number) => boolean\n) {\n  cmp = cmp || ((index) => table[index] < value);\n  let hi = table.length - 1;\n  let lo = 0;\n  let mid: number;\n\n  while (hi - lo > 1) {\n    mid = (lo + hi) >> 1;\n    if (cmp(mid)) {\n      lo = mid;\n    } else {\n      hi = mid;\n    }\n  }\n\n  return {lo, hi};\n}\n\n/**\n * Binary search\n * @param table - the table search. must be sorted!\n * @param key - property name for the value in each entry\n * @param value - value to find\n * @param last - lookup last index\n * @private\n */\nexport const _lookupByKey = (\n  table: Record<string, number>[],\n  key: string,\n  value: number,\n  last?: boolean\n) =>\n  _lookup(table, value, last\n    ? index => {\n      const ti = table[index][key];\n      return ti < value || ti === value && table[index + 1][key] === value;\n    }\n    : index => table[index][key] < value);\n\n/**\n * Reverse binary search\n * @param table - the table search. must be sorted!\n * @param key - property name for the value in each entry\n * @param value - value to find\n * @private\n */\nexport const _rlookupByKey = (\n  table: Record<string, number>[],\n  key: string,\n  value: number\n) =>\n  _lookup(table, value, index => table[index][key] >= value);\n\n/**\n * Return subset of `values` between `min` and `max` inclusive.\n * Values are assumed to be in sorted order.\n * @param values - sorted array of values\n * @param min - min value\n * @param max - max value\n */\nexport function _filterBetween(values: number[], min: number, max: number) {\n  let start = 0;\n  let end = values.length;\n\n  while (start < end && values[start] < min) {\n    start++;\n  }\n  while (end > start && values[end - 1] > max) {\n    end--;\n  }\n\n  return start > 0 || end < values.length\n    ? values.slice(start, end)\n    : values;\n}\n\nconst arrayEvents = ['push', 'pop', 'shift', 'splice', 'unshift'] as const;\n\nexport interface ArrayListener<T> {\n  _onDataPush?(...item: T[]): void;\n  _onDataPop?(): void;\n  _onDataShift?(): void;\n  _onDataSplice?(index: number, deleteCount: number, ...items: T[]): void;\n  _onDataUnshift?(...item: T[]): void;\n}\n\n/**\n * Hooks the array methods that add or remove values ('push', pop', 'shift', 'splice',\n * 'unshift') and notify the listener AFTER the array has been altered. Listeners are\n * called on the '_onData*' callbacks (e.g. _onDataPush, etc.) with same arguments.\n */\nexport function listenArrayEvents<T>(array: T[], listener: ArrayListener<T>): void;\nexport function listenArrayEvents(array, listener) {\n  if (array._chartjs) {\n    array._chartjs.listeners.push(listener);\n    return;\n  }\n\n  Object.defineProperty(array, '_chartjs', {\n    configurable: true,\n    enumerable: false,\n    value: {\n      listeners: [listener]\n    }\n  });\n\n  arrayEvents.forEach((key) => {\n    const method = '_onData' + _capitalize(key);\n    const base = array[key];\n\n    Object.defineProperty(array, key, {\n      configurable: true,\n      enumerable: false,\n      value(...args) {\n        const res = base.apply(this, args);\n\n        array._chartjs.listeners.forEach((object) => {\n          if (typeof object[method] === 'function') {\n            object[method](...args);\n          }\n        });\n\n        return res;\n      }\n    });\n  });\n}\n\n\n/**\n * Removes the given array event listener and cleanup extra attached properties (such as\n * the _chartjs stub and overridden methods) if array doesn't have any more listeners.\n */\nexport function unlistenArrayEvents<T>(array: T[], listener: ArrayListener<T>): void;\nexport function unlistenArrayEvents(array, listener) {\n  const stub = array._chartjs;\n  if (!stub) {\n    return;\n  }\n\n  const listeners = stub.listeners;\n  const index = listeners.indexOf(listener);\n  if (index !== -1) {\n    listeners.splice(index, 1);\n  }\n\n  if (listeners.length > 0) {\n    return;\n  }\n\n  arrayEvents.forEach((key) => {\n    delete array[key];\n  });\n\n  delete array._chartjs;\n}\n\n/**\n * @param items\n */\nexport function _arrayUnique<T>(items: T[]) {\n  const set = new Set<T>(items);\n\n  if (set.size === items.length) {\n    return items;\n  }\n\n  return Array.from(set);\n}\n","import type {ChartMeta, PointElement} from '../types/index.js';\n\nimport {_limitValue} from './helpers.math.js';\nimport {_lookupByKey} from './helpers.collection.js';\n\nexport function fontString(pixelSize: number, fontStyle: string, fontFamily: string) {\n  return fontStyle + ' ' + pixelSize + 'px ' + fontFamily;\n}\n\n/**\n* Request animation polyfill\n*/\nexport const requestAnimFrame = (function() {\n  if (typeof window === 'undefined') {\n    return function(callback) {\n      return callback();\n    };\n  }\n  return window.requestAnimationFrame;\n}());\n\n/**\n * Throttles calling `fn` once per animation frame\n * Latest arguments are used on the actual call\n */\nexport function throttled<TArgs extends Array<any>>(\n  fn: (...args: TArgs) => void,\n  thisArg: any,\n) {\n  let argsToUse = [] as TArgs;\n  let ticking = false;\n\n  return function(...args: TArgs) {\n    // Save the args for use later\n    argsToUse = args;\n    if (!ticking) {\n      ticking = true;\n      requestAnimFrame.call(window, () => {\n        ticking = false;\n        fn.apply(thisArg, argsToUse);\n      });\n    }\n  };\n}\n\n/**\n * Debounces calling `fn` for `delay` ms\n */\nexport function debounce<TArgs extends Array<any>>(fn: (...args: TArgs) => void, delay: number) {\n  let timeout;\n  return function(...args: TArgs) {\n    if (delay) {\n      clearTimeout(timeout);\n      timeout = setTimeout(fn, delay, args);\n    } else {\n      fn.apply(this, args);\n    }\n    return delay;\n  };\n}\n\n/**\n * Converts 'start' to 'left', 'end' to 'right' and others to 'center'\n * @private\n */\nexport const _toLeftRightCenter = (align: 'start' | 'end' | 'center') => align === 'start' ? 'left' : align === 'end' ? 'right' : 'center';\n\n/**\n * Returns `start`, `end` or `(start + end) / 2` depending on `align`. Defaults to `center`\n * @private\n */\nexport const _alignStartEnd = (align: 'start' | 'end' | 'center', start: number, end: number) => align === 'start' ? start : align === 'end' ? end : (start + end) / 2;\n\n/**\n * Returns `left`, `right` or `(left + right) / 2` depending on `align`. Defaults to `left`\n * @private\n */\nexport const _textX = (align: 'left' | 'right' | 'center', left: number, right: number, rtl: boolean) => {\n  const check = rtl ? 'left' : 'right';\n  return align === check ? right : align === 'center' ? (left + right) / 2 : left;\n};\n\n/**\n * Return start and count of visible points.\n * @private\n */\nexport function _getStartAndCountOfVisiblePoints(meta: ChartMeta<'line' | 'scatter'>, points: PointElement[], animationsDisabled: boolean) {\n  const pointCount = points.length;\n\n  let start = 0;\n  let count = pointCount;\n\n  if (meta._sorted) {\n    const {iScale, _parsed} = meta;\n    const axis = iScale.axis;\n    const {min, max, minDefined, maxDefined} = iScale.getUserBounds();\n\n    if (minDefined) {\n      start = _limitValue(Math.min(\n        // @ts-expect-error Need to type _parsed\n        _lookupByKey(_parsed, axis, min).lo,\n        // @ts-expect-error Need to fix types on _lookupByKey\n        animationsDisabled ? pointCount : _lookupByKey(points, axis, iScale.getPixelForValue(min)).lo),\n      0, pointCount - 1);\n    }\n    if (maxDefined) {\n      count = _limitValue(Math.max(\n        // @ts-expect-error Need to type _parsed\n        _lookupByKey(_parsed, iScale.axis, max, true).hi + 1,\n        // @ts-expect-error Need to fix types on _lookupByKey\n        animationsDisabled ? 0 : _lookupByKey(points, axis, iScale.getPixelForValue(max), true).hi + 1),\n      start, pointCount) - start;\n    } else {\n      count = pointCount - start;\n    }\n  }\n\n  return {start, count};\n}\n\n/**\n * Checks if the scale ranges have changed.\n * @param {object} meta - dataset meta.\n * @returns {boolean}\n * @private\n */\nexport function _scaleRangesChanged(meta) {\n  const {xScale, yScale, _scaleRanges} = meta;\n  const newRanges = {\n    xmin: xScale.min,\n    xmax: xScale.max,\n    ymin: yScale.min,\n    ymax: yScale.max\n  };\n  if (!_scaleRanges) {\n    meta._scaleRanges = newRanges;\n    return true;\n  }\n  const changed = _scaleRanges.xmin !== xScale.min\n\t\t|| _scaleRanges.xmax !== xScale.max\n\t\t|| _scaleRanges.ymin !== yScale.min\n\t\t|| _scaleRanges.ymax !== yScale.max;\n\n  Object.assign(_scaleRanges, newRanges);\n  return changed;\n}\n","import {PI, TAU, HALF_PI} from './helpers.math.js';\n\nconst atEdge = (t: number) => t === 0 || t === 1;\nconst elasticIn = (t: number, s: number, p: number) => -(Math.pow(2, 10 * (t -= 1)) * Math.sin((t - s) * TAU / p));\nconst elasticOut = (t: number, s: number, p: number) => Math.pow(2, -10 * t) * Math.sin((t - s) * TAU / p) + 1;\n\n/**\n * Easing functions adapted from Robert Penner's easing equations.\n * @namespace Chart.helpers.easing.effects\n * @see http://www.robertpenner.com/easing/\n */\nconst effects = {\n  linear: (t: number) => t,\n\n  easeInQuad: (t: number) => t * t,\n\n  easeOutQuad: (t: number) => -t * (t - 2),\n\n  easeInOutQuad: (t: number) => ((t /= 0.5) < 1)\n    ? 0.5 * t * t\n    : -0.5 * ((--t) * (t - 2) - 1),\n\n  easeInCubic: (t: number) => t * t * t,\n\n  easeOutCubic: (t: number) => (t -= 1) * t * t + 1,\n\n  easeInOutCubic: (t: number) => ((t /= 0.5) < 1)\n    ? 0.5 * t * t * t\n    : 0.5 * ((t -= 2) * t * t + 2),\n\n  easeInQuart: (t: number) => t * t * t * t,\n\n  easeOutQuart: (t: number) => -((t -= 1) * t * t * t - 1),\n\n  easeInOutQuart: (t: number) => ((t /= 0.5) < 1)\n    ? 0.5 * t * t * t * t\n    : -0.5 * ((t -= 2) * t * t * t - 2),\n\n  easeInQuint: (t: number) => t * t * t * t * t,\n\n  easeOutQuint: (t: number) => (t -= 1) * t * t * t * t + 1,\n\n  easeInOutQuint: (t: number) => ((t /= 0.5) < 1)\n    ? 0.5 * t * t * t * t * t\n    : 0.5 * ((t -= 2) * t * t * t * t + 2),\n\n  easeInSine: (t: number) => -Math.cos(t * HALF_PI) + 1,\n\n  easeOutSine: (t: number) => Math.sin(t * HALF_PI),\n\n  easeInOutSine: (t: number) => -0.5 * (Math.cos(PI * t) - 1),\n\n  easeInExpo: (t: number) => (t === 0) ? 0 : Math.pow(2, 10 * (t - 1)),\n\n  easeOutExpo: (t: number) => (t === 1) ? 1 : -Math.pow(2, -10 * t) + 1,\n\n  easeInOutExpo: (t: number) => atEdge(t) ? t : t < 0.5\n    ? 0.5 * Math.pow(2, 10 * (t * 2 - 1))\n    : 0.5 * (-Math.pow(2, -10 * (t * 2 - 1)) + 2),\n\n  easeInCirc: (t: number) => (t >= 1) ? t : -(Math.sqrt(1 - t * t) - 1),\n\n  easeOutCirc: (t: number) => Math.sqrt(1 - (t -= 1) * t),\n\n  easeInOutCirc: (t: number) => ((t /= 0.5) < 1)\n    ? -0.5 * (Math.sqrt(1 - t * t) - 1)\n    : 0.5 * (Math.sqrt(1 - (t -= 2) * t) + 1),\n\n  easeInElastic: (t: number) => atEdge(t) ? t : elasticIn(t, 0.075, 0.3),\n\n  easeOutElastic: (t: number) => atEdge(t) ? t : elasticOut(t, 0.075, 0.3),\n\n  easeInOutElastic(t: number) {\n    const s = 0.1125;\n    const p = 0.45;\n    return atEdge(t) ? t :\n      t < 0.5\n        ? 0.5 * elasticIn(t * 2, s, p)\n        : 0.5 + 0.5 * elasticOut(t * 2 - 1, s, p);\n  },\n\n  easeInBack(t: number) {\n    const s = 1.70158;\n    return t * t * ((s + 1) * t - s);\n  },\n\n  easeOutBack(t: number) {\n    const s = 1.70158;\n    return (t -= 1) * t * ((s + 1) * t + s) + 1;\n  },\n\n  easeInOutBack(t: number) {\n    let s = 1.70158;\n    if ((t /= 0.5) < 1) {\n      return 0.5 * (t * t * (((s *= (1.525)) + 1) * t - s));\n    }\n    return 0.5 * ((t -= 2) * t * (((s *= (1.525)) + 1) * t + s) + 2);\n  },\n\n  easeInBounce: (t: number) => 1 - effects.easeOutBounce(1 - t),\n\n  easeOutBounce(t: number) {\n    const m = 7.5625;\n    const d = 2.75;\n    if (t < (1 / d)) {\n      return m * t * t;\n    }\n    if (t < (2 / d)) {\n      return m * (t -= (1.5 / d)) * t + 0.75;\n    }\n    if (t < (2.5 / d)) {\n      return m * (t -= (2.25 / d)) * t + 0.9375;\n    }\n    return m * (t -= (2.625 / d)) * t + 0.984375;\n  },\n\n  easeInOutBounce: (t: number) => (t < 0.5)\n    ? effects.easeInBounce(t * 2) * 0.5\n    : effects.easeOutBounce(t * 2 - 1) * 0.5 + 0.5,\n} as const;\n\nexport type EasingFunction = keyof typeof effects\n\nexport default effects;\n","import {Color} from '@kurkle/color';\n\nexport function isPatternOrGradient(value: unknown): value is CanvasPattern | CanvasGradient {\n  if (value && typeof value === 'object') {\n    const type = value.toString();\n    return type === '[object CanvasPattern]' || type === '[object CanvasGradient]';\n  }\n\n  return false;\n}\n\nexport function color(value: CanvasGradient): CanvasGradient;\nexport function color(value: CanvasPattern): CanvasPattern;\nexport function color(\n  value:\n  | string\n  | { r: number; g: number; b: number; a: number }\n  | [number, number, number]\n  | [number, number, number, number]\n): Color;\nexport function color(value) {\n  return isPatternOrGradient(value) ? value : new Color(value);\n}\n\nexport function getHoverColor(value: CanvasGradient): CanvasGradient;\nexport function getHoverColor(value: CanvasPattern): CanvasPattern;\nexport function getHoverColor(value: string): string;\nexport function getHoverColor(value) {\n  return isPatternOrGradient(value)\n    ? value\n    : new Color(value).saturate(0.5).darken(0.1).hexString();\n}\n","const numbers = ['x', 'y', 'borderWidth', 'radius', 'tension'];\nconst colors = ['color', 'borderColor', 'backgroundColor'];\n\nexport function applyAnimationsDefaults(defaults) {\n  defaults.set('animation', {\n    delay: undefined,\n    duration: 1000,\n    easing: 'easeOutQuart',\n    fn: undefined,\n    from: undefined,\n    loop: undefined,\n    to: undefined,\n    type: undefined,\n  });\n\n  defaults.describe('animation', {\n    _fallback: false,\n    _indexable: false,\n    _scriptable: (name) => name !== 'onProgress' && name !== 'onComplete' && name !== 'fn',\n  });\n\n  defaults.set('animations', {\n    colors: {\n      type: 'color',\n      properties: colors\n    },\n    numbers: {\n      type: 'number',\n      properties: numbers\n    },\n  });\n\n  defaults.describe('animations', {\n    _fallback: 'animation',\n  });\n\n  defaults.set('transitions', {\n    active: {\n      animation: {\n        duration: 400\n      }\n    },\n    resize: {\n      animation: {\n        duration: 0\n      }\n    },\n    show: {\n      animations: {\n        colors: {\n          from: 'transparent'\n        },\n        visible: {\n          type: 'boolean',\n          duration: 0 // show immediately\n        },\n      }\n    },\n    hide: {\n      animations: {\n        colors: {\n          to: 'transparent'\n        },\n        visible: {\n          type: 'boolean',\n          easing: 'linear',\n          fn: v => v | 0 // for keeping the dataset visible all the way through the animation\n        },\n      }\n    }\n  });\n}\n","export function applyLayoutsDefaults(defaults) {\n  defaults.set('layout', {\n    autoPadding: true,\n    padding: {\n      top: 0,\n      right: 0,\n      bottom: 0,\n      left: 0\n    }\n  });\n}\n","\nconst intlCache = new Map<string, Intl.NumberFormat>();\n\nfunction getNumberFormat(locale: string, options?: Intl.NumberFormatOptions) {\n  options = options || {};\n  const cacheKey = locale + JSON.stringify(options);\n  let formatter = intlCache.get(cacheKey);\n  if (!formatter) {\n    formatter = new Intl.NumberFormat(locale, options);\n    intlCache.set(cacheKey, formatter);\n  }\n  return formatter;\n}\n\nexport function formatNumber(num: number, locale: string, options?: Intl.NumberFormatOptions) {\n  return getNumberFormat(locale, options).format(num);\n}\n","import {isArray} from '../helpers/helpers.core.js';\nimport {formatNumber} from '../helpers/helpers.intl.js';\nimport {log10} from '../helpers/helpers.math.js';\n\n/**\n * Namespace to hold formatters for different types of ticks\n * @namespace Chart.Ticks.formatters\n */\nconst formatters = {\n  /**\n   * Formatter for value labels\n   * @method Chart.Ticks.formatters.values\n   * @param value the value to display\n   * @return {string|string[]} the label to display\n   */\n  values(value) {\n    return isArray(value) ? /** @type {string[]} */ (value) : '' + value;\n  },\n\n  /**\n   * Formatter for numeric ticks\n   * @method Chart.Ticks.formatters.numeric\n   * @param tickValue {number} the value to be formatted\n   * @param index {number} the position of the tickValue parameter in the ticks array\n   * @param ticks {object[]} the list of ticks being converted\n   * @return {string} string representation of the tickValue parameter\n   */\n  numeric(tickValue, index, ticks) {\n    if (tickValue === 0) {\n      return '0'; // never show decimal places for 0\n    }\n\n    const locale = this.chart.options.locale;\n    let notation;\n    let delta = tickValue; // This is used when there are less than 2 ticks as the tick interval.\n\n    if (ticks.length > 1) {\n      // all ticks are small or there huge numbers; use scientific notation\n      const maxTick = Math.max(Math.abs(ticks[0].value), Math.abs(ticks[ticks.length - 1].value));\n      if (maxTick < 1e-4 || maxTick > 1e+15) {\n        notation = 'scientific';\n      }\n\n      delta = calculateDelta(tickValue, ticks);\n    }\n\n    const logDelta = log10(Math.abs(delta));\n\n    // When datasets have values approaching Number.MAX_VALUE, the tick calculations might result in\n    // infinity and eventually NaN. Passing NaN for minimumFractionDigits or maximumFractionDigits\n    // will make the number formatter throw. So instead we check for isNaN and use a fallback value.\n    //\n    // toFixed has a max of 20 decimal places\n    const numDecimal = isNaN(logDelta) ? 1 : Math.max(Math.min(-1 * Math.floor(logDelta), 20), 0);\n\n    const options = {notation, minimumFractionDigits: numDecimal, maximumFractionDigits: numDecimal};\n    Object.assign(options, this.options.ticks.format);\n\n    return formatNumber(tickValue, locale, options);\n  },\n\n\n  /**\n   * Formatter for logarithmic ticks\n   * @method Chart.Ticks.formatters.logarithmic\n   * @param tickValue {number} the value to be formatted\n   * @param index {number} the position of the tickValue parameter in the ticks array\n   * @param ticks {object[]} the list of ticks being converted\n   * @return {string} string representation of the tickValue parameter\n   */\n  logarithmic(tickValue, index, ticks) {\n    if (tickValue === 0) {\n      return '0';\n    }\n    const remain = ticks[index].significand || (tickValue / (Math.pow(10, Math.floor(log10(tickValue)))));\n    if ([1, 2, 3, 5, 10, 15].includes(remain) || index > 0.8 * ticks.length) {\n      return formatters.numeric.call(this, tickValue, index, ticks);\n    }\n    return '';\n  }\n\n};\n\n\nfunction calculateDelta(tickValue, ticks) {\n  // Figure out how many digits to show\n  // The space between the first two ticks might be smaller than normal spacing\n  let delta = ticks.length > 3 ? ticks[2].value - ticks[1].value : ticks[1].value - ticks[0].value;\n\n  // If we have a number like 2.5 as the delta, figure out how many decimal places we need\n  if (Math.abs(delta) >= 1 && tickValue !== Math.floor(tickValue)) {\n    // not an integer\n    delta = tickValue - Math.floor(tickValue);\n  }\n  return delta;\n}\n\n/**\n * Namespace to hold static tick generation functions\n * @namespace Chart.Ticks\n */\nexport default {formatters};\n","import Ticks from './core.ticks.js';\n\nexport function applyScaleDefaults(defaults) {\n  defaults.set('scale', {\n    display: true,\n    offset: false,\n    reverse: false,\n    beginAtZero: false,\n\n    /**\n     * Scale boundary strategy (bypassed by min/max time options)\n     * - `data`: make sure data are fully visible, ticks outside are removed\n     * - `ticks`: make sure ticks are fully visible, data outside are truncated\n     * @see https://github.com/chartjs/Chart.js/pull/4556\n     * @since 3.0.0\n     */\n    bounds: 'ticks',\n\n    clip: true,\n\n    /**\n     * Addition grace added to max and reduced from min data value.\n     * @since 3.0.0\n     */\n    grace: 0,\n\n    // grid line settings\n    grid: {\n      display: true,\n      lineWidth: 1,\n      drawOnChartArea: true,\n      drawTicks: true,\n      tickLength: 8,\n      tickWidth: (_ctx, options) => options.lineWidth,\n      tickColor: (_ctx, options) => options.color,\n      offset: false,\n    },\n\n    border: {\n      display: true,\n      dash: [],\n      dashOffset: 0.0,\n      width: 1\n    },\n\n    // scale title\n    title: {\n      // display property\n      display: false,\n\n      // actual label\n      text: '',\n\n      // top/bottom padding\n      padding: {\n        top: 4,\n        bottom: 4\n      }\n    },\n\n    // label settings\n    ticks: {\n      minRotation: 0,\n      maxRotation: 50,\n      mirror: false,\n      textStrokeWidth: 0,\n      textStrokeColor: '',\n      padding: 3,\n      display: true,\n      autoSkip: true,\n      autoSkipPadding: 3,\n      labelOffset: 0,\n      // We pass through arrays to be rendered as multiline labels, we convert Others to strings here.\n      callback: Ticks.formatters.values,\n      minor: {},\n      major: {},\n      align: 'center',\n      crossAlign: 'near',\n\n      showLabelBackdrop: false,\n      backdropColor: 'rgba(255, 255, 255, 0.75)',\n      backdropPadding: 2,\n    }\n  });\n\n  defaults.route('scale.ticks', 'color', '', 'color');\n  defaults.route('scale.grid', 'color', '', 'borderColor');\n  defaults.route('scale.border', 'color', '', 'borderColor');\n  defaults.route('scale.title', 'color', '', 'color');\n\n  defaults.describe('scale', {\n    _fallback: false,\n    _scriptable: (name) => !name.startsWith('before') && !name.startsWith('after') && name !== 'callback' && name !== 'parser',\n    _indexable: (name) => name !== 'borderDash' && name !== 'tickBorderDash' && name !== 'dash',\n  });\n\n  defaults.describe('scales', {\n    _fallback: 'scale',\n  });\n\n  defaults.describe('scale.ticks', {\n    _scriptable: (name) => name !== 'backdropPadding' && name !== 'callback',\n    _indexable: (name) => name !== 'backdropPadding',\n  });\n}\n","import {getHoverColor} from '../helpers/helpers.color.js';\nimport {isObject, merge, valueOrDefault} from '../helpers/helpers.core.js';\nimport {applyAnimationsDefaults} from './core.animations.defaults.js';\nimport {applyLayoutsDefaults} from './core.layouts.defaults.js';\nimport {applyScaleDefaults} from './core.scale.defaults.js';\n\nexport const overrides = Object.create(null);\nexport const descriptors = Object.create(null);\n\n/**\n * @param {object} node\n * @param {string} key\n * @return {object}\n */\nfunction getScope(node, key) {\n  if (!key) {\n    return node;\n  }\n  const keys = key.split('.');\n  for (let i = 0, n = keys.length; i < n; ++i) {\n    const k = keys[i];\n    node = node[k] || (node[k] = Object.create(null));\n  }\n  return node;\n}\n\nfunction set(root, scope, values) {\n  if (typeof scope === 'string') {\n    return merge(getScope(root, scope), values);\n  }\n  return merge(getScope(root, ''), scope);\n}\n\n/**\n * Please use the module's default export which provides a singleton instance\n * Note: class is exported for typedoc\n */\nexport class Defaults {\n  constructor(_descriptors, _appliers) {\n    this.animation = undefined;\n    this.backgroundColor = 'rgba(0,0,0,0.1)';\n    this.borderColor = 'rgba(0,0,0,0.1)';\n    this.color = '#666';\n    this.datasets = {};\n    this.devicePixelRatio = (context) => context.chart.platform.getDevicePixelRatio();\n    this.elements = {};\n    this.events = [\n      'mousemove',\n      'mouseout',\n      'click',\n      'touchstart',\n      'touchmove'\n    ];\n    this.font = {\n      family: \"'Helvetica Neue', 'Helvetica', 'Arial', sans-serif\",\n      size: 12,\n      style: 'normal',\n      lineHeight: 1.2,\n      weight: null\n    };\n    this.hover = {};\n    this.hoverBackgroundColor = (ctx, options) => getHoverColor(options.backgroundColor);\n    this.hoverBorderColor = (ctx, options) => getHoverColor(options.borderColor);\n    this.hoverColor = (ctx, options) => getHoverColor(options.color);\n    this.indexAxis = 'x';\n    this.interaction = {\n      mode: 'nearest',\n      intersect: true,\n      includeInvisible: false\n    };\n    this.maintainAspectRatio = true;\n    this.onHover = null;\n    this.onClick = null;\n    this.parsing = true;\n    this.plugins = {};\n    this.responsive = true;\n    this.scale = undefined;\n    this.scales = {};\n    this.showLine = true;\n    this.drawActiveElementsOnTop = true;\n\n    this.describe(_descriptors);\n    this.apply(_appliers);\n  }\n\n  /**\n\t * @param {string|object} scope\n\t * @param {object} [values]\n\t */\n  set(scope, values) {\n    return set(this, scope, values);\n  }\n\n  /**\n\t * @param {string} scope\n\t */\n  get(scope) {\n    return getScope(this, scope);\n  }\n\n  /**\n\t * @param {string|object} scope\n\t * @param {object} [values]\n\t */\n  describe(scope, values) {\n    return set(descriptors, scope, values);\n  }\n\n  override(scope, values) {\n    return set(overrides, scope, values);\n  }\n\n  /**\n\t * Routes the named defaults to fallback to another scope/name.\n\t * This routing is useful when those target values, like defaults.color, are changed runtime.\n\t * If the values would be copied, the runtime change would not take effect. By routing, the\n\t * fallback is evaluated at each access, so its always up to date.\n\t *\n\t * Example:\n\t *\n\t * \tdefaults.route('elements.arc', 'backgroundColor', '', 'color')\n\t *   - reads the backgroundColor from defaults.color when undefined locally\n\t *\n\t * @param {string} scope Scope this route applies to.\n\t * @param {string} name Property name that should be routed to different namespace when not defined here.\n\t * @param {string} targetScope The namespace where those properties should be routed to.\n\t * Empty string ('') is the root of defaults.\n\t * @param {string} targetName The target name in the target scope the property should be routed to.\n\t */\n  route(scope, name, targetScope, targetName) {\n    const scopeObject = getScope(this, scope);\n    const targetScopeObject = getScope(this, targetScope);\n    const privateName = '_' + name;\n\n    Object.defineProperties(scopeObject, {\n      // A private property is defined to hold the actual value, when this property is set in its scope (set in the setter)\n      [privateName]: {\n        value: scopeObject[name],\n        writable: true\n      },\n      // The actual property is defined as getter/setter so we can do the routing when value is not locally set.\n      [name]: {\n        enumerable: true,\n        get() {\n          const local = this[privateName];\n          const target = targetScopeObject[targetName];\n          if (isObject(local)) {\n            return Object.assign({}, target, local);\n          }\n          return valueOrDefault(local, target);\n        },\n        set(value) {\n          this[privateName] = value;\n        }\n      }\n    });\n  }\n\n  apply(appliers) {\n    appliers.forEach((apply) => apply(this));\n  }\n}\n\n// singleton instance\nexport default /* #__PURE__ */ new Defaults({\n  _scriptable: (name) => !name.startsWith('on'),\n  _indexable: (name) => name !== 'events',\n  hover: {\n    _fallback: 'interaction'\n  },\n  interaction: {\n    _scriptable: false,\n    _indexable: false,\n  }\n}, [applyAnimationsDefaults, applyLayoutsDefaults, applyScaleDefaults]);\n","import type {\n  Chart,\n  Point,\n  FontSpec,\n  CanvasFontSpec,\n  PointStyle,\n  RenderTextOpts,\n  BackdropOptions\n} from '../types/index.js';\nimport type {\n  TRBL,\n  SplinePoint,\n  RoundedRect,\n  TRBLCorners\n} from '../types/geometric.js';\nimport {isArray, isNullOrUndef} from './helpers.core.js';\nimport {PI, TAU, HALF_PI, QUARTER_PI, TWO_THIRDS_PI, RAD_PER_DEG} from './helpers.math.js';\n\n/**\n * Converts the given font object into a CSS font string.\n * @param font - A font object.\n * @return The CSS font string. See https://developer.mozilla.org/en-US/docs/Web/CSS/font\n * @private\n */\nexport function toFontString(font: FontSpec) {\n  if (!font || isNullOrUndef(font.size) || isNullOrUndef(font.family)) {\n    return null;\n  }\n\n  return (font.style ? font.style + ' ' : '')\n\t\t+ (font.weight ? font.weight + ' ' : '')\n\t\t+ font.size + 'px '\n\t\t+ font.family;\n}\n\n/**\n * @private\n */\nexport function _measureText(\n  ctx: CanvasRenderingContext2D,\n  data: Record<string, number>,\n  gc: string[],\n  longest: number,\n  string: string\n) {\n  let textWidth = data[string];\n  if (!textWidth) {\n    textWidth = data[string] = ctx.measureText(string).width;\n    gc.push(string);\n  }\n  if (textWidth > longest) {\n    longest = textWidth;\n  }\n  return longest;\n}\n\ntype Thing = string | undefined | null\ntype Things = (Thing | Thing[])[]\n\n/**\n * @private\n */\n// eslint-disable-next-line complexity\nexport function _longestText(\n  ctx: CanvasRenderingContext2D,\n  font: string,\n  arrayOfThings: Things,\n  cache?: {data?: Record<string, number>, garbageCollect?: string[], font?: string}\n) {\n  cache = cache || {};\n  let data = cache.data = cache.data || {};\n  let gc = cache.garbageCollect = cache.garbageCollect || [];\n\n  if (cache.font !== font) {\n    data = cache.data = {};\n    gc = cache.garbageCollect = [];\n    cache.font = font;\n  }\n\n  ctx.save();\n\n  ctx.font = font;\n  let longest = 0;\n  const ilen = arrayOfThings.length;\n  let i: number, j: number, jlen: number, thing: Thing | Thing[], nestedThing: Thing | Thing[];\n  for (i = 0; i < ilen; i++) {\n    thing = arrayOfThings[i];\n\n    // Undefined strings and arrays should not be measured\n    if (thing !== undefined && thing !== null && !isArray(thing)) {\n      longest = _measureText(ctx, data, gc, longest, thing);\n    } else if (isArray(thing)) {\n      // if it is an array lets measure each element\n      // to do maybe simplify this function a bit so we can do this more recursively?\n      for (j = 0, jlen = thing.length; j < jlen; j++) {\n        nestedThing = thing[j];\n        // Undefined strings and arrays should not be measured\n        if (nestedThing !== undefined && nestedThing !== null && !isArray(nestedThing)) {\n          longest = _measureText(ctx, data, gc, longest, nestedThing);\n        }\n      }\n    }\n  }\n\n  ctx.restore();\n\n  const gcLen = gc.length / 2;\n  if (gcLen > arrayOfThings.length) {\n    for (i = 0; i < gcLen; i++) {\n      delete data[gc[i]];\n    }\n    gc.splice(0, gcLen);\n  }\n  return longest;\n}\n\n/**\n * Returns the aligned pixel value to avoid anti-aliasing blur\n * @param chart - The chart instance.\n * @param pixel - A pixel value.\n * @param width - The width of the element.\n * @returns The aligned pixel value.\n * @private\n */\nexport function _alignPixel(chart: Chart, pixel: number, width: number) {\n  const devicePixelRatio = chart.currentDevicePixelRatio;\n  const halfWidth = width !== 0 ? Math.max(width / 2, 0.5) : 0;\n  return Math.round((pixel - halfWidth) * devicePixelRatio) / devicePixelRatio + halfWidth;\n}\n\n/**\n * Clears the entire canvas.\n */\nexport function clearCanvas(canvas?: HTMLCanvasElement, ctx?: CanvasRenderingContext2D) {\n  if (!ctx && !canvas) {\n    return;\n  }\n\n  ctx = ctx || canvas.getContext('2d');\n\n  ctx.save();\n  // canvas.width and canvas.height do not consider the canvas transform,\n  // while clearRect does\n  ctx.resetTransform();\n  ctx.clearRect(0, 0, canvas.width, canvas.height);\n  ctx.restore();\n}\n\nexport interface DrawPointOptions {\n  pointStyle: PointStyle;\n  rotation?: number;\n  radius: number;\n  borderWidth: number;\n}\n\nexport function drawPoint(\n  ctx: CanvasRenderingContext2D,\n  options: DrawPointOptions,\n  x: number,\n  y: number\n) {\n  // eslint-disable-next-line @typescript-eslint/no-use-before-define\n  drawPointLegend(ctx, options, x, y, null);\n}\n\n// eslint-disable-next-line complexity\nexport function drawPointLegend(\n  ctx: CanvasRenderingContext2D,\n  options: DrawPointOptions,\n  x: number,\n  y: number,\n  w: number\n) {\n  let type: string, xOffset: number, yOffset: number, size: number, cornerRadius: number, width: number, xOffsetW: number, yOffsetW: number;\n  const style = options.pointStyle;\n  const rotation = options.rotation;\n  const radius = options.radius;\n  let rad = (rotation || 0) * RAD_PER_DEG;\n\n  if (style && typeof style === 'object') {\n    type = style.toString();\n    if (type === '[object HTMLImageElement]' || type === '[object HTMLCanvasElement]') {\n      ctx.save();\n      ctx.translate(x, y);\n      ctx.rotate(rad);\n      ctx.drawImage(style, -style.width / 2, -style.height / 2, style.width, style.height);\n      ctx.restore();\n      return;\n    }\n  }\n\n  if (isNaN(radius) || radius <= 0) {\n    return;\n  }\n\n  ctx.beginPath();\n\n  switch (style) {\n  // Default includes circle\n    default:\n      if (w) {\n        ctx.ellipse(x, y, w / 2, radius, 0, 0, TAU);\n      } else {\n        ctx.arc(x, y, radius, 0, TAU);\n      }\n      ctx.closePath();\n      break;\n    case 'triangle':\n      width = w ? w / 2 : radius;\n      ctx.moveTo(x + Math.sin(rad) * width, y - Math.cos(rad) * radius);\n      rad += TWO_THIRDS_PI;\n      ctx.lineTo(x + Math.sin(rad) * width, y - Math.cos(rad) * radius);\n      rad += TWO_THIRDS_PI;\n      ctx.lineTo(x + Math.sin(rad) * width, y - Math.cos(rad) * radius);\n      ctx.closePath();\n      break;\n    case 'rectRounded':\n    // NOTE: the rounded rect implementation changed to use `arc` instead of\n    // `quadraticCurveTo` since it generates better results when rect is\n    // almost a circle. 0.516 (instead of 0.5) produces results with visually\n    // closer proportion to the previous impl and it is inscribed in the\n    // circle with `radius`. For more details, see the following PRs:\n    // https://github.com/chartjs/Chart.js/issues/5597\n    // https://github.com/chartjs/Chart.js/issues/5858\n      cornerRadius = radius * 0.516;\n      size = radius - cornerRadius;\n      xOffset = Math.cos(rad + QUARTER_PI) * size;\n      xOffsetW = Math.cos(rad + QUARTER_PI) * (w ? w / 2 - cornerRadius : size);\n      yOffset = Math.sin(rad + QUARTER_PI) * size;\n      yOffsetW = Math.sin(rad + QUARTER_PI) * (w ? w / 2 - cornerRadius : size);\n      ctx.arc(x - xOffsetW, y - yOffset, cornerRadius, rad - PI, rad - HALF_PI);\n      ctx.arc(x + yOffsetW, y - xOffset, cornerRadius, rad - HALF_PI, rad);\n      ctx.arc(x + xOffsetW, y + yOffset, cornerRadius, rad, rad + HALF_PI);\n      ctx.arc(x - yOffsetW, y + xOffset, cornerRadius, rad + HALF_PI, rad + PI);\n      ctx.closePath();\n      break;\n    case 'rect':\n      if (!rotation) {\n        size = Math.SQRT1_2 * radius;\n        width = w ? w / 2 : size;\n        ctx.rect(x - width, y - size, 2 * width, 2 * size);\n        break;\n      }\n      rad += QUARTER_PI;\n    /* falls through */\n    case 'rectRot':\n      xOffsetW = Math.cos(rad) * (w ? w / 2 : radius);\n      xOffset = Math.cos(rad) * radius;\n      yOffset = Math.sin(rad) * radius;\n      yOffsetW = Math.sin(rad) * (w ? w / 2 : radius);\n      ctx.moveTo(x - xOffsetW, y - yOffset);\n      ctx.lineTo(x + yOffsetW, y - xOffset);\n      ctx.lineTo(x + xOffsetW, y + yOffset);\n      ctx.lineTo(x - yOffsetW, y + xOffset);\n      ctx.closePath();\n      break;\n    case 'crossRot':\n      rad += QUARTER_PI;\n    /* falls through */\n    case 'cross':\n      xOffsetW = Math.cos(rad) * (w ? w / 2 : radius);\n      xOffset = Math.cos(rad) * radius;\n      yOffset = Math.sin(rad) * radius;\n      yOffsetW = Math.sin(rad) * (w ? w / 2 : radius);\n      ctx.moveTo(x - xOffsetW, y - yOffset);\n      ctx.lineTo(x + xOffsetW, y + yOffset);\n      ctx.moveTo(x + yOffsetW, y - xOffset);\n      ctx.lineTo(x - yOffsetW, y + xOffset);\n      break;\n    case 'star':\n      xOffsetW = Math.cos(rad) * (w ? w / 2 : radius);\n      xOffset = Math.cos(rad) * radius;\n      yOffset = Math.sin(rad) * radius;\n      yOffsetW = Math.sin(rad) * (w ? w / 2 : radius);\n      ctx.moveTo(x - xOffsetW, y - yOffset);\n      ctx.lineTo(x + xOffsetW, y + yOffset);\n      ctx.moveTo(x + yOffsetW, y - xOffset);\n      ctx.lineTo(x - yOffsetW, y + xOffset);\n      rad += QUARTER_PI;\n      xOffsetW = Math.cos(rad) * (w ? w / 2 : radius);\n      xOffset = Math.cos(rad) * radius;\n      yOffset = Math.sin(rad) * radius;\n      yOffsetW = Math.sin(rad) * (w ? w / 2 : radius);\n      ctx.moveTo(x - xOffsetW, y - yOffset);\n      ctx.lineTo(x + xOffsetW, y + yOffset);\n      ctx.moveTo(x + yOffsetW, y - xOffset);\n      ctx.lineTo(x - yOffsetW, y + xOffset);\n      break;\n    case 'line':\n      xOffset = w ? w / 2 : Math.cos(rad) * radius;\n      yOffset = Math.sin(rad) * radius;\n      ctx.moveTo(x - xOffset, y - yOffset);\n      ctx.lineTo(x + xOffset, y + yOffset);\n      break;\n    case 'dash':\n      ctx.moveTo(x, y);\n      ctx.lineTo(x + Math.cos(rad) * (w ? w / 2 : radius), y + Math.sin(rad) * radius);\n      break;\n    case false:\n      ctx.closePath();\n      break;\n  }\n\n  ctx.fill();\n  if (options.borderWidth > 0) {\n    ctx.stroke();\n  }\n}\n\n/**\n * Returns true if the point is inside the rectangle\n * @param point - The point to test\n * @param area - The rectangle\n * @param margin - allowed margin\n * @private\n */\nexport function _isPointInArea(\n  point: Point,\n  area: TRBL,\n  margin?: number\n) {\n  margin = margin || 0.5; // margin - default is to match rounded decimals\n\n  return !area || (point && point.x > area.left - margin && point.x < area.right + margin &&\n\t\tpoint.y > area.top - margin && point.y < area.bottom + margin);\n}\n\nexport function clipArea(ctx: CanvasRenderingContext2D, area: TRBL) {\n  ctx.save();\n  ctx.beginPath();\n  ctx.rect(area.left, area.top, area.right - area.left, area.bottom - area.top);\n  ctx.clip();\n}\n\nexport function unclipArea(ctx: CanvasRenderingContext2D) {\n  ctx.restore();\n}\n\n/**\n * @private\n */\nexport function _steppedLineTo(\n  ctx: CanvasRenderingContext2D,\n  previous: Point,\n  target: Point,\n  flip?: boolean,\n  mode?: string\n) {\n  if (!previous) {\n    return ctx.lineTo(target.x, target.y);\n  }\n  if (mode === 'middle') {\n    const midpoint = (previous.x + target.x) / 2.0;\n    ctx.lineTo(midpoint, previous.y);\n    ctx.lineTo(midpoint, target.y);\n  } else if (mode === 'after' !== !!flip) {\n    ctx.lineTo(previous.x, target.y);\n  } else {\n    ctx.lineTo(target.x, previous.y);\n  }\n  ctx.lineTo(target.x, target.y);\n}\n\n/**\n * @private\n */\nexport function _bezierCurveTo(\n  ctx: CanvasRenderingContext2D,\n  previous: SplinePoint,\n  target: SplinePoint,\n  flip?: boolean\n) {\n  if (!previous) {\n    return ctx.lineTo(target.x, target.y);\n  }\n  ctx.bezierCurveTo(\n    flip ? previous.cp1x : previous.cp2x,\n    flip ? previous.cp1y : previous.cp2y,\n    flip ? target.cp2x : target.cp1x,\n    flip ? target.cp2y : target.cp1y,\n    target.x,\n    target.y);\n}\n\nfunction setRenderOpts(ctx: CanvasRenderingContext2D, opts: RenderTextOpts) {\n  if (opts.translation) {\n    ctx.translate(opts.translation[0], opts.translation[1]);\n  }\n\n  if (!isNullOrUndef(opts.rotation)) {\n    ctx.rotate(opts.rotation);\n  }\n\n  if (opts.color) {\n    ctx.fillStyle = opts.color;\n  }\n\n  if (opts.textAlign) {\n    ctx.textAlign = opts.textAlign;\n  }\n\n  if (opts.textBaseline) {\n    ctx.textBaseline = opts.textBaseline;\n  }\n}\n\nfunction decorateText(\n  ctx: CanvasRenderingContext2D,\n  x: number,\n  y: number,\n  line: string,\n  opts: RenderTextOpts\n) {\n  if (opts.strikethrough || opts.underline) {\n    /**\n     * Now that IE11 support has been dropped, we can use more\n     * of the TextMetrics object. The actual bounding boxes\n     * are unflagged in Chrome, Firefox, Edge, and Safari so they\n     * can be safely used.\n     * See https://developer.mozilla.org/en-US/docs/Web/API/TextMetrics#Browser_compatibility\n     */\n    const metrics = ctx.measureText(line);\n    const left = x - metrics.actualBoundingBoxLeft;\n    const right = x + metrics.actualBoundingBoxRight;\n    const top = y - metrics.actualBoundingBoxAscent;\n    const bottom = y + metrics.actualBoundingBoxDescent;\n    const yDecoration = opts.strikethrough ? (top + bottom) / 2 : bottom;\n\n    ctx.strokeStyle = ctx.fillStyle;\n    ctx.beginPath();\n    ctx.lineWidth = opts.decorationWidth || 2;\n    ctx.moveTo(left, yDecoration);\n    ctx.lineTo(right, yDecoration);\n    ctx.stroke();\n  }\n}\n\nfunction drawBackdrop(ctx: CanvasRenderingContext2D, opts: BackdropOptions) {\n  const oldColor = ctx.fillStyle;\n\n  ctx.fillStyle = opts.color as string;\n  ctx.fillRect(opts.left, opts.top, opts.width, opts.height);\n  ctx.fillStyle = oldColor;\n}\n\n/**\n * Render text onto the canvas\n */\nexport function renderText(\n  ctx: CanvasRenderingContext2D,\n  text: string | string[],\n  x: number,\n  y: number,\n  font: CanvasFontSpec,\n  opts: RenderTextOpts = {}\n) {\n  const lines = isArray(text) ? text : [text];\n  const stroke = opts.strokeWidth > 0 && opts.strokeColor !== '';\n  let i: number, line: string;\n\n  ctx.save();\n  ctx.font = font.string;\n  setRenderOpts(ctx, opts);\n\n  for (i = 0; i < lines.length; ++i) {\n    line = lines[i];\n\n    if (opts.backdrop) {\n      drawBackdrop(ctx, opts.backdrop);\n    }\n\n    if (stroke) {\n      if (opts.strokeColor) {\n        ctx.strokeStyle = opts.strokeColor;\n      }\n\n      if (!isNullOrUndef(opts.strokeWidth)) {\n        ctx.lineWidth = opts.strokeWidth;\n      }\n\n      ctx.strokeText(line, x, y, opts.maxWidth);\n    }\n\n    ctx.fillText(line, x, y, opts.maxWidth);\n    decorateText(ctx, x, y, line, opts);\n\n    y += Number(font.lineHeight);\n  }\n\n  ctx.restore();\n}\n\n/**\n * Add a path of a rectangle with rounded corners to the current sub-path\n * @param ctx - Context\n * @param rect - Bounding rect\n */\nexport function addRoundedRectPath(\n  ctx: CanvasRenderingContext2D,\n  rect: RoundedRect & { radius: TRBLCorners }\n) {\n  const {x, y, w, h, radius} = rect;\n\n  // top left arc\n  ctx.arc(x + radius.topLeft, y + radius.topLeft, radius.topLeft, 1.5 * PI, PI, true);\n\n  // line from top left to bottom left\n  ctx.lineTo(x, y + h - radius.bottomLeft);\n\n  // bottom left arc\n  ctx.arc(x + radius.bottomLeft, y + h - radius.bottomLeft, radius.bottomLeft, PI, HALF_PI, true);\n\n  // line from bottom left to bottom right\n  ctx.lineTo(x + w - radius.bottomRight, y + h);\n\n  // bottom right arc\n  ctx.arc(x + w - radius.bottomRight, y + h - radius.bottomRight, radius.bottomRight, HALF_PI, 0, true);\n\n  // line from bottom right to top right\n  ctx.lineTo(x + w, y + radius.topRight);\n\n  // top right arc\n  ctx.arc(x + w - radius.topRight, y + radius.topRight, radius.topRight, 0, -HALF_PI, true);\n\n  // line from top right to top left\n  ctx.lineTo(x + radius.topLeft, y);\n}\n","import defaults from '../core/core.defaults.js';\nimport {isArray, isObject, toDimension, valueOrDefault} from './helpers.core.js';\nimport {toFontString} from './helpers.canvas.js';\nimport type {ChartArea, FontSpec, Point} from '../types/index.js';\nimport type {TRBL, TRBLCorners} from '../types/geometric.js';\n\nconst LINE_HEIGHT = /^(normal|(\\d+(?:\\.\\d+)?)(px|em|%)?)$/;\nconst FONT_STYLE = /^(normal|italic|initial|inherit|unset|(oblique( -?[0-9]?[0-9]deg)?))$/;\n\n/**\n * @alias Chart.helpers.options\n * @namespace\n */\n/**\n * Converts the given line height `value` in pixels for a specific font `size`.\n * @param value - The lineHeight to parse (eg. 1.6, '14px', '75%', '1.6em').\n * @param size - The font size (in pixels) used to resolve relative `value`.\n * @returns The effective line height in pixels (size * 1.2 if value is invalid).\n * @see https://developer.mozilla.org/en-US/docs/Web/CSS/line-height\n * @since 2.7.0\n */\nexport function toLineHeight(value: number | string, size: number): number {\n  const matches = ('' + value).match(LINE_HEIGHT);\n  if (!matches || matches[1] === 'normal') {\n    return size * 1.2;\n  }\n\n  value = +matches[2];\n\n  switch (matches[3]) {\n    case 'px':\n      return value;\n    case '%':\n      value /= 100;\n      break;\n    default:\n      break;\n  }\n\n  return size * value;\n}\n\nconst numberOrZero = (v: unknown) => +v || 0;\n\n/**\n * @param value\n * @param props\n */\nexport function _readValueToProps<K extends string>(value: number | Record<K, number>, props: K[]): Record<K, number>;\nexport function _readValueToProps<K extends string, T extends string>(value: number | Record<K & T, number>, props: Record<T, K>): Record<T, number>;\nexport function _readValueToProps(value: number | Record<string, number>, props: string[] | Record<string, string>) {\n  const ret = {};\n  const objProps = isObject(props);\n  const keys = objProps ? Object.keys(props) : props;\n  const read = isObject(value)\n    ? objProps\n      ? prop => valueOrDefault(value[prop], value[props[prop]])\n      : prop => value[prop]\n    : () => value;\n\n  for (const prop of keys) {\n    ret[prop] = numberOrZero(read(prop));\n  }\n  return ret;\n}\n\n/**\n * Converts the given value into a TRBL object.\n * @param value - If a number, set the value to all TRBL component,\n *  else, if an object, use defined properties and sets undefined ones to 0.\n *  x / y are shorthands for same value for left/right and top/bottom.\n * @returns The padding values (top, right, bottom, left)\n * @since 3.0.0\n */\nexport function toTRBL(value: number | TRBL | Point) {\n  return _readValueToProps(value, {top: 'y', right: 'x', bottom: 'y', left: 'x'});\n}\n\n/**\n * Converts the given value into a TRBL corners object (similar with css border-radius).\n * @param value - If a number, set the value to all TRBL corner components,\n *  else, if an object, use defined properties and sets undefined ones to 0.\n * @returns The TRBL corner values (topLeft, topRight, bottomLeft, bottomRight)\n * @since 3.0.0\n */\nexport function toTRBLCorners(value: number | TRBLCorners) {\n  return _readValueToProps(value, ['topLeft', 'topRight', 'bottomLeft', 'bottomRight']);\n}\n\n/**\n * Converts the given value into a padding object with pre-computed width/height.\n * @param value - If a number, set the value to all TRBL component,\n *  else, if an object, use defined properties and sets undefined ones to 0.\n *  x / y are shorthands for same value for left/right and top/bottom.\n * @returns The padding values (top, right, bottom, left, width, height)\n * @since 2.7.0\n */\nexport function toPadding(value?: number | TRBL): ChartArea {\n  const obj = toTRBL(value) as ChartArea;\n\n  obj.width = obj.left + obj.right;\n  obj.height = obj.top + obj.bottom;\n\n  return obj;\n}\n\n/**\n * Parses font options and returns the font object.\n * @param options - A object that contains font options to be parsed.\n * @param fallback - A object that contains fallback font options.\n * @return The font object.\n * @private\n */\n\nexport function toFont(options: Partial<FontSpec>, fallback?: Partial<FontSpec>) {\n  options = options || {};\n  fallback = fallback || defaults.font as FontSpec;\n\n  let size = valueOrDefault(options.size, fallback.size);\n\n  if (typeof size === 'string') {\n    size = parseInt(size, 10);\n  }\n  let style = valueOrDefault(options.style, fallback.style);\n  if (style && !('' + style).match(FONT_STYLE)) {\n    console.warn('Invalid font style specified: \"' + style + '\"');\n    style = undefined;\n  }\n\n  const font = {\n    family: valueOrDefault(options.family, fallback.family),\n    lineHeight: toLineHeight(valueOrDefault(options.lineHeight, fallback.lineHeight), size),\n    size,\n    style,\n    weight: valueOrDefault(options.weight, fallback.weight),\n    string: ''\n  };\n\n  font.string = toFontString(font);\n  return font;\n}\n\n/**\n * Evaluates the given `inputs` sequentially and returns the first defined value.\n * @param inputs - An array of values, falling back to the last value.\n * @param context - If defined and the current value is a function, the value\n * is called with `context` as first argument and the result becomes the new input.\n * @param index - If defined and the current value is an array, the value\n * at `index` become the new input.\n * @param info - object to return information about resolution in\n * @param info.cacheable - Will be set to `false` if option is not cacheable.\n * @since 2.7.0\n */\nexport function resolve(inputs: Array<unknown>, context?: object, index?: number, info?: { cacheable: boolean }) {\n  let cacheable = true;\n  let i: number, ilen: number, value: unknown;\n\n  for (i = 0, ilen = inputs.length; i < ilen; ++i) {\n    value = inputs[i];\n    if (value === undefined) {\n      continue;\n    }\n    if (context !== undefined && typeof value === 'function') {\n      value = value(context);\n      cacheable = false;\n    }\n    if (index !== undefined && isArray(value)) {\n      value = value[index % value.length];\n      cacheable = false;\n    }\n    if (value !== undefined) {\n      if (info && !cacheable) {\n        info.cacheable = false;\n      }\n      return value;\n    }\n  }\n}\n\n/**\n * @param minmax\n * @param grace\n * @param beginAtZero\n * @private\n */\nexport function _addGrace(minmax: { min: number; max: number; }, grace: number | string, beginAtZero: boolean) {\n  const {min, max} = minmax;\n  const change = toDimension(grace, (max - min) / 2);\n  const keepZero = (value: number, add: number) => beginAtZero && value === 0 ? 0 : value + add;\n  return {\n    min: keepZero(min, -Math.abs(change)),\n    max: keepZero(max, change)\n  };\n}\n\n/**\n * Create a context inheriting parentContext\n * @param parentContext\n * @param context\n * @returns\n */\nexport function createContext<T extends object>(parentContext: null, context: T): T;\nexport function createContext<T extends object, P extends T>(parentContext: P, context: T): P & T;\nexport function createContext(parentContext: object, context: object) {\n  return Object.assign(Object.create(parentContext), context);\n}\n","/* eslint-disable @typescript-eslint/no-use-before-define */\nimport type {AnyObject} from '../types/basic.js';\nimport type {ChartMeta} from '../types/index.js';\nimport type {\n  ResolverObjectKey,\n  ResolverCache,\n  ResolverProxy,\n  DescriptorDefaults,\n  Descriptor,\n  ContextCache,\n  ContextProxy\n} from './helpers.config.types.js';\nimport {isArray, isFunction, isObject, resolveObjectKey, _capitalize} from './helpers.core.js';\n\nexport * from './helpers.config.types.js';\n\n/**\n * Creates a Proxy for resolving raw values for options.\n * @param scopes - The option scopes to look for values, in resolution order\n * @param prefixes - The prefixes for values, in resolution order.\n * @param rootScopes - The root option scopes\n * @param fallback - Parent scopes fallback\n * @param getTarget - callback for getting the target for changed values\n * @returns Proxy\n * @private\n */\nexport function _createResolver<\n  T extends AnyObject[] = AnyObject[],\n  R extends AnyObject[] = T\n>(\n  scopes: T,\n  prefixes = [''],\n  rootScopes?: R,\n  fallback?: ResolverObjectKey,\n  getTarget = () => scopes[0]\n) {\n  const finalRootScopes = rootScopes || scopes;\n  if (typeof fallback === 'undefined') {\n    fallback = _resolve('_fallback', scopes);\n  }\n  const cache: ResolverCache<T, R> = {\n    [Symbol.toStringTag]: 'Object',\n    _cacheable: true,\n    _scopes: scopes,\n    _rootScopes: finalRootScopes,\n    _fallback: fallback,\n    _getTarget: getTarget,\n    override: (scope: AnyObject) => _createResolver([scope, ...scopes], prefixes, finalRootScopes, fallback),\n  };\n  return new Proxy(cache, {\n    /**\n     * A trap for the delete operator.\n     */\n    deleteProperty(target, prop: string) {\n      delete target[prop]; // remove from cache\n      delete target._keys; // remove cached keys\n      delete scopes[0][prop]; // remove from top level scope\n      return true;\n    },\n\n    /**\n     * A trap for getting property values.\n     */\n    get(target, prop: string) {\n      return _cached(target, prop,\n        () => _resolveWithPrefixes(prop, prefixes, scopes, target));\n    },\n\n    /**\n     * A trap for Object.getOwnPropertyDescriptor.\n     * Also used by Object.hasOwnProperty.\n     */\n    getOwnPropertyDescriptor(target, prop) {\n      return Reflect.getOwnPropertyDescriptor(target._scopes[0], prop);\n    },\n\n    /**\n     * A trap for Object.getPrototypeOf.\n     */\n    getPrototypeOf() {\n      return Reflect.getPrototypeOf(scopes[0]);\n    },\n\n    /**\n     * A trap for the in operator.\n     */\n    has(target, prop: string) {\n      return getKeysFromAllScopes(target).includes(prop);\n    },\n\n    /**\n     * A trap for Object.getOwnPropertyNames and Object.getOwnPropertySymbols.\n     */\n    ownKeys(target) {\n      return getKeysFromAllScopes(target);\n    },\n\n    /**\n     * A trap for setting property values.\n     */\n    set(target, prop: string, value) {\n      const storage = target._storage || (target._storage = getTarget());\n      target[prop] = storage[prop] = value; // set to top level scope + cache\n      delete target._keys; // remove cached keys\n      return true;\n    }\n  }) as ResolverProxy<T, R>;\n}\n\n/**\n * Returns an Proxy for resolving option values with context.\n * @param proxy - The Proxy returned by `_createResolver`\n * @param context - Context object for scriptable/indexable options\n * @param subProxy - The proxy provided for scriptable options\n * @param descriptorDefaults - Defaults for descriptors\n * @private\n */\nexport function _attachContext<\n  T extends AnyObject[] = AnyObject[],\n  R extends AnyObject[] = T\n>(\n  proxy: ResolverProxy<T, R>,\n  context: AnyObject,\n  subProxy?: ResolverProxy<T, R>,\n  descriptorDefaults?: DescriptorDefaults\n) {\n  const cache: ContextCache<T, R> = {\n    _cacheable: false,\n    _proxy: proxy,\n    _context: context,\n    _subProxy: subProxy,\n    _stack: new Set(),\n    _descriptors: _descriptors(proxy, descriptorDefaults),\n    setContext: (ctx: AnyObject) => _attachContext(proxy, ctx, subProxy, descriptorDefaults),\n    override: (scope: AnyObject) => _attachContext(proxy.override(scope), context, subProxy, descriptorDefaults)\n  };\n  return new Proxy(cache, {\n    /**\n     * A trap for the delete operator.\n     */\n    deleteProperty(target, prop) {\n      delete target[prop]; // remove from cache\n      delete proxy[prop]; // remove from proxy\n      return true;\n    },\n\n    /**\n     * A trap for getting property values.\n     */\n    get(target, prop: string, receiver) {\n      return _cached(target, prop,\n        () => _resolveWithContext(target, prop, receiver));\n    },\n\n    /**\n     * A trap for Object.getOwnPropertyDescriptor.\n     * Also used by Object.hasOwnProperty.\n     */\n    getOwnPropertyDescriptor(target, prop) {\n      return target._descriptors.allKeys\n        ? Reflect.has(proxy, prop) ? {enumerable: true, configurable: true} : undefined\n        : Reflect.getOwnPropertyDescriptor(proxy, prop);\n    },\n\n    /**\n     * A trap for Object.getPrototypeOf.\n     */\n    getPrototypeOf() {\n      return Reflect.getPrototypeOf(proxy);\n    },\n\n    /**\n     * A trap for the in operator.\n     */\n    has(target, prop) {\n      return Reflect.has(proxy, prop);\n    },\n\n    /**\n     * A trap for Object.getOwnPropertyNames and Object.getOwnPropertySymbols.\n     */\n    ownKeys() {\n      return Reflect.ownKeys(proxy);\n    },\n\n    /**\n     * A trap for setting property values.\n     */\n    set(target, prop, value) {\n      proxy[prop] = value; // set to proxy\n      delete target[prop]; // remove from cache\n      return true;\n    }\n  }) as ContextProxy<T, R>;\n}\n\n/**\n * @private\n */\nexport function _descriptors(\n  proxy: ResolverCache,\n  defaults: DescriptorDefaults = {scriptable: true, indexable: true}\n): Descriptor {\n  const {_scriptable = defaults.scriptable, _indexable = defaults.indexable, _allKeys = defaults.allKeys} = proxy;\n  return {\n    allKeys: _allKeys,\n    scriptable: _scriptable,\n    indexable: _indexable,\n    isScriptable: isFunction(_scriptable) ? _scriptable : () => _scriptable,\n    isIndexable: isFunction(_indexable) ? _indexable : () => _indexable\n  };\n}\n\nconst readKey = (prefix: string, name: string) => prefix ? prefix + _capitalize(name) : name;\nconst needsSubResolver = (prop: string, value: unknown) => isObject(value) && prop !== 'adapters' &&\n  (Object.getPrototypeOf(value) === null || value.constructor === Object);\n\nfunction _cached(\n  target: AnyObject,\n  prop: string,\n  resolve: () => unknown\n) {\n  if (Object.prototype.hasOwnProperty.call(target, prop) || prop === 'constructor') {\n    return target[prop];\n  }\n\n  const value = resolve();\n  // cache the resolved value\n  target[prop] = value;\n  return value;\n}\n\nfunction _resolveWithContext(\n  target: ContextCache,\n  prop: string,\n  receiver: AnyObject\n) {\n  const {_proxy, _context, _subProxy, _descriptors: descriptors} = target;\n  let value = _proxy[prop]; // resolve from proxy\n\n  // resolve with context\n  if (isFunction(value) && descriptors.isScriptable(prop)) {\n    value = _resolveScriptable(prop, value, target, receiver);\n  }\n  if (isArray(value) && value.length) {\n    value = _resolveArray(prop, value, target, descriptors.isIndexable);\n  }\n  if (needsSubResolver(prop, value)) {\n    // if the resolved value is an object, create a sub resolver for it\n    value = _attachContext(value, _context, _subProxy && _subProxy[prop], descriptors);\n  }\n  return value;\n}\n\nfunction _resolveScriptable(\n  prop: string,\n  getValue: (ctx: AnyObject, sub: AnyObject) => unknown,\n  target: ContextCache,\n  receiver: AnyObject\n) {\n  const {_proxy, _context, _subProxy, _stack} = target;\n  if (_stack.has(prop)) {\n    throw new Error('Recursion detected: ' + Array.from(_stack).join('->') + '->' + prop);\n  }\n  _stack.add(prop);\n  let value = getValue(_context, _subProxy || receiver);\n  _stack.delete(prop);\n  if (needsSubResolver(prop, value)) {\n    // When scriptable option returns an object, create a resolver on that.\n    value = createSubResolver(_proxy._scopes, _proxy, prop, value);\n  }\n  return value;\n}\n\nfunction _resolveArray(\n  prop: string,\n  value: unknown[],\n  target: ContextCache,\n  isIndexable: (key: string) => boolean\n) {\n  const {_proxy, _context, _subProxy, _descriptors: descriptors} = target;\n\n  if (typeof _context.index !== 'undefined' && isIndexable(prop)) {\n    return value[_context.index % value.length];\n  } else if (isObject(value[0])) {\n    // Array of objects, return array or resolvers\n    const arr = value;\n    const scopes = _proxy._scopes.filter(s => s !== arr);\n    value = [];\n    for (const item of arr) {\n      const resolver = createSubResolver(scopes, _proxy, prop, item);\n      value.push(_attachContext(resolver, _context, _subProxy && _subProxy[prop], descriptors));\n    }\n  }\n  return value;\n}\n\nfunction resolveFallback(\n  fallback: ResolverObjectKey | ((prop: ResolverObjectKey, value: unknown) => ResolverObjectKey),\n  prop: ResolverObjectKey,\n  value: unknown\n) {\n  return isFunction(fallback) ? fallback(prop, value) : fallback;\n}\n\nconst getScope = (key: ResolverObjectKey, parent: AnyObject) => key === true ? parent\n  : typeof key === 'string' ? resolveObjectKey(parent, key) : undefined;\n\nfunction addScopes(\n  set: Set<AnyObject>,\n  parentScopes: AnyObject[],\n  key: ResolverObjectKey,\n  parentFallback: ResolverObjectKey,\n  value: unknown\n) {\n  for (const parent of parentScopes) {\n    const scope = getScope(key, parent);\n    if (scope) {\n      set.add(scope);\n      const fallback = resolveFallback(scope._fallback, key, value);\n      if (typeof fallback !== 'undefined' && fallback !== key && fallback !== parentFallback) {\n        // When we reach the descriptor that defines a new _fallback, return that.\n        // The fallback will resume to that new scope.\n        return fallback;\n      }\n    } else if (scope === false && typeof parentFallback !== 'undefined' && key !== parentFallback) {\n      // Fallback to `false` results to `false`, when falling back to different key.\n      // For example `interaction` from `hover` or `plugins.tooltip` and `animation` from `animations`\n      return null;\n    }\n  }\n  return false;\n}\n\nfunction createSubResolver(\n  parentScopes: AnyObject[],\n  resolver: ResolverCache,\n  prop: ResolverObjectKey,\n  value: unknown\n) {\n  const rootScopes = resolver._rootScopes;\n  const fallback = resolveFallback(resolver._fallback, prop, value);\n  const allScopes = [...parentScopes, ...rootScopes];\n  const set = new Set<AnyObject>();\n  set.add(value);\n  let key = addScopesFromKey(set, allScopes, prop, fallback || prop, value);\n  if (key === null) {\n    return false;\n  }\n  if (typeof fallback !== 'undefined' && fallback !== prop) {\n    key = addScopesFromKey(set, allScopes, fallback, key, value);\n    if (key === null) {\n      return false;\n    }\n  }\n  return _createResolver(Array.from(set), [''], rootScopes, fallback,\n    () => subGetTarget(resolver, prop as string, value));\n}\n\nfunction addScopesFromKey(\n  set: Set<AnyObject>,\n  allScopes: AnyObject[],\n  key: ResolverObjectKey,\n  fallback: ResolverObjectKey,\n  item: unknown\n) {\n  while (key) {\n    key = addScopes(set, allScopes, key, fallback, item);\n  }\n  return key;\n}\n\nfunction subGetTarget(\n  resolver: ResolverCache,\n  prop: string,\n  value: unknown\n) {\n  const parent = resolver._getTarget();\n  if (!(prop in parent)) {\n    parent[prop] = {};\n  }\n  const target = parent[prop];\n  if (isArray(target) && isObject(value)) {\n    // For array of objects, the object is used to store updated values\n    return value;\n  }\n  return target || {};\n}\n\nfunction _resolveWithPrefixes(\n  prop: string,\n  prefixes: string[],\n  scopes: AnyObject[],\n  proxy: ResolverProxy\n) {\n  let value: unknown;\n  for (const prefix of prefixes) {\n    value = _resolve(readKey(prefix, prop), scopes);\n    if (typeof value !== 'undefined') {\n      return needsSubResolver(prop, value)\n        ? createSubResolver(scopes, proxy, prop, value)\n        : value;\n    }\n  }\n}\n\nfunction _resolve(key: string, scopes: AnyObject[]) {\n  for (const scope of scopes) {\n    if (!scope) {\n      continue;\n    }\n    const value = scope[key];\n    if (typeof value !== 'undefined') {\n      return value;\n    }\n  }\n}\n\nfunction getKeysFromAllScopes(target: ResolverCache) {\n  let keys = target._keys;\n  if (!keys) {\n    keys = target._keys = resolveKeysFromAllScopes(target._scopes);\n  }\n  return keys;\n}\n\nfunction resolveKeysFromAllScopes(scopes: AnyObject[]) {\n  const set = new Set<string>();\n  for (const scope of scopes) {\n    for (const key of Object.keys(scope).filter(k => !k.startsWith('_'))) {\n      set.add(key);\n    }\n  }\n  return Array.from(set);\n}\n\nexport function _parseObjectDataRadialScale(\n  meta: ChartMeta<'line' | 'scatter'>,\n  data: AnyObject[],\n  start: number,\n  count: number\n) {\n  const {iScale} = meta;\n  const {key = 'r'} = this._parsing;\n  const parsed = new Array<{r: unknown}>(count);\n  let i: number, ilen: number, index: number, item: AnyObject;\n\n  for (i = 0, ilen = count; i < ilen; ++i) {\n    index = i + start;\n    item = data[index];\n    parsed[i] = {\n      r: iScale.parse(resolveObjectKey(item, key), index)\n    };\n  }\n  return parsed;\n}\n","import {almostEquals, distanceBetweenPoints, sign} from './helpers.math.js';\nimport {_isPointInArea} from './helpers.canvas.js';\nimport type {ChartArea} from '../types/index.js';\nimport type {SplinePoint} from '../types/geometric.js';\n\nconst EPSILON = Number.EPSILON || 1e-14;\n\ntype OptionalSplinePoint = SplinePoint | false\nconst getPoint = (points: SplinePoint[], i: number): OptionalSplinePoint => i < points.length && !points[i].skip && points[i];\nconst getValueAxis = (indexAxis: 'x' | 'y') => indexAxis === 'x' ? 'y' : 'x';\n\nexport function splineCurve(\n  firstPoint: SplinePoint,\n  middlePoint: SplinePoint,\n  afterPoint: SplinePoint,\n  t: number\n): {\n    previous: SplinePoint\n    next: SplinePoint\n  } {\n  // Props to Rob Spencer at scaled innovation for his post on splining between points\n  // http://scaledinnovation.com/analytics/splines/aboutSplines.html\n\n  // This function must also respect \"skipped\" points\n\n  const previous = firstPoint.skip ? middlePoint : firstPoint;\n  const current = middlePoint;\n  const next = afterPoint.skip ? middlePoint : afterPoint;\n  const d01 = distanceBetweenPoints(current, previous);\n  const d12 = distanceBetweenPoints(next, current);\n\n  let s01 = d01 / (d01 + d12);\n  let s12 = d12 / (d01 + d12);\n\n  // If all points are the same, s01 & s02 will be inf\n  s01 = isNaN(s01) ? 0 : s01;\n  s12 = isNaN(s12) ? 0 : s12;\n\n  const fa = t * s01; // scaling factor for triangle Ta\n  const fb = t * s12;\n\n  return {\n    previous: {\n      x: current.x - fa * (next.x - previous.x),\n      y: current.y - fa * (next.y - previous.y)\n    },\n    next: {\n      x: current.x + fb * (next.x - previous.x),\n      y: current.y + fb * (next.y - previous.y)\n    }\n  };\n}\n\n/**\n * Adjust tangents to ensure monotonic properties\n */\nfunction monotoneAdjust(points: SplinePoint[], deltaK: number[], mK: number[]) {\n  const pointsLen = points.length;\n\n  let alphaK: number, betaK: number, tauK: number, squaredMagnitude: number, pointCurrent: OptionalSplinePoint;\n  let pointAfter = getPoint(points, 0);\n  for (let i = 0; i < pointsLen - 1; ++i) {\n    pointCurrent = pointAfter;\n    pointAfter = getPoint(points, i + 1);\n    if (!pointCurrent || !pointAfter) {\n      continue;\n    }\n\n    if (almostEquals(deltaK[i], 0, EPSILON)) {\n      mK[i] = mK[i + 1] = 0;\n      continue;\n    }\n\n    alphaK = mK[i] / deltaK[i];\n    betaK = mK[i + 1] / deltaK[i];\n    squaredMagnitude = Math.pow(alphaK, 2) + Math.pow(betaK, 2);\n    if (squaredMagnitude <= 9) {\n      continue;\n    }\n\n    tauK = 3 / Math.sqrt(squaredMagnitude);\n    mK[i] = alphaK * tauK * deltaK[i];\n    mK[i + 1] = betaK * tauK * deltaK[i];\n  }\n}\n\nfunction monotoneCompute(points: SplinePoint[], mK: number[], indexAxis: 'x' | 'y' = 'x') {\n  const valueAxis = getValueAxis(indexAxis);\n  const pointsLen = points.length;\n  let delta: number, pointBefore: OptionalSplinePoint, pointCurrent: OptionalSplinePoint;\n  let pointAfter = getPoint(points, 0);\n\n  for (let i = 0; i < pointsLen; ++i) {\n    pointBefore = pointCurrent;\n    pointCurrent = pointAfter;\n    pointAfter = getPoint(points, i + 1);\n    if (!pointCurrent) {\n      continue;\n    }\n\n    const iPixel = pointCurrent[indexAxis];\n    const vPixel = pointCurrent[valueAxis];\n    if (pointBefore) {\n      delta = (iPixel - pointBefore[indexAxis]) / 3;\n      pointCurrent[`cp1${indexAxis}`] = iPixel - delta;\n      pointCurrent[`cp1${valueAxis}`] = vPixel - delta * mK[i];\n    }\n    if (pointAfter) {\n      delta = (pointAfter[indexAxis] - iPixel) / 3;\n      pointCurrent[`cp2${indexAxis}`] = iPixel + delta;\n      pointCurrent[`cp2${valueAxis}`] = vPixel + delta * mK[i];\n    }\n  }\n}\n\n/**\n * This function calculates Bézier control points in a similar way than |splineCurve|,\n * but preserves monotonicity of the provided data and ensures no local extremums are added\n * between the dataset discrete points due to the interpolation.\n * See : https://en.wikipedia.org/wiki/Monotone_cubic_interpolation\n */\nexport function splineCurveMonotone(points: SplinePoint[], indexAxis: 'x' | 'y' = 'x') {\n  const valueAxis = getValueAxis(indexAxis);\n  const pointsLen = points.length;\n  const deltaK: number[] = Array(pointsLen).fill(0);\n  const mK: number[] = Array(pointsLen);\n\n  // Calculate slopes (deltaK) and initialize tangents (mK)\n  let i, pointBefore: OptionalSplinePoint, pointCurrent: OptionalSplinePoint;\n  let pointAfter = getPoint(points, 0);\n\n  for (i = 0; i < pointsLen; ++i) {\n    pointBefore = pointCurrent;\n    pointCurrent = pointAfter;\n    pointAfter = getPoint(points, i + 1);\n    if (!pointCurrent) {\n      continue;\n    }\n\n    if (pointAfter) {\n      const slopeDelta = pointAfter[indexAxis] - pointCurrent[indexAxis];\n\n      // In the case of two points that appear at the same x pixel, slopeDeltaX is 0\n      deltaK[i] = slopeDelta !== 0 ? (pointAfter[valueAxis] - pointCurrent[valueAxis]) / slopeDelta : 0;\n    }\n    mK[i] = !pointBefore ? deltaK[i]\n      : !pointAfter ? deltaK[i - 1]\n        : (sign(deltaK[i - 1]) !== sign(deltaK[i])) ? 0\n          : (deltaK[i - 1] + deltaK[i]) / 2;\n  }\n\n  monotoneAdjust(points, deltaK, mK);\n\n  monotoneCompute(points, mK, indexAxis);\n}\n\nfunction capControlPoint(pt: number, min: number, max: number) {\n  return Math.max(Math.min(pt, max), min);\n}\n\nfunction capBezierPoints(points: SplinePoint[], area: ChartArea) {\n  let i, ilen, point, inArea, inAreaPrev;\n  let inAreaNext = _isPointInArea(points[0], area);\n  for (i = 0, ilen = points.length; i < ilen; ++i) {\n    inAreaPrev = inArea;\n    inArea = inAreaNext;\n    inAreaNext = i < ilen - 1 && _isPointInArea(points[i + 1], area);\n    if (!inArea) {\n      continue;\n    }\n    point = points[i];\n    if (inAreaPrev) {\n      point.cp1x = capControlPoint(point.cp1x, area.left, area.right);\n      point.cp1y = capControlPoint(point.cp1y, area.top, area.bottom);\n    }\n    if (inAreaNext) {\n      point.cp2x = capControlPoint(point.cp2x, area.left, area.right);\n      point.cp2y = capControlPoint(point.cp2y, area.top, area.bottom);\n    }\n  }\n}\n\n/**\n * @private\n */\nexport function _updateBezierControlPoints(\n  points: SplinePoint[],\n  options,\n  area: ChartArea,\n  loop: boolean,\n  indexAxis: 'x' | 'y'\n) {\n  let i: number, ilen: number, point: SplinePoint, controlPoints: ReturnType<typeof splineCurve>;\n\n  // Only consider points that are drawn in case the spanGaps option is used\n  if (options.spanGaps) {\n    points = points.filter((pt) => !pt.skip);\n  }\n\n  if (options.cubicInterpolationMode === 'monotone') {\n    splineCurveMonotone(points, indexAxis);\n  } else {\n    let prev = loop ? points[points.length - 1] : points[0];\n    for (i = 0, ilen = points.length; i < ilen; ++i) {\n      point = points[i];\n      controlPoints = splineCurve(\n        prev,\n        point,\n        points[Math.min(i + 1, ilen - (loop ? 0 : 1)) % ilen],\n        options.tension\n      );\n      point.cp1x = controlPoints.previous.x;\n      point.cp1y = controlPoints.previous.y;\n      point.cp2x = controlPoints.next.x;\n      point.cp2y = controlPoints.next.y;\n      prev = point;\n    }\n  }\n\n  if (options.capBezierPoints) {\n    capBezierPoints(points, area);\n  }\n}\n","import type {ChartArea, Scale} from '../types/index.js';\nimport type Chart from '../core/core.controller.js';\nimport type {ChartEvent} from '../types.js';\nimport {INFINITY} from './helpers.math.js';\n\n/**\n * Note: typedefs are auto-exported, so use a made-up `dom` namespace where\n * necessary to avoid duplicates with `export * from './helpers`; see\n * https://github.com/microsoft/TypeScript/issues/46011\n * @typedef { import('../core/core.controller.js').default } dom.Chart\n * @typedef { import('../../types').ChartEvent } ChartEvent\n */\n\n/**\n * @private\n */\nexport function _isDomSupported(): boolean {\n  return typeof window !== 'undefined' && typeof document !== 'undefined';\n}\n\n/**\n * @private\n */\nexport function _getParentNode(domNode: HTMLCanvasElement): HTMLCanvasElement {\n  let parent = domNode.parentNode;\n  if (parent && parent.toString() === '[object ShadowRoot]') {\n    parent = (parent as ShadowRoot).host;\n  }\n  return parent as HTMLCanvasElement;\n}\n\n/**\n * convert max-width/max-height values that may be percentages into a number\n * @private\n */\n\nfunction parseMaxStyle(styleValue: string | number, node: HTMLElement, parentProperty: string) {\n  let valueInPixels: number;\n  if (typeof styleValue === 'string') {\n    valueInPixels = parseInt(styleValue, 10);\n\n    if (styleValue.indexOf('%') !== -1) {\n      // percentage * size in dimension\n      valueInPixels = (valueInPixels / 100) * node.parentNode[parentProperty];\n    }\n  } else {\n    valueInPixels = styleValue;\n  }\n\n  return valueInPixels;\n}\n\nconst getComputedStyle = (element: HTMLElement): CSSStyleDeclaration =>\n  element.ownerDocument.defaultView.getComputedStyle(element, null);\n\nexport function getStyle(el: HTMLElement, property: string): string {\n  return getComputedStyle(el).getPropertyValue(property);\n}\n\nconst positions = ['top', 'right', 'bottom', 'left'];\nfunction getPositionedStyle(styles: CSSStyleDeclaration, style: string, suffix?: string): ChartArea {\n  const result = {} as ChartArea;\n  suffix = suffix ? '-' + suffix : '';\n  for (let i = 0; i < 4; i++) {\n    const pos = positions[i];\n    result[pos] = parseFloat(styles[style + '-' + pos + suffix]) || 0;\n  }\n  result.width = result.left + result.right;\n  result.height = result.top + result.bottom;\n  return result;\n}\n\nconst useOffsetPos = (x: number, y: number, target: HTMLElement | EventTarget) =>\n  (x > 0 || y > 0) && (!target || !(target as HTMLElement).shadowRoot);\n\n/**\n * @param e\n * @param canvas\n * @returns Canvas position\n */\nfunction getCanvasPosition(\n  e: Event | TouchEvent | MouseEvent,\n  canvas: HTMLCanvasElement\n): {\n    x: number;\n    y: number;\n    box: boolean;\n  } {\n  const touches = (e as TouchEvent).touches;\n  const source = (touches && touches.length ? touches[0] : e) as MouseEvent;\n  const {offsetX, offsetY} = source as MouseEvent;\n  let box = false;\n  let x, y;\n  if (useOffsetPos(offsetX, offsetY, e.target)) {\n    x = offsetX;\n    y = offsetY;\n  } else {\n    const rect = canvas.getBoundingClientRect();\n    x = source.clientX - rect.left;\n    y = source.clientY - rect.top;\n    box = true;\n  }\n  return {x, y, box};\n}\n\n/**\n * Gets an event's x, y coordinates, relative to the chart area\n * @param event\n * @param chart\n * @returns x and y coordinates of the event\n */\n\nexport function getRelativePosition(\n  event: Event | ChartEvent | TouchEvent | MouseEvent,\n  chart: Chart\n): { x: number; y: number } {\n  if ('native' in event) {\n    return event;\n  }\n\n  const {canvas, currentDevicePixelRatio} = chart;\n  const style = getComputedStyle(canvas);\n  const borderBox = style.boxSizing === 'border-box';\n  const paddings = getPositionedStyle(style, 'padding');\n  const borders = getPositionedStyle(style, 'border', 'width');\n  const {x, y, box} = getCanvasPosition(event, canvas);\n  const xOffset = paddings.left + (box && borders.left);\n  const yOffset = paddings.top + (box && borders.top);\n\n  let {width, height} = chart;\n  if (borderBox) {\n    width -= paddings.width + borders.width;\n    height -= paddings.height + borders.height;\n  }\n  return {\n    x: Math.round((x - xOffset) / width * canvas.width / currentDevicePixelRatio),\n    y: Math.round((y - yOffset) / height * canvas.height / currentDevicePixelRatio)\n  };\n}\n\nfunction getContainerSize(canvas: HTMLCanvasElement, width: number, height: number): Partial<Scale> {\n  let maxWidth: number, maxHeight: number;\n\n  if (width === undefined || height === undefined) {\n    const container = canvas && _getParentNode(canvas);\n    if (!container) {\n      width = canvas.clientWidth;\n      height = canvas.clientHeight;\n    } else {\n      const rect = container.getBoundingClientRect(); // this is the border box of the container\n      const containerStyle = getComputedStyle(container);\n      const containerBorder = getPositionedStyle(containerStyle, 'border', 'width');\n      const containerPadding = getPositionedStyle(containerStyle, 'padding');\n      width = rect.width - containerPadding.width - containerBorder.width;\n      height = rect.height - containerPadding.height - containerBorder.height;\n      maxWidth = parseMaxStyle(containerStyle.maxWidth, container, 'clientWidth');\n      maxHeight = parseMaxStyle(containerStyle.maxHeight, container, 'clientHeight');\n    }\n  }\n  return {\n    width,\n    height,\n    maxWidth: maxWidth || INFINITY,\n    maxHeight: maxHeight || INFINITY\n  };\n}\n\nconst round1 = (v: number) => Math.round(v * 10) / 10;\n\n// eslint-disable-next-line complexity\nexport function getMaximumSize(\n  canvas: HTMLCanvasElement,\n  bbWidth?: number,\n  bbHeight?: number,\n  aspectRatio?: number\n): { width: number; height: number } {\n  const style = getComputedStyle(canvas);\n  const margins = getPositionedStyle(style, 'margin');\n  const maxWidth = parseMaxStyle(style.maxWidth, canvas, 'clientWidth') || INFINITY;\n  const maxHeight = parseMaxStyle(style.maxHeight, canvas, 'clientHeight') || INFINITY;\n  const containerSize = getContainerSize(canvas, bbWidth, bbHeight);\n  let {width, height} = containerSize;\n\n  if (style.boxSizing === 'content-box') {\n    const borders = getPositionedStyle(style, 'border', 'width');\n    const paddings = getPositionedStyle(style, 'padding');\n    width -= paddings.width + borders.width;\n    height -= paddings.height + borders.height;\n  }\n  width = Math.max(0, width - margins.width);\n  height = Math.max(0, aspectRatio ? width / aspectRatio : height - margins.height);\n  width = round1(Math.min(width, maxWidth, containerSize.maxWidth));\n  height = round1(Math.min(height, maxHeight, containerSize.maxHeight));\n  if (width && !height) {\n    // https://github.com/chartjs/Chart.js/issues/4659\n    // If the canvas has width, but no height, default to aspectRatio of 2 (canvas default)\n    height = round1(width / 2);\n  }\n\n  const maintainHeight = bbWidth !== undefined || bbHeight !== undefined;\n\n  if (maintainHeight && aspectRatio && containerSize.height && height > containerSize.height) {\n    height = containerSize.height;\n    width = round1(Math.floor(height * aspectRatio));\n  }\n\n  return {width, height};\n}\n\n/**\n * @param chart\n * @param forceRatio\n * @param forceStyle\n * @returns True if the canvas context size or transformation has changed.\n */\nexport function retinaScale(\n  chart: Chart,\n  forceRatio: number,\n  forceStyle?: boolean\n): boolean | void {\n  const pixelRatio = forceRatio || 1;\n  const deviceHeight = Math.floor(chart.height * pixelRatio);\n  const deviceWidth = Math.floor(chart.width * pixelRatio);\n\n  chart.height = Math.floor(chart.height);\n  chart.width = Math.floor(chart.width);\n\n  const canvas = chart.canvas;\n\n  // If no style has been set on the canvas, the render size is used as display size,\n  // making the chart visually bigger, so let's enforce it to the \"correct\" values.\n  // See https://github.com/chartjs/Chart.js/issues/3575\n  if (canvas.style && (forceStyle || (!canvas.style.height && !canvas.style.width))) {\n    canvas.style.height = `${chart.height}px`;\n    canvas.style.width = `${chart.width}px`;\n  }\n\n  if (chart.currentDevicePixelRatio !== pixelRatio\n      || canvas.height !== deviceHeight\n      || canvas.width !== deviceWidth) {\n    chart.currentDevicePixelRatio = pixelRatio;\n    canvas.height = deviceHeight;\n    canvas.width = deviceWidth;\n    chart.ctx.setTransform(pixelRatio, 0, 0, pixelRatio, 0, 0);\n    return true;\n  }\n  return false;\n}\n\n/**\n * Detects support for options object argument in addEventListener.\n * https://developer.mozilla.org/en-US/docs/Web/API/EventTarget/addEventListener#Safely_detecting_option_support\n * @private\n */\nexport const supportsEventListenerOptions = (function() {\n  let passiveSupported = false;\n  try {\n    const options = {\n      get passive() { // This function will be called when the browser attempts to access the passive property.\n        passiveSupported = true;\n        return false;\n      }\n    } as EventListenerOptions;\n\n    if (_isDomSupported()) {\n      window.addEventListener('test', null, options);\n      window.removeEventListener('test', null, options);\n    }\n  } catch (e) {\n    // continue regardless of error\n  }\n  return passiveSupported;\n}());\n\n/**\n * The \"used\" size is the final value of a dimension property after all calculations have\n * been performed. This method uses the computed style of `element` but returns undefined\n * if the computed style is not expressed in pixels. That can happen in some cases where\n * `element` has a size relative to its parent and this last one is not yet displayed,\n * for example because of `display: none` on a parent node.\n * @see https://developer.mozilla.org/en-US/docs/Web/CSS/used_value\n * @returns Size in pixels or undefined if unknown.\n */\n\nexport function readUsedSize(\n  element: HTMLElement,\n  property: 'width' | 'height'\n): number | undefined {\n  const value = getStyle(element, property);\n  const matches = value && value.match(/^(\\d+)(\\.\\d+)?px$/);\n  return matches ? +matches[1] : undefined;\n}\n","import type {Point, SplinePoint} from '../types/geometric.js';\n\n/**\n * @private\n */\nexport function _pointInLine(p1: Point, p2: Point, t: number, mode?) { // eslint-disable-line @typescript-eslint/no-unused-vars\n  return {\n    x: p1.x + t * (p2.x - p1.x),\n    y: p1.y + t * (p2.y - p1.y)\n  };\n}\n\n/**\n * @private\n */\nexport function _steppedInterpolation(\n  p1: Point,\n  p2: Point,\n  t: number, mode: 'middle' | 'after' | unknown\n) {\n  return {\n    x: p1.x + t * (p2.x - p1.x),\n    y: mode === 'middle' ? t < 0.5 ? p1.y : p2.y\n      : mode === 'after' ? t < 1 ? p1.y : p2.y\n        : t > 0 ? p2.y : p1.y\n  };\n}\n\n/**\n * @private\n */\nexport function _bezierInterpolation(p1: SplinePoint, p2: SplinePoint, t: number, mode?) { // eslint-disable-line @typescript-eslint/no-unused-vars\n  const cp1 = {x: p1.cp2x, y: p1.cp2y};\n  const cp2 = {x: p2.cp1x, y: p2.cp1y};\n  const a = _pointInLine(p1, cp1, t);\n  const b = _pointInLine(cp1, cp2, t);\n  const c = _pointInLine(cp2, p2, t);\n  const d = _pointInLine(a, b, t);\n  const e = _pointInLine(b, c, t);\n  return _pointInLine(d, e, t);\n}\n","export interface RTLAdapter {\n  x(x: number): number;\n  setWidth(w: number): void;\n  textAlign(align: 'center' | 'left' | 'right'): 'center' | 'left' | 'right';\n  xPlus(x: number, value: number): number;\n  leftForLtr(x: number, itemWidth: number): number;\n}\n\nconst getRightToLeftAdapter = function(rectX: number, width: number): RTLAdapter {\n  return {\n    x(x) {\n      return rectX + rectX + width - x;\n    },\n    setWidth(w) {\n      width = w;\n    },\n    textAlign(align) {\n      if (align === 'center') {\n        return align;\n      }\n      return align === 'right' ? 'left' : 'right';\n    },\n    xPlus(x, value) {\n      return x - value;\n    },\n    leftForLtr(x, itemWidth) {\n      return x - itemWidth;\n    },\n  };\n};\n\nconst getLeftToRightAdapter = function(): RTLAdapter {\n  return {\n    x(x) {\n      return x;\n    },\n    setWidth(w) { // eslint-disable-line no-unused-vars\n    },\n    textAlign(align) {\n      return align;\n    },\n    xPlus(x, value) {\n      return x + value;\n    },\n    leftForLtr(x, _itemWidth) { // eslint-disable-line @typescript-eslint/no-unused-vars\n      return x;\n    },\n  };\n};\n\nexport function getRtlAdapter(rtl: boolean, rectX: number, width: number) {\n  return rtl ? getRightToLeftAdapter(rectX, width) : getLeftToRightAdapter();\n}\n\nexport function overrideTextDirection(ctx: CanvasRenderingContext2D, direction: 'ltr' | 'rtl') {\n  let style: CSSStyleDeclaration, original: [string, string];\n  if (direction === 'ltr' || direction === 'rtl') {\n    style = ctx.canvas.style;\n    original = [\n      style.getPropertyValue('direction'),\n      style.getPropertyPriority('direction'),\n    ];\n\n    style.setProperty('direction', direction, 'important');\n    (ctx as { prevTextDirection?: [string, string] }).prevTextDirection = original;\n  }\n}\n\nexport function restoreTextDirection(ctx: CanvasRenderingContext2D, original?: [string, string]) {\n  if (original !== undefined) {\n    delete (ctx as { prevTextDirection?: [string, string] }).prevTextDirection;\n    ctx.canvas.style.setProperty('direction', original[0], original[1]);\n  }\n}\n","import {_angleBetween, _angleDiff, _isBetween, _normalizeAngle} from './helpers.math.js';\nimport {createContext} from './helpers.options.js';\nimport {isPatternOrGradient} from './helpers.color.js';\n\n/**\n * @typedef { import('../elements/element.line.js').default } LineElement\n * @typedef { import('../elements/element.point.js').default } PointElement\n * @typedef {{start: number, end: number, loop: boolean, style?: any}} Segment\n */\n\nfunction propertyFn(property) {\n  if (property === 'angle') {\n    return {\n      between: _angleBetween,\n      compare: _angleDiff,\n      normalize: _normalizeAngle,\n    };\n  }\n  return {\n    between: _isBetween,\n    compare: (a, b) => a - b,\n    normalize: x => x\n  };\n}\n\nfunction normalizeSegment({start, end, count, loop, style}) {\n  return {\n    start: start % count,\n    end: end % count,\n    loop: loop && (end - start + 1) % count === 0,\n    style\n  };\n}\n\nfunction getSegment(segment, points, bounds) {\n  const {property, start: startBound, end: endBound} = bounds;\n  const {between, normalize} = propertyFn(property);\n  const count = points.length;\n  // eslint-disable-next-line prefer-const\n  let {start, end, loop} = segment;\n  let i, ilen;\n\n  if (loop) {\n    start += count;\n    end += count;\n    for (i = 0, ilen = count; i < ilen; ++i) {\n      if (!between(normalize(points[start % count][property]), startBound, endBound)) {\n        break;\n      }\n      start--;\n      end--;\n    }\n    start %= count;\n    end %= count;\n  }\n\n  if (end < start) {\n    end += count;\n  }\n  return {start, end, loop, style: segment.style};\n}\n\n/**\n * Returns the sub-segment(s) of a line segment that fall in the given bounds\n * @param {object} segment\n * @param {number} segment.start - start index of the segment, referring the points array\n * @param {number} segment.end - end index of the segment, referring the points array\n * @param {boolean} segment.loop - indicates that the segment is a loop\n * @param {object} [segment.style] - segment style\n * @param {PointElement[]} points - the points that this segment refers to\n * @param {object} [bounds]\n * @param {string} bounds.property - the property of a `PointElement` we are bounding. `x`, `y` or `angle`.\n * @param {number} bounds.start - start value of the property\n * @param {number} bounds.end - end value of the property\n * @private\n **/\nexport function _boundSegment(segment, points, bounds) {\n  if (!bounds) {\n    return [segment];\n  }\n\n  const {property, start: startBound, end: endBound} = bounds;\n  const count = points.length;\n  const {compare, between, normalize} = propertyFn(property);\n  const {start, end, loop, style} = getSegment(segment, points, bounds);\n\n  const result = [];\n  let inside = false;\n  let subStart = null;\n  let value, point, prevValue;\n\n  const startIsBefore = () => between(startBound, prevValue, value) && compare(startBound, prevValue) !== 0;\n  const endIsBefore = () => compare(endBound, value) === 0 || between(endBound, prevValue, value);\n  const shouldStart = () => inside || startIsBefore();\n  const shouldStop = () => !inside || endIsBefore();\n\n  for (let i = start, prev = start; i <= end; ++i) {\n    point = points[i % count];\n\n    if (point.skip) {\n      continue;\n    }\n\n    value = normalize(point[property]);\n\n    if (value === prevValue) {\n      continue;\n    }\n\n    inside = between(value, startBound, endBound);\n\n    if (subStart === null && shouldStart()) {\n      subStart = compare(value, startBound) === 0 ? i : prev;\n    }\n\n    if (subStart !== null && shouldStop()) {\n      result.push(normalizeSegment({start: subStart, end: i, loop, count, style}));\n      subStart = null;\n    }\n    prev = i;\n    prevValue = value;\n  }\n\n  if (subStart !== null) {\n    result.push(normalizeSegment({start: subStart, end, loop, count, style}));\n  }\n\n  return result;\n}\n\n\n/**\n * Returns the segments of the line that are inside given bounds\n * @param {LineElement} line\n * @param {object} [bounds]\n * @param {string} bounds.property - the property we are bounding with. `x`, `y` or `angle`.\n * @param {number} bounds.start - start value of the `property`\n * @param {number} bounds.end - end value of the `property`\n * @private\n */\nexport function _boundSegments(line, bounds) {\n  const result = [];\n  const segments = line.segments;\n\n  for (let i = 0; i < segments.length; i++) {\n    const sub = _boundSegment(segments[i], line.points, bounds);\n    if (sub.length) {\n      result.push(...sub);\n    }\n  }\n  return result;\n}\n\n/**\n * Find start and end index of a line.\n */\nfunction findStartAndEnd(points, count, loop, spanGaps) {\n  let start = 0;\n  let end = count - 1;\n\n  if (loop && !spanGaps) {\n    // loop and not spanning gaps, first find a gap to start from\n    while (start < count && !points[start].skip) {\n      start++;\n    }\n  }\n\n  // find first non skipped point (after the first gap possibly)\n  while (start < count && points[start].skip) {\n    start++;\n  }\n\n  // if we looped to count, start needs to be 0\n  start %= count;\n\n  if (loop) {\n    // loop will go past count, if start > 0\n    end += start;\n  }\n\n  while (end > start && points[end % count].skip) {\n    end--;\n  }\n\n  // end could be more than count, normalize\n  end %= count;\n\n  return {start, end};\n}\n\n/**\n * Compute solid segments from Points, when spanGaps === false\n * @param {PointElement[]} points - the points\n * @param {number} start - start index\n * @param {number} max - max index (can go past count on a loop)\n * @param {boolean} loop - boolean indicating that this would be a loop if no gaps are found\n */\nfunction solidSegments(points, start, max, loop) {\n  const count = points.length;\n  const result = [];\n  let last = start;\n  let prev = points[start];\n  let end;\n\n  for (end = start + 1; end <= max; ++end) {\n    const cur = points[end % count];\n    if (cur.skip || cur.stop) {\n      if (!prev.skip) {\n        loop = false;\n        result.push({start: start % count, end: (end - 1) % count, loop});\n        // @ts-ignore\n        start = last = cur.stop ? end : null;\n      }\n    } else {\n      last = end;\n      if (prev.skip) {\n        start = end;\n      }\n    }\n    prev = cur;\n  }\n\n  if (last !== null) {\n    result.push({start: start % count, end: last % count, loop});\n  }\n\n  return result;\n}\n\n/**\n * Compute the continuous segments that define the whole line\n * There can be skipped points within a segment, if spanGaps is true.\n * @param {LineElement} line\n * @param {object} [segmentOptions]\n * @return {Segment[]}\n * @private\n */\nexport function _computeSegments(line, segmentOptions) {\n  const points = line.points;\n  const spanGaps = line.options.spanGaps;\n  const count = points.length;\n\n  if (!count) {\n    return [];\n  }\n\n  const loop = !!line._loop;\n  const {start, end} = findStartAndEnd(points, count, loop, spanGaps);\n\n  if (spanGaps === true) {\n    return splitByStyles(line, [{start, end, loop}], points, segmentOptions);\n  }\n\n  const max = end < start ? end + count : end;\n  const completeLoop = !!line._fullLoop && start === 0 && end === count - 1;\n  return splitByStyles(line, solidSegments(points, start, max, completeLoop), points, segmentOptions);\n}\n\n/**\n * @param {Segment[]} segments\n * @param {PointElement[]} points\n * @param {object} [segmentOptions]\n * @return {Segment[]}\n */\nfunction splitByStyles(line, segments, points, segmentOptions) {\n  if (!segmentOptions || !segmentOptions.setContext || !points) {\n    return segments;\n  }\n  return doSplitByStyles(line, segments, points, segmentOptions);\n}\n\n/**\n * @param {LineElement} line\n * @param {Segment[]} segments\n * @param {PointElement[]} points\n * @param {object} [segmentOptions]\n * @return {Segment[]}\n */\nfunction doSplitByStyles(line, segments, points, segmentOptions) {\n  const chartContext = line._chart.getContext();\n  const baseStyle = readStyle(line.options);\n  const {_datasetIndex: datasetIndex, options: {spanGaps}} = line;\n  const count = points.length;\n  const result = [];\n  let prevStyle = baseStyle;\n  let start = segments[0].start;\n  let i = start;\n\n  function addStyle(s, e, l, st) {\n    const dir = spanGaps ? -1 : 1;\n    if (s === e) {\n      return;\n    }\n    // Style can not start/end on a skipped point, adjust indices accordingly\n    s += count;\n    while (points[s % count].skip) {\n      s -= dir;\n    }\n    while (points[e % count].skip) {\n      e += dir;\n    }\n    if (s % count !== e % count) {\n      result.push({start: s % count, end: e % count, loop: l, style: st});\n      prevStyle = st;\n      start = e % count;\n    }\n  }\n\n  for (const segment of segments) {\n    start = spanGaps ? start : segment.start;\n    let prev = points[start % count];\n    let style;\n    for (i = start + 1; i <= segment.end; i++) {\n      const pt = points[i % count];\n      style = readStyle(segmentOptions.setContext(createContext(chartContext, {\n        type: 'segment',\n        p0: prev,\n        p1: pt,\n        p0DataIndex: (i - 1) % count,\n        p1DataIndex: i % count,\n        datasetIndex\n      })));\n      if (styleChanged(style, prevStyle)) {\n        addStyle(start, i - 1, segment.loop, prevStyle);\n      }\n      prev = pt;\n      prevStyle = style;\n    }\n    if (start < i - 1) {\n      addStyle(start, i - 1, segment.loop, prevStyle);\n    }\n  }\n\n  return result;\n}\n\nfunction readStyle(options) {\n  return {\n    backgroundColor: options.backgroundColor,\n    borderCapStyle: options.borderCapStyle,\n    borderDash: options.borderDash,\n    borderDashOffset: options.borderDashOffset,\n    borderJoinStyle: options.borderJoinStyle,\n    borderWidth: options.borderWidth,\n    borderColor: options.borderColor\n  };\n}\n\nfunction styleChanged(style, prevStyle) {\n  if (!prevStyle) {\n    return false;\n  }\n  const cache = [];\n  const replacer = function(key, value) {\n    if (!isPatternOrGradient(value)) {\n      return value;\n    }\n    if (!cache.includes(value)) {\n      cache.push(value);\n    }\n    return cache.indexOf(value);\n  };\n  return JSON.stringify(style, replacer) !== JSON.stringify(prevStyle, replacer);\n}\n","/*!\n * @kurkle/color v0.3.2\n * https://github.com/kurkle/color#readme\n * (c) 2023 Jukka Kurkela\n * Released under the MIT License\n */\nfunction round(v) {\n  return v + 0.5 | 0;\n}\nconst lim = (v, l, h) => Math.max(Math.min(v, h), l);\nfunction p2b(v) {\n  return lim(round(v * 2.55), 0, 255);\n}\nfunction b2p(v) {\n  return lim(round(v / 2.55), 0, 100);\n}\nfunction n2b(v) {\n  return lim(round(v * 255), 0, 255);\n}\nfunction b2n(v) {\n  return lim(round(v / 2.55) / 100, 0, 1);\n}\nfunction n2p(v) {\n  return lim(round(v * 100), 0, 100);\n}\n\nconst map$1 = {0: 0, 1: 1, 2: 2, 3: 3, 4: 4, 5: 5, 6: 6, 7: 7, 8: 8, 9: 9, A: 10, B: 11, C: 12, D: 13, E: 14, F: 15, a: 10, b: 11, c: 12, d: 13, e: 14, f: 15};\nconst hex = [...'0123456789ABCDEF'];\nconst h1 = b => hex[b & 0xF];\nconst h2 = b => hex[(b & 0xF0) >> 4] + hex[b & 0xF];\nconst eq = b => ((b & 0xF0) >> 4) === (b & 0xF);\nconst isShort = v => eq(v.r) && eq(v.g) && eq(v.b) && eq(v.a);\nfunction hexParse(str) {\n  var len = str.length;\n  var ret;\n  if (str[0] === '#') {\n    if (len === 4 || len === 5) {\n      ret = {\n        r: 255 & map$1[str[1]] * 17,\n        g: 255 & map$1[str[2]] * 17,\n        b: 255 & map$1[str[3]] * 17,\n        a: len === 5 ? map$1[str[4]] * 17 : 255\n      };\n    } else if (len === 7 || len === 9) {\n      ret = {\n        r: map$1[str[1]] << 4 | map$1[str[2]],\n        g: map$1[str[3]] << 4 | map$1[str[4]],\n        b: map$1[str[5]] << 4 | map$1[str[6]],\n        a: len === 9 ? (map$1[str[7]] << 4 | map$1[str[8]]) : 255\n      };\n    }\n  }\n  return ret;\n}\nconst alpha = (a, f) => a < 255 ? f(a) : '';\nfunction hexString(v) {\n  var f = isShort(v) ? h1 : h2;\n  return v\n    ? '#' + f(v.r) + f(v.g) + f(v.b) + alpha(v.a, f)\n    : undefined;\n}\n\nconst HUE_RE = /^(hsla?|hwb|hsv)\\(\\s*([-+.e\\d]+)(?:deg)?[\\s,]+([-+.e\\d]+)%[\\s,]+([-+.e\\d]+)%(?:[\\s,]+([-+.e\\d]+)(%)?)?\\s*\\)$/;\nfunction hsl2rgbn(h, s, l) {\n  const a = s * Math.min(l, 1 - l);\n  const f = (n, k = (n + h / 30) % 12) => l - a * Math.max(Math.min(k - 3, 9 - k, 1), -1);\n  return [f(0), f(8), f(4)];\n}\nfunction hsv2rgbn(h, s, v) {\n  const f = (n, k = (n + h / 60) % 6) => v - v * s * Math.max(Math.min(k, 4 - k, 1), 0);\n  return [f(5), f(3), f(1)];\n}\nfunction hwb2rgbn(h, w, b) {\n  const rgb = hsl2rgbn(h, 1, 0.5);\n  let i;\n  if (w + b > 1) {\n    i = 1 / (w + b);\n    w *= i;\n    b *= i;\n  }\n  for (i = 0; i < 3; i++) {\n    rgb[i] *= 1 - w - b;\n    rgb[i] += w;\n  }\n  return rgb;\n}\nfunction hueValue(r, g, b, d, max) {\n  if (r === max) {\n    return ((g - b) / d) + (g < b ? 6 : 0);\n  }\n  if (g === max) {\n    return (b - r) / d + 2;\n  }\n  return (r - g) / d + 4;\n}\nfunction rgb2hsl(v) {\n  const range = 255;\n  const r = v.r / range;\n  const g = v.g / range;\n  const b = v.b / range;\n  const max = Math.max(r, g, b);\n  const min = Math.min(r, g, b);\n  const l = (max + min) / 2;\n  let h, s, d;\n  if (max !== min) {\n    d = max - min;\n    s = l > 0.5 ? d / (2 - max - min) : d / (max + min);\n    h = hueValue(r, g, b, d, max);\n    h = h * 60 + 0.5;\n  }\n  return [h | 0, s || 0, l];\n}\nfunction calln(f, a, b, c) {\n  return (\n    Array.isArray(a)\n      ? f(a[0], a[1], a[2])\n      : f(a, b, c)\n  ).map(n2b);\n}\nfunction hsl2rgb(h, s, l) {\n  return calln(hsl2rgbn, h, s, l);\n}\nfunction hwb2rgb(h, w, b) {\n  return calln(hwb2rgbn, h, w, b);\n}\nfunction hsv2rgb(h, s, v) {\n  return calln(hsv2rgbn, h, s, v);\n}\nfunction hue(h) {\n  return (h % 360 + 360) % 360;\n}\nfunction hueParse(str) {\n  const m = HUE_RE.exec(str);\n  let a = 255;\n  let v;\n  if (!m) {\n    return;\n  }\n  if (m[5] !== v) {\n    a = m[6] ? p2b(+m[5]) : n2b(+m[5]);\n  }\n  const h = hue(+m[2]);\n  const p1 = +m[3] / 100;\n  const p2 = +m[4] / 100;\n  if (m[1] === 'hwb') {\n    v = hwb2rgb(h, p1, p2);\n  } else if (m[1] === 'hsv') {\n    v = hsv2rgb(h, p1, p2);\n  } else {\n    v = hsl2rgb(h, p1, p2);\n  }\n  return {\n    r: v[0],\n    g: v[1],\n    b: v[2],\n    a: a\n  };\n}\nfunction rotate(v, deg) {\n  var h = rgb2hsl(v);\n  h[0] = hue(h[0] + deg);\n  h = hsl2rgb(h);\n  v.r = h[0];\n  v.g = h[1];\n  v.b = h[2];\n}\nfunction hslString(v) {\n  if (!v) {\n    return;\n  }\n  const a = rgb2hsl(v);\n  const h = a[0];\n  const s = n2p(a[1]);\n  const l = n2p(a[2]);\n  return v.a < 255\n    ? `hsla(${h}, ${s}%, ${l}%, ${b2n(v.a)})`\n    : `hsl(${h}, ${s}%, ${l}%)`;\n}\n\nconst map = {\n  x: 'dark',\n  Z: 'light',\n  Y: 're',\n  X: 'blu',\n  W: 'gr',\n  V: 'medium',\n  U: 'slate',\n  A: 'ee',\n  T: 'ol',\n  S: 'or',\n  B: 'ra',\n  C: 'lateg',\n  D: 'ights',\n  R: 'in',\n  Q: 'turquois',\n  E: 'hi',\n  P: 'ro',\n  O: 'al',\n  N: 'le',\n  M: 'de',\n  L: 'yello',\n  F: 'en',\n  K: 'ch',\n  G: 'arks',\n  H: 'ea',\n  I: 'ightg',\n  J: 'wh'\n};\nconst names$1 = {\n  OiceXe: 'f0f8ff',\n  antiquewEte: 'faebd7',\n  aqua: 'ffff',\n  aquamarRe: '7fffd4',\n  azuY: 'f0ffff',\n  beige: 'f5f5dc',\n  bisque: 'ffe4c4',\n  black: '0',\n  blanKedOmond: 'ffebcd',\n  Xe: 'ff',\n  XeviTet: '8a2be2',\n  bPwn: 'a52a2a',\n  burlywood: 'deb887',\n  caMtXe: '5f9ea0',\n  KartYuse: '7fff00',\n  KocTate: 'd2691e',\n  cSO: 'ff7f50',\n  cSnflowerXe: '6495ed',\n  cSnsilk: 'fff8dc',\n  crimson: 'dc143c',\n  cyan: 'ffff',\n  xXe: '8b',\n  xcyan: '8b8b',\n  xgTMnPd: 'b8860b',\n  xWay: 'a9a9a9',\n  xgYF: '6400',\n  xgYy: 'a9a9a9',\n  xkhaki: 'bdb76b',\n  xmagFta: '8b008b',\n  xTivegYF: '556b2f',\n  xSange: 'ff8c00',\n  xScEd: '9932cc',\n  xYd: '8b0000',\n  xsOmon: 'e9967a',\n  xsHgYF: '8fbc8f',\n  xUXe: '483d8b',\n  xUWay: '2f4f4f',\n  xUgYy: '2f4f4f',\n  xQe: 'ced1',\n  xviTet: '9400d3',\n  dAppRk: 'ff1493',\n  dApskyXe: 'bfff',\n  dimWay: '696969',\n  dimgYy: '696969',\n  dodgerXe: '1e90ff',\n  fiYbrick: 'b22222',\n  flSOwEte: 'fffaf0',\n  foYstWAn: '228b22',\n  fuKsia: 'ff00ff',\n  gaRsbSo: 'dcdcdc',\n  ghostwEte: 'f8f8ff',\n  gTd: 'ffd700',\n  gTMnPd: 'daa520',\n  Way: '808080',\n  gYF: '8000',\n  gYFLw: 'adff2f',\n  gYy: '808080',\n  honeyMw: 'f0fff0',\n  hotpRk: 'ff69b4',\n  RdianYd: 'cd5c5c',\n  Rdigo: '4b0082',\n  ivSy: 'fffff0',\n  khaki: 'f0e68c',\n  lavFMr: 'e6e6fa',\n  lavFMrXsh: 'fff0f5',\n  lawngYF: '7cfc00',\n  NmoncEffon: 'fffacd',\n  ZXe: 'add8e6',\n  ZcSO: 'f08080',\n  Zcyan: 'e0ffff',\n  ZgTMnPdLw: 'fafad2',\n  ZWay: 'd3d3d3',\n  ZgYF: '90ee90',\n  ZgYy: 'd3d3d3',\n  ZpRk: 'ffb6c1',\n  ZsOmon: 'ffa07a',\n  ZsHgYF: '20b2aa',\n  ZskyXe: '87cefa',\n  ZUWay: '778899',\n  ZUgYy: '778899',\n  ZstAlXe: 'b0c4de',\n  ZLw: 'ffffe0',\n  lime: 'ff00',\n  limegYF: '32cd32',\n  lRF: 'faf0e6',\n  magFta: 'ff00ff',\n  maPon: '800000',\n  VaquamarRe: '66cdaa',\n  VXe: 'cd',\n  VScEd: 'ba55d3',\n  VpurpN: '9370db',\n  VsHgYF: '3cb371',\n  VUXe: '7b68ee',\n  VsprRggYF: 'fa9a',\n  VQe: '48d1cc',\n  VviTetYd: 'c71585',\n  midnightXe: '191970',\n  mRtcYam: 'f5fffa',\n  mistyPse: 'ffe4e1',\n  moccasR: 'ffe4b5',\n  navajowEte: 'ffdead',\n  navy: '80',\n  Tdlace: 'fdf5e6',\n  Tive: '808000',\n  TivedBb: '6b8e23',\n  Sange: 'ffa500',\n  SangeYd: 'ff4500',\n  ScEd: 'da70d6',\n  pOegTMnPd: 'eee8aa',\n  pOegYF: '98fb98',\n  pOeQe: 'afeeee',\n  pOeviTetYd: 'db7093',\n  papayawEp: 'ffefd5',\n  pHKpuff: 'ffdab9',\n  peru: 'cd853f',\n  pRk: 'ffc0cb',\n  plum: 'dda0dd',\n  powMrXe: 'b0e0e6',\n  purpN: '800080',\n  YbeccapurpN: '663399',\n  Yd: 'ff0000',\n  Psybrown: 'bc8f8f',\n  PyOXe: '4169e1',\n  saddNbPwn: '8b4513',\n  sOmon: 'fa8072',\n  sandybPwn: 'f4a460',\n  sHgYF: '2e8b57',\n  sHshell: 'fff5ee',\n  siFna: 'a0522d',\n  silver: 'c0c0c0',\n  skyXe: '87ceeb',\n  UXe: '6a5acd',\n  UWay: '708090',\n  UgYy: '708090',\n  snow: 'fffafa',\n  sprRggYF: 'ff7f',\n  stAlXe: '4682b4',\n  tan: 'd2b48c',\n  teO: '8080',\n  tEstN: 'd8bfd8',\n  tomato: 'ff6347',\n  Qe: '40e0d0',\n  viTet: 'ee82ee',\n  JHt: 'f5deb3',\n  wEte: 'ffffff',\n  wEtesmoke: 'f5f5f5',\n  Lw: 'ffff00',\n  LwgYF: '9acd32'\n};\nfunction unpack() {\n  const unpacked = {};\n  const keys = Object.keys(names$1);\n  const tkeys = Object.keys(map);\n  let i, j, k, ok, nk;\n  for (i = 0; i < keys.length; i++) {\n    ok = nk = keys[i];\n    for (j = 0; j < tkeys.length; j++) {\n      k = tkeys[j];\n      nk = nk.replace(k, map[k]);\n    }\n    k = parseInt(names$1[ok], 16);\n    unpacked[nk] = [k >> 16 & 0xFF, k >> 8 & 0xFF, k & 0xFF];\n  }\n  return unpacked;\n}\n\nlet names;\nfunction nameParse(str) {\n  if (!names) {\n    names = unpack();\n    names.transparent = [0, 0, 0, 0];\n  }\n  const a = names[str.toLowerCase()];\n  return a && {\n    r: a[0],\n    g: a[1],\n    b: a[2],\n    a: a.length === 4 ? a[3] : 255\n  };\n}\n\nconst RGB_RE = /^rgba?\\(\\s*([-+.\\d]+)(%)?[\\s,]+([-+.e\\d]+)(%)?[\\s,]+([-+.e\\d]+)(%)?(?:[\\s,/]+([-+.e\\d]+)(%)?)?\\s*\\)$/;\nfunction rgbParse(str) {\n  const m = RGB_RE.exec(str);\n  let a = 255;\n  let r, g, b;\n  if (!m) {\n    return;\n  }\n  if (m[7] !== r) {\n    const v = +m[7];\n    a = m[8] ? p2b(v) : lim(v * 255, 0, 255);\n  }\n  r = +m[1];\n  g = +m[3];\n  b = +m[5];\n  r = 255 & (m[2] ? p2b(r) : lim(r, 0, 255));\n  g = 255 & (m[4] ? p2b(g) : lim(g, 0, 255));\n  b = 255 & (m[6] ? p2b(b) : lim(b, 0, 255));\n  return {\n    r: r,\n    g: g,\n    b: b,\n    a: a\n  };\n}\nfunction rgbString(v) {\n  return v && (\n    v.a < 255\n      ? `rgba(${v.r}, ${v.g}, ${v.b}, ${b2n(v.a)})`\n      : `rgb(${v.r}, ${v.g}, ${v.b})`\n  );\n}\n\nconst to = v => v <= 0.0031308 ? v * 12.92 : Math.pow(v, 1.0 / 2.4) * 1.055 - 0.055;\nconst from = v => v <= 0.04045 ? v / 12.92 : Math.pow((v + 0.055) / 1.055, 2.4);\nfunction interpolate(rgb1, rgb2, t) {\n  const r = from(b2n(rgb1.r));\n  const g = from(b2n(rgb1.g));\n  const b = from(b2n(rgb1.b));\n  return {\n    r: n2b(to(r + t * (from(b2n(rgb2.r)) - r))),\n    g: n2b(to(g + t * (from(b2n(rgb2.g)) - g))),\n    b: n2b(to(b + t * (from(b2n(rgb2.b)) - b))),\n    a: rgb1.a + t * (rgb2.a - rgb1.a)\n  };\n}\n\nfunction modHSL(v, i, ratio) {\n  if (v) {\n    let tmp = rgb2hsl(v);\n    tmp[i] = Math.max(0, Math.min(tmp[i] + tmp[i] * ratio, i === 0 ? 360 : 1));\n    tmp = hsl2rgb(tmp);\n    v.r = tmp[0];\n    v.g = tmp[1];\n    v.b = tmp[2];\n  }\n}\nfunction clone(v, proto) {\n  return v ? Object.assign(proto || {}, v) : v;\n}\nfunction fromObject(input) {\n  var v = {r: 0, g: 0, b: 0, a: 255};\n  if (Array.isArray(input)) {\n    if (input.length >= 3) {\n      v = {r: input[0], g: input[1], b: input[2], a: 255};\n      if (input.length > 3) {\n        v.a = n2b(input[3]);\n      }\n    }\n  } else {\n    v = clone(input, {r: 0, g: 0, b: 0, a: 1});\n    v.a = n2b(v.a);\n  }\n  return v;\n}\nfunction functionParse(str) {\n  if (str.charAt(0) === 'r') {\n    return rgbParse(str);\n  }\n  return hueParse(str);\n}\nclass Color {\n  constructor(input) {\n    if (input instanceof Color) {\n      return input;\n    }\n    const type = typeof input;\n    let v;\n    if (type === 'object') {\n      v = fromObject(input);\n    } else if (type === 'string') {\n      v = hexParse(input) || nameParse(input) || functionParse(input);\n    }\n    this._rgb = v;\n    this._valid = !!v;\n  }\n  get valid() {\n    return this._valid;\n  }\n  get rgb() {\n    var v = clone(this._rgb);\n    if (v) {\n      v.a = b2n(v.a);\n    }\n    return v;\n  }\n  set rgb(obj) {\n    this._rgb = fromObject(obj);\n  }\n  rgbString() {\n    return this._valid ? rgbString(this._rgb) : undefined;\n  }\n  hexString() {\n    return this._valid ? hexString(this._rgb) : undefined;\n  }\n  hslString() {\n    return this._valid ? hslString(this._rgb) : undefined;\n  }\n  mix(color, weight) {\n    if (color) {\n      const c1 = this.rgb;\n      const c2 = color.rgb;\n      let w2;\n      const p = weight === w2 ? 0.5 : weight;\n      const w = 2 * p - 1;\n      const a = c1.a - c2.a;\n      const w1 = ((w * a === -1 ? w : (w + a) / (1 + w * a)) + 1) / 2.0;\n      w2 = 1 - w1;\n      c1.r = 0xFF & w1 * c1.r + w2 * c2.r + 0.5;\n      c1.g = 0xFF & w1 * c1.g + w2 * c2.g + 0.5;\n      c1.b = 0xFF & w1 * c1.b + w2 * c2.b + 0.5;\n      c1.a = p * c1.a + (1 - p) * c2.a;\n      this.rgb = c1;\n    }\n    return this;\n  }\n  interpolate(color, t) {\n    if (color) {\n      this._rgb = interpolate(this._rgb, color._rgb, t);\n    }\n    return this;\n  }\n  clone() {\n    return new Color(this.rgb);\n  }\n  alpha(a) {\n    this._rgb.a = n2b(a);\n    return this;\n  }\n  clearer(ratio) {\n    const rgb = this._rgb;\n    rgb.a *= 1 - ratio;\n    return this;\n  }\n  greyscale() {\n    const rgb = this._rgb;\n    const val = round(rgb.r * 0.3 + rgb.g * 0.59 + rgb.b * 0.11);\n    rgb.r = rgb.g = rgb.b = val;\n    return this;\n  }\n  opaquer(ratio) {\n    const rgb = this._rgb;\n    rgb.a *= 1 + ratio;\n    return this;\n  }\n  negate() {\n    const v = this._rgb;\n    v.r = 255 - v.r;\n    v.g = 255 - v.g;\n    v.b = 255 - v.b;\n    return this;\n  }\n  lighten(ratio) {\n    modHSL(this._rgb, 2, ratio);\n    return this;\n  }\n  darken(ratio) {\n    modHSL(this._rgb, 2, -ratio);\n    return this;\n  }\n  saturate(ratio) {\n    modHSL(this._rgb, 1, ratio);\n    return this;\n  }\n  desaturate(ratio) {\n    modHSL(this._rgb, 1, -ratio);\n    return this;\n  }\n  rotate(deg) {\n    rotate(this._rgb, deg);\n    return this;\n  }\n}\n\nfunction index_esm(input) {\n  return new Color(input);\n}\n\nexport { Color, b2n, b2p, index_esm as default, hexParse, hexString, hsl2rgb, hslString, hsv2rgb, hueParse, hwb2rgb, lim, n2b, n2p, nameParse, p2b, rgb2hsl, rgbParse, rgbString, rotate, round };\n","/*!\n* chartjs-plugin-annotation v3.1.0\n* https://www.chartjs.org/chartjs-plugin-annotation/index\n * (c) 2024 chartjs-plugin-annotation Contributors\n * Released under the MIT License\n */\nimport { Element, DoughnutController, defaults, Animations, Chart } from 'chart.js';\nimport { distanceBetweenPoints, toRadians, isObject, valueOrDefault, defined, isFunction, callback, isArray, toFont, addRoundedRectPath, toTRBLCorners, QUARTER_PI, PI, HALF_PI, TWO_THIRDS_PI, TAU, isNumber, RAD_PER_DEG, toPadding, isFinite, getAngleFromPoint, toDegrees, clipArea, unclipArea } from 'chart.js/helpers';\n\n/**\n * @typedef { import(\"chart.js\").ChartEvent } ChartEvent\n * @typedef { import('../../types/element').AnnotationElement } AnnotationElement\n */\n\nconst interaction = {\n  modes: {\n    /**\n     * Point mode returns all elements that hit test based on the event position\n     * @param {AnnotationElement[]} visibleElements - annotation elements which are visible\n     * @param {ChartEvent} event - the event we are find things at\n     * @return {AnnotationElement[]} - elements that are found\n     */\n    point(visibleElements, event) {\n      return filterElements(visibleElements, event, {intersect: true});\n    },\n\n    /**\n     * Nearest mode returns the element closest to the event position\n     * @param {AnnotationElement[]} visibleElements - annotation elements which are visible\n     * @param {ChartEvent} event - the event we are find things at\n     * @param {Object} options - interaction options to use\n     * @return {AnnotationElement[]} - elements that are found (only 1 element)\n     */\n    nearest(visibleElements, event, options) {\n      return getNearestItem(visibleElements, event, options);\n    },\n    /**\n     * x mode returns the elements that hit-test at the current x coordinate\n     * @param {AnnotationElement[]} visibleElements - annotation elements which are visible\n     * @param {ChartEvent} event - the event we are find things at\n     * @param {Object} options - interaction options to use\n     * @return {AnnotationElement[]} - elements that are found\n     */\n    x(visibleElements, event, options) {\n      return filterElements(visibleElements, event, {intersect: options.intersect, axis: 'x'});\n    },\n\n    /**\n     * y mode returns the elements that hit-test at the current y coordinate\n     * @param {AnnotationElement[]} visibleElements - annotation elements which are visible\n     * @param {ChartEvent} event - the event we are find things at\n     * @param {Object} options - interaction options to use\n     * @return {AnnotationElement[]} - elements that are found\n     */\n    y(visibleElements, event, options) {\n      return filterElements(visibleElements, event, {intersect: options.intersect, axis: 'y'});\n    }\n  }\n};\n\n/**\n * Returns all elements that hit test based on the event position\n * @param {AnnotationElement[]} visibleElements - annotation elements which are visible\n * @param {ChartEvent} event - the event we are find things at\n * @param {Object} options - interaction options to use\n * @return {AnnotationElement[]} - elements that are found\n */\nfunction getElements(visibleElements, event, options) {\n  const mode = interaction.modes[options.mode] || interaction.modes.nearest;\n  return mode(visibleElements, event, options);\n}\n\nfunction inRangeByAxis(element, event, axis) {\n  if (axis !== 'x' && axis !== 'y') {\n    return element.inRange(event.x, event.y, 'x', true) || element.inRange(event.x, event.y, 'y', true);\n  }\n  return element.inRange(event.x, event.y, axis, true);\n}\n\nfunction getPointByAxis(event, center, axis) {\n  if (axis === 'x') {\n    return {x: event.x, y: center.y};\n  } else if (axis === 'y') {\n    return {x: center.x, y: event.y};\n  }\n  return center;\n}\n\nfunction filterElements(visibleElements, event, options) {\n  return visibleElements.filter((element) => options.intersect ? element.inRange(event.x, event.y) : inRangeByAxis(element, event, options.axis));\n}\n\nfunction getNearestItem(visibleElements, event, options) {\n  let minDistance = Number.POSITIVE_INFINITY;\n\n  return filterElements(visibleElements, event, options)\n    .reduce((nearestItems, element) => {\n      const center = element.getCenterPoint();\n      const evenPoint = getPointByAxis(event, center, options.axis);\n      const distance = distanceBetweenPoints(event, evenPoint);\n      if (distance < minDistance) {\n        nearestItems = [element];\n        minDistance = distance;\n      } else if (distance === minDistance) {\n        // Can have multiple items at the same distance in which case we sort by size\n        nearestItems.push(element);\n      }\n\n      return nearestItems;\n    }, [])\n    .sort((a, b) => a._index - b._index)\n    .slice(0, 1); // return only the top item;\n}\n\n/**\n * @typedef {import('chart.js').Point} Point\n */\n\n/**\n * Rotate a `point` relative to `center` point by `angle`\n * @param {Point} point - the point to rotate\n * @param {Point} center - center point for rotation\n * @param {number} angle - angle for rotation, in radians\n * @returns {Point} rotated point\n */\nfunction rotated(point, center, angle) {\n  const cos = Math.cos(angle);\n  const sin = Math.sin(angle);\n  const cx = center.x;\n  const cy = center.y;\n\n  return {\n    x: cx + cos * (point.x - cx) - sin * (point.y - cy),\n    y: cy + sin * (point.x - cx) + cos * (point.y - cy)\n  };\n}\n\nconst isOlderPart = (act, req) => req > act || (act.length > req.length && act.slice(0, req.length) === req);\n\n/**\n * @typedef { import('chart.js').Point } Point\n * @typedef { import('chart.js').InteractionAxis } InteractionAxis\n * @typedef { import('../../types/element').AnnotationElement } AnnotationElement\n */\n\nconst EPSILON = 0.001;\nconst clamp = (x, from, to) => Math.min(to, Math.max(from, x));\n\n/**\n * @param {{value: number, start: number, end: number}} limit\n * @param {number} hitSize\n * @returns {boolean}\n */\nconst inLimit = (limit, hitSize) => limit.value >= limit.start - hitSize && limit.value <= limit.end + hitSize;\n\n/**\n * @param {Object} obj\n * @param {number} from\n * @param {number} to\n * @returns {Object}\n */\nfunction clampAll(obj, from, to) {\n  for (const key of Object.keys(obj)) {\n    obj[key] = clamp(obj[key], from, to);\n  }\n  return obj;\n}\n\n/**\n * @param {Point} point\n * @param {Point} center\n * @param {number} radius\n * @param {number} hitSize\n * @returns {boolean}\n */\nfunction inPointRange(point, center, radius, hitSize) {\n  if (!point || !center || radius <= 0) {\n    return false;\n  }\n  return (Math.pow(point.x - center.x, 2) + Math.pow(point.y - center.y, 2)) <= Math.pow(radius + hitSize, 2);\n}\n\n/**\n * @param {Point} point\n * @param {{x: number, y: number, x2: number, y2: number}} rect\n * @param {InteractionAxis} axis\n * @param {{borderWidth: number, hitTolerance: number}} hitsize\n * @returns {boolean}\n */\nfunction inBoxRange(point, {x, y, x2, y2}, axis, {borderWidth, hitTolerance}) {\n  const hitSize = (borderWidth + hitTolerance) / 2;\n  const inRangeX = point.x >= x - hitSize - EPSILON && point.x <= x2 + hitSize + EPSILON;\n  const inRangeY = point.y >= y - hitSize - EPSILON && point.y <= y2 + hitSize + EPSILON;\n  if (axis === 'x') {\n    return inRangeX;\n  } else if (axis === 'y') {\n    return inRangeY;\n  }\n  return inRangeX && inRangeY;\n}\n\n/**\n * @param {Point} point\n * @param {rect: {x: number, y: number, x2: number, y2: number}, center: {x: number, y: number}} element\n * @param {InteractionAxis} axis\n * @param {{rotation: number, borderWidth: number, hitTolerance: number}}\n * @returns {boolean}\n */\nfunction inLabelRange(point, {rect, center}, axis, {rotation, borderWidth, hitTolerance}) {\n  const rotPoint = rotated(point, center, toRadians(-rotation));\n  return inBoxRange(rotPoint, rect, axis, {borderWidth, hitTolerance});\n}\n\n/**\n * @param {AnnotationElement} element\n * @param {boolean} useFinalPosition\n * @returns {Point}\n */\nfunction getElementCenterPoint(element, useFinalPosition) {\n  const {centerX, centerY} = element.getProps(['centerX', 'centerY'], useFinalPosition);\n  return {x: centerX, y: centerY};\n}\n\n/**\n * @param {string} pkg\n * @param {string} min\n * @param {string} ver\n * @param {boolean} [strict=true]\n * @returns {boolean}\n */\nfunction requireVersion(pkg, min, ver, strict = true) {\n  const parts = ver.split('.');\n  let i = 0;\n  for (const req of min.split('.')) {\n    const act = parts[i++];\n    if (parseInt(req, 10) < parseInt(act, 10)) {\n      break;\n    }\n    if (isOlderPart(act, req)) {\n      if (strict) {\n        throw new Error(`${pkg} v${ver} is not supported. v${min} or newer is required.`);\n      } else {\n        return false;\n      }\n    }\n  }\n  return true;\n}\n\nconst isPercentString = (s) => typeof s === 'string' && s.endsWith('%');\nconst toPercent = (s) => parseFloat(s) / 100;\nconst toPositivePercent = (s) => clamp(toPercent(s), 0, 1);\n\nconst boxAppering = (x, y) => ({x, y, x2: x, y2: y, width: 0, height: 0});\nconst defaultInitAnimation = {\n  box: (properties) => boxAppering(properties.centerX, properties.centerY),\n  doughnutLabel: (properties) => boxAppering(properties.centerX, properties.centerY),\n  ellipse: (properties) => ({centerX: properties.centerX, centerY: properties.centerX, radius: 0, width: 0, height: 0}),\n  label: (properties) => boxAppering(properties.centerX, properties.centerY),\n  line: (properties) => boxAppering(properties.x, properties.y),\n  point: (properties) => ({centerX: properties.centerX, centerY: properties.centerY, radius: 0, width: 0, height: 0}),\n  polygon: (properties) => boxAppering(properties.centerX, properties.centerY)\n};\n\n/**\n * @typedef { import('chart.js').FontSpec } FontSpec\n * @typedef { import('chart.js').Point } Point\n * @typedef { import('chart.js').Padding } Padding\n * @typedef { import('../../types/element').AnnotationBoxModel } AnnotationBoxModel\n * @typedef { import('../../types/element').AnnotationElement } AnnotationElement\n * @typedef { import('../../types/options').AnnotationPointCoordinates } AnnotationPointCoordinates\n * @typedef { import('../../types/label').CoreLabelOptions } CoreLabelOptions\n * @typedef { import('../../types/label').LabelPositionObject } LabelPositionObject\n */\n\n/**\n * @param {number} size\n * @param {number|string} position\n * @returns {number}\n */\nfunction getRelativePosition(size, position) {\n  if (position === 'start') {\n    return 0;\n  }\n  if (position === 'end') {\n    return size;\n  }\n  if (isPercentString(position)) {\n    return toPositivePercent(position) * size;\n  }\n  return size / 2;\n}\n\n/**\n * @param {number} size\n * @param {number|string} value\n * @param {boolean} [positivePercent=true]\n * @returns {number}\n */\nfunction getSize(size, value, positivePercent = true) {\n  if (typeof value === 'number') {\n    return value;\n  } else if (isPercentString(value)) {\n    return (positivePercent ? toPositivePercent(value) : toPercent(value)) * size;\n  }\n  return size;\n}\n\n/**\n * @param {{x: number, width: number}} size\n * @param {CoreLabelOptions} options\n * @returns {number}\n */\nfunction calculateTextAlignment(size, options) {\n  const {x, width} = size;\n  const textAlign = options.textAlign;\n  if (textAlign === 'center') {\n    return x + width / 2;\n  } else if (textAlign === 'end' || textAlign === 'right') {\n    return x + width;\n  }\n  return x;\n}\n\n/**\n * @param {Point} point\n * @param {{height: number, width: number}} labelSize\n * @param {{borderWidth: number, position: {LabelPositionObject|string}, xAdjust: number, yAdjust: number}} options\n * @param {Padding|undefined} padding\n * @returns {{x: number, y: number, x2: number, y2: number, height: number, width: number, centerX: number, centerY: number}}\n */\nfunction measureLabelRectangle(point, labelSize, {borderWidth, position, xAdjust, yAdjust}, padding) {\n  const hasPadding = isObject(padding);\n  const width = labelSize.width + (hasPadding ? padding.width : 0) + borderWidth;\n  const height = labelSize.height + (hasPadding ? padding.height : 0) + borderWidth;\n  const positionObj = toPosition(position);\n  const x = calculateLabelPosition$1(point.x, width, xAdjust, positionObj.x);\n  const y = calculateLabelPosition$1(point.y, height, yAdjust, positionObj.y);\n\n  return {\n    x,\n    y,\n    x2: x + width,\n    y2: y + height,\n    width,\n    height,\n    centerX: x + width / 2,\n    centerY: y + height / 2\n  };\n}\n\n/**\n * @param {LabelPositionObject|string} value\n * @param {string|number} defaultValue\n * @returns {LabelPositionObject}\n */\nfunction toPosition(value, defaultValue = 'center') {\n  if (isObject(value)) {\n    return {\n      x: valueOrDefault(value.x, defaultValue),\n      y: valueOrDefault(value.y, defaultValue),\n    };\n  }\n  value = valueOrDefault(value, defaultValue);\n  return {\n    x: value,\n    y: value\n  };\n}\n\n/**\n * @param {CoreLabelOptions} options\n * @param {number} fitRatio\n * @returns {boolean}\n */\nconst shouldFit = (options, fitRatio) => options && options.autoFit && fitRatio < 1;\n\n/**\n * @param {CoreLabelOptions} options\n * @param {number} fitRatio\n * @returns {FontSpec[]}\n */\nfunction toFonts(options, fitRatio) {\n  const optFont = options.font;\n  const fonts = isArray(optFont) ? optFont : [optFont];\n  if (shouldFit(options, fitRatio)) {\n    return fonts.map(function(f) {\n      const font = toFont(f);\n      font.size = Math.floor(f.size * fitRatio);\n      font.lineHeight = f.lineHeight;\n      return toFont(font);\n    });\n  }\n  return fonts.map(f => toFont(f));\n}\n\n/**\n * @param {AnnotationPointCoordinates} options\n * @returns {boolean}\n */\nfunction isBoundToPoint(options) {\n  return options && (defined(options.xValue) || defined(options.yValue));\n}\n\nfunction calculateLabelPosition$1(start, size, adjust = 0, position) {\n  return start - getRelativePosition(size, position) + adjust;\n}\n\n/**\n * @param {Chart} chart\n * @param {AnnotationBoxModel} properties\n * @param {CoreAnnotationOptions} options\n * @returns {AnnotationElement}\n */\nfunction initAnimationProperties(chart, properties, options) {\n  const initAnim = options.init;\n  if (!initAnim) {\n    return;\n  } else if (initAnim === true) {\n    return applyDefault(properties, options);\n  }\n  return execCallback(chart, properties, options);\n}\n\n/**\n * @param {Object} options\n * @param {Array} hooks\n * @param {Object} hooksContainer\n * @returns {boolean}\n */\nfunction loadHooks(options, hooks, hooksContainer) {\n  let activated = false;\n  hooks.forEach(hook => {\n    if (isFunction(options[hook])) {\n      activated = true;\n      hooksContainer[hook] = options[hook];\n    } else if (defined(hooksContainer[hook])) {\n      delete hooksContainer[hook];\n    }\n  });\n  return activated;\n}\n\nfunction applyDefault(properties, options) {\n  const type = options.type || 'line';\n  return defaultInitAnimation[type](properties);\n}\n\nfunction execCallback(chart, properties, options) {\n  const result = callback(options.init, [{chart, properties, options}]);\n  if (result === true) {\n    return applyDefault(properties, options);\n  } else if (isObject(result)) {\n    return result;\n  }\n}\n\nconst widthCache = new Map();\nconst notRadius = (radius) => isNaN(radius) || radius <= 0;\nconst fontsKey = (fonts) => fonts.reduce(function(prev, item) {\n  prev += item.string;\n  return prev;\n}, '');\n\n/**\n * @typedef { import('chart.js').Point } Point\n * @typedef { import('../../types/label').CoreLabelOptions } CoreLabelOptions\n * @typedef { import('../../types/options').PointAnnotationOptions } PointAnnotationOptions\n */\n\n/**\n * Determine if content is an image or a canvas.\n * @param {*} content\n * @returns boolean|undefined\n * @todo move this function to chart.js helpers\n */\nfunction isImageOrCanvas(content) {\n  if (content && typeof content === 'object') {\n    const type = content.toString();\n    return (type === '[object HTMLImageElement]' || type === '[object HTMLCanvasElement]');\n  }\n}\n\n/**\n * Set the translation on the canvas if the rotation must be applied.\n * @param {CanvasRenderingContext2D} ctx - chart canvas context\n * @param {Point} point - the point of translation\n * @param {number} rotation - rotation (in degrees) to apply\n */\nfunction translate(ctx, {x, y}, rotation) {\n  if (rotation) {\n    ctx.translate(x, y);\n    ctx.rotate(toRadians(rotation));\n    ctx.translate(-x, -y);\n  }\n}\n\n/**\n * @param {CanvasRenderingContext2D} ctx\n * @param {Object} options\n * @returns {boolean|undefined}\n */\nfunction setBorderStyle(ctx, options) {\n  if (options && options.borderWidth) {\n    ctx.lineCap = options.borderCapStyle || 'butt';\n    ctx.setLineDash(options.borderDash);\n    ctx.lineDashOffset = options.borderDashOffset;\n    ctx.lineJoin = options.borderJoinStyle || 'miter';\n    ctx.lineWidth = options.borderWidth;\n    ctx.strokeStyle = options.borderColor;\n    return true;\n  }\n}\n\n/**\n * @param {CanvasRenderingContext2D} ctx\n * @param {Object} options\n */\nfunction setShadowStyle(ctx, options) {\n  ctx.shadowColor = options.backgroundShadowColor;\n  ctx.shadowBlur = options.shadowBlur;\n  ctx.shadowOffsetX = options.shadowOffsetX;\n  ctx.shadowOffsetY = options.shadowOffsetY;\n}\n\n/**\n * @param {CanvasRenderingContext2D} ctx\n * @param {CoreLabelOptions} options\n * @returns {{width: number, height: number}}\n */\nfunction measureLabelSize(ctx, options) {\n  const content = options.content;\n  if (isImageOrCanvas(content)) {\n    const size = {\n      width: getSize(content.width, options.width),\n      height: getSize(content.height, options.height)\n    };\n    return size;\n  }\n  const fonts = toFonts(options);\n  const strokeWidth = options.textStrokeWidth;\n  const lines = isArray(content) ? content : [content];\n  const mapKey = lines.join() + fontsKey(fonts) + strokeWidth + (ctx._measureText ? '-spriting' : '');\n  if (!widthCache.has(mapKey)) {\n    widthCache.set(mapKey, calculateLabelSize(ctx, lines, fonts, strokeWidth));\n  }\n  return widthCache.get(mapKey);\n}\n\n/**\n * @param {CanvasRenderingContext2D} ctx\n * @param {{x: number, y: number, width: number, height: number}} rect\n * @param {Object} options\n */\nfunction drawBox(ctx, rect, options) {\n  const {x, y, width, height} = rect;\n  ctx.save();\n  setShadowStyle(ctx, options);\n  const stroke = setBorderStyle(ctx, options);\n  ctx.fillStyle = options.backgroundColor;\n  ctx.beginPath();\n  addRoundedRectPath(ctx, {\n    x, y, w: width, h: height,\n    radius: clampAll(toTRBLCorners(options.borderRadius), 0, Math.min(width, height) / 2)\n  });\n  ctx.closePath();\n  ctx.fill();\n  if (stroke) {\n    ctx.shadowColor = options.borderShadowColor;\n    ctx.stroke();\n  }\n  ctx.restore();\n}\n\n/**\n * @param {CanvasRenderingContext2D} ctx\n * @param {{x: number, y: number, width: number, height: number}} rect\n * @param {CoreLabelOptions} options\n * @param {number} fitRatio\n */\nfunction drawLabel(ctx, rect, options, fitRatio) {\n  const content = options.content;\n  if (isImageOrCanvas(content)) {\n    ctx.save();\n    ctx.globalAlpha = getOpacity(options.opacity, content.style.opacity);\n    ctx.drawImage(content, rect.x, rect.y, rect.width, rect.height);\n    ctx.restore();\n    return;\n  }\n  const labels = isArray(content) ? content : [content];\n  const fonts = toFonts(options, fitRatio);\n  const optColor = options.color;\n  const colors = isArray(optColor) ? optColor : [optColor];\n  const x = calculateTextAlignment(rect, options);\n  const y = rect.y + options.textStrokeWidth / 2;\n  ctx.save();\n  ctx.textBaseline = 'middle';\n  ctx.textAlign = options.textAlign;\n  if (setTextStrokeStyle(ctx, options)) {\n    applyLabelDecoration(ctx, {x, y}, labels, fonts);\n  }\n  applyLabelContent(ctx, {x, y}, labels, {fonts, colors});\n  ctx.restore();\n}\n\nfunction setTextStrokeStyle(ctx, options) {\n  if (options.textStrokeWidth > 0) {\n    // https://stackoverflow.com/questions/13627111/drawing-text-with-an-outer-stroke-with-html5s-canvas\n    ctx.lineJoin = 'round';\n    ctx.miterLimit = 2;\n    ctx.lineWidth = options.textStrokeWidth;\n    ctx.strokeStyle = options.textStrokeColor;\n    return true;\n  }\n}\n\n/**\n * @param {CanvasRenderingContext2D} ctx\n * @param {{radius: number, options: PointAnnotationOptions}} element\n * @param {number} x\n * @param {number} y\n */\nfunction drawPoint(ctx, element, x, y) {\n  const {radius, options} = element;\n  const style = options.pointStyle;\n  const rotation = options.rotation;\n  let rad = (rotation || 0) * RAD_PER_DEG;\n\n  if (isImageOrCanvas(style)) {\n    ctx.save();\n    ctx.translate(x, y);\n    ctx.rotate(rad);\n    ctx.drawImage(style, -style.width / 2, -style.height / 2, style.width, style.height);\n    ctx.restore();\n    return;\n  }\n  if (notRadius(radius)) {\n    return;\n  }\n  drawPointStyle(ctx, {x, y, radius, rotation, style, rad});\n}\n\nfunction drawPointStyle(ctx, {x, y, radius, rotation, style, rad}) {\n  let xOffset, yOffset, size, cornerRadius;\n  ctx.beginPath();\n\n  switch (style) {\n  // Default includes circle\n  default:\n    ctx.arc(x, y, radius, 0, TAU);\n    ctx.closePath();\n    break;\n  case 'triangle':\n    ctx.moveTo(x + Math.sin(rad) * radius, y - Math.cos(rad) * radius);\n    rad += TWO_THIRDS_PI;\n    ctx.lineTo(x + Math.sin(rad) * radius, y - Math.cos(rad) * radius);\n    rad += TWO_THIRDS_PI;\n    ctx.lineTo(x + Math.sin(rad) * radius, y - Math.cos(rad) * radius);\n    ctx.closePath();\n    break;\n  case 'rectRounded':\n    // NOTE: the rounded rect implementation changed to use `arc` instead of\n    // `quadraticCurveTo` since it generates better results when rect is\n    // almost a circle. 0.516 (instead of 0.5) produces results with visually\n    // closer proportion to the previous impl and it is inscribed in the\n    // circle with `radius`. For more details, see the following PRs:\n    // https://github.com/chartjs/Chart.js/issues/5597\n    // https://github.com/chartjs/Chart.js/issues/5858\n    cornerRadius = radius * 0.516;\n    size = radius - cornerRadius;\n    xOffset = Math.cos(rad + QUARTER_PI) * size;\n    yOffset = Math.sin(rad + QUARTER_PI) * size;\n    ctx.arc(x - xOffset, y - yOffset, cornerRadius, rad - PI, rad - HALF_PI);\n    ctx.arc(x + yOffset, y - xOffset, cornerRadius, rad - HALF_PI, rad);\n    ctx.arc(x + xOffset, y + yOffset, cornerRadius, rad, rad + HALF_PI);\n    ctx.arc(x - yOffset, y + xOffset, cornerRadius, rad + HALF_PI, rad + PI);\n    ctx.closePath();\n    break;\n  case 'rect':\n    if (!rotation) {\n      size = Math.SQRT1_2 * radius;\n      ctx.rect(x - size, y - size, 2 * size, 2 * size);\n      break;\n    }\n    rad += QUARTER_PI;\n    /* falls through */\n  case 'rectRot':\n    xOffset = Math.cos(rad) * radius;\n    yOffset = Math.sin(rad) * radius;\n    ctx.moveTo(x - xOffset, y - yOffset);\n    ctx.lineTo(x + yOffset, y - xOffset);\n    ctx.lineTo(x + xOffset, y + yOffset);\n    ctx.lineTo(x - yOffset, y + xOffset);\n    ctx.closePath();\n    break;\n  case 'crossRot':\n    rad += QUARTER_PI;\n    /* falls through */\n  case 'cross':\n    xOffset = Math.cos(rad) * radius;\n    yOffset = Math.sin(rad) * radius;\n    ctx.moveTo(x - xOffset, y - yOffset);\n    ctx.lineTo(x + xOffset, y + yOffset);\n    ctx.moveTo(x + yOffset, y - xOffset);\n    ctx.lineTo(x - yOffset, y + xOffset);\n    break;\n  case 'star':\n    xOffset = Math.cos(rad) * radius;\n    yOffset = Math.sin(rad) * radius;\n    ctx.moveTo(x - xOffset, y - yOffset);\n    ctx.lineTo(x + xOffset, y + yOffset);\n    ctx.moveTo(x + yOffset, y - xOffset);\n    ctx.lineTo(x - yOffset, y + xOffset);\n    rad += QUARTER_PI;\n    xOffset = Math.cos(rad) * radius;\n    yOffset = Math.sin(rad) * radius;\n    ctx.moveTo(x - xOffset, y - yOffset);\n    ctx.lineTo(x + xOffset, y + yOffset);\n    ctx.moveTo(x + yOffset, y - xOffset);\n    ctx.lineTo(x - yOffset, y + xOffset);\n    break;\n  case 'line':\n    xOffset = Math.cos(rad) * radius;\n    yOffset = Math.sin(rad) * radius;\n    ctx.moveTo(x - xOffset, y - yOffset);\n    ctx.lineTo(x + xOffset, y + yOffset);\n    break;\n  case 'dash':\n    ctx.moveTo(x, y);\n    ctx.lineTo(x + Math.cos(rad) * radius, y + Math.sin(rad) * radius);\n    break;\n  }\n\n  ctx.fill();\n}\n\nfunction calculateLabelSize(ctx, lines, fonts, strokeWidth) {\n  ctx.save();\n  const count = lines.length;\n  let width = 0;\n  let height = strokeWidth;\n  for (let i = 0; i < count; i++) {\n    const font = fonts[Math.min(i, fonts.length - 1)];\n    ctx.font = font.string;\n    const text = lines[i];\n    width = Math.max(width, ctx.measureText(text).width + strokeWidth);\n    height += font.lineHeight;\n  }\n  ctx.restore();\n  return {width, height};\n}\n\nfunction applyLabelDecoration(ctx, {x, y}, labels, fonts) {\n  ctx.beginPath();\n  let lhs = 0;\n  labels.forEach(function(l, i) {\n    const f = fonts[Math.min(i, fonts.length - 1)];\n    const lh = f.lineHeight;\n    ctx.font = f.string;\n    ctx.strokeText(l, x, y + lh / 2 + lhs);\n    lhs += lh;\n  });\n  ctx.stroke();\n}\n\nfunction applyLabelContent(ctx, {x, y}, labels, {fonts, colors}) {\n  let lhs = 0;\n  labels.forEach(function(l, i) {\n    const c = colors[Math.min(i, colors.length - 1)];\n    const f = fonts[Math.min(i, fonts.length - 1)];\n    const lh = f.lineHeight;\n    ctx.beginPath();\n    ctx.font = f.string;\n    ctx.fillStyle = c;\n    ctx.fillText(l, x, y + lh / 2 + lhs);\n    lhs += lh;\n    ctx.fill();\n  });\n}\n\nfunction getOpacity(value, elementValue) {\n  const opacity = isNumber(value) ? value : elementValue;\n  return isNumber(opacity) ? clamp(opacity, 0, 1) : 1;\n}\n\nconst positions = ['left', 'bottom', 'top', 'right'];\n\n/**\n * @typedef { import('../../types/element').AnnotationElement } AnnotationElement\n */\n\n/**\n * Drawa the callout component for labels.\n * @param {CanvasRenderingContext2D} ctx - chart canvas context\n * @param {AnnotationElement} element - the label element\n */\nfunction drawCallout(ctx, element) {\n  const {pointX, pointY, options} = element;\n  const callout = options.callout;\n  const calloutPosition = callout && callout.display && resolveCalloutPosition(element, callout);\n  if (!calloutPosition || isPointInRange(element, callout, calloutPosition)) {\n    return;\n  }\n\n  ctx.save();\n  ctx.beginPath();\n  const stroke = setBorderStyle(ctx, callout);\n  if (!stroke) {\n    return ctx.restore();\n  }\n  const {separatorStart, separatorEnd} = getCalloutSeparatorCoord(element, calloutPosition);\n  const {sideStart, sideEnd} = getCalloutSideCoord(element, calloutPosition, separatorStart);\n  if (callout.margin > 0 || options.borderWidth === 0) {\n    ctx.moveTo(separatorStart.x, separatorStart.y);\n    ctx.lineTo(separatorEnd.x, separatorEnd.y);\n  }\n  ctx.moveTo(sideStart.x, sideStart.y);\n  ctx.lineTo(sideEnd.x, sideEnd.y);\n  const rotatedPoint = rotated({x: pointX, y: pointY}, element.getCenterPoint(), toRadians(-element.rotation));\n  ctx.lineTo(rotatedPoint.x, rotatedPoint.y);\n  ctx.stroke();\n  ctx.restore();\n}\n\nfunction getCalloutSeparatorCoord(element, position) {\n  const {x, y, x2, y2} = element;\n  const adjust = getCalloutSeparatorAdjust(element, position);\n  let separatorStart, separatorEnd;\n  if (position === 'left' || position === 'right') {\n    separatorStart = {x: x + adjust, y};\n    separatorEnd = {x: separatorStart.x, y: y2};\n  } else {\n    //  position 'top' or 'bottom'\n    separatorStart = {x, y: y + adjust};\n    separatorEnd = {x: x2, y: separatorStart.y};\n  }\n  return {separatorStart, separatorEnd};\n}\n\nfunction getCalloutSeparatorAdjust(element, position) {\n  const {width, height, options} = element;\n  const adjust = options.callout.margin + options.borderWidth / 2;\n  if (position === 'right') {\n    return width + adjust;\n  } else if (position === 'bottom') {\n    return height + adjust;\n  }\n  return -adjust;\n}\n\nfunction getCalloutSideCoord(element, position, separatorStart) {\n  const {y, width, height, options} = element;\n  const start = options.callout.start;\n  const side = getCalloutSideAdjust(position, options.callout);\n  let sideStart, sideEnd;\n  if (position === 'left' || position === 'right') {\n    sideStart = {x: separatorStart.x, y: y + getSize(height, start)};\n    sideEnd = {x: sideStart.x + side, y: sideStart.y};\n  } else {\n    //  position 'top' or 'bottom'\n    sideStart = {x: separatorStart.x + getSize(width, start), y: separatorStart.y};\n    sideEnd = {x: sideStart.x, y: sideStart.y + side};\n  }\n  return {sideStart, sideEnd};\n}\n\nfunction getCalloutSideAdjust(position, options) {\n  const side = options.side;\n  if (position === 'left' || position === 'top') {\n    return -side;\n  }\n  return side;\n}\n\nfunction resolveCalloutPosition(element, options) {\n  const position = options.position;\n  if (positions.includes(position)) {\n    return position;\n  }\n  return resolveCalloutAutoPosition(element, options);\n}\n\nfunction resolveCalloutAutoPosition(element, options) {\n  const {x, y, x2, y2, width, height, pointX, pointY, centerX, centerY, rotation} = element;\n  const center = {x: centerX, y: centerY};\n  const start = options.start;\n  const xAdjust = getSize(width, start);\n  const yAdjust = getSize(height, start);\n  const xPoints = [x, x + xAdjust, x + xAdjust, x2];\n  const yPoints = [y + yAdjust, y2, y, y2];\n  const result = [];\n  for (let index = 0; index < 4; index++) {\n    const rotatedPoint = rotated({x: xPoints[index], y: yPoints[index]}, center, toRadians(rotation));\n    result.push({\n      position: positions[index],\n      distance: distanceBetweenPoints(rotatedPoint, {x: pointX, y: pointY})\n    });\n  }\n  return result.sort((a, b) => a.distance - b.distance)[0].position;\n}\n\nfunction isPointInRange(element, callout, position) {\n  const {pointX, pointY} = element;\n  const margin = callout.margin;\n  let x = pointX;\n  let y = pointY;\n  if (position === 'left') {\n    x += margin;\n  } else if (position === 'right') {\n    x -= margin;\n  } else if (position === 'top') {\n    y += margin;\n  } else if (position === 'bottom') {\n    y -= margin;\n  }\n  return element.inRange(x, y);\n}\n\nconst limitedLineScale = {\n  xScaleID: {min: 'xMin', max: 'xMax', start: 'left', end: 'right', startProp: 'x', endProp: 'x2'},\n  yScaleID: {min: 'yMin', max: 'yMax', start: 'bottom', end: 'top', startProp: 'y', endProp: 'y2'}\n};\n\n/**\n * @typedef { import(\"chart.js\").Chart } Chart\n * @typedef { import(\"chart.js\").Scale } Scale\n * @typedef { import(\"chart.js\").Point } Point\n * @typedef { import('../../types/element').AnnotationBoxModel } AnnotationBoxModel\n * @typedef { import('../../types/options').CoreAnnotationOptions } CoreAnnotationOptions\n * @typedef { import('../../types/options').LineAnnotationOptions } LineAnnotationOptions\n * @typedef { import('../../types/options').PointAnnotationOptions } PointAnnotationOptions\n * @typedef { import('../../types/options').PolygonAnnotationOptions } PolygonAnnotationOptions\n */\n\n/**\n * @param {Scale} scale\n * @param {number|string} value\n * @param {number} fallback\n * @returns {number}\n */\nfunction scaleValue(scale, value, fallback) {\n  value = typeof value === 'number' ? value : scale.parse(value);\n  return isFinite(value) ? scale.getPixelForValue(value) : fallback;\n}\n\n/**\n * Search the scale defined in chartjs by the axis related to the annotation options key.\n * @param {{ [key: string]: Scale }} scales\n * @param {CoreAnnotationOptions} options\n * @param {string} key\n * @returns {string}\n */\nfunction retrieveScaleID(scales, options, key) {\n  const scaleID = options[key];\n  if (scaleID || key === 'scaleID') {\n    return scaleID;\n  }\n  const axis = key.charAt(0);\n  const axes = Object.values(scales).filter((scale) => scale.axis && scale.axis === axis);\n  if (axes.length) {\n    return axes[0].id;\n  }\n  return axis;\n}\n\n/**\n * @param {Scale} scale\n * @param {{min: number, max: number, start: number, end: number}} options\n * @returns {{start: number, end: number}|undefined}\n */\nfunction getDimensionByScale(scale, options) {\n  if (scale) {\n    const reverse = scale.options.reverse;\n    const start = scaleValue(scale, options.min, reverse ? options.end : options.start);\n    const end = scaleValue(scale, options.max, reverse ? options.start : options.end);\n    return {\n      start,\n      end\n    };\n  }\n}\n\n/**\n * @param {Chart} chart\n * @param {CoreAnnotationOptions} options\n * @returns {Point}\n */\nfunction getChartPoint(chart, options) {\n  const {chartArea, scales} = chart;\n  const xScale = scales[retrieveScaleID(scales, options, 'xScaleID')];\n  const yScale = scales[retrieveScaleID(scales, options, 'yScaleID')];\n  let x = chartArea.width / 2;\n  let y = chartArea.height / 2;\n\n  if (xScale) {\n    x = scaleValue(xScale, options.xValue, xScale.left + xScale.width / 2);\n  }\n\n  if (yScale) {\n    y = scaleValue(yScale, options.yValue, yScale.top + yScale.height / 2);\n  }\n  return {x, y};\n}\n\n/**\n * @param {Chart} chart\n * @param {CoreAnnotationOptions} options\n * @returns {AnnotationBoxModel}\n */\nfunction resolveBoxProperties(chart, options) {\n  const scales = chart.scales;\n  const xScale = scales[retrieveScaleID(scales, options, 'xScaleID')];\n  const yScale = scales[retrieveScaleID(scales, options, 'yScaleID')];\n\n  if (!xScale && !yScale) {\n    return {};\n  }\n\n  let {left: x, right: x2} = xScale || chart.chartArea;\n  let {top: y, bottom: y2} = yScale || chart.chartArea;\n  const xDim = getChartDimensionByScale(xScale, {min: options.xMin, max: options.xMax, start: x, end: x2});\n  x = xDim.start;\n  x2 = xDim.end;\n  const yDim = getChartDimensionByScale(yScale, {min: options.yMin, max: options.yMax, start: y2, end: y});\n  y = yDim.start;\n  y2 = yDim.end;\n\n  return {\n    x,\n    y,\n    x2,\n    y2,\n    width: x2 - x,\n    height: y2 - y,\n    centerX: x + (x2 - x) / 2,\n    centerY: y + (y2 - y) / 2\n  };\n}\n\n/**\n * @param {Chart} chart\n * @param {PointAnnotationOptions|PolygonAnnotationOptions} options\n * @returns {AnnotationBoxModel}\n */\nfunction resolvePointProperties(chart, options) {\n  if (!isBoundToPoint(options)) {\n    const box = resolveBoxProperties(chart, options);\n    let radius = options.radius;\n    if (!radius || isNaN(radius)) {\n      radius = Math.min(box.width, box.height) / 2;\n      options.radius = radius;\n    }\n    const size = radius * 2;\n    const adjustCenterX = box.centerX + options.xAdjust;\n    const adjustCenterY = box.centerY + options.yAdjust;\n    return {\n      x: adjustCenterX - radius,\n      y: adjustCenterY - radius,\n      x2: adjustCenterX + radius,\n      y2: adjustCenterY + radius,\n      centerX: adjustCenterX,\n      centerY: adjustCenterY,\n      width: size,\n      height: size,\n      radius\n    };\n  }\n  return getChartCircle(chart, options);\n}\n/**\n * @param {Chart} chart\n * @param {LineAnnotationOptions} options\n * @returns {AnnotationBoxModel}\n */\nfunction resolveLineProperties(chart, options) {\n  const {scales, chartArea} = chart;\n  const scale = scales[options.scaleID];\n  const area = {x: chartArea.left, y: chartArea.top, x2: chartArea.right, y2: chartArea.bottom};\n\n  if (scale) {\n    resolveFullLineProperties(scale, area, options);\n  } else {\n    resolveLimitedLineProperties(scales, area, options);\n  }\n  return area;\n}\n\n/**\n * @param {Chart} chart\n * @param {CoreAnnotationOptions} options\n * @param {boolean} [centerBased=false]\n * @returns {AnnotationBoxModel}\n */\nfunction resolveBoxAndLabelProperties(chart, options) {\n  const properties = resolveBoxProperties(chart, options);\n  properties.initProperties = initAnimationProperties(chart, properties, options);\n  properties.elements = [{\n    type: 'label',\n    optionScope: 'label',\n    properties: resolveLabelElementProperties$1(chart, properties, options),\n    initProperties: properties.initProperties\n  }];\n  return properties;\n}\n\nfunction getChartCircle(chart, options) {\n  const point = getChartPoint(chart, options);\n  const size = options.radius * 2;\n  return {\n    x: point.x - options.radius + options.xAdjust,\n    y: point.y - options.radius + options.yAdjust,\n    x2: point.x + options.radius + options.xAdjust,\n    y2: point.y + options.radius + options.yAdjust,\n    centerX: point.x + options.xAdjust,\n    centerY: point.y + options.yAdjust,\n    radius: options.radius,\n    width: size,\n    height: size\n  };\n}\n\nfunction getChartDimensionByScale(scale, options) {\n  const result = getDimensionByScale(scale, options) || options;\n  return {\n    start: Math.min(result.start, result.end),\n    end: Math.max(result.start, result.end)\n  };\n}\n\nfunction resolveFullLineProperties(scale, area, options) {\n  const min = scaleValue(scale, options.value, NaN);\n  const max = scaleValue(scale, options.endValue, min);\n  if (scale.isHorizontal()) {\n    area.x = min;\n    area.x2 = max;\n  } else {\n    area.y = min;\n    area.y2 = max;\n  }\n}\n\nfunction resolveLimitedLineProperties(scales, area, options) {\n  for (const scaleId of Object.keys(limitedLineScale)) {\n    const scale = scales[retrieveScaleID(scales, options, scaleId)];\n    if (scale) {\n      const {min, max, start, end, startProp, endProp} = limitedLineScale[scaleId];\n      const dim = getDimensionByScale(scale, {min: options[min], max: options[max], start: scale[start], end: scale[end]});\n      area[startProp] = dim.start;\n      area[endProp] = dim.end;\n    }\n  }\n}\n\nfunction calculateX({properties, options}, labelSize, position, padding) {\n  const {x: start, x2: end, width: size} = properties;\n  return calculatePosition({start, end, size, borderWidth: options.borderWidth}, {\n    position: position.x,\n    padding: {start: padding.left, end: padding.right},\n    adjust: options.label.xAdjust,\n    size: labelSize.width\n  });\n}\n\nfunction calculateY({properties, options}, labelSize, position, padding) {\n  const {y: start, y2: end, height: size} = properties;\n  return calculatePosition({start, end, size, borderWidth: options.borderWidth}, {\n    position: position.y,\n    padding: {start: padding.top, end: padding.bottom},\n    adjust: options.label.yAdjust,\n    size: labelSize.height\n  });\n}\n\nfunction calculatePosition(boxOpts, labelOpts) {\n  const {start, end, borderWidth} = boxOpts;\n  const {position, padding: {start: padStart, end: padEnd}, adjust} = labelOpts;\n  const availableSize = end - borderWidth - start - padStart - padEnd - labelOpts.size;\n  return start + borderWidth / 2 + adjust + getRelativePosition(availableSize, position);\n}\n\nfunction resolveLabelElementProperties$1(chart, properties, options) {\n  const label = options.label;\n  label.backgroundColor = 'transparent';\n  label.callout.display = false;\n  const position = toPosition(label.position);\n  const padding = toPadding(label.padding);\n  const labelSize = measureLabelSize(chart.ctx, label);\n  const x = calculateX({properties, options}, labelSize, position, padding);\n  const y = calculateY({properties, options}, labelSize, position, padding);\n  const width = labelSize.width + padding.width;\n  const height = labelSize.height + padding.height;\n  return {\n    x,\n    y,\n    x2: x + width,\n    y2: y + height,\n    width,\n    height,\n    centerX: x + width / 2,\n    centerY: y + height / 2,\n    rotation: label.rotation\n  };\n\n}\n\nconst moveHooks = ['enter', 'leave'];\n\n/**\n * @typedef { import(\"chart.js\").Chart } Chart\n * @typedef { import('../../types/options').AnnotationPluginOptions } AnnotationPluginOptions\n */\n\nconst eventHooks = moveHooks.concat('click');\n\n/**\n * @param {Chart} chart\n * @param {Object} state\n * @param {AnnotationPluginOptions} options\n */\nfunction updateListeners(chart, state, options) {\n  state.listened = loadHooks(options, eventHooks, state.listeners);\n  state.moveListened = false;\n\n  moveHooks.forEach(hook => {\n    if (isFunction(options[hook])) {\n      state.moveListened = true;\n    }\n  });\n\n  if (!state.listened || !state.moveListened) {\n    state.annotations.forEach(scope => {\n      if (!state.listened && isFunction(scope.click)) {\n        state.listened = true;\n      }\n      if (!state.moveListened) {\n        moveHooks.forEach(hook => {\n          if (isFunction(scope[hook])) {\n            state.listened = true;\n            state.moveListened = true;\n          }\n        });\n      }\n    });\n  }\n}\n\n/**\n * @param {Object} state\n * @param {ChartEvent} event\n * @param {AnnotationPluginOptions} options\n * @return {boolean|undefined}\n */\nfunction handleEvent(state, event, options) {\n  if (state.listened) {\n    switch (event.type) {\n    case 'mousemove':\n    case 'mouseout':\n      return handleMoveEvents(state, event, options);\n    case 'click':\n      return handleClickEvents(state, event, options);\n    }\n  }\n}\n\nfunction handleMoveEvents(state, event, options) {\n  if (!state.moveListened) {\n    return;\n  }\n\n  let elements;\n\n  if (event.type === 'mousemove') {\n    elements = getElements(state.visibleElements, event, options.interaction);\n  } else {\n    elements = [];\n  }\n\n  const previous = state.hovered;\n  state.hovered = elements;\n\n  const context = {state, event};\n  let changed = dispatchMoveEvents(context, 'leave', previous, elements);\n  return dispatchMoveEvents(context, 'enter', elements, previous) || changed;\n}\n\nfunction dispatchMoveEvents({state, event}, hook, elements, checkElements) {\n  let changed;\n  for (const element of elements) {\n    if (checkElements.indexOf(element) < 0) {\n      changed = dispatchEvent(element.options[hook] || state.listeners[hook], element, event) || changed;\n    }\n  }\n  return changed;\n}\n\nfunction handleClickEvents(state, event, options) {\n  const listeners = state.listeners;\n  const elements = getElements(state.visibleElements, event, options.interaction);\n  let changed;\n  for (const element of elements) {\n    changed = dispatchEvent(element.options.click || listeners.click, element, event) || changed;\n  }\n  return changed;\n}\n\nfunction dispatchEvent(handler, element, event) {\n  return callback(handler, [element.$context, event]) === true;\n}\n\n/**\n * @typedef { import(\"chart.js\").Chart } Chart\n * @typedef { import('../../types/options').AnnotationPluginOptions } AnnotationPluginOptions\n * @typedef { import('../../types/element').AnnotationElement } AnnotationElement\n */\n\nconst elementHooks = ['afterDraw', 'beforeDraw'];\n\n/**\n * @param {Chart} chart\n * @param {Object} state\n * @param {AnnotationPluginOptions} options\n */\nfunction updateHooks(chart, state, options) {\n  const visibleElements = state.visibleElements;\n  state.hooked = loadHooks(options, elementHooks, state.hooks);\n\n  if (!state.hooked) {\n    visibleElements.forEach(scope => {\n      if (!state.hooked) {\n        elementHooks.forEach(hook => {\n          if (isFunction(scope.options[hook])) {\n            state.hooked = true;\n          }\n        });\n      }\n    });\n  }\n}\n\n/**\n * @param {Object} state\n * @param {AnnotationElement} element\n * @param {string} hook\n */\nfunction invokeHook(state, element, hook) {\n  if (state.hooked) {\n    const callbackHook = element.options[hook] || state.hooks[hook];\n    return callback(callbackHook, [element.$context]);\n  }\n}\n\n/**\n * @typedef { import(\"chart.js\").Chart } Chart\n * @typedef { import(\"chart.js\").Scale } Scale\n * @typedef { import('../../types/options').CoreAnnotationOptions } CoreAnnotationOptions\n */\n\n/**\n * @param {Chart} chart\n * @param {Scale} scale\n * @param {CoreAnnotationOptions[]} annotations\n */\nfunction adjustScaleRange(chart, scale, annotations) {\n  const range = getScaleLimits(chart.scales, scale, annotations);\n  let changed = changeScaleLimit(scale, range, 'min', 'suggestedMin');\n  changed = changeScaleLimit(scale, range, 'max', 'suggestedMax') || changed;\n  if (changed && isFunction(scale.handleTickRangeOptions)) {\n    scale.handleTickRangeOptions();\n  }\n}\n\n/**\n * @param {CoreAnnotationOptions[]} annotations\n * @param {{ [key: string]: Scale }} scales\n */\nfunction verifyScaleOptions(annotations, scales) {\n  for (const annotation of annotations) {\n    verifyScaleIDs(annotation, scales);\n  }\n}\n\nfunction changeScaleLimit(scale, range, limit, suggestedLimit) {\n  if (isFinite(range[limit]) && !scaleLimitDefined(scale.options, limit, suggestedLimit)) {\n    const changed = scale[limit] !== range[limit];\n    scale[limit] = range[limit];\n    return changed;\n  }\n}\n\nfunction scaleLimitDefined(scaleOptions, limit, suggestedLimit) {\n  return defined(scaleOptions[limit]) || defined(scaleOptions[suggestedLimit]);\n}\n\nfunction verifyScaleIDs(annotation, scales) {\n  for (const key of ['scaleID', 'xScaleID', 'yScaleID']) {\n    const scaleID = retrieveScaleID(scales, annotation, key);\n    if (scaleID && !scales[scaleID] && verifyProperties(annotation, key)) {\n      console.warn(`No scale found with id '${scaleID}' for annotation '${annotation.id}'`);\n    }\n  }\n}\n\nfunction verifyProperties(annotation, key) {\n  if (key === 'scaleID') {\n    return true;\n  }\n  const axis = key.charAt(0);\n  for (const prop of ['Min', 'Max', 'Value']) {\n    if (defined(annotation[axis + prop])) {\n      return true;\n    }\n  }\n  return false;\n}\n\nfunction getScaleLimits(scales, scale, annotations) {\n  const axis = scale.axis;\n  const scaleID = scale.id;\n  const scaleIDOption = axis + 'ScaleID';\n  const limits = {\n    min: valueOrDefault(scale.min, Number.NEGATIVE_INFINITY),\n    max: valueOrDefault(scale.max, Number.POSITIVE_INFINITY)\n  };\n  for (const annotation of annotations) {\n    if (annotation.scaleID === scaleID) {\n      updateLimits(annotation, scale, ['value', 'endValue'], limits);\n    } else if (retrieveScaleID(scales, annotation, scaleIDOption) === scaleID) {\n      updateLimits(annotation, scale, [axis + 'Min', axis + 'Max', axis + 'Value'], limits);\n    }\n  }\n  return limits;\n}\n\nfunction updateLimits(annotation, scale, props, limits) {\n  for (const prop of props) {\n    const raw = annotation[prop];\n    if (defined(raw)) {\n      const value = scale.parse(raw);\n      limits.min = Math.min(limits.min, value);\n      limits.max = Math.max(limits.max, value);\n    }\n  }\n}\n\nclass BoxAnnotation extends Element {\n\n  inRange(mouseX, mouseY, axis, useFinalPosition) {\n    const {x, y} = rotated({x: mouseX, y: mouseY}, this.getCenterPoint(useFinalPosition), toRadians(-this.options.rotation));\n    return inBoxRange({x, y}, this.getProps(['x', 'y', 'x2', 'y2'], useFinalPosition), axis, this.options);\n  }\n\n  getCenterPoint(useFinalPosition) {\n    return getElementCenterPoint(this, useFinalPosition);\n  }\n\n  draw(ctx) {\n    ctx.save();\n    translate(ctx, this.getCenterPoint(), this.options.rotation);\n    drawBox(ctx, this, this.options);\n    ctx.restore();\n  }\n\n  get label() {\n    return this.elements && this.elements[0];\n  }\n\n  resolveElementProperties(chart, options) {\n    return resolveBoxAndLabelProperties(chart, options);\n  }\n}\n\nBoxAnnotation.id = 'boxAnnotation';\n\nBoxAnnotation.defaults = {\n  adjustScaleRange: true,\n  backgroundShadowColor: 'transparent',\n  borderCapStyle: 'butt',\n  borderDash: [],\n  borderDashOffset: 0,\n  borderJoinStyle: 'miter',\n  borderRadius: 0,\n  borderShadowColor: 'transparent',\n  borderWidth: 1,\n  display: true,\n  init: undefined,\n  hitTolerance: 0,\n  label: {\n    backgroundColor: 'transparent',\n    borderWidth: 0,\n    callout: {\n      display: false\n    },\n    color: 'black',\n    content: null,\n    display: false,\n    drawTime: undefined,\n    font: {\n      family: undefined,\n      lineHeight: undefined,\n      size: undefined,\n      style: undefined,\n      weight: 'bold'\n    },\n    height: undefined,\n    hitTolerance: undefined,\n    opacity: undefined,\n    padding: 6,\n    position: 'center',\n    rotation: undefined,\n    textAlign: 'start',\n    textStrokeColor: undefined,\n    textStrokeWidth: 0,\n    width: undefined,\n    xAdjust: 0,\n    yAdjust: 0,\n    z: undefined\n  },\n  rotation: 0,\n  shadowBlur: 0,\n  shadowOffsetX: 0,\n  shadowOffsetY: 0,\n  xMax: undefined,\n  xMin: undefined,\n  xScaleID: undefined,\n  yMax: undefined,\n  yMin: undefined,\n  yScaleID: undefined,\n  z: 0\n};\n\nBoxAnnotation.defaultRoutes = {\n  borderColor: 'color',\n  backgroundColor: 'color'\n};\n\nBoxAnnotation.descriptors = {\n  label: {\n    _fallback: true\n  }\n};\n\nclass DoughnutLabelAnnotation extends Element {\n\n  inRange(mouseX, mouseY, axis, useFinalPosition) {\n    return inLabelRange(\n      {x: mouseX, y: mouseY},\n      {rect: this.getProps(['x', 'y', 'x2', 'y2'], useFinalPosition), center: this.getCenterPoint(useFinalPosition)},\n      axis,\n      {rotation: this.rotation, borderWidth: 0, hitTolerance: this.options.hitTolerance}\n    );\n  }\n\n  getCenterPoint(useFinalPosition) {\n    return getElementCenterPoint(this, useFinalPosition);\n  }\n\n  draw(ctx) {\n    const options = this.options;\n    if (!options.display || !options.content) {\n      return;\n    }\n    drawBackground(ctx, this);\n    ctx.save();\n    translate(ctx, this.getCenterPoint(), this.rotation);\n    drawLabel(ctx, this, options, this._fitRatio);\n    ctx.restore();\n  }\n\n  resolveElementProperties(chart, options) {\n    const meta = getDatasetMeta(chart, options);\n    if (!meta) {\n      return {};\n    }\n    const {controllerMeta, point, radius} = getControllerMeta(chart, options, meta);\n    let labelSize = measureLabelSize(chart.ctx, options);\n    const _fitRatio = getFitRatio(labelSize, radius);\n    if (shouldFit(options, _fitRatio)) {\n      labelSize = {width: labelSize.width * _fitRatio, height: labelSize.height * _fitRatio};\n    }\n    const {position, xAdjust, yAdjust} = options;\n    const boxSize = measureLabelRectangle(point, labelSize, {borderWidth: 0, position, xAdjust, yAdjust});\n    return {\n      initProperties: initAnimationProperties(chart, boxSize, options),\n      ...boxSize,\n      ...controllerMeta,\n      rotation: options.rotation,\n      _fitRatio\n    };\n  }\n}\n\nDoughnutLabelAnnotation.id = 'doughnutLabelAnnotation';\n\nDoughnutLabelAnnotation.defaults = {\n  autoFit: true,\n  autoHide: true,\n  backgroundColor: 'transparent',\n  backgroundShadowColor: 'transparent',\n  borderColor: 'transparent',\n  borderDash: [],\n  borderDashOffset: 0,\n  borderJoinStyle: 'miter',\n  borderShadowColor: 'transparent',\n  borderWidth: 0,\n  color: 'black',\n  content: null,\n  display: true,\n  font: {\n    family: undefined,\n    lineHeight: undefined,\n    size: undefined,\n    style: undefined,\n    weight: undefined\n  },\n  height: undefined,\n  hitTolerance: 0,\n  init: undefined,\n  opacity: undefined,\n  position: 'center',\n  rotation: 0,\n  shadowBlur: 0,\n  shadowOffsetX: 0,\n  shadowOffsetY: 0,\n  spacing: 1,\n  textAlign: 'center',\n  textStrokeColor: undefined,\n  textStrokeWidth: 0,\n  width: undefined,\n  xAdjust: 0,\n  yAdjust: 0\n};\n\nDoughnutLabelAnnotation.defaultRoutes = {\n};\n\nfunction getDatasetMeta(chart, options) {\n  return chart.getSortedVisibleDatasetMetas().reduce(function(result, value) {\n    const controller = value.controller;\n    if (controller instanceof DoughnutController &&\n      isControllerVisible(chart, options, value.data) &&\n      (!result || controller.innerRadius < result.controller.innerRadius) &&\n      controller.options.circumference >= 90) {\n      return value;\n    }\n    return result;\n  }, undefined);\n}\n\nfunction isControllerVisible(chart, options, elements) {\n  if (!options.autoHide) {\n    return true;\n  }\n  for (let i = 0; i < elements.length; i++) {\n    if (!elements[i].hidden && chart.getDataVisibility(i)) {\n      return true;\n    }\n  }\n}\n\nfunction getControllerMeta({chartArea}, options, meta) {\n  const {left, top, right, bottom} = chartArea;\n  const {innerRadius, offsetX, offsetY} = meta.controller;\n  const x = (left + right) / 2 + offsetX;\n  const y = (top + bottom) / 2 + offsetY;\n  const square = {\n    left: Math.max(x - innerRadius, left),\n    right: Math.min(x + innerRadius, right),\n    top: Math.max(y - innerRadius, top),\n    bottom: Math.min(y + innerRadius, bottom)\n  };\n  const point = {\n    x: (square.left + square.right) / 2,\n    y: (square.top + square.bottom) / 2\n  };\n  const space = options.spacing + options.borderWidth / 2;\n  const _radius = innerRadius - space;\n  const _counterclockwise = point.y > y;\n  const side = _counterclockwise ? top + space : bottom - space;\n  const angles = getAngles(side, x, y, _radius);\n  const controllerMeta = {\n    _centerX: x,\n    _centerY: y,\n    _radius,\n    _counterclockwise,\n    ...angles\n  };\n  return {\n    controllerMeta,\n    point,\n    radius: Math.min(innerRadius, Math.min(square.right - square.left, square.bottom - square.top) / 2)\n  };\n}\n\nfunction getFitRatio({width, height}, radius) {\n  const hypo = Math.sqrt(Math.pow(width, 2) + Math.pow(height, 2));\n  return (radius * 2) / hypo;\n}\n\nfunction getAngles(y, centerX, centerY, radius) {\n  const yk2 = Math.pow(centerY - y, 2);\n  const r2 = Math.pow(radius, 2);\n  const b = centerX * -2;\n  const c = Math.pow(centerX, 2) + yk2 - r2;\n  const delta = Math.pow(b, 2) - (4 * c);\n  if (delta <= 0) {\n    return {\n      _startAngle: 0,\n      _endAngle: TAU\n    };\n  }\n  const start = (-b - Math.sqrt(delta)) / 2;\n  const end = (-b + Math.sqrt(delta)) / 2;\n  return {\n    _startAngle: getAngleFromPoint({x: centerX, y: centerY}, {x: start, y}).angle,\n    _endAngle: getAngleFromPoint({x: centerX, y: centerY}, {x: end, y}).angle\n  };\n}\n\nfunction drawBackground(ctx, element) {\n  const {_centerX, _centerY, _radius, _startAngle, _endAngle, _counterclockwise, options} = element;\n  ctx.save();\n  const stroke = setBorderStyle(ctx, options);\n  ctx.fillStyle = options.backgroundColor;\n  ctx.beginPath();\n  ctx.arc(_centerX, _centerY, _radius, _startAngle, _endAngle, _counterclockwise);\n  ctx.closePath();\n  ctx.fill();\n  if (stroke) {\n    ctx.stroke();\n  }\n  ctx.restore();\n}\n\nclass LabelAnnotation extends Element {\n\n  inRange(mouseX, mouseY, axis, useFinalPosition) {\n    return inLabelRange(\n      {x: mouseX, y: mouseY},\n      {rect: this.getProps(['x', 'y', 'x2', 'y2'], useFinalPosition), center: this.getCenterPoint(useFinalPosition)},\n      axis,\n      {rotation: this.rotation, borderWidth: this.options.borderWidth, hitTolerance: this.options.hitTolerance}\n    );\n  }\n\n  getCenterPoint(useFinalPosition) {\n    return getElementCenterPoint(this, useFinalPosition);\n  }\n\n  draw(ctx) {\n    const options = this.options;\n    const visible = !defined(this._visible) || this._visible;\n    if (!options.display || !options.content || !visible) {\n      return;\n    }\n    ctx.save();\n    translate(ctx, this.getCenterPoint(), this.rotation);\n    drawCallout(ctx, this);\n    drawBox(ctx, this, options);\n    drawLabel(ctx, getLabelSize(this), options);\n    ctx.restore();\n  }\n\n  resolveElementProperties(chart, options) {\n    let point;\n    if (!isBoundToPoint(options)) {\n      const {centerX, centerY} = resolveBoxProperties(chart, options);\n      point = {x: centerX, y: centerY};\n    } else {\n      point = getChartPoint(chart, options);\n    }\n    const padding = toPadding(options.padding);\n    const labelSize = measureLabelSize(chart.ctx, options);\n    const boxSize = measureLabelRectangle(point, labelSize, options, padding);\n    return {\n      initProperties: initAnimationProperties(chart, boxSize, options),\n      pointX: point.x,\n      pointY: point.y,\n      ...boxSize,\n      rotation: options.rotation\n    };\n  }\n}\n\nLabelAnnotation.id = 'labelAnnotation';\n\nLabelAnnotation.defaults = {\n  adjustScaleRange: true,\n  backgroundColor: 'transparent',\n  backgroundShadowColor: 'transparent',\n  borderCapStyle: 'butt',\n  borderDash: [],\n  borderDashOffset: 0,\n  borderJoinStyle: 'miter',\n  borderRadius: 0,\n  borderShadowColor: 'transparent',\n  borderWidth: 0,\n  callout: {\n    borderCapStyle: 'butt',\n    borderColor: undefined,\n    borderDash: [],\n    borderDashOffset: 0,\n    borderJoinStyle: 'miter',\n    borderWidth: 1,\n    display: false,\n    margin: 5,\n    position: 'auto',\n    side: 5,\n    start: '50%',\n  },\n  color: 'black',\n  content: null,\n  display: true,\n  font: {\n    family: undefined,\n    lineHeight: undefined,\n    size: undefined,\n    style: undefined,\n    weight: undefined\n  },\n  height: undefined,\n  hitTolerance: 0,\n  init: undefined,\n  opacity: undefined,\n  padding: 6,\n  position: 'center',\n  rotation: 0,\n  shadowBlur: 0,\n  shadowOffsetX: 0,\n  shadowOffsetY: 0,\n  textAlign: 'center',\n  textStrokeColor: undefined,\n  textStrokeWidth: 0,\n  width: undefined,\n  xAdjust: 0,\n  xMax: undefined,\n  xMin: undefined,\n  xScaleID: undefined,\n  xValue: undefined,\n  yAdjust: 0,\n  yMax: undefined,\n  yMin: undefined,\n  yScaleID: undefined,\n  yValue: undefined,\n  z: 0\n};\n\nLabelAnnotation.defaultRoutes = {\n  borderColor: 'color'\n};\n\nfunction getLabelSize({x, y, width, height, options}) {\n  const hBorderWidth = options.borderWidth / 2;\n  const padding = toPadding(options.padding);\n  return {\n    x: x + padding.left + hBorderWidth,\n    y: y + padding.top + hBorderWidth,\n    width: width - padding.left - padding.right - options.borderWidth,\n    height: height - padding.top - padding.bottom - options.borderWidth\n  };\n}\n\nconst pointInLine = (p1, p2, t) => ({x: p1.x + t * (p2.x - p1.x), y: p1.y + t * (p2.y - p1.y)});\nconst interpolateX = (y, p1, p2) => pointInLine(p1, p2, Math.abs((y - p1.y) / (p2.y - p1.y))).x;\nconst interpolateY = (x, p1, p2) => pointInLine(p1, p2, Math.abs((x - p1.x) / (p2.x - p1.x))).y;\nconst sqr = v => v * v;\nconst rangeLimit = (mouseX, mouseY, {x, y, x2, y2}, axis) => axis === 'y' ? {start: Math.min(y, y2), end: Math.max(y, y2), value: mouseY} : {start: Math.min(x, x2), end: Math.max(x, x2), value: mouseX};\n// http://www.independent-software.com/determining-coordinates-on-a-html-canvas-bezier-curve.html\nconst coordInCurve = (start, cp, end, t) => (1 - t) * (1 - t) * start + 2 * (1 - t) * t * cp + t * t * end;\nconst pointInCurve = (start, cp, end, t) => ({x: coordInCurve(start.x, cp.x, end.x, t), y: coordInCurve(start.y, cp.y, end.y, t)});\nconst coordAngleInCurve = (start, cp, end, t) => 2 * (1 - t) * (cp - start) + 2 * t * (end - cp);\nconst angleInCurve = (start, cp, end, t) => -Math.atan2(coordAngleInCurve(start.x, cp.x, end.x, t), coordAngleInCurve(start.y, cp.y, end.y, t)) + 0.5 * PI;\n\nclass LineAnnotation extends Element {\n\n  inRange(mouseX, mouseY, axis, useFinalPosition) {\n    const hitSize = (this.options.borderWidth + this.options.hitTolerance) / 2;\n    if (axis !== 'x' && axis !== 'y') {\n      const point = {mouseX, mouseY};\n      const {path, ctx} = this;\n      if (path) {\n        setBorderStyle(ctx, this.options);\n        ctx.lineWidth += this.options.hitTolerance;\n        const {chart} = this.$context;\n        const mx = mouseX * chart.currentDevicePixelRatio;\n        const my = mouseY * chart.currentDevicePixelRatio;\n        const result = ctx.isPointInStroke(path, mx, my) || isOnLabel(this, point, useFinalPosition);\n        ctx.restore();\n        return result;\n      }\n      const epsilon = sqr(hitSize);\n      return intersects(this, point, epsilon, useFinalPosition) || isOnLabel(this, point, useFinalPosition);\n    }\n    return inAxisRange(this, {mouseX, mouseY}, axis, {hitSize, useFinalPosition});\n  }\n\n  getCenterPoint(useFinalPosition) {\n    return getElementCenterPoint(this, useFinalPosition);\n  }\n\n  draw(ctx) {\n    const {x, y, x2, y2, cp, options} = this;\n\n    ctx.save();\n    if (!setBorderStyle(ctx, options)) {\n      // no border width, then line is not drawn\n      return ctx.restore();\n    }\n    setShadowStyle(ctx, options);\n\n    const length = Math.sqrt(Math.pow(x2 - x, 2) + Math.pow(y2 - y, 2));\n    if (options.curve && cp) {\n      drawCurve(ctx, this, cp, length);\n      return ctx.restore();\n    }\n    const {startOpts, endOpts, startAdjust, endAdjust} = getArrowHeads(this);\n    const angle = Math.atan2(y2 - y, x2 - x);\n    ctx.translate(x, y);\n    ctx.rotate(angle);\n    ctx.beginPath();\n    ctx.moveTo(0 + startAdjust, 0);\n    ctx.lineTo(length - endAdjust, 0);\n    ctx.shadowColor = options.borderShadowColor;\n    ctx.stroke();\n    drawArrowHead(ctx, 0, startAdjust, startOpts);\n    drawArrowHead(ctx, length, -endAdjust, endOpts);\n    ctx.restore();\n  }\n\n  get label() {\n    return this.elements && this.elements[0];\n  }\n\n  resolveElementProperties(chart, options) {\n    const area = resolveLineProperties(chart, options);\n    const {x, y, x2, y2} = area;\n    const inside = isLineInArea(area, chart.chartArea);\n    const properties = inside\n      ? limitLineToArea({x, y}, {x: x2, y: y2}, chart.chartArea)\n      : {x, y, x2, y2, width: Math.abs(x2 - x), height: Math.abs(y2 - y)};\n    properties.centerX = (x2 + x) / 2;\n    properties.centerY = (y2 + y) / 2;\n    properties.initProperties = initAnimationProperties(chart, properties, options);\n    if (options.curve) {\n      const p1 = {x: properties.x, y: properties.y};\n      const p2 = {x: properties.x2, y: properties.y2};\n      properties.cp = getControlPoint(properties, options, distanceBetweenPoints(p1, p2));\n    }\n    const labelProperties = resolveLabelElementProperties(chart, properties, options.label);\n    // additonal prop to manage zoom/pan\n    labelProperties._visible = inside;\n\n    properties.elements = [{\n      type: 'label',\n      optionScope: 'label',\n      properties: labelProperties,\n      initProperties: properties.initProperties\n    }];\n    return properties;\n  }\n}\n\nLineAnnotation.id = 'lineAnnotation';\n\nconst arrowHeadsDefaults = {\n  backgroundColor: undefined,\n  backgroundShadowColor: undefined,\n  borderColor: undefined,\n  borderDash: undefined,\n  borderDashOffset: undefined,\n  borderShadowColor: undefined,\n  borderWidth: undefined,\n  display: undefined,\n  fill: undefined,\n  length: undefined,\n  shadowBlur: undefined,\n  shadowOffsetX: undefined,\n  shadowOffsetY: undefined,\n  width: undefined\n};\n\nLineAnnotation.defaults = {\n  adjustScaleRange: true,\n  arrowHeads: {\n    display: false,\n    end: Object.assign({}, arrowHeadsDefaults),\n    fill: false,\n    length: 12,\n    start: Object.assign({}, arrowHeadsDefaults),\n    width: 6\n  },\n  borderDash: [],\n  borderDashOffset: 0,\n  borderShadowColor: 'transparent',\n  borderWidth: 2,\n  curve: false,\n  controlPoint: {\n    y: '-50%'\n  },\n  display: true,\n  endValue: undefined,\n  init: undefined,\n  hitTolerance: 0,\n  label: {\n    backgroundColor: 'rgba(0,0,0,0.8)',\n    backgroundShadowColor: 'transparent',\n    borderCapStyle: 'butt',\n    borderColor: 'black',\n    borderDash: [],\n    borderDashOffset: 0,\n    borderJoinStyle: 'miter',\n    borderRadius: 6,\n    borderShadowColor: 'transparent',\n    borderWidth: 0,\n    callout: Object.assign({}, LabelAnnotation.defaults.callout),\n    color: '#fff',\n    content: null,\n    display: false,\n    drawTime: undefined,\n    font: {\n      family: undefined,\n      lineHeight: undefined,\n      size: undefined,\n      style: undefined,\n      weight: 'bold'\n    },\n    height: undefined,\n    hitTolerance: undefined,\n    opacity: undefined,\n    padding: 6,\n    position: 'center',\n    rotation: 0,\n    shadowBlur: 0,\n    shadowOffsetX: 0,\n    shadowOffsetY: 0,\n    textAlign: 'center',\n    textStrokeColor: undefined,\n    textStrokeWidth: 0,\n    width: undefined,\n    xAdjust: 0,\n    yAdjust: 0,\n    z: undefined\n  },\n  scaleID: undefined,\n  shadowBlur: 0,\n  shadowOffsetX: 0,\n  shadowOffsetY: 0,\n  value: undefined,\n  xMax: undefined,\n  xMin: undefined,\n  xScaleID: undefined,\n  yMax: undefined,\n  yMin: undefined,\n  yScaleID: undefined,\n  z: 0\n};\n\nLineAnnotation.descriptors = {\n  arrowHeads: {\n    start: {\n      _fallback: true\n    },\n    end: {\n      _fallback: true\n    },\n    _fallback: true\n  }\n};\n\nLineAnnotation.defaultRoutes = {\n  borderColor: 'color'\n};\n\nfunction inAxisRange(element, {mouseX, mouseY}, axis, {hitSize, useFinalPosition}) {\n  const limit = rangeLimit(mouseX, mouseY, element.getProps(['x', 'y', 'x2', 'y2'], useFinalPosition), axis);\n  return inLimit(limit, hitSize) || isOnLabel(element, {mouseX, mouseY}, useFinalPosition, axis);\n}\n\nfunction isLineInArea({x, y, x2, y2}, {top, right, bottom, left}) {\n  return !(\n    (x < left && x2 < left) ||\n    (x > right && x2 > right) ||\n    (y < top && y2 < top) ||\n    (y > bottom && y2 > bottom)\n  );\n}\n\nfunction limitPointToArea({x, y}, p2, {top, right, bottom, left}) {\n  if (x < left) {\n    y = interpolateY(left, {x, y}, p2);\n    x = left;\n  }\n  if (x > right) {\n    y = interpolateY(right, {x, y}, p2);\n    x = right;\n  }\n  if (y < top) {\n    x = interpolateX(top, {x, y}, p2);\n    y = top;\n  }\n  if (y > bottom) {\n    x = interpolateX(bottom, {x, y}, p2);\n    y = bottom;\n  }\n  return {x, y};\n}\n\nfunction limitLineToArea(p1, p2, area) {\n  const {x, y} = limitPointToArea(p1, p2, area);\n  const {x: x2, y: y2} = limitPointToArea(p2, p1, area);\n  return {x, y, x2, y2, width: Math.abs(x2 - x), height: Math.abs(y2 - y)};\n}\n\nfunction intersects(element, {mouseX, mouseY}, epsilon = EPSILON, useFinalPosition) {\n  // Adapted from https://stackoverflow.com/a/6853926/25507\n  const {x: x1, y: y1, x2, y2} = element.getProps(['x', 'y', 'x2', 'y2'], useFinalPosition);\n  const dx = x2 - x1;\n  const dy = y2 - y1;\n  const lenSq = sqr(dx) + sqr(dy);\n  const t = lenSq === 0 ? -1 : ((mouseX - x1) * dx + (mouseY - y1) * dy) / lenSq;\n\n  let xx, yy;\n  if (t < 0) {\n    xx = x1;\n    yy = y1;\n  } else if (t > 1) {\n    xx = x2;\n    yy = y2;\n  } else {\n    xx = x1 + t * dx;\n    yy = y1 + t * dy;\n  }\n  return (sqr(mouseX - xx) + sqr(mouseY - yy)) <= epsilon;\n}\n\nfunction isOnLabel(element, {mouseX, mouseY}, useFinalPosition, axis) {\n  const label = element.label;\n  return label.options.display && label.inRange(mouseX, mouseY, axis, useFinalPosition);\n}\n\nfunction resolveLabelElementProperties(chart, properties, options) {\n  const borderWidth = options.borderWidth;\n  const padding = toPadding(options.padding);\n  const textSize = measureLabelSize(chart.ctx, options);\n  const width = textSize.width + padding.width + borderWidth;\n  const height = textSize.height + padding.height + borderWidth;\n  return calculateLabelPosition(properties, options, {width, height, padding}, chart.chartArea);\n}\n\nfunction calculateAutoRotation(properties) {\n  const {x, y, x2, y2} = properties;\n  const rotation = Math.atan2(y2 - y, x2 - x);\n  // Flip the rotation if it goes > PI/2 or < -PI/2, so label stays upright\n  return rotation > PI / 2 ? rotation - PI : rotation < PI / -2 ? rotation + PI : rotation;\n}\n\nfunction calculateLabelPosition(properties, label, sizes, chartArea) {\n  const {width, height, padding} = sizes;\n  const {xAdjust, yAdjust} = label;\n  const p1 = {x: properties.x, y: properties.y};\n  const p2 = {x: properties.x2, y: properties.y2};\n  const rotation = label.rotation === 'auto' ? calculateAutoRotation(properties) : toRadians(label.rotation);\n  const size = rotatedSize(width, height, rotation);\n  const t = calculateT(properties, label, {labelSize: size, padding}, chartArea);\n  const pt = properties.cp ? pointInCurve(p1, properties.cp, p2, t) : pointInLine(p1, p2, t);\n  const xCoordinateSizes = {size: size.w, min: chartArea.left, max: chartArea.right, padding: padding.left};\n  const yCoordinateSizes = {size: size.h, min: chartArea.top, max: chartArea.bottom, padding: padding.top};\n  const centerX = adjustLabelCoordinate(pt.x, xCoordinateSizes) + xAdjust;\n  const centerY = adjustLabelCoordinate(pt.y, yCoordinateSizes) + yAdjust;\n  return {\n    x: centerX - (width / 2),\n    y: centerY - (height / 2),\n    x2: centerX + (width / 2),\n    y2: centerY + (height / 2),\n    centerX,\n    centerY,\n    pointX: pt.x,\n    pointY: pt.y,\n    width,\n    height,\n    rotation: toDegrees(rotation)\n  };\n}\n\nfunction rotatedSize(width, height, rotation) {\n  const cos = Math.cos(rotation);\n  const sin = Math.sin(rotation);\n  return {\n    w: Math.abs(width * cos) + Math.abs(height * sin),\n    h: Math.abs(width * sin) + Math.abs(height * cos)\n  };\n}\n\nfunction calculateT(properties, label, sizes, chartArea) {\n  let t;\n  const space = spaceAround(properties, chartArea);\n  if (label.position === 'start') {\n    t = calculateTAdjust({w: properties.x2 - properties.x, h: properties.y2 - properties.y}, sizes, label, space);\n  } else if (label.position === 'end') {\n    t = 1 - calculateTAdjust({w: properties.x - properties.x2, h: properties.y - properties.y2}, sizes, label, space);\n  } else {\n    t = getRelativePosition(1, label.position);\n  }\n  return t;\n}\n\nfunction calculateTAdjust(lineSize, sizes, label, space) {\n  const {labelSize, padding} = sizes;\n  const lineW = lineSize.w * space.dx;\n  const lineH = lineSize.h * space.dy;\n  const x = (lineW > 0) && ((labelSize.w / 2 + padding.left - space.x) / lineW);\n  const y = (lineH > 0) && ((labelSize.h / 2 + padding.top - space.y) / lineH);\n  return clamp(Math.max(x, y), 0, 0.25);\n}\n\nfunction spaceAround(properties, chartArea) {\n  const {x, x2, y, y2} = properties;\n  const t = Math.min(y, y2) - chartArea.top;\n  const l = Math.min(x, x2) - chartArea.left;\n  const b = chartArea.bottom - Math.max(y, y2);\n  const r = chartArea.right - Math.max(x, x2);\n  return {\n    x: Math.min(l, r),\n    y: Math.min(t, b),\n    dx: l <= r ? 1 : -1,\n    dy: t <= b ? 1 : -1\n  };\n}\n\nfunction adjustLabelCoordinate(coordinate, labelSizes) {\n  const {size, min, max, padding} = labelSizes;\n  const halfSize = size / 2;\n  if (size > max - min) {\n    // if it does not fit, display as much as possible\n    return (max + min) / 2;\n  }\n  if (min >= (coordinate - padding - halfSize)) {\n    coordinate = min + padding + halfSize;\n  }\n  if (max <= (coordinate + padding + halfSize)) {\n    coordinate = max - padding - halfSize;\n  }\n  return coordinate;\n}\n\nfunction getArrowHeads(line) {\n  const options = line.options;\n  const arrowStartOpts = options.arrowHeads && options.arrowHeads.start;\n  const arrowEndOpts = options.arrowHeads && options.arrowHeads.end;\n  return {\n    startOpts: arrowStartOpts,\n    endOpts: arrowEndOpts,\n    startAdjust: getLineAdjust(line, arrowStartOpts),\n    endAdjust: getLineAdjust(line, arrowEndOpts)\n  };\n}\n\nfunction getLineAdjust(line, arrowOpts) {\n  if (!arrowOpts || !arrowOpts.display) {\n    return 0;\n  }\n  const {length, width} = arrowOpts;\n  const adjust = line.options.borderWidth / 2;\n  const p1 = {x: length, y: width + adjust};\n  const p2 = {x: 0, y: adjust};\n  return Math.abs(interpolateX(0, p1, p2));\n}\n\nfunction drawArrowHead(ctx, offset, adjust, arrowOpts) {\n  if (!arrowOpts || !arrowOpts.display) {\n    return;\n  }\n  const {length, width, fill, backgroundColor, borderColor} = arrowOpts;\n  const arrowOffsetX = Math.abs(offset - length) + adjust;\n  ctx.beginPath();\n  setShadowStyle(ctx, arrowOpts);\n  setBorderStyle(ctx, arrowOpts);\n  ctx.moveTo(arrowOffsetX, -width);\n  ctx.lineTo(offset + adjust, 0);\n  ctx.lineTo(arrowOffsetX, width);\n  if (fill === true) {\n    ctx.fillStyle = backgroundColor || borderColor;\n    ctx.closePath();\n    ctx.fill();\n    ctx.shadowColor = 'transparent';\n  } else {\n    ctx.shadowColor = arrowOpts.borderShadowColor;\n  }\n  ctx.stroke();\n}\n\nfunction getControlPoint(properties, options, distance) {\n  const {x, y, x2, y2, centerX, centerY} = properties;\n  const angle = Math.atan2(y2 - y, x2 - x);\n  const cp = toPosition(options.controlPoint, 0);\n  const point = {\n    x: centerX + getSize(distance, cp.x, false),\n    y: centerY + getSize(distance, cp.y, false)\n  };\n  return rotated(point, {x: centerX, y: centerY}, angle);\n}\n\nfunction drawArrowHeadOnCurve(ctx, {x, y}, {angle, adjust}, arrowOpts) {\n  if (!arrowOpts || !arrowOpts.display) {\n    return;\n  }\n  ctx.save();\n  ctx.translate(x, y);\n  ctx.rotate(angle);\n  drawArrowHead(ctx, 0, -adjust, arrowOpts);\n  ctx.restore();\n}\n\nfunction drawCurve(ctx, element, cp, length) {\n  const {x, y, x2, y2, options} = element;\n  const {startOpts, endOpts, startAdjust, endAdjust} = getArrowHeads(element);\n  const p1 = {x, y};\n  const p2 = {x: x2, y: y2};\n  const startAngle = angleInCurve(p1, cp, p2, 0);\n  const endAngle = angleInCurve(p1, cp, p2, 1) - PI;\n  const ps = pointInCurve(p1, cp, p2, startAdjust / length);\n  const pe = pointInCurve(p1, cp, p2, 1 - endAdjust / length);\n\n  const path = new Path2D();\n  ctx.beginPath();\n  path.moveTo(ps.x, ps.y);\n  path.quadraticCurveTo(cp.x, cp.y, pe.x, pe.y);\n  ctx.shadowColor = options.borderShadowColor;\n  ctx.stroke(path);\n  element.path = path;\n  element.ctx = ctx;\n  drawArrowHeadOnCurve(ctx, ps, {angle: startAngle, adjust: startAdjust}, startOpts);\n  drawArrowHeadOnCurve(ctx, pe, {angle: endAngle, adjust: endAdjust}, endOpts);\n}\n\nclass EllipseAnnotation extends Element {\n\n  inRange(mouseX, mouseY, axis, useFinalPosition) {\n    const rotation = this.options.rotation;\n    const hitSize = (this.options.borderWidth + this.options.hitTolerance) / 2;\n    if (axis !== 'x' && axis !== 'y') {\n      return pointInEllipse({x: mouseX, y: mouseY}, this.getProps(['width', 'height', 'centerX', 'centerY'], useFinalPosition), rotation, hitSize);\n    }\n    const {x, y, x2, y2} = this.getProps(['x', 'y', 'x2', 'y2'], useFinalPosition);\n    const limit = axis === 'y' ? {start: y, end: y2} : {start: x, end: x2};\n    const rotatedPoint = rotated({x: mouseX, y: mouseY}, this.getCenterPoint(useFinalPosition), toRadians(-rotation));\n    return rotatedPoint[axis] >= limit.start - hitSize - EPSILON && rotatedPoint[axis] <= limit.end + hitSize + EPSILON;\n  }\n\n  getCenterPoint(useFinalPosition) {\n    return getElementCenterPoint(this, useFinalPosition);\n  }\n\n  draw(ctx) {\n    const {width, height, centerX, centerY, options} = this;\n    ctx.save();\n    translate(ctx, this.getCenterPoint(), options.rotation);\n    setShadowStyle(ctx, this.options);\n    ctx.beginPath();\n    ctx.fillStyle = options.backgroundColor;\n    const stroke = setBorderStyle(ctx, options);\n    ctx.ellipse(centerX, centerY, height / 2, width / 2, PI / 2, 0, 2 * PI);\n    ctx.fill();\n    if (stroke) {\n      ctx.shadowColor = options.borderShadowColor;\n      ctx.stroke();\n    }\n    ctx.restore();\n  }\n\n  get label() {\n    return this.elements && this.elements[0];\n  }\n\n  resolveElementProperties(chart, options) {\n    return resolveBoxAndLabelProperties(chart, options);\n  }\n\n}\n\nEllipseAnnotation.id = 'ellipseAnnotation';\n\nEllipseAnnotation.defaults = {\n  adjustScaleRange: true,\n  backgroundShadowColor: 'transparent',\n  borderDash: [],\n  borderDashOffset: 0,\n  borderShadowColor: 'transparent',\n  borderWidth: 1,\n  display: true,\n  hitTolerance: 0,\n  init: undefined,\n  label: Object.assign({}, BoxAnnotation.defaults.label),\n  rotation: 0,\n  shadowBlur: 0,\n  shadowOffsetX: 0,\n  shadowOffsetY: 0,\n  xMax: undefined,\n  xMin: undefined,\n  xScaleID: undefined,\n  yMax: undefined,\n  yMin: undefined,\n  yScaleID: undefined,\n  z: 0\n};\n\nEllipseAnnotation.defaultRoutes = {\n  borderColor: 'color',\n  backgroundColor: 'color'\n};\n\nEllipseAnnotation.descriptors = {\n  label: {\n    _fallback: true\n  }\n};\n\nfunction pointInEllipse(p, ellipse, rotation, hitSize) {\n  const {width, height, centerX, centerY} = ellipse;\n  const xRadius = width / 2;\n  const yRadius = height / 2;\n\n  if (xRadius <= 0 || yRadius <= 0) {\n    return false;\n  }\n  // https://stackoverflow.com/questions/7946187/point-and-ellipse-rotated-position-test-algorithm\n  const angle = toRadians(rotation || 0);\n  const cosAngle = Math.cos(angle);\n  const sinAngle = Math.sin(angle);\n  const a = Math.pow(cosAngle * (p.x - centerX) + sinAngle * (p.y - centerY), 2);\n  const b = Math.pow(sinAngle * (p.x - centerX) - cosAngle * (p.y - centerY), 2);\n  return (a / Math.pow(xRadius + hitSize, 2)) + (b / Math.pow(yRadius + hitSize, 2)) <= 1.0001;\n}\n\nclass PointAnnotation extends Element {\n\n  inRange(mouseX, mouseY, axis, useFinalPosition) {\n    const {x, y, x2, y2, width} = this.getProps(['x', 'y', 'x2', 'y2', 'width'], useFinalPosition);\n    const hitSize = (this.options.borderWidth + this.options.hitTolerance) / 2;\n    if (axis !== 'x' && axis !== 'y') {\n      return inPointRange({x: mouseX, y: mouseY}, this.getCenterPoint(useFinalPosition), width / 2, hitSize);\n    }\n    const limit = axis === 'y' ? {start: y, end: y2, value: mouseY} : {start: x, end: x2, value: mouseX};\n    return inLimit(limit, hitSize);\n  }\n\n  getCenterPoint(useFinalPosition) {\n    return getElementCenterPoint(this, useFinalPosition);\n  }\n\n  draw(ctx) {\n    const options = this.options;\n    const borderWidth = options.borderWidth;\n    if (options.radius < 0.1) {\n      return;\n    }\n    ctx.save();\n    ctx.fillStyle = options.backgroundColor;\n    setShadowStyle(ctx, options);\n    const stroke = setBorderStyle(ctx, options);\n    drawPoint(ctx, this, this.centerX, this.centerY);\n    if (stroke && !isImageOrCanvas(options.pointStyle)) {\n      ctx.shadowColor = options.borderShadowColor;\n      ctx.stroke();\n    }\n    ctx.restore();\n    options.borderWidth = borderWidth;\n  }\n\n  resolveElementProperties(chart, options) {\n    const properties = resolvePointProperties(chart, options);\n    properties.initProperties = initAnimationProperties(chart, properties, options);\n    return properties;\n  }\n}\n\nPointAnnotation.id = 'pointAnnotation';\n\nPointAnnotation.defaults = {\n  adjustScaleRange: true,\n  backgroundShadowColor: 'transparent',\n  borderDash: [],\n  borderDashOffset: 0,\n  borderShadowColor: 'transparent',\n  borderWidth: 1,\n  display: true,\n  hitTolerance: 0,\n  init: undefined,\n  pointStyle: 'circle',\n  radius: 10,\n  rotation: 0,\n  shadowBlur: 0,\n  shadowOffsetX: 0,\n  shadowOffsetY: 0,\n  xAdjust: 0,\n  xMax: undefined,\n  xMin: undefined,\n  xScaleID: undefined,\n  xValue: undefined,\n  yAdjust: 0,\n  yMax: undefined,\n  yMin: undefined,\n  yScaleID: undefined,\n  yValue: undefined,\n  z: 0\n};\n\nPointAnnotation.defaultRoutes = {\n  borderColor: 'color',\n  backgroundColor: 'color'\n};\n\nclass PolygonAnnotation extends Element {\n\n  inRange(mouseX, mouseY, axis, useFinalPosition) {\n    if (axis !== 'x' && axis !== 'y') {\n      return this.options.radius >= 0.1 && this.elements.length > 1 && pointIsInPolygon(this.elements, mouseX, mouseY, useFinalPosition);\n    }\n    const rotatedPoint = rotated({x: mouseX, y: mouseY}, this.getCenterPoint(useFinalPosition), toRadians(-this.options.rotation));\n    const axisPoints = this.elements.map((point) => axis === 'y' ? point.bY : point.bX);\n    const start = Math.min(...axisPoints);\n    const end = Math.max(...axisPoints);\n    return rotatedPoint[axis] >= start && rotatedPoint[axis] <= end;\n  }\n\n  getCenterPoint(useFinalPosition) {\n    return getElementCenterPoint(this, useFinalPosition);\n  }\n\n  draw(ctx) {\n    const {elements, options} = this;\n    ctx.save();\n    ctx.beginPath();\n    ctx.fillStyle = options.backgroundColor;\n    setShadowStyle(ctx, options);\n    const stroke = setBorderStyle(ctx, options);\n    let first = true;\n    for (const el of elements) {\n      if (first) {\n        ctx.moveTo(el.x, el.y);\n        first = false;\n      } else {\n        ctx.lineTo(el.x, el.y);\n      }\n    }\n    ctx.closePath();\n    ctx.fill();\n    // If no border, don't draw it\n    if (stroke) {\n      ctx.shadowColor = options.borderShadowColor;\n      ctx.stroke();\n    }\n    ctx.restore();\n  }\n\n  resolveElementProperties(chart, options) {\n    const properties = resolvePointProperties(chart, options);\n    const {sides, rotation} = options;\n    const elements = [];\n    const angle = (2 * PI) / sides;\n    let rad = rotation * RAD_PER_DEG;\n    for (let i = 0; i < sides; i++, rad += angle) {\n      const elProps = buildPointElement(properties, options, rad);\n      elProps.initProperties = initAnimationProperties(chart, properties, options);\n      elements.push(elProps);\n    }\n    properties.elements = elements;\n    return properties;\n  }\n}\n\nPolygonAnnotation.id = 'polygonAnnotation';\n\nPolygonAnnotation.defaults = {\n  adjustScaleRange: true,\n  backgroundShadowColor: 'transparent',\n  borderCapStyle: 'butt',\n  borderDash: [],\n  borderDashOffset: 0,\n  borderJoinStyle: 'miter',\n  borderShadowColor: 'transparent',\n  borderWidth: 1,\n  display: true,\n  hitTolerance: 0,\n  init: undefined,\n  point: {\n    radius: 0\n  },\n  radius: 10,\n  rotation: 0,\n  shadowBlur: 0,\n  shadowOffsetX: 0,\n  shadowOffsetY: 0,\n  sides: 3,\n  xAdjust: 0,\n  xMax: undefined,\n  xMin: undefined,\n  xScaleID: undefined,\n  xValue: undefined,\n  yAdjust: 0,\n  yMax: undefined,\n  yMin: undefined,\n  yScaleID: undefined,\n  yValue: undefined,\n  z: 0\n};\n\nPolygonAnnotation.defaultRoutes = {\n  borderColor: 'color',\n  backgroundColor: 'color'\n};\n\nfunction buildPointElement({centerX, centerY}, {radius, borderWidth, hitTolerance}, rad) {\n  const hitSize = (borderWidth + hitTolerance) / 2;\n  const sin = Math.sin(rad);\n  const cos = Math.cos(rad);\n  const point = {x: centerX + sin * radius, y: centerY - cos * radius};\n  return {\n    type: 'point',\n    optionScope: 'point',\n    properties: {\n      x: point.x,\n      y: point.y,\n      centerX: point.x,\n      centerY: point.y,\n      bX: centerX + sin * (radius + hitSize),\n      bY: centerY - cos * (radius + hitSize)\n    }\n  };\n}\n\nfunction pointIsInPolygon(points, x, y, useFinalPosition) {\n  let isInside = false;\n  let A = points[points.length - 1].getProps(['bX', 'bY'], useFinalPosition);\n  for (const point of points) {\n    const B = point.getProps(['bX', 'bY'], useFinalPosition);\n    if ((B.bY > y) !== (A.bY > y) && x < (A.bX - B.bX) * (y - B.bY) / (A.bY - B.bY) + B.bX) {\n      isInside = !isInside;\n    }\n    A = B;\n  }\n  return isInside;\n}\n\nconst annotationTypes = {\n  box: BoxAnnotation,\n  doughnutLabel: DoughnutLabelAnnotation,\n  ellipse: EllipseAnnotation,\n  label: LabelAnnotation,\n  line: LineAnnotation,\n  point: PointAnnotation,\n  polygon: PolygonAnnotation\n};\n\n/**\n * Register fallback for annotation elements\n * For example lineAnnotation options would be looked through:\n * - the annotation object (options.plugins.annotation.annotations[id])\n * - element options (options.elements.lineAnnotation)\n * - element defaults (defaults.elements.lineAnnotation)\n * - annotation plugin defaults (defaults.plugins.annotation, this is what we are registering here)\n */\nObject.keys(annotationTypes).forEach(key => {\n  defaults.describe(`elements.${annotationTypes[key].id}`, {\n    _fallback: 'plugins.annotation.common'\n  });\n});\n\nconst directUpdater = {\n  update: Object.assign\n};\n\nconst hooks$1 = eventHooks.concat(elementHooks);\nconst resolve = (value, optDefs) => isObject(optDefs) ? resolveObj(value, optDefs) : value;\n\n\n/**\n * @typedef { import(\"chart.js\").Chart } Chart\n * @typedef { import(\"chart.js\").UpdateMode } UpdateMode\n * @typedef { import('../../types/options').AnnotationPluginOptions } AnnotationPluginOptions\n */\n\n/**\n * @param {string} prop\n * @returns {boolean}\n */\nconst isIndexable = (prop) => prop === 'color' || prop === 'font';\n\n/**\n * Resolve the annotation type, checking if is supported.\n * @param {string} [type=line] - annotation type\n * @returns {string} resolved annotation type\n */\nfunction resolveType(type = 'line') {\n  if (annotationTypes[type]) {\n    return type;\n  }\n  console.warn(`Unknown annotation type: '${type}', defaulting to 'line'`);\n  return 'line';\n}\n\n/**\n * @param {Chart} chart\n * @param {Object} state\n * @param {AnnotationPluginOptions} options\n * @param {UpdateMode} mode\n */\nfunction updateElements(chart, state, options, mode) {\n  const animations = resolveAnimations(chart, options.animations, mode);\n\n  const annotations = state.annotations;\n  const elements = resyncElements(state.elements, annotations);\n\n  for (let i = 0; i < annotations.length; i++) {\n    const annotationOptions = annotations[i];\n    const element = getOrCreateElement(elements, i, annotationOptions.type);\n    const resolver = annotationOptions.setContext(getContext(chart, element, elements, annotationOptions));\n    const properties = element.resolveElementProperties(chart, resolver);\n\n    properties.skip = toSkip(properties);\n\n    if ('elements' in properties) {\n      updateSubElements(element, properties.elements, resolver, animations);\n      // Remove the sub-element definitions from properties, so the actual elements\n      // are not overwritten by their definitions\n      delete properties.elements;\n    }\n\n    if (!defined(element.x)) {\n      // If the element is newly created, assing the properties directly - to\n      // make them readily awailable to any scriptable options. If we do not do this,\n      // the properties retruned by `resolveElementProperties` are available only\n      // after options resolution.\n      Object.assign(element, properties);\n    }\n\n    Object.assign(element, properties.initProperties);\n    properties.options = resolveAnnotationOptions(resolver);\n\n    animations.update(element, properties);\n  }\n}\n\nfunction toSkip(properties) {\n  return isNaN(properties.x) || isNaN(properties.y);\n}\n\nfunction resolveAnimations(chart, animOpts, mode) {\n  if (mode === 'reset' || mode === 'none' || mode === 'resize') {\n    return directUpdater;\n  }\n  return new Animations(chart, animOpts);\n}\n\nfunction updateSubElements(mainElement, elements, resolver, animations) {\n  const subElements = mainElement.elements || (mainElement.elements = []);\n  subElements.length = elements.length;\n  for (let i = 0; i < elements.length; i++) {\n    const definition = elements[i];\n    const properties = definition.properties;\n    const subElement = getOrCreateElement(subElements, i, definition.type, definition.initProperties);\n    const subResolver = resolver[definition.optionScope].override(definition);\n    properties.options = resolveAnnotationOptions(subResolver);\n    animations.update(subElement, properties);\n  }\n}\n\nfunction getOrCreateElement(elements, index, type, initProperties) {\n  const elementClass = annotationTypes[resolveType(type)];\n  let element = elements[index];\n  if (!element || !(element instanceof elementClass)) {\n    element = elements[index] = new elementClass();\n    Object.assign(element, initProperties);\n  }\n  return element;\n}\n\nfunction resolveAnnotationOptions(resolver) {\n  const elementClass = annotationTypes[resolveType(resolver.type)];\n  const result = {};\n  result.id = resolver.id;\n  result.type = resolver.type;\n  result.drawTime = resolver.drawTime;\n  Object.assign(result,\n    resolveObj(resolver, elementClass.defaults),\n    resolveObj(resolver, elementClass.defaultRoutes));\n  for (const hook of hooks$1) {\n    result[hook] = resolver[hook];\n  }\n  return result;\n}\n\nfunction resolveObj(resolver, defs) {\n  const result = {};\n  for (const prop of Object.keys(defs)) {\n    const optDefs = defs[prop];\n    const value = resolver[prop];\n    if (isIndexable(prop) && isArray(value)) {\n      result[prop] = value.map((item) => resolve(item, optDefs));\n    } else {\n      result[prop] = resolve(value, optDefs);\n    }\n  }\n  return result;\n}\n\nfunction getContext(chart, element, elements, annotation) {\n  return element.$context || (element.$context = Object.assign(Object.create(chart.getContext()), {\n    element,\n    get elements() {\n      return elements.filter((el) => el && el.options);\n    },\n    id: annotation.id,\n    type: 'annotation'\n  }));\n}\n\nfunction resyncElements(elements, annotations) {\n  const count = annotations.length;\n  const start = elements.length;\n\n  if (start < count) {\n    const add = count - start;\n    elements.splice(start, 0, ...new Array(add));\n  } else if (start > count) {\n    elements.splice(count, start - count);\n  }\n  return elements;\n}\n\nvar version = \"3.1.0\";\n\nconst chartStates = new Map();\nconst isNotDoughnutLabel = annotation => annotation.type !== 'doughnutLabel';\nconst hooks = eventHooks.concat(elementHooks);\n\nvar annotation = {\n  id: 'annotation',\n\n  version,\n\n  beforeRegister() {\n    requireVersion('chart.js', '4.0', Chart.version);\n  },\n\n  afterRegister() {\n    Chart.register(annotationTypes);\n  },\n\n  afterUnregister() {\n    Chart.unregister(annotationTypes);\n  },\n\n  beforeInit(chart) {\n    chartStates.set(chart, {\n      annotations: [],\n      elements: [],\n      visibleElements: [],\n      listeners: {},\n      listened: false,\n      moveListened: false,\n      hooks: {},\n      hooked: false,\n      hovered: []\n    });\n  },\n\n  beforeUpdate(chart, args, options) {\n    const state = chartStates.get(chart);\n    const annotations = state.annotations = [];\n\n    let annotationOptions = options.annotations;\n    if (isObject(annotationOptions)) {\n      Object.keys(annotationOptions).forEach(key => {\n        const value = annotationOptions[key];\n        if (isObject(value)) {\n          value.id = key;\n          annotations.push(value);\n        }\n      });\n    } else if (isArray(annotationOptions)) {\n      annotations.push(...annotationOptions);\n    }\n    verifyScaleOptions(annotations.filter(isNotDoughnutLabel), chart.scales);\n  },\n\n  afterDataLimits(chart, args) {\n    const state = chartStates.get(chart);\n    adjustScaleRange(chart, args.scale, state.annotations.filter(isNotDoughnutLabel).filter(a => a.display && a.adjustScaleRange));\n  },\n\n  afterUpdate(chart, args, options) {\n    const state = chartStates.get(chart);\n    updateListeners(chart, state, options);\n    updateElements(chart, state, options, args.mode);\n    state.visibleElements = state.elements.filter(el => !el.skip && el.options.display);\n    updateHooks(chart, state, options);\n  },\n\n  beforeDatasetsDraw(chart, _args, options) {\n    draw(chart, 'beforeDatasetsDraw', options.clip);\n  },\n\n  afterDatasetsDraw(chart, _args, options) {\n    draw(chart, 'afterDatasetsDraw', options.clip);\n  },\n\n  beforeDatasetDraw(chart, _args, options) {\n    draw(chart, _args.index, options.clip);\n  },\n\n  beforeDraw(chart, _args, options) {\n    draw(chart, 'beforeDraw', options.clip);\n  },\n\n  afterDraw(chart, _args, options) {\n    draw(chart, 'afterDraw', options.clip);\n  },\n\n  beforeEvent(chart, args, options) {\n    const state = chartStates.get(chart);\n    if (handleEvent(state, args.event, options)) {\n      args.changed = true;\n    }\n  },\n\n  afterDestroy(chart) {\n    chartStates.delete(chart);\n  },\n\n  getAnnotations(chart) {\n    const state = chartStates.get(chart);\n    return state ? state.elements : [];\n  },\n\n  // only for testing\n  _getAnnotationElementsAtEventForMode(visibleElements, event, options) {\n    return getElements(visibleElements, event, options);\n  },\n\n  defaults: {\n    animations: {\n      numbers: {\n        properties: ['x', 'y', 'x2', 'y2', 'width', 'height', 'centerX', 'centerY', 'pointX', 'pointY', 'radius'],\n        type: 'number'\n      },\n      colors: {\n        properties: ['backgroundColor', 'borderColor'],\n        type: 'color'\n      }\n    },\n    clip: true,\n    interaction: {\n      mode: undefined,\n      axis: undefined,\n      intersect: undefined\n    },\n    common: {\n      drawTime: 'afterDatasetsDraw',\n      init: false,\n      label: {\n      }\n    }\n  },\n\n  descriptors: {\n    _indexable: false,\n    _scriptable: (prop) => !hooks.includes(prop) && prop !== 'init',\n    annotations: {\n      _allKeys: false,\n      _fallback: (prop, opts) => `elements.${annotationTypes[resolveType(opts.type)].id}`\n    },\n    interaction: {\n      _fallback: true\n    },\n    common: {\n      label: {\n        _indexable: isIndexable,\n        _fallback: true\n      },\n      _indexable: isIndexable\n    }\n  },\n\n  additionalOptionScopes: ['']\n};\n\nfunction draw(chart, caller, clip) {\n  const {ctx, chartArea} = chart;\n  const state = chartStates.get(chart);\n\n  if (clip) {\n    clipArea(ctx, chartArea);\n  }\n\n  const drawableElements = getDrawableElements(state.visibleElements, caller).sort((a, b) => a.element.options.z - b.element.options.z);\n  for (const item of drawableElements) {\n    drawElement(ctx, chartArea, state, item);\n  }\n\n  if (clip) {\n    unclipArea(ctx);\n  }\n}\n\nfunction getDrawableElements(elements, caller) {\n  const drawableElements = [];\n  for (const el of elements) {\n    if (el.options.drawTime === caller) {\n      drawableElements.push({element: el, main: true});\n    }\n    if (el.elements && el.elements.length) {\n      for (const sub of el.elements) {\n        if (sub.options.display && sub.options.drawTime === caller) {\n          drawableElements.push({element: sub});\n        }\n      }\n    }\n  }\n  return drawableElements;\n}\n\nfunction drawElement(ctx, chartArea, state, item) {\n  const el = item.element;\n  if (item.main) {\n    invokeHook(state, el, 'beforeDraw');\n    el.draw(ctx, chartArea);\n    invokeHook(state, el, 'afterDraw');\n  } else {\n    el.draw(ctx, chartArea);\n  }\n}\n\nexport { annotation as default };\n","export * from '../dist/helpers.js';\n","let colors = require('./lib/public/colors')\nmodule.exports = (colors.__esModule ? colors : { default: colors }).default\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nObject.defineProperty(exports, \"default\", {\n    enumerable: true,\n    get: function() {\n        return _default;\n    }\n});\nconst _log = /*#__PURE__*/ _interop_require_default(require(\"../util/log\"));\nfunction _interop_require_default(obj) {\n    return obj && obj.__esModule ? obj : {\n        default: obj\n    };\n}\nfunction warn({ version , from , to  }) {\n    _log.default.warn(`${from}-color-renamed`, [\n        `As of Tailwind CSS ${version}, \\`${from}\\` has been renamed to \\`${to}\\`.`,\n        \"Update your configuration file to silence this warning.\"\n    ]);\n}\nconst _default = {\n    inherit: \"inherit\",\n    current: \"currentColor\",\n    transparent: \"transparent\",\n    black: \"#000\",\n    white: \"#fff\",\n    slate: {\n        50: \"#f8fafc\",\n        100: \"#f1f5f9\",\n        200: \"#e2e8f0\",\n        300: \"#cbd5e1\",\n        400: \"#94a3b8\",\n        500: \"#64748b\",\n        600: \"#475569\",\n        700: \"#334155\",\n        800: \"#1e293b\",\n        900: \"#0f172a\",\n        950: \"#020617\"\n    },\n    gray: {\n        50: \"#f9fafb\",\n        100: \"#f3f4f6\",\n        200: \"#e5e7eb\",\n        300: \"#d1d5db\",\n        400: \"#9ca3af\",\n        500: \"#6b7280\",\n        600: \"#4b5563\",\n        700: \"#374151\",\n        800: \"#1f2937\",\n        900: \"#111827\",\n        950: \"#030712\"\n    },\n    zinc: {\n        50: \"#fafafa\",\n        100: \"#f4f4f5\",\n        200: \"#e4e4e7\",\n        300: \"#d4d4d8\",\n        400: \"#a1a1aa\",\n        500: \"#71717a\",\n        600: \"#52525b\",\n        700: \"#3f3f46\",\n        800: \"#27272a\",\n        900: \"#18181b\",\n        950: \"#09090b\"\n    },\n    neutral: {\n        50: \"#fafafa\",\n        100: \"#f5f5f5\",\n        200: \"#e5e5e5\",\n        300: \"#d4d4d4\",\n        400: \"#a3a3a3\",\n        500: \"#737373\",\n        600: \"#525252\",\n        700: \"#404040\",\n        800: \"#262626\",\n        900: \"#171717\",\n        950: \"#0a0a0a\"\n    },\n    stone: {\n        50: \"#fafaf9\",\n        100: \"#f5f5f4\",\n        200: \"#e7e5e4\",\n        300: \"#d6d3d1\",\n        400: \"#a8a29e\",\n        500: \"#78716c\",\n        600: \"#57534e\",\n        700: \"#44403c\",\n        800: \"#292524\",\n        900: \"#1c1917\",\n        950: \"#0c0a09\"\n    },\n    red: {\n        50: \"#fef2f2\",\n        100: \"#fee2e2\",\n        200: \"#fecaca\",\n        300: \"#fca5a5\",\n        400: \"#f87171\",\n        500: \"#ef4444\",\n        600: \"#dc2626\",\n        700: \"#b91c1c\",\n        800: \"#991b1b\",\n        900: \"#7f1d1d\",\n        950: \"#450a0a\"\n    },\n    orange: {\n        50: \"#fff7ed\",\n        100: \"#ffedd5\",\n        200: \"#fed7aa\",\n        300: \"#fdba74\",\n        400: \"#fb923c\",\n        500: \"#f97316\",\n        600: \"#ea580c\",\n        700: \"#c2410c\",\n        800: \"#9a3412\",\n        900: \"#7c2d12\",\n        950: \"#431407\"\n    },\n    amber: {\n        50: \"#fffbeb\",\n        100: \"#fef3c7\",\n        200: \"#fde68a\",\n        300: \"#fcd34d\",\n        400: \"#fbbf24\",\n        500: \"#f59e0b\",\n        600: \"#d97706\",\n        700: \"#b45309\",\n        800: \"#92400e\",\n        900: \"#78350f\",\n        950: \"#451a03\"\n    },\n    yellow: {\n        50: \"#fefce8\",\n        100: \"#fef9c3\",\n        200: \"#fef08a\",\n        300: \"#fde047\",\n        400: \"#facc15\",\n        500: \"#eab308\",\n        600: \"#ca8a04\",\n        700: \"#a16207\",\n        800: \"#854d0e\",\n        900: \"#713f12\",\n        950: \"#422006\"\n    },\n    lime: {\n        50: \"#f7fee7\",\n        100: \"#ecfccb\",\n        200: \"#d9f99d\",\n        300: \"#bef264\",\n        400: \"#a3e635\",\n        500: \"#84cc16\",\n        600: \"#65a30d\",\n        700: \"#4d7c0f\",\n        800: \"#3f6212\",\n        900: \"#365314\",\n        950: \"#1a2e05\"\n    },\n    green: {\n        50: \"#f0fdf4\",\n        100: \"#dcfce7\",\n        200: \"#bbf7d0\",\n        300: \"#86efac\",\n        400: \"#4ade80\",\n        500: \"#22c55e\",\n        600: \"#16a34a\",\n        700: \"#15803d\",\n        800: \"#166534\",\n        900: \"#14532d\",\n        950: \"#052e16\"\n    },\n    emerald: {\n        50: \"#ecfdf5\",\n        100: \"#d1fae5\",\n        200: \"#a7f3d0\",\n        300: \"#6ee7b7\",\n        400: \"#34d399\",\n        500: \"#10b981\",\n        600: \"#059669\",\n        700: \"#047857\",\n        800: \"#065f46\",\n        900: \"#064e3b\",\n        950: \"#022c22\"\n    },\n    teal: {\n        50: \"#f0fdfa\",\n        100: \"#ccfbf1\",\n        200: \"#99f6e4\",\n        300: \"#5eead4\",\n        400: \"#2dd4bf\",\n        500: \"#14b8a6\",\n        600: \"#0d9488\",\n        700: \"#0f766e\",\n        800: \"#115e59\",\n        900: \"#134e4a\",\n        950: \"#042f2e\"\n    },\n    cyan: {\n        50: \"#ecfeff\",\n        100: \"#cffafe\",\n        200: \"#a5f3fc\",\n        300: \"#67e8f9\",\n        400: \"#22d3ee\",\n        500: \"#06b6d4\",\n        600: \"#0891b2\",\n        700: \"#0e7490\",\n        800: \"#155e75\",\n        900: \"#164e63\",\n        950: \"#083344\"\n    },\n    sky: {\n        50: \"#f0f9ff\",\n        100: \"#e0f2fe\",\n        200: \"#bae6fd\",\n        300: \"#7dd3fc\",\n        400: \"#38bdf8\",\n        500: \"#0ea5e9\",\n        600: \"#0284c7\",\n        700: \"#0369a1\",\n        800: \"#075985\",\n        900: \"#0c4a6e\",\n        950: \"#082f49\"\n    },\n    blue: {\n        50: \"#eff6ff\",\n        100: \"#dbeafe\",\n        200: \"#bfdbfe\",\n        300: \"#93c5fd\",\n        400: \"#60a5fa\",\n        500: \"#3b82f6\",\n        600: \"#2563eb\",\n        700: \"#1d4ed8\",\n        800: \"#1e40af\",\n        900: \"#1e3a8a\",\n        950: \"#172554\"\n    },\n    indigo: {\n        50: \"#eef2ff\",\n        100: \"#e0e7ff\",\n        200: \"#c7d2fe\",\n        300: \"#a5b4fc\",\n        400: \"#818cf8\",\n        500: \"#6366f1\",\n        600: \"#4f46e5\",\n        700: \"#4338ca\",\n        800: \"#3730a3\",\n        900: \"#312e81\",\n        950: \"#1e1b4b\"\n    },\n    violet: {\n        50: \"#f5f3ff\",\n        100: \"#ede9fe\",\n        200: \"#ddd6fe\",\n        300: \"#c4b5fd\",\n        400: \"#a78bfa\",\n        500: \"#8b5cf6\",\n        600: \"#7c3aed\",\n        700: \"#6d28d9\",\n        800: \"#5b21b6\",\n        900: \"#4c1d95\",\n        950: \"#2e1065\"\n    },\n    purple: {\n        50: \"#faf5ff\",\n        100: \"#f3e8ff\",\n        200: \"#e9d5ff\",\n        300: \"#d8b4fe\",\n        400: \"#c084fc\",\n        500: \"#a855f7\",\n        600: \"#9333ea\",\n        700: \"#7e22ce\",\n        800: \"#6b21a8\",\n        900: \"#581c87\",\n        950: \"#3b0764\"\n    },\n    fuchsia: {\n        50: \"#fdf4ff\",\n        100: \"#fae8ff\",\n        200: \"#f5d0fe\",\n        300: \"#f0abfc\",\n        400: \"#e879f9\",\n        500: \"#d946ef\",\n        600: \"#c026d3\",\n        700: \"#a21caf\",\n        800: \"#86198f\",\n        900: \"#701a75\",\n        950: \"#4a044e\"\n    },\n    pink: {\n        50: \"#fdf2f8\",\n        100: \"#fce7f3\",\n        200: \"#fbcfe8\",\n        300: \"#f9a8d4\",\n        400: \"#f472b6\",\n        500: \"#ec4899\",\n        600: \"#db2777\",\n        700: \"#be185d\",\n        800: \"#9d174d\",\n        900: \"#831843\",\n        950: \"#500724\"\n    },\n    rose: {\n        50: \"#fff1f2\",\n        100: \"#ffe4e6\",\n        200: \"#fecdd3\",\n        300: \"#fda4af\",\n        400: \"#fb7185\",\n        500: \"#f43f5e\",\n        600: \"#e11d48\",\n        700: \"#be123c\",\n        800: \"#9f1239\",\n        900: \"#881337\",\n        950: \"#4c0519\"\n    },\n    get lightBlue () {\n        warn({\n            version: \"v2.2\",\n            from: \"lightBlue\",\n            to: \"sky\"\n        });\n        return this.sky;\n    },\n    get warmGray () {\n        warn({\n            version: \"v3.0\",\n            from: \"warmGray\",\n            to: \"stone\"\n        });\n        return this.stone;\n    },\n    get trueGray () {\n        warn({\n            version: \"v3.0\",\n            from: \"trueGray\",\n            to: \"neutral\"\n        });\n        return this.neutral;\n    },\n    get coolGray () {\n        warn({\n            version: \"v3.0\",\n            from: \"coolGray\",\n            to: \"gray\"\n        });\n        return this.gray;\n    },\n    get blueGray () {\n        warn({\n            version: \"v3.0\",\n            from: \"blueGray\",\n            to: \"slate\"\n        });\n        return this.slate;\n    }\n};\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nfunction _export(target, all) {\n    for(var name in all)Object.defineProperty(target, name, {\n        enumerable: true,\n        get: all[name]\n    });\n}\n_export(exports, {\n    dim: function() {\n        return dim;\n    },\n    default: function() {\n        return _default;\n    }\n});\nconst _picocolors = /*#__PURE__*/ _interop_require_default(require(\"picocolors\"));\nfunction _interop_require_default(obj) {\n    return obj && obj.__esModule ? obj : {\n        default: obj\n    };\n}\nlet alreadyShown = new Set();\nfunction log(type, messages, key) {\n    if (typeof process !== \"undefined\" && process.env.JEST_WORKER_ID) return;\n    if (key && alreadyShown.has(key)) return;\n    if (key) alreadyShown.add(key);\n    console.warn(\"\");\n    messages.forEach((message)=>console.warn(type, \"-\", message));\n}\nfunction dim(input) {\n    return _picocolors.default.dim(input);\n}\nconst _default = {\n    info (key, messages) {\n        log(_picocolors.default.bold(_picocolors.default.cyan(\"info\")), ...Array.isArray(key) ? [\n            key\n        ] : [\n            messages,\n            key\n        ]);\n    },\n    warn (key, messages) {\n        log(_picocolors.default.bold(_picocolors.default.yellow(\"warn\")), ...Array.isArray(key) ? [\n            key\n        ] : [\n            messages,\n            key\n        ]);\n    },\n    risk (key, messages) {\n        log(_picocolors.default.bold(_picocolors.default.magenta(\"risk\")), ...Array.isArray(key) ? [\n            key\n        ] : [\n            messages,\n            key\n        ]);\n    }\n};\n","// shim for using process in browser\nvar process = module.exports = {};\n\n// cached from whatever global is present so that test runners that stub it\n// don't break things.  But we need to wrap it in a try catch in case it is\n// wrapped in strict mode code which doesn't define any globals.  It's inside a\n// function because try/catches deoptimize in certain engines.\n\nvar cachedSetTimeout;\nvar cachedClearTimeout;\n\nfunction defaultSetTimout() {\n    throw new Error('setTimeout has not been defined');\n}\nfunction defaultClearTimeout () {\n    throw new Error('clearTimeout has not been defined');\n}\n(function () {\n    try {\n        if (typeof setTimeout === 'function') {\n            cachedSetTimeout = setTimeout;\n        } else {\n            cachedSetTimeout = defaultSetTimout;\n        }\n    } catch (e) {\n        cachedSetTimeout = defaultSetTimout;\n    }\n    try {\n        if (typeof clearTimeout === 'function') {\n            cachedClearTimeout = clearTimeout;\n        } else {\n            cachedClearTimeout = defaultClearTimeout;\n        }\n    } catch (e) {\n        cachedClearTimeout = defaultClearTimeout;\n    }\n} ())\nfunction runTimeout(fun) {\n    if (cachedSetTimeout === setTimeout) {\n        //normal enviroments in sane situations\n        return setTimeout(fun, 0);\n    }\n    // if setTimeout wasn't available but was latter defined\n    if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {\n        cachedSetTimeout = setTimeout;\n        return setTimeout(fun, 0);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedSetTimeout(fun, 0);\n    } catch(e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally\n            return cachedSetTimeout.call(null, fun, 0);\n        } catch(e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error\n            return cachedSetTimeout.call(this, fun, 0);\n        }\n    }\n\n\n}\nfunction runClearTimeout(marker) {\n    if (cachedClearTimeout === clearTimeout) {\n        //normal enviroments in sane situations\n        return clearTimeout(marker);\n    }\n    // if clearTimeout wasn't available but was latter defined\n    if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {\n        cachedClearTimeout = clearTimeout;\n        return clearTimeout(marker);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedClearTimeout(marker);\n    } catch (e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally\n            return cachedClearTimeout.call(null, marker);\n        } catch (e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.\n            // Some versions of I.E. have different rules for clearTimeout vs setTimeout\n            return cachedClearTimeout.call(this, marker);\n        }\n    }\n\n\n\n}\nvar queue = [];\nvar draining = false;\nvar currentQueue;\nvar queueIndex = -1;\n\nfunction cleanUpNextTick() {\n    if (!draining || !currentQueue) {\n        return;\n    }\n    draining = false;\n    if (currentQueue.length) {\n        queue = currentQueue.concat(queue);\n    } else {\n        queueIndex = -1;\n    }\n    if (queue.length) {\n        drainQueue();\n    }\n}\n\nfunction drainQueue() {\n    if (draining) {\n        return;\n    }\n    var timeout = runTimeout(cleanUpNextTick);\n    draining = true;\n\n    var len = queue.length;\n    while(len) {\n        currentQueue = queue;\n        queue = [];\n        while (++queueIndex < len) {\n            if (currentQueue) {\n                currentQueue[queueIndex].run();\n            }\n        }\n        queueIndex = -1;\n        len = queue.length;\n    }\n    currentQueue = null;\n    draining = false;\n    runClearTimeout(timeout);\n}\n\nprocess.nextTick = function (fun) {\n    var args = new Array(arguments.length - 1);\n    if (arguments.length > 1) {\n        for (var i = 1; i < arguments.length; i++) {\n            args[i - 1] = arguments[i];\n        }\n    }\n    queue.push(new Item(fun, args));\n    if (queue.length === 1 && !draining) {\n        runTimeout(drainQueue);\n    }\n};\n\n// v8 likes predictible objects\nfunction Item(fun, array) {\n    this.fun = fun;\n    this.array = array;\n}\nItem.prototype.run = function () {\n    this.fun.apply(null, this.array);\n};\nprocess.title = 'browser';\nprocess.browser = true;\nprocess.env = {};\nprocess.argv = [];\nprocess.version = ''; // empty string to avoid regexp issues\nprocess.versions = {};\n\nfunction noop() {}\n\nprocess.on = noop;\nprocess.addListener = noop;\nprocess.once = noop;\nprocess.off = noop;\nprocess.removeListener = noop;\nprocess.removeAllListeners = noop;\nprocess.emit = noop;\nprocess.prependListener = noop;\nprocess.prependOnceListener = noop;\n\nprocess.listeners = function (name) { return [] }\n\nprocess.binding = function (name) {\n    throw new Error('process.binding is not supported');\n};\n\nprocess.cwd = function () { return '/' };\nprocess.chdir = function (dir) {\n    throw new Error('process.chdir is not supported');\n};\nprocess.umask = function() { return 0; };\n","var x=String;\nvar create=function() {return {isColorSupported:false,reset:x,bold:x,dim:x,italic:x,underline:x,inverse:x,hidden:x,strikethrough:x,black:x,red:x,green:x,yellow:x,blue:x,magenta:x,cyan:x,white:x,gray:x,bgBlack:x,bgRed:x,bgGreen:x,bgYellow:x,bgBlue:x,bgMagenta:x,bgCyan:x,bgWhite:x,blackBright:x,redBright:x,greenBright:x,yellowBright:x,blueBright:x,magentaBright:x,cyanBright:x,whiteBright:x,bgBlackBright:x,bgRedBright:x,bgGreenBright:x,bgYellowBright:x,bgBlueBright:x,bgMagentaBright:x,bgCyanBright:x,bgWhiteBright:x}};\nmodule.exports=create();\nmodule.exports.createColors = create;\n","[{\"date\":\"2024-01-01\",\"value\":44220.78},{\"date\":\"2024-01-02\",\"value\":44972.8},{\"date\":\"2024-01-03\",\"value\":42862.44},{\"date\":\"2024-01-04\",\"value\":44193.29},{\"date\":\"2024-01-05\",\"value\":44186.59},{\"date\":\"2024-01-06\",\"value\":43992.44},{\"date\":\"2024-01-07\",\"value\":43950.28},{\"date\":\"2024-01-08\",\"value\":46995.1},{\"date\":\"2024-01-09\",\"value\":46124.08},{\"date\":\"2024-01-10\",\"value\":46666.11},{\"date\":\"2024-01-11\",\"value\":46342.66},{\"date\":\"2024-01-12\",\"value\":42773.03},{\"date\":\"2024-01-13\",\"value\":42839.33},{\"date\":\"2024-01-14\",\"value\":41697.33},{\"date\":\"2024-01-15\",\"value\":42490.16},{\"date\":\"2024-01-16\",\"value\":43130.45},{\"date\":\"2024-01-17\",\"value\":42739.49},{\"date\":\"2024-01-18\",\"value\":41293.5},{\"date\":\"2024-01-19\",\"value\":41624.07},{\"date\":\"2024-01-20\",\"value\":41666.67},{\"date\":\"2024-01-21\",\"value\":41554.05},{\"date\":\"2024-01-22\",\"value\":39524.27},{\"date\":\"2024-01-23\",\"value\":39878.3},{\"date\":\"2024-01-24\",\"value\":40077.78},{\"date\":\"2024-01-25\",\"value\":39941.66},{\"date\":\"2024-01-26\",\"value\":41814.8},{\"date\":\"2024-01-27\",\"value\":42126.55},{\"date\":\"2024-01-28\",\"value\":42034.59},{\"date\":\"2024-01-29\",\"value\":43306.18},{\"date\":\"2024-01-30\",\"value\":42942.78},{\"date\":\"2024-01-31\",\"value\":42548.08},{\"date\":\"2024-02-01\",\"value\":43078.81},{\"date\":\"2024-02-02\",\"value\":43181.66},{\"date\":\"2024-02-03\",\"value\":43010.67},{\"date\":\"2024-02-04\",\"value\":42568.55},{\"date\":\"2024-02-05\",\"value\":42657.67},{\"date\":\"2024-02-06\",\"value\":43095.79},{\"date\":\"2024-02-07\",\"value\":44343.61},{\"date\":\"2024-02-08\",\"value\":45305.2},{\"date\":\"2024-02-09\",\"value\":47160.41},{\"date\":\"2024-02-10\",\"value\":47767.06},{\"date\":\"2024-02-11\",\"value\":48316.3},{\"date\":\"2024-02-12\",\"value\":49941.81},{\"date\":\"2024-02-13\",\"value\":49725.36},{\"date\":\"2024-02-14\",\"value\":51858.59},{\"date\":\"2024-02-15\",\"value\":51934.29},{\"date\":\"2024-02-16\",\"value\":52162.64},{\"date\":\"2024-02-17\",\"value\":51666.22},{\"date\":\"2024-02-18\",\"value\":52153.63},{\"date\":\"2024-02-19\",\"value\":51787.05},{\"date\":\"2024-02-20\",\"value\":52277.52},{\"date\":\"2024-02-21\",\"value\":51851.67},{\"date\":\"2024-02-22\",\"value\":51258.7},{\"date\":\"2024-02-23\",\"value\":50747.05},{\"date\":\"2024-02-24\",\"value\":51570.65},{\"date\":\"2024-02-25\",\"value\":51731},{\"date\":\"2024-02-26\",\"value\":54533.48},{\"date\":\"2024-02-27\",\"value\":57077.07},{\"date\":\"2024-02-28\",\"value\":62518.9},{\"date\":\"2024-02-29\",\"value\":61179.03},{\"date\":\"2024-03-01\",\"value\":62436.72},{\"date\":\"2024-03-02\",\"value\":62045.78},{\"date\":\"2024-03-03\",\"value\":63154.49},{\"date\":\"2024-03-04\",\"value\":68360.14},{\"date\":\"2024-03-05\",\"value\":63800.78},{\"date\":\"2024-03-06\",\"value\":66122.28},{\"date\":\"2024-03-07\",\"value\":66938.21},{\"date\":\"2024-03-08\",\"value\":68289.16},{\"date\":\"2024-03-09\",\"value\":68480},{\"date\":\"2024-03-10\",\"value\":69032.12},{\"date\":\"2024-03-11\",\"value\":72110.98},{\"date\":\"2024-03-12\",\"value\":71475.93},{\"date\":\"2024-03-13\",\"value\":73135.04},{\"date\":\"2024-03-14\",\"value\":71364.58},{\"date\":\"2024-03-15\",\"value\":69506.88},{\"date\":\"2024-03-16\",\"value\":65254.22},{\"date\":\"2024-03-17\",\"value\":68343.64},{\"date\":\"2024-03-18\",\"value\":67613.04},{\"date\":\"2024-03-19\",\"value\":61906.27},{\"date\":\"2024-03-20\",\"value\":67858.8},{\"date\":\"2024-03-21\",\"value\":65484.7},{\"date\":\"2024-03-22\",\"value\":63814.56},{\"date\":\"2024-03-23\",\"value\":63998.86},{\"date\":\"2024-03-24\",\"value\":67204.93},{\"date\":\"2024-03-25\",\"value\":69890.28},{\"date\":\"2024-03-26\",\"value\":69992.4},{\"date\":\"2024-03-27\",\"value\":69435.96},{\"date\":\"2024-03-28\",\"value\":70801.18},{\"date\":\"2024-03-29\",\"value\":69903.75},{\"date\":\"2024-03-30\",\"value\":69626.87},{\"date\":\"2024-03-31\",\"value\":71288.9},{\"date\":\"2024-04-01\",\"value\":69681.82},{\"date\":\"2024-04-02\",\"value\":65464.14},{\"date\":\"2024-04-03\",\"value\":65987.92},{\"date\":\"2024-04-04\",\"value\":68525.23},{\"date\":\"2024-04-05\",\"value\":67856.51},{\"date\":\"2024-04-06\",\"value\":68919.89},{\"date\":\"2024-04-07\",\"value\":69350.34},{\"date\":\"2024-04-08\",\"value\":71622.53},{\"date\":\"2024-04-09\",\"value\":69117.01},{\"date\":\"2024-04-10\",\"value\":70634.04},{\"date\":\"2024-04-11\",\"value\":70020.73},{\"date\":\"2024-04-12\",\"value\":67148.61},{\"date\":\"2024-04-13\",\"value\":64024.77},{\"date\":\"2024-04-14\",\"value\":65777.05},{\"date\":\"2024-04-15\",\"value\":63452.18},{\"date\":\"2024-04-16\",\"value\":63814.94},{\"date\":\"2024-04-17\",\"value\":61279.36},{\"date\":\"2024-04-18\",\"value\":63513.85},{\"date\":\"2024-04-19\",\"value\":63848.37},{\"date\":\"2024-04-20\",\"value\":64968.87},{\"date\":\"2024-04-21\",\"value\":64952.92},{\"date\":\"2024-04-22\",\"value\":66859.17},{\"date\":\"2024-04-23\",\"value\":66414.16},{\"date\":\"2024-04-24\",\"value\":64255.78},{\"date\":\"2024-04-25\",\"value\":64484.44},{\"date\":\"2024-04-26\",\"value\":63742.39},{\"date\":\"2024-04-27\",\"value\":63422},{\"date\":\"2024-04-28\",\"value\":63108.94},{\"date\":\"2024-04-29\",\"value\":63844.85},{\"date\":\"2024-04-30\",\"value\":60622.1},{\"date\":\"2024-05-01\",\"value\":58265.59},{\"date\":\"2024-05-02\",\"value\":59071.89},{\"date\":\"2024-05-03\",\"value\":62913.03},{\"date\":\"2024-05-04\",\"value\":63902.88},{\"date\":\"2024-05-05\",\"value\":64023.45},{\"date\":\"2024-05-06\",\"value\":63162.24},{\"date\":\"2024-05-07\",\"value\":62315.76},{\"date\":\"2024-05-08\",\"value\":61169.53},{\"date\":\"2024-05-09\",\"value\":63073.57},{\"date\":\"2024-05-10\",\"value\":60787.47},{\"date\":\"2024-05-11\",\"value\":60814.63},{\"date\":\"2024-05-12\",\"value\":61453.02},{\"date\":\"2024-05-13\",\"value\":62932.37},{\"date\":\"2024-05-14\",\"value\":61539.84},{\"date\":\"2024-05-15\",\"value\":66244.69},{\"date\":\"2024-05-16\",\"value\":65252.18},{\"date\":\"2024-05-17\",\"value\":67046.33},{\"date\":\"2024-05-18\",\"value\":66923.87},{\"date\":\"2024-05-19\",\"value\":66261.62},{\"date\":\"2024-05-20\",\"value\":71432.17},{\"date\":\"2024-05-21\",\"value\":70142.84},{\"date\":\"2024-05-22\",\"value\":69109.93},{\"date\":\"2024-05-23\",\"value\":67940.45},{\"date\":\"2024-05-24\",\"value\":68547.8},{\"date\":\"2024-05-25\",\"value\":69289.67},{\"date\":\"2024-05-26\",\"value\":68473.72},{\"date\":\"2024-05-27\",\"value\":69368.72},{\"date\":\"2024-05-28\",\"value\":68321.98},{\"date\":\"2024-05-29\",\"value\":67569.45},{\"date\":\"2024-05-30\",\"value\":68338.58},{\"date\":\"2024-05-31\",\"value\":67472.41},{\"date\":\"2024-06-01\",\"value\":67719.29},{\"date\":\"2024-06-02\",\"value\":67735.52},{\"date\":\"2024-06-03\",\"value\":68791},{\"date\":\"2024-06-04\",\"value\":70542.32},{\"date\":\"2024-06-05\",\"value\":71121.11},{\"date\":\"2024-06-06\",\"value\":70773.64},{\"date\":\"2024-06-07\",\"value\":69324.53},{\"date\":\"2024-06-08\",\"value\":69304.05},{\"date\":\"2024-06-09\",\"value\":69637.87},{\"date\":\"2024-06-10\",\"value\":69497.73},{\"date\":\"2024-06-11\",\"value\":67316.53},{\"date\":\"2024-06-12\",\"value\":68248.6},{\"date\":\"2024-06-13\",\"value\":66738.85},{\"date\":\"2024-06-14\",\"value\":66004.39},{\"date\":\"2024-06-15\",\"value\":66192},{\"date\":\"2024-06-16\",\"value\":66628.75},{\"date\":\"2024-06-17\",\"value\":66481.81},{\"date\":\"2024-06-18\",\"value\":65152.8},{\"date\":\"2024-06-19\",\"value\":64943.79},{\"date\":\"2024-06-20\",\"value\":64840.88},{\"date\":\"2024-06-21\",\"value\":64120.28},{\"date\":\"2024-06-22\",\"value\":64235.01},{\"date\":\"2024-06-23\",\"value\":63171.43},{\"date\":\"2024-06-24\",\"value\":60263},{\"date\":\"2024-06-25\",\"value\":61789.71},{\"date\":\"2024-06-26\",\"value\":60816.68},{\"date\":\"2024-06-27\",\"value\":61615.39},{\"date\":\"2024-06-28\",\"value\":60313.35},{\"date\":\"2024-06-29\",\"value\":60885.67},{\"date\":\"2024-06-30\",\"value\":62668.26},{\"date\":\"2024-07-01\",\"value\":62830.13},{\"date\":\"2024-07-02\",\"value\":62040.22},{\"date\":\"2024-07-03\",\"value\":60145.01},{\"date\":\"2024-07-04\",\"value\":57042.14},{\"date\":\"2024-07-05\",\"value\":56639.43},{\"date\":\"2024-07-06\",\"value\":58244.75},{\"date\":\"2024-07-07\",\"value\":55854.09},{\"date\":\"2024-07-08\",\"value\":56699.43},{\"date\":\"2024-07-09\",\"value\":58047.86},{\"date\":\"2024-07-10\",\"value\":57712.59},{\"date\":\"2024-07-11\",\"value\":57340.77},{\"date\":\"2024-07-12\",\"value\":57909.03},{\"date\":\"2024-07-13\",\"value\":59224.58},{\"date\":\"2024-07-14\",\"value\":60808.42},{\"date\":\"2024-07-15\",\"value\":64757.16},{\"date\":\"2024-07-16\",\"value\":65088.99},{\"date\":\"2024-07-17\",\"value\":64085.81},{\"date\":\"2024-07-18\",\"value\":63982.86},{\"date\":\"2024-07-19\",\"value\":66707.61},{\"date\":\"2024-07-20\",\"value\":67163.83},{\"date\":\"2024-07-21\",\"value\":68181.28},{\"date\":\"2024-07-22\",\"value\":67558.22},{\"date\":\"2024-07-23\",\"value\":65939.24},{\"date\":\"2024-07-24\",\"value\":65366.4},{\"date\":\"2024-07-25\",\"value\":65795.42},{\"date\":\"2024-07-26\",\"value\":67924.08},{\"date\":\"2024-07-27\",\"value\":67899.41},{\"date\":\"2024-07-28\",\"value\":68244.3},{\"date\":\"2024-07-29\",\"value\":66771.45},{\"date\":\"2024-07-30\",\"value\":66169.68},{\"date\":\"2024-07-31\",\"value\":64609.62},{\"date\":\"2024-08-01\",\"value\":65288.18},{\"date\":\"2024-08-02\",\"value\":61418.06},{\"date\":\"2024-08-03\",\"value\":60674.93},{\"date\":\"2024-08-04\",\"value\":58130.95},{\"date\":\"2024-08-05\",\"value\":54029.12},{\"date\":\"2024-08-06\",\"value\":56048.08},{\"date\":\"2024-08-07\",\"value\":55148.1},{\"date\":\"2024-08-08\",\"value\":61705.58},{\"date\":\"2024-08-09\",\"value\":60862.13},{\"date\":\"2024-08-10\",\"value\":60935.02},{\"date\":\"2024-08-11\",\"value\":58722.49},{\"date\":\"2024-08-12\",\"value\":59358.78},{\"date\":\"2024-08-13\",\"value\":60603.19},{\"date\":\"2024-08-14\",\"value\":58690.62},{\"date\":\"2024-08-15\",\"value\":57543.61},{\"date\":\"2024-08-16\",\"value\":58888.99},{\"date\":\"2024-08-17\",\"value\":59497.49},{\"date\":\"2024-08-18\",\"value\":58437.9},{\"date\":\"2024-08-19\",\"value\":59452.67},{\"date\":\"2024-08-20\",\"value\":59017.59},{\"date\":\"2024-08-21\",\"value\":61163.28},{\"date\":\"2024-08-22\",\"value\":60383.29},{\"date\":\"2024-08-23\",\"value\":64086.72},{\"date\":\"2024-08-24\",\"value\":64179.63},{\"date\":\"2024-08-25\",\"value\":64251.93},{\"date\":\"2024-08-26\",\"value\":62840},{\"date\":\"2024-08-27\",\"value\":59439.64},{\"date\":\"2024-08-28\",\"value\":59045.88},{\"date\":\"2024-08-29\",\"value\":59364.47},{\"date\":\"2024-08-30\",\"value\":59112.77},{\"date\":\"2024-08-31\",\"value\":58968.37},{\"date\":\"2024-09-01\",\"value\":57299},{\"date\":\"2024-09-02\",\"value\":59139.83},{\"date\":\"2024-09-03\",\"value\":57468.84},{\"date\":\"2024-09-04\",\"value\":57971},{\"date\":\"2024-09-05\",\"value\":56156.82},{\"date\":\"2024-09-06\",\"value\":53950.01},{\"date\":\"2024-09-07\",\"value\":54156.33},{\"date\":\"2024-09-08\",\"value\":54881.11},{\"date\":\"2024-09-09\",\"value\":57053.9},{\"date\":\"2024-09-10\",\"value\":57645.59},{\"date\":\"2024-09-11\",\"value\":57352.79},{\"date\":\"2024-09-12\",\"value\":58137.54},{\"date\":\"2024-09-13\",\"value\":60543.35},{\"date\":\"2024-09-14\",\"value\":60012.35},{\"date\":\"2024-09-15\",\"value\":59122.33},{\"date\":\"2024-09-16\",\"value\":58208.75},{\"date\":\"2024-09-17\",\"value\":60312.6},{\"date\":\"2024-09-18\",\"value\":61769.18},{\"date\":\"2024-09-19\",\"value\":62960.14},{\"date\":\"2024-09-20\",\"value\":63210.69},{\"date\":\"2024-09-21\",\"value\":63362.74},{\"date\":\"2024-09-22\",\"value\":63577.66},{\"date\":\"2024-09-23\",\"value\":63338.87},{\"date\":\"2024-09-24\",\"value\":64272.93},{\"date\":\"2024-09-25\",\"value\":63130.89},{\"date\":\"2024-09-26\",\"value\":65177.21},{\"date\":\"2024-09-27\",\"value\":65789},{\"date\":\"2024-09-28\",\"value\":65858.99},{\"date\":\"2024-09-29\",\"value\":65600.01},{\"date\":\"2024-09-30\",\"value\":63301.25},{\"date\":\"2024-10-01\",\"value\":60790},{\"date\":\"2024-10-02\",\"value\":60631.37},{\"date\":\"2024-10-03\",\"value\":60744.99},{\"date\":\"2024-10-04\",\"value\":62090.71},{\"date\":\"2024-10-05\",\"value\":62051.29},{\"date\":\"2024-10-06\",\"value\":62810.86},{\"date\":\"2024-10-07\",\"value\":62200.28},{\"date\":\"2024-10-08\",\"value\":62122.02},{\"date\":\"2024-10-09\",\"value\":60578.28},{\"date\":\"2024-10-10\",\"value\":60279.53},{\"date\":\"2024-10-11\",\"value\":62518.75},{\"date\":\"2024-10-12\",\"value\":63187.47},{\"date\":\"2024-10-13\",\"value\":62845.3},{\"date\":\"2024-10-14\",\"value\":66065.65},{\"date\":\"2024-10-15\",\"value\":67056.6},{\"date\":\"2024-10-16\",\"value\":67608.44},{\"date\":\"2024-10-17\",\"value\":67402.33},{\"date\":\"2024-10-18\",\"value\":68426.11},{\"date\":\"2024-10-19\",\"value\":68363.73},{\"date\":\"2024-10-20\",\"value\":69014.86},{\"date\":\"2024-10-21\",\"value\":67346.15},{\"date\":\"2024-10-22\",\"value\":67380.08},{\"date\":\"2024-10-23\",\"value\":66601.11},{\"date\":\"2024-10-24\",\"value\":68156.84},{\"date\":\"2024-10-25\",\"value\":66564.51},{\"date\":\"2024-10-26\",\"value\":67012.56},{\"date\":\"2024-10-27\",\"value\":67943.19},{\"date\":\"2024-10-28\",\"value\":69924.5},{\"date\":\"2024-10-29\",\"value\":72724.35},{\"date\":\"2024-10-30\",\"value\":72322.91},{\"date\":\"2024-10-31\",\"value\":70197.83},{\"date\":\"2024-11-01\",\"value\":69467.29},{\"date\":\"2024-11-02\",\"value\":69358.94},{\"date\":\"2024-11-03\",\"value\":68738.18},{\"date\":\"2024-11-04\",\"value\":67807.48},{\"date\":\"2024-11-05\",\"value\":67569}]","[\n  { \"date\": \"2010-07-18\", \"value\": 0.1 },\n  { \"date\": \"2010-07-19\", \"value\": 0.1 },\n  { \"date\": \"2010-07-20\", \"value\": 0.1 },\n  { \"date\": \"2010-07-21\", \"value\": 0.1 },\n  { \"date\": \"2010-07-22\", \"value\": 0.1 },\n  { \"date\": \"2010-07-23\", \"value\": 0.1 },\n  { \"date\": \"2010-07-24\", \"value\": 0.1 },\n  { \"date\": \"2010-07-25\", \"value\": 0.1 },\n  { \"date\": \"2010-07-26\", \"value\": 0.1 },\n  { \"date\": \"2010-07-27\", \"value\": 0.1 },\n  { \"date\": \"2010-07-28\", \"value\": 0.1 },\n  { \"date\": \"2010-07-29\", \"value\": 0.1 },\n  { \"date\": \"2010-07-30\", \"value\": 0.1 },\n  { \"date\": \"2010-07-31\", \"value\": 0.1 },\n  { \"date\": \"2010-08-01\", \"value\": 0.1 },\n  { \"date\": \"2010-08-02\", \"value\": 0.1 },\n  { \"date\": \"2010-08-03\", \"value\": 0.1 },\n  { \"date\": \"2010-08-04\", \"value\": 0.1 },\n  { \"date\": \"2010-08-05\", \"value\": 0.1 },\n  { \"date\": \"2010-08-06\", \"value\": 0.1 },\n  { \"date\": \"2010-08-07\", \"value\": 0.1 },\n  { \"date\": \"2010-08-08\", \"value\": 0.1 },\n  { \"date\": \"2010-08-09\", \"value\": 0.1 },\n  { \"date\": \"2010-08-10\", \"value\": 0.1 },\n  { \"date\": \"2010-08-11\", \"value\": 0.1 },\n  { \"date\": \"2010-08-12\", \"value\": 0.1 },\n  { \"date\": \"2010-08-13\", \"value\": 0.1 },\n  { \"date\": \"2010-08-14\", \"value\": 0.1 },\n  { \"date\": \"2010-08-15\", \"value\": 0.1 },\n  { \"date\": \"2010-08-16\", \"value\": 0.1 },\n  { \"date\": \"2010-08-17\", \"value\": 0.1 },\n  { \"date\": \"2010-08-18\", \"value\": 0.1 },\n  { \"date\": \"2010-08-19\", \"value\": 0.1 },\n  { \"date\": \"2010-08-20\", \"value\": 0.1 },\n  { \"date\": \"2010-08-21\", \"value\": 0.1 },\n  { \"date\": \"2010-08-22\", \"value\": 0.1 },\n  { \"date\": \"2010-08-23\", \"value\": 0.1 },\n  { \"date\": \"2010-08-24\", \"value\": 0.1 },\n  { \"date\": \"2010-08-25\", \"value\": 0.1 },\n  { \"date\": \"2010-08-26\", \"value\": 0.1 },\n  { \"date\": \"2010-08-27\", \"value\": 0.1 },\n  { \"date\": \"2010-08-28\", \"value\": 0.1 },\n  { \"date\": \"2010-08-29\", \"value\": 0.1 },\n  { \"date\": \"2010-08-30\", \"value\": 0.1 },\n  { \"date\": \"2010-08-31\", \"value\": 0.1 },\n  { \"date\": \"2010-09-01\", \"value\": 0.1 },\n  { \"date\": \"2010-09-02\", \"value\": 0.1 },\n  { \"date\": \"2010-09-03\", \"value\": 0.1 },\n  { \"date\": \"2010-09-04\", \"value\": 0.1 },\n  { \"date\": \"2010-09-05\", \"value\": 0.1 },\n  { \"date\": \"2010-09-06\", \"value\": 0.1 },\n  { \"date\": \"2010-09-07\", \"value\": 0.1 },\n  { \"date\": \"2010-09-08\", \"value\": 0.1 },\n  { \"date\": \"2010-09-09\", \"value\": 0.1 },\n  { \"date\": \"2010-09-10\", \"value\": 0.1 },\n  { \"date\": \"2010-09-11\", \"value\": 0.1 },\n  { \"date\": \"2010-09-12\", \"value\": 0.1 },\n  { \"date\": \"2010-09-13\", \"value\": 0.1 },\n  { \"date\": \"2010-09-14\", \"value\": 0.1 },\n  { \"date\": \"2010-09-15\", \"value\": 0.1 },\n  { \"date\": \"2010-09-16\", \"value\": 0.1 },\n  { \"date\": \"2010-09-17\", \"value\": 0.1 },\n  { \"date\": \"2010-09-18\", \"value\": 0.1 },\n  { \"date\": \"2010-09-19\", \"value\": 0.1 },\n  { \"date\": \"2010-09-20\", \"value\": 0.1 },\n  { \"date\": \"2010-09-21\", \"value\": 0.1 },\n  { \"date\": \"2010-09-22\", \"value\": 0.1 },\n  { \"date\": \"2010-09-23\", \"value\": 0.1 },\n  { \"date\": \"2010-09-24\", \"value\": 0.1 },\n  { \"date\": \"2010-09-25\", \"value\": 0.1 },\n  { \"date\": \"2010-09-26\", \"value\": 0.1 },\n  { \"date\": \"2010-09-27\", \"value\": 0.1 },\n  { \"date\": \"2010-09-28\", \"value\": 0.1 },\n  { \"date\": \"2010-09-29\", \"value\": 0.1 },\n  { \"date\": \"2010-09-30\", \"value\": 0.1 },\n  { \"date\": \"2010-10-01\", \"value\": 0.1 },\n  { \"date\": \"2010-10-02\", \"value\": 0.1 },\n  { \"date\": \"2010-10-03\", \"value\": 0.1 },\n  { \"date\": \"2010-10-04\", \"value\": 0.1 },\n  { \"date\": \"2010-10-05\", \"value\": 0.1 },\n  { \"date\": \"2010-10-06\", \"value\": 0.1 },\n  { \"date\": \"2010-10-07\", \"value\": 0.1 },\n  { \"date\": \"2010-10-08\", \"value\": 0.1 },\n  { \"date\": \"2010-10-09\", \"value\": 0.1 },\n  { \"date\": \"2010-10-10\", \"value\": 0.1 },\n  { \"date\": \"2010-10-11\", \"value\": 0.1 },\n  { \"date\": \"2010-10-12\", \"value\": 0.1 },\n  { \"date\": \"2010-10-13\", \"value\": 0.1 },\n  { \"date\": \"2010-10-14\", \"value\": 0.1 },\n  { \"date\": \"2010-10-15\", \"value\": 0.1 },\n  { \"date\": \"2010-10-16\", \"value\": 0.1 },\n  { \"date\": \"2010-10-17\", \"value\": 0.1 },\n  { \"date\": \"2010-10-18\", \"value\": 0.1 },\n  { \"date\": \"2010-10-19\", \"value\": 0.1 },\n  { \"date\": \"2010-10-20\", \"value\": 0.1 },\n  { \"date\": \"2010-10-21\", \"value\": 0.1 },\n  { \"date\": \"2010-10-22\", \"value\": 0.1 },\n  { \"date\": \"2010-10-23\", \"value\": 0.1 },\n  { \"date\": \"2010-10-24\", \"value\": 0.1 },\n  { \"date\": \"2010-10-25\", \"value\": 0.1 },\n  { \"date\": \"2010-10-26\", \"value\": 0.2 },\n  { \"date\": \"2010-10-27\", \"value\": 0.2 },\n  { \"date\": \"2010-10-28\", \"value\": 0.2 },\n  { \"date\": \"2010-10-29\", \"value\": 0.2 },\n  { \"date\": \"2010-10-30\", \"value\": 0.2 },\n  { \"date\": \"2010-10-31\", \"value\": 0.2 },\n  { \"date\": \"2010-11-01\", \"value\": 0.2 },\n  { \"date\": \"2010-11-02\", \"value\": 0.2 },\n  { \"date\": \"2010-11-03\", \"value\": 0.2 },\n  { \"date\": \"2010-11-04\", \"value\": 0.2 },\n  { \"date\": \"2010-11-05\", \"value\": 0.3 },\n  { \"date\": \"2010-11-06\", \"value\": 0.4 },\n  { \"date\": \"2010-11-07\", \"value\": 0.3 },\n  { \"date\": \"2010-11-08\", \"value\": 0.2 },\n  { \"date\": \"2010-11-09\", \"value\": 0.2 },\n  { \"date\": \"2010-11-10\", \"value\": 0.2 },\n  { \"date\": \"2010-11-11\", \"value\": 0.2 },\n  { \"date\": \"2010-11-12\", \"value\": 0.3 },\n  { \"date\": \"2010-11-13\", \"value\": 0.3 },\n  { \"date\": \"2010-11-14\", \"value\": 0.3 },\n  { \"date\": \"2010-11-15\", \"value\": 0.3 },\n  { \"date\": \"2010-11-16\", \"value\": 0.2 },\n  { \"date\": \"2010-11-17\", \"value\": 0.2 },\n  { \"date\": \"2010-11-18\", \"value\": 0.3 },\n  { \"date\": \"2010-11-19\", \"value\": 0.3 },\n  { \"date\": \"2010-11-20\", \"value\": 0.3 },\n  { \"date\": \"2010-11-21\", \"value\": 0.3 },\n  { \"date\": \"2010-11-22\", \"value\": 0.3 },\n  { \"date\": \"2010-11-23\", \"value\": 0.3 },\n  { \"date\": \"2010-11-24\", \"value\": 0.3 },\n  { \"date\": \"2010-11-25\", \"value\": 0.3 },\n  { \"date\": \"2010-11-26\", \"value\": 0.3 },\n  { \"date\": \"2010-11-27\", \"value\": 0.3 },\n  { \"date\": \"2010-11-28\", \"value\": 0.3 },\n  { \"date\": \"2010-11-29\", \"value\": 0.2 },\n  { \"date\": \"2010-11-30\", \"value\": 0.2 },\n  { \"date\": \"2010-12-01\", \"value\": 0.2 },\n  { \"date\": \"2010-12-02\", \"value\": 0.3 },\n  { \"date\": \"2010-12-03\", \"value\": 0.3 },\n  { \"date\": \"2010-12-04\", \"value\": 0.2 },\n  { \"date\": \"2010-12-05\", \"value\": 0.2 },\n  { \"date\": \"2010-12-06\", \"value\": 0.2 },\n  { \"date\": \"2010-12-07\", \"value\": 0.2 },\n  { \"date\": \"2010-12-08\", \"value\": 0.2 },\n  { \"date\": \"2010-12-09\", \"value\": 0.2 },\n  { \"date\": \"2010-12-10\", \"value\": 0.2 },\n  { \"date\": \"2010-12-11\", \"value\": 0.2 },\n  { \"date\": \"2010-12-12\", \"value\": 0.2 },\n  { \"date\": \"2010-12-13\", \"value\": 0.2 },\n  { \"date\": \"2010-12-14\", \"value\": 0.2 },\n  { \"date\": \"2010-12-15\", \"value\": 0.2 },\n  { \"date\": \"2010-12-16\", \"value\": 0.3 },\n  { \"date\": \"2010-12-17\", \"value\": 0.2 },\n  { \"date\": \"2010-12-18\", \"value\": 0.2 },\n  { \"date\": \"2010-12-19\", \"value\": 0.2 },\n  { \"date\": \"2010-12-20\", \"value\": 0.3 },\n  { \"date\": \"2010-12-21\", \"value\": 0.2 },\n  { \"date\": \"2010-12-22\", \"value\": 0.3 },\n  { \"date\": \"2010-12-23\", \"value\": 0.3 },\n  { \"date\": \"2010-12-24\", \"value\": 0.2 },\n  { \"date\": \"2010-12-25\", \"value\": 0.2 },\n  { \"date\": \"2010-12-26\", \"value\": 0.3 },\n  { \"date\": \"2010-12-27\", \"value\": 0.3 },\n  { \"date\": \"2010-12-28\", \"value\": 0.3 },\n  { \"date\": \"2010-12-29\", \"value\": 0.3 },\n  { \"date\": \"2010-12-30\", \"value\": 0.3 },\n  { \"date\": \"2010-12-31\", \"value\": 0.3 },\n  { \"date\": \"2011-01-01\", \"value\": 0.3 },\n  { \"date\": \"2011-01-02\", \"value\": 0.3 },\n  { \"date\": \"2011-01-03\", \"value\": 0.3 },\n  { \"date\": \"2011-01-04\", \"value\": 0.3 },\n  { \"date\": \"2011-01-05\", \"value\": 0.3 },\n  { \"date\": \"2011-01-06\", \"value\": 0.3 },\n  { \"date\": \"2011-01-07\", \"value\": 0.3 },\n  { \"date\": \"2011-01-08\", \"value\": 0.3 },\n  { \"date\": \"2011-01-09\", \"value\": 0.3 },\n  { \"date\": \"2011-01-10\", \"value\": 0.3 },\n  { \"date\": \"2011-01-11\", \"value\": 0.3 },\n  { \"date\": \"2011-01-12\", \"value\": 0.3 },\n  { \"date\": \"2011-01-13\", \"value\": 0.3 },\n  { \"date\": \"2011-01-14\", \"value\": 0.4 },\n  { \"date\": \"2011-01-15\", \"value\": 0.4 },\n  { \"date\": \"2011-01-16\", \"value\": 0.4 },\n  { \"date\": \"2011-01-17\", \"value\": 0.3 },\n  { \"date\": \"2011-01-18\", \"value\": 0.3 },\n  { \"date\": \"2011-01-19\", \"value\": 0.3 },\n  { \"date\": \"2011-01-20\", \"value\": 0.4 },\n  { \"date\": \"2011-01-21\", \"value\": 0.4 },\n  { \"date\": \"2011-01-22\", \"value\": 0.4 },\n  { \"date\": \"2011-01-23\", \"value\": 0.4 },\n  { \"date\": \"2011-01-24\", \"value\": 0.4 },\n  { \"date\": \"2011-01-25\", \"value\": 0.4 },\n  { \"date\": \"2011-01-26\", \"value\": 0.4 },\n  { \"date\": \"2011-01-27\", \"value\": 0.4 },\n  { \"date\": \"2011-01-28\", \"value\": 0.4 },\n  { \"date\": \"2011-01-29\", \"value\": 0.4 },\n  { \"date\": \"2011-01-30\", \"value\": 0.5 },\n  { \"date\": \"2011-01-31\", \"value\": 0.5 },\n  { \"date\": \"2011-02-01\", \"value\": 0.7 },\n  { \"date\": \"2011-02-02\", \"value\": 0.7 },\n  { \"date\": \"2011-02-03\", \"value\": 0.7 },\n  { \"date\": \"2011-02-04\", \"value\": 0.8 },\n  { \"date\": \"2011-02-05\", \"value\": 0.9 },\n  { \"date\": \"2011-02-06\", \"value\": 0.9 },\n  { \"date\": \"2011-02-07\", \"value\": 0.9 },\n  { \"date\": \"2011-02-08\", \"value\": 0.9 },\n  { \"date\": \"2011-02-09\", \"value\": 1.1 },\n  { \"date\": \"2011-02-10\", \"value\": 1.0 },\n  { \"date\": \"2011-02-11\", \"value\": 1.1 },\n  { \"date\": \"2011-02-12\", \"value\": 1.1 },\n  { \"date\": \"2011-02-13\", \"value\": 1.0 },\n  { \"date\": \"2011-02-14\", \"value\": 1.1 },\n  { \"date\": \"2011-02-15\", \"value\": 1.0 },\n  { \"date\": \"2011-02-16\", \"value\": 1.0 },\n  { \"date\": \"2011-02-17\", \"value\": 1.0 },\n  { \"date\": \"2011-02-18\", \"value\": 0.9 },\n  { \"date\": \"2011-02-19\", \"value\": 0.9 },\n  { \"date\": \"2011-02-20\", \"value\": 0.9 },\n  { \"date\": \"2011-02-21\", \"value\": 0.8 },\n  { \"date\": \"2011-02-22\", \"value\": 0.9 },\n  { \"date\": \"2011-02-23\", \"value\": 0.9 },\n  { \"date\": \"2011-02-24\", \"value\": 1.0 },\n  { \"date\": \"2011-02-25\", \"value\": 0.9 },\n  { \"date\": \"2011-02-26\", \"value\": 1.0 },\n  { \"date\": \"2011-02-27\", \"value\": 0.9 },\n  { \"date\": \"2011-02-28\", \"value\": 0.9 },\n  { \"date\": \"2011-03-01\", \"value\": 0.9 },\n  { \"date\": \"2011-03-02\", \"value\": 0.9 },\n  { \"date\": \"2011-03-03\", \"value\": 0.9 },\n  { \"date\": \"2011-03-04\", \"value\": 0.9 },\n  { \"date\": \"2011-03-05\", \"value\": 0.9 },\n  { \"date\": \"2011-03-06\", \"value\": 0.9 },\n  { \"date\": \"2011-03-07\", \"value\": 0.9 },\n  { \"date\": \"2011-03-08\", \"value\": 0.9 },\n  { \"date\": \"2011-03-09\", \"value\": 0.9 },\n  { \"date\": \"2011-03-10\", \"value\": 0.9 },\n  { \"date\": \"2011-03-11\", \"value\": 0.9 },\n  { \"date\": \"2011-03-12\", \"value\": 0.9 },\n  { \"date\": \"2011-03-13\", \"value\": 0.9 },\n  { \"date\": \"2011-03-14\", \"value\": 0.9 },\n  { \"date\": \"2011-03-15\", \"value\": 0.9 },\n  { \"date\": \"2011-03-16\", \"value\": 0.9 },\n  { \"date\": \"2011-03-17\", \"value\": 0.8 },\n  { \"date\": \"2011-03-18\", \"value\": 0.8 },\n  { \"date\": \"2011-03-19\", \"value\": 0.8 },\n  { \"date\": \"2011-03-20\", \"value\": 0.7 },\n  { \"date\": \"2011-03-21\", \"value\": 0.8 },\n  { \"date\": \"2011-03-22\", \"value\": 0.8 },\n  { \"date\": \"2011-03-23\", \"value\": 0.8 },\n  { \"date\": \"2011-03-24\", \"value\": 0.9 },\n  { \"date\": \"2011-03-25\", \"value\": 0.9 },\n  { \"date\": \"2011-03-26\", \"value\": 0.9 },\n  { \"date\": \"2011-03-27\", \"value\": 0.8 },\n  { \"date\": \"2011-03-28\", \"value\": 0.8 },\n  { \"date\": \"2011-03-29\", \"value\": 0.8 },\n  { \"date\": \"2011-03-30\", \"value\": 0.8 },\n  { \"date\": \"2011-03-31\", \"value\": 0.8 },\n  { \"date\": \"2011-04-01\", \"value\": 0.8 },\n  { \"date\": \"2011-04-02\", \"value\": 0.8 },\n  { \"date\": \"2011-04-03\", \"value\": 0.8 },\n  { \"date\": \"2011-04-04\", \"value\": 0.7 },\n  { \"date\": \"2011-04-05\", \"value\": 0.7 },\n  { \"date\": \"2011-04-06\", \"value\": 0.7 },\n  { \"date\": \"2011-04-07\", \"value\": 0.8 },\n  { \"date\": \"2011-04-08\", \"value\": 0.8 },\n  { \"date\": \"2011-04-09\", \"value\": 0.7 },\n  { \"date\": \"2011-04-10\", \"value\": 0.7 },\n  { \"date\": \"2011-04-11\", \"value\": 0.8 },\n  { \"date\": \"2011-04-12\", \"value\": 0.9 },\n  { \"date\": \"2011-04-13\", \"value\": 0.9 },\n  { \"date\": \"2011-04-14\", \"value\": 1.0 },\n  { \"date\": \"2011-04-15\", \"value\": 1.0 },\n  { \"date\": \"2011-04-16\", \"value\": 1.0 },\n  { \"date\": \"2011-04-17\", \"value\": 1.1 },\n  { \"date\": \"2011-04-18\", \"value\": 1.2 },\n  { \"date\": \"2011-04-19\", \"value\": 1.2 },\n  { \"date\": \"2011-04-20\", \"value\": 1.1 },\n  { \"date\": \"2011-04-21\", \"value\": 1.2 },\n  { \"date\": \"2011-04-22\", \"value\": 1.4 },\n  { \"date\": \"2011-04-23\", \"value\": 1.7 },\n  { \"date\": \"2011-04-24\", \"value\": 1.6 },\n  { \"date\": \"2011-04-25\", \"value\": 1.6 },\n  { \"date\": \"2011-04-26\", \"value\": 1.8 },\n  { \"date\": \"2011-04-27\", \"value\": 1.9 },\n  { \"date\": \"2011-04-28\", \"value\": 2.2 },\n  { \"date\": \"2011-04-29\", \"value\": 2.9 },\n  { \"date\": \"2011-04-30\", \"value\": 3.5 },\n  { \"date\": \"2011-05-01\", \"value\": 3.0 },\n  { \"date\": \"2011-05-02\", \"value\": 3.2 },\n  { \"date\": \"2011-05-03\", \"value\": 3.4 },\n  { \"date\": \"2011-05-04\", \"value\": 3.4 },\n  { \"date\": \"2011-05-05\", \"value\": 3.3 },\n  { \"date\": \"2011-05-06\", \"value\": 3.5 },\n  { \"date\": \"2011-05-07\", \"value\": 3.6 },\n  { \"date\": \"2011-05-08\", \"value\": 3.9 },\n  { \"date\": \"2011-05-09\", \"value\": 3.8 },\n  { \"date\": \"2011-05-10\", \"value\": 5.8 },\n  { \"date\": \"2011-05-11\", \"value\": 5.5 },\n  { \"date\": \"2011-05-12\", \"value\": 6.3 },\n  { \"date\": \"2011-05-13\", \"value\": 8.2 },\n  { \"date\": \"2011-05-14\", \"value\": 7.2 },\n  { \"date\": \"2011-05-15\", \"value\": 7.0 },\n  { \"date\": \"2011-05-16\", \"value\": 8.0 },\n  { \"date\": \"2011-05-17\", \"value\": 7.2 },\n  { \"date\": \"2011-05-18\", \"value\": 6.9 },\n  { \"date\": \"2011-05-19\", \"value\": 6.8 },\n  { \"date\": \"2011-05-20\", \"value\": 5.6 },\n  { \"date\": \"2011-05-21\", \"value\": 6.1 },\n  { \"date\": \"2011-05-22\", \"value\": 6.7 },\n  { \"date\": \"2011-05-23\", \"value\": 7.2 },\n  { \"date\": \"2011-05-24\", \"value\": 7.4 },\n  { \"date\": \"2011-05-25\", \"value\": 8.4 },\n  { \"date\": \"2011-05-26\", \"value\": 8.8 },\n  { \"date\": \"2011-05-27\", \"value\": 8.5 },\n  { \"date\": \"2011-05-28\", \"value\": 8.3 },\n  { \"date\": \"2011-05-29\", \"value\": 8.4 },\n  { \"date\": \"2011-05-30\", \"value\": 8.8 },\n  { \"date\": \"2011-05-31\", \"value\": 8.7 },\n  { \"date\": \"2011-06-01\", \"value\": 9.6 },\n  { \"date\": \"2011-06-02\", \"value\": 10.6 },\n  { \"date\": \"2011-06-03\", \"value\": 14.3 },\n  { \"date\": \"2011-06-04\", \"value\": 18.9 },\n  { \"date\": \"2011-06-05\", \"value\": 16.7 },\n  { \"date\": \"2011-06-06\", \"value\": 18.5 },\n  { \"date\": \"2011-06-07\", \"value\": 23.9 },\n  { \"date\": \"2011-06-08\", \"value\": 29.6 },\n  { \"date\": \"2011-06-09\", \"value\": 28.9 },\n  { \"date\": \"2011-06-10\", \"value\": 24.0 },\n  { \"date\": \"2011-06-11\", \"value\": 14.6 },\n  { \"date\": \"2011-06-12\", \"value\": 18.5 },\n  { \"date\": \"2011-06-13\", \"value\": 19.8 },\n  { \"date\": \"2011-06-14\", \"value\": 19.3 },\n  { \"date\": \"2011-06-15\", \"value\": 19.5 },\n  { \"date\": \"2011-06-16\", \"value\": 17.0 },\n  { \"date\": \"2011-06-17\", \"value\": 15.7 },\n  { \"date\": \"2011-06-18\", \"value\": 16.9 },\n  { \"date\": \"2011-06-19\", \"value\": 17.5 },\n  { \"date\": \"2011-06-20\", \"value\": 17.5 },\n  { \"date\": \"2011-06-21\", \"value\": 17.5 },\n  { \"date\": \"2011-06-22\", \"value\": 17.5 },\n  { \"date\": \"2011-06-23\", \"value\": 17.5 },\n  { \"date\": \"2011-06-24\", \"value\": 17.5 },\n  { \"date\": \"2011-06-25\", \"value\": 17.5 },\n  { \"date\": \"2011-06-26\", \"value\": 16.5 },\n  { \"date\": \"2011-06-27\", \"value\": 16.8 },\n  { \"date\": \"2011-06-28\", \"value\": 17.0 },\n  { \"date\": \"2011-06-29\", \"value\": 16.9 },\n  { \"date\": \"2011-06-30\", \"value\": 16.1 },\n  { \"date\": \"2011-07-01\", \"value\": 15.4 },\n  { \"date\": \"2011-07-02\", \"value\": 15.4 },\n  { \"date\": \"2011-07-03\", \"value\": 15.4 },\n  { \"date\": \"2011-07-04\", \"value\": 13.9 },\n  { \"date\": \"2011-07-05\", \"value\": 12.9 },\n  { \"date\": \"2011-07-06\", \"value\": 14.8 },\n  { \"date\": \"2011-07-07\", \"value\": 14.8 },\n  { \"date\": \"2011-07-08\", \"value\": 14.3 },\n  { \"date\": \"2011-07-09\", \"value\": 14.4 },\n  { \"date\": \"2011-07-10\", \"value\": 14.9 },\n  { \"date\": \"2011-07-11\", \"value\": 14.2 },\n  { \"date\": \"2011-07-12\", \"value\": 14.0 },\n  { \"date\": \"2011-07-13\", \"value\": 13.9 },\n  { \"date\": \"2011-07-14\", \"value\": 14.0 },\n  { \"date\": \"2011-07-15\", \"value\": 13.8 },\n  { \"date\": \"2011-07-16\", \"value\": 13.7 },\n  { \"date\": \"2011-07-17\", \"value\": 13.2 },\n  { \"date\": \"2011-07-18\", \"value\": 13.5 },\n  { \"date\": \"2011-07-19\", \"value\": 13.9 },\n  { \"date\": \"2011-07-20\", \"value\": 13.7 },\n  { \"date\": \"2011-07-21\", \"value\": 13.6 },\n  { \"date\": \"2011-07-22\", \"value\": 13.7 },\n  { \"date\": \"2011-07-23\", \"value\": 13.7 },\n  { \"date\": \"2011-07-24\", \"value\": 14.0 },\n  { \"date\": \"2011-07-25\", \"value\": 14.1 },\n  { \"date\": \"2011-07-26\", \"value\": 13.9 },\n  { \"date\": \"2011-07-27\", \"value\": 13.9 },\n  { \"date\": \"2011-07-28\", \"value\": 13.5 },\n  { \"date\": \"2011-07-29\", \"value\": 13.5 },\n  { \"date\": \"2011-07-30\", \"value\": 13.5 },\n  { \"date\": \"2011-07-31\", \"value\": 13.4 },\n  { \"date\": \"2011-08-01\", \"value\": 13.1 },\n  { \"date\": \"2011-08-02\", \"value\": 12.1 },\n  { \"date\": \"2011-08-03\", \"value\": 9.3 },\n  { \"date\": \"2011-08-04\", \"value\": 10.8 },\n  { \"date\": \"2011-08-05\", \"value\": 9.8 },\n  { \"date\": \"2011-08-06\", \"value\": 6.6 },\n  { \"date\": \"2011-08-07\", \"value\": 7.9 },\n  { \"date\": \"2011-08-08\", \"value\": 7.8 },\n  { \"date\": \"2011-08-09\", \"value\": 10.0 },\n  { \"date\": \"2011-08-10\", \"value\": 10.0 },\n  { \"date\": \"2011-08-11\", \"value\": 9.5 },\n  { \"date\": \"2011-08-12\", \"value\": 9.5 },\n  { \"date\": \"2011-08-13\", \"value\": 10.1 },\n  { \"date\": \"2011-08-14\", \"value\": 10.8 },\n  { \"date\": \"2011-08-15\", \"value\": 11.1 },\n  { \"date\": \"2011-08-16\", \"value\": 11.0 },\n  { \"date\": \"2011-08-17\", \"value\": 10.9 },\n  { \"date\": \"2011-08-18\", \"value\": 10.8 },\n  { \"date\": \"2011-08-19\", \"value\": 11.6 },\n  { \"date\": \"2011-08-20\", \"value\": 11.4 },\n  { \"date\": \"2011-08-21\", \"value\": 11.3 },\n  { \"date\": \"2011-08-22\", \"value\": 10.9 },\n  { \"date\": \"2011-08-23\", \"value\": 10.9 },\n  { \"date\": \"2011-08-24\", \"value\": 10.9 },\n  { \"date\": \"2011-08-25\", \"value\": 9.7 },\n  { \"date\": \"2011-08-26\", \"value\": 8.2 },\n  { \"date\": \"2011-08-27\", \"value\": 8.6 },\n  { \"date\": \"2011-08-28\", \"value\": 9.1 },\n  { \"date\": \"2011-08-29\", \"value\": 9.0 },\n  { \"date\": \"2011-08-30\", \"value\": 8.8 },\n  { \"date\": \"2011-08-31\", \"value\": 8.2 },\n  { \"date\": \"2011-09-01\", \"value\": 8.2 },\n  { \"date\": \"2011-09-02\", \"value\": 8.6 },\n  { \"date\": \"2011-09-03\", \"value\": 8.5 },\n  { \"date\": \"2011-09-04\", \"value\": 8.2 },\n  { \"date\": \"2011-09-05\", \"value\": 7.6 },\n  { \"date\": \"2011-09-06\", \"value\": 6.9 },\n  { \"date\": \"2011-09-07\", \"value\": 7.2 },\n  { \"date\": \"2011-09-08\", \"value\": 6.5 },\n  { \"date\": \"2011-09-09\", \"value\": 5.0 },\n  { \"date\": \"2011-09-10\", \"value\": 4.8 },\n  { \"date\": \"2011-09-11\", \"value\": 5.9 },\n  { \"date\": \"2011-09-12\", \"value\": 6.1 },\n  { \"date\": \"2011-09-13\", \"value\": 5.8 },\n  { \"date\": \"2011-09-14\", \"value\": 5.6 },\n  { \"date\": \"2011-09-15\", \"value\": 4.8 },\n  { \"date\": \"2011-09-16\", \"value\": 4.8 },\n  { \"date\": \"2011-09-17\", \"value\": 4.8 },\n  { \"date\": \"2011-09-18\", \"value\": 5.2 },\n  { \"date\": \"2011-09-19\", \"value\": 5.5 },\n  { \"date\": \"2011-09-20\", \"value\": 6.1 },\n  { \"date\": \"2011-09-21\", \"value\": 5.6 },\n  { \"date\": \"2011-09-22\", \"value\": 5.4 },\n  { \"date\": \"2011-09-23\", \"value\": 5.6 },\n  { \"date\": \"2011-09-24\", \"value\": 5.5 },\n  { \"date\": \"2011-09-25\", \"value\": 5.3 },\n  { \"date\": \"2011-09-26\", \"value\": 4.9 },\n  { \"date\": \"2011-09-27\", \"value\": 4.9 },\n  { \"date\": \"2011-09-28\", \"value\": 4.8 },\n  { \"date\": \"2011-09-29\", \"value\": 4.8 },\n  { \"date\": \"2011-09-30\", \"value\": 5.1 },\n  { \"date\": \"2011-10-01\", \"value\": 5.0 },\n  { \"date\": \"2011-10-02\", \"value\": 5.0 },\n  { \"date\": \"2011-10-03\", \"value\": 5.0 },\n  { \"date\": \"2011-10-04\", \"value\": 5.0 },\n  { \"date\": \"2011-10-05\", \"value\": 4.9 },\n  { \"date\": \"2011-10-06\", \"value\": 4.7 },\n  { \"date\": \"2011-10-07\", \"value\": 4.3 },\n  { \"date\": \"2011-10-08\", \"value\": 4.0 },\n  { \"date\": \"2011-10-09\", \"value\": 4.1 },\n  { \"date\": \"2011-10-10\", \"value\": 4.1 },\n  { \"date\": \"2011-10-11\", \"value\": 3.9 },\n  { \"date\": \"2011-10-12\", \"value\": 4.2 },\n  { \"date\": \"2011-10-13\", \"value\": 4.1 },\n  { \"date\": \"2011-10-14\", \"value\": 4.0 },\n  { \"date\": \"2011-10-15\", \"value\": 3.8 },\n  { \"date\": \"2011-10-16\", \"value\": 3.6 },\n  { \"date\": \"2011-10-17\", \"value\": 2.6 },\n  { \"date\": \"2011-10-18\", \"value\": 2.4 },\n  { \"date\": \"2011-10-19\", \"value\": 2.3 },\n  { \"date\": \"2011-10-20\", \"value\": 2.3 },\n  { \"date\": \"2011-10-21\", \"value\": 2.6 },\n  { \"date\": \"2011-10-22\", \"value\": 3.2 },\n  { \"date\": \"2011-10-23\", \"value\": 3.2 },\n  { \"date\": \"2011-10-24\", \"value\": 2.5 },\n  { \"date\": \"2011-10-25\", \"value\": 2.8 },\n  { \"date\": \"2011-10-26\", \"value\": 2.8 },\n  { \"date\": \"2011-10-27\", \"value\": 3.0 },\n  { \"date\": \"2011-10-28\", \"value\": 3.2 },\n  { \"date\": \"2011-10-29\", \"value\": 3.6 },\n  { \"date\": \"2011-10-30\", \"value\": 3.3 },\n  { \"date\": \"2011-10-31\", \"value\": 3.3 },\n  { \"date\": \"2011-11-01\", \"value\": 3.2 },\n  { \"date\": \"2011-11-02\", \"value\": 3.3 },\n  { \"date\": \"2011-11-03\", \"value\": 3.2 },\n  { \"date\": \"2011-11-04\", \"value\": 3.1 },\n  { \"date\": \"2011-11-05\", \"value\": 3.0 },\n  { \"date\": \"2011-11-06\", \"value\": 3.0 },\n  { \"date\": \"2011-11-07\", \"value\": 3.0 },\n  { \"date\": \"2011-11-08\", \"value\": 3.0 },\n  { \"date\": \"2011-11-09\", \"value\": 3.0 },\n  { \"date\": \"2011-11-10\", \"value\": 2.8 },\n  { \"date\": \"2011-11-11\", \"value\": 3.1 },\n  { \"date\": \"2011-11-12\", \"value\": 3.0 },\n  { \"date\": \"2011-11-13\", \"value\": 3.0 },\n  { \"date\": \"2011-11-14\", \"value\": 2.2 },\n  { \"date\": \"2011-11-15\", \"value\": 2.3 },\n  { \"date\": \"2011-11-16\", \"value\": 2.6 },\n  { \"date\": \"2011-11-17\", \"value\": 2.3 },\n  { \"date\": \"2011-11-18\", \"value\": 2.0 },\n  { \"date\": \"2011-11-19\", \"value\": 2.2 },\n  { \"date\": \"2011-11-20\", \"value\": 2.2 },\n  { \"date\": \"2011-11-21\", \"value\": 2.3 },\n  { \"date\": \"2011-11-22\", \"value\": 2.3 },\n  { \"date\": \"2011-11-23\", \"value\": 2.3 },\n  { \"date\": \"2011-11-24\", \"value\": 2.4 },\n  { \"date\": \"2011-11-25\", \"value\": 2.5 },\n  { \"date\": \"2011-11-26\", \"value\": 2.5 },\n  { \"date\": \"2011-11-27\", \"value\": 2.5 },\n  { \"date\": \"2011-11-28\", \"value\": 2.5 },\n  { \"date\": \"2011-11-29\", \"value\": 2.8 },\n  { \"date\": \"2011-11-30\", \"value\": 3.0 },\n  { \"date\": \"2011-12-01\", \"value\": 3.1 },\n  { \"date\": \"2011-12-02\", \"value\": 3.1 },\n  { \"date\": \"2011-12-03\", \"value\": 2.8 },\n  { \"date\": \"2011-12-04\", \"value\": 2.8 },\n  { \"date\": \"2011-12-05\", \"value\": 2.9 },\n  { \"date\": \"2011-12-06\", \"value\": 3.0 },\n  { \"date\": \"2011-12-07\", \"value\": 3.0 },\n  { \"date\": \"2011-12-08\", \"value\": 3.0 },\n  { \"date\": \"2011-12-09\", \"value\": 3.0 },\n  { \"date\": \"2011-12-10\", \"value\": 3.0 },\n  { \"date\": \"2011-12-11\", \"value\": 3.3 },\n  { \"date\": \"2011-12-12\", \"value\": 3.1 },\n  { \"date\": \"2011-12-13\", \"value\": 3.3 },\n  { \"date\": \"2011-12-14\", \"value\": 3.2 },\n  { \"date\": \"2011-12-15\", \"value\": 3.2 },\n  { \"date\": \"2011-12-16\", \"value\": 3.2 },\n  { \"date\": \"2011-12-17\", \"value\": 3.2 },\n  { \"date\": \"2011-12-18\", \"value\": 3.2 },\n  { \"date\": \"2011-12-19\", \"value\": 3.5 },\n  { \"date\": \"2011-12-20\", \"value\": 4.0 },\n  { \"date\": \"2011-12-21\", \"value\": 3.9 },\n  { \"date\": \"2011-12-22\", \"value\": 3.9 },\n  { \"date\": \"2011-12-23\", \"value\": 4.0 },\n  { \"date\": \"2011-12-24\", \"value\": 3.9 },\n  { \"date\": \"2011-12-25\", \"value\": 4.2 },\n  { \"date\": \"2011-12-26\", \"value\": 4.0 },\n  { \"date\": \"2011-12-27\", \"value\": 4.1 },\n  { \"date\": \"2011-12-28\", \"value\": 4.2 },\n  { \"date\": \"2011-12-29\", \"value\": 4.2 },\n  { \"date\": \"2011-12-30\", \"value\": 4.3 },\n  { \"date\": \"2011-12-31\", \"value\": 4.7 },\n  { \"date\": \"2012-01-01\", \"value\": 5.3 },\n  { \"date\": \"2012-01-02\", \"value\": 5.2 },\n  { \"date\": \"2012-01-03\", \"value\": 4.9 },\n  { \"date\": \"2012-01-04\", \"value\": 5.6 },\n  { \"date\": \"2012-01-05\", \"value\": 6.9 },\n  { \"date\": \"2012-01-06\", \"value\": 6.7 },\n  { \"date\": \"2012-01-07\", \"value\": 6.8 },\n  { \"date\": \"2012-01-08\", \"value\": 7.1 },\n  { \"date\": \"2012-01-09\", \"value\": 6.3 },\n  { \"date\": \"2012-01-10\", \"value\": 6.4 },\n  { \"date\": \"2012-01-11\", \"value\": 6.9 },\n  { \"date\": \"2012-01-12\", \"value\": 6.8 },\n  { \"date\": \"2012-01-13\", \"value\": 6.4 },\n  { \"date\": \"2012-01-14\", \"value\": 6.8 },\n  { \"date\": \"2012-01-15\", \"value\": 7.0 },\n  { \"date\": \"2012-01-16\", \"value\": 6.7 },\n  { \"date\": \"2012-01-17\", \"value\": 5.6 },\n  { \"date\": \"2012-01-18\", \"value\": 5.9 },\n  { \"date\": \"2012-01-19\", \"value\": 6.4 },\n  { \"date\": \"2012-01-20\", \"value\": 6.5 },\n  { \"date\": \"2012-01-21\", \"value\": 6.2 },\n  { \"date\": \"2012-01-22\", \"value\": 6.3 },\n  { \"date\": \"2012-01-23\", \"value\": 6.4 },\n  { \"date\": \"2012-01-24\", \"value\": 6.3 },\n  { \"date\": \"2012-01-25\", \"value\": 5.8 },\n  { \"date\": \"2012-01-26\", \"value\": 5.3 },\n  { \"date\": \"2012-01-27\", \"value\": 5.3 },\n  { \"date\": \"2012-01-28\", \"value\": 5.6 },\n  { \"date\": \"2012-01-29\", \"value\": 5.4 },\n  { \"date\": \"2012-01-30\", \"value\": 5.5 },\n  { \"date\": \"2012-01-31\", \"value\": 5.5 },\n  { \"date\": \"2012-02-01\", \"value\": 6.1 },\n  { \"date\": \"2012-02-02\", \"value\": 6.1 },\n  { \"date\": \"2012-02-03\", \"value\": 6.0 },\n  { \"date\": \"2012-02-04\", \"value\": 5.9 },\n  { \"date\": \"2012-02-05\", \"value\": 5.7 },\n  { \"date\": \"2012-02-06\", \"value\": 5.4 },\n  { \"date\": \"2012-02-07\", \"value\": 5.7 },\n  { \"date\": \"2012-02-08\", \"value\": 5.6 },\n  { \"date\": \"2012-02-09\", \"value\": 5.8 },\n  { \"date\": \"2012-02-10\", \"value\": 5.9 },\n  { \"date\": \"2012-02-11\", \"value\": 5.6 },\n  { \"date\": \"2012-02-12\", \"value\": 5.5 },\n  { \"date\": \"2012-02-13\", \"value\": 5.3 },\n  { \"date\": \"2012-02-14\", \"value\": 4.5 },\n  { \"date\": \"2012-02-15\", \"value\": 4.3 },\n  { \"date\": \"2012-02-16\", \"value\": 4.3 },\n  { \"date\": \"2012-02-17\", \"value\": 4.4 },\n  { \"date\": \"2012-02-18\", \"value\": 4.2 },\n  { \"date\": \"2012-02-19\", \"value\": 4.4 },\n  { \"date\": \"2012-02-20\", \"value\": 4.4 },\n  { \"date\": \"2012-02-21\", \"value\": 4.3 },\n  { \"date\": \"2012-02-22\", \"value\": 4.4 },\n  { \"date\": \"2012-02-23\", \"value\": 5.0 },\n  { \"date\": \"2012-02-24\", \"value\": 5.0 },\n  { \"date\": \"2012-02-25\", \"value\": 4.8 },\n  { \"date\": \"2012-02-26\", \"value\": 4.9 },\n  { \"date\": \"2012-02-27\", \"value\": 5.0 },\n  { \"date\": \"2012-02-28\", \"value\": 4.9 },\n  { \"date\": \"2012-02-29\", \"value\": 4.9 },\n  { \"date\": \"2012-03-01\", \"value\": 4.9 },\n  { \"date\": \"2012-03-02\", \"value\": 4.7 },\n  { \"date\": \"2012-03-03\", \"value\": 4.6 },\n  { \"date\": \"2012-03-04\", \"value\": 4.8 },\n  { \"date\": \"2012-03-05\", \"value\": 5.0 },\n  { \"date\": \"2012-03-06\", \"value\": 5.0 },\n  { \"date\": \"2012-03-07\", \"value\": 4.9 },\n  { \"date\": \"2012-03-08\", \"value\": 4.9 },\n  { \"date\": \"2012-03-09\", \"value\": 4.9 },\n  { \"date\": \"2012-03-10\", \"value\": 4.8 },\n  { \"date\": \"2012-03-11\", \"value\": 4.9 },\n  { \"date\": \"2012-03-12\", \"value\": 4.9 },\n  { \"date\": \"2012-03-13\", \"value\": 5.3 },\n  { \"date\": \"2012-03-14\", \"value\": 5.4 },\n  { \"date\": \"2012-03-15\", \"value\": 5.3 },\n  { \"date\": \"2012-03-16\", \"value\": 5.3 },\n  { \"date\": \"2012-03-17\", \"value\": 5.2 },\n  { \"date\": \"2012-03-18\", \"value\": 5.3 },\n  { \"date\": \"2012-03-19\", \"value\": 4.7 },\n  { \"date\": \"2012-03-20\", \"value\": 4.8 },\n  { \"date\": \"2012-03-21\", \"value\": 4.8 },\n  { \"date\": \"2012-03-22\", \"value\": 4.7 },\n  { \"date\": \"2012-03-23\", \"value\": 4.7 },\n  { \"date\": \"2012-03-24\", \"value\": 4.7 },\n  { \"date\": \"2012-03-25\", \"value\": 4.6 },\n  { \"date\": \"2012-03-26\", \"value\": 4.6 },\n  { \"date\": \"2012-03-27\", \"value\": 4.8 },\n  { \"date\": \"2012-03-28\", \"value\": 4.8 },\n  { \"date\": \"2012-03-29\", \"value\": 4.8 },\n  { \"date\": \"2012-03-30\", \"value\": 4.9 },\n  { \"date\": \"2012-03-31\", \"value\": 4.9 },\n  { \"date\": \"2012-04-01\", \"value\": 4.8 },\n  { \"date\": \"2012-04-02\", \"value\": 5.0 },\n  { \"date\": \"2012-04-03\", \"value\": 4.9 },\n  { \"date\": \"2012-04-04\", \"value\": 4.9 },\n  { \"date\": \"2012-04-05\", \"value\": 4.9 },\n  { \"date\": \"2012-04-06\", \"value\": 4.9 },\n  { \"date\": \"2012-04-07\", \"value\": 4.7 },\n  { \"date\": \"2012-04-08\", \"value\": 4.8 },\n  { \"date\": \"2012-04-09\", \"value\": 4.9 },\n  { \"date\": \"2012-04-10\", \"value\": 4.8 },\n  { \"date\": \"2012-04-11\", \"value\": 4.9 },\n  { \"date\": \"2012-04-12\", \"value\": 4.9 },\n  { \"date\": \"2012-04-13\", \"value\": 4.9 },\n  { \"date\": \"2012-04-14\", \"value\": 5.0 },\n  { \"date\": \"2012-04-15\", \"value\": 5.0 },\n  { \"date\": \"2012-04-16\", \"value\": 4.9 },\n  { \"date\": \"2012-04-17\", \"value\": 5.0 },\n  { \"date\": \"2012-04-18\", \"value\": 5.1 },\n  { \"date\": \"2012-04-19\", \"value\": 5.1 },\n  { \"date\": \"2012-04-20\", \"value\": 5.3 },\n  { \"date\": \"2012-04-21\", \"value\": 5.3 },\n  { \"date\": \"2012-04-22\", \"value\": 5.2 },\n  { \"date\": \"2012-04-23\", \"value\": 5.0 },\n  { \"date\": \"2012-04-24\", \"value\": 5.1 },\n  { \"date\": \"2012-04-25\", \"value\": 5.1 },\n  { \"date\": \"2012-04-26\", \"value\": 5.1 },\n  { \"date\": \"2012-04-27\", \"value\": 5.1 },\n  { \"date\": \"2012-04-28\", \"value\": 5.0 },\n  { \"date\": \"2012-04-29\", \"value\": 4.9 },\n  { \"date\": \"2012-04-30\", \"value\": 4.9 },\n  { \"date\": \"2012-05-01\", \"value\": 5.0 },\n  { \"date\": \"2012-05-02\", \"value\": 5.1 },\n  { \"date\": \"2012-05-03\", \"value\": 5.1 },\n  { \"date\": \"2012-05-04\", \"value\": 5.1 },\n  { \"date\": \"2012-05-05\", \"value\": 5.1 },\n  { \"date\": \"2012-05-06\", \"value\": 5.1 },\n  { \"date\": \"2012-05-07\", \"value\": 5.1 },\n  { \"date\": \"2012-05-08\", \"value\": 5.1 },\n  { \"date\": \"2012-05-09\", \"value\": 5.0 },\n  { \"date\": \"2012-05-10\", \"value\": 4.8 },\n  { \"date\": \"2012-05-11\", \"value\": 5.0 },\n  { \"date\": \"2012-05-12\", \"value\": 4.9 },\n  { \"date\": \"2012-05-13\", \"value\": 4.9 },\n  { \"date\": \"2012-05-14\", \"value\": 5.0 },\n  { \"date\": \"2012-05-15\", \"value\": 5.0 },\n  { \"date\": \"2012-05-16\", \"value\": 5.1 },\n  { \"date\": \"2012-05-17\", \"value\": 5.1 },\n  { \"date\": \"2012-05-18\", \"value\": 5.1 },\n  { \"date\": \"2012-05-19\", \"value\": 5.1 },\n  { \"date\": \"2012-05-20\", \"value\": 5.1 },\n  { \"date\": \"2012-05-21\", \"value\": 5.1 },\n  { \"date\": \"2012-05-22\", \"value\": 5.1 },\n  { \"date\": \"2012-05-23\", \"value\": 5.1 },\n  { \"date\": \"2012-05-24\", \"value\": 5.1 },\n  { \"date\": \"2012-05-25\", \"value\": 5.2 },\n  { \"date\": \"2012-05-26\", \"value\": 5.1 },\n  { \"date\": \"2012-05-27\", \"value\": 5.1 },\n  { \"date\": \"2012-05-28\", \"value\": 5.1 },\n  { \"date\": \"2012-05-29\", \"value\": 5.2 },\n  { \"date\": \"2012-05-30\", \"value\": 5.1 },\n  { \"date\": \"2012-05-31\", \"value\": 5.2 },\n  { \"date\": \"2012-06-01\", \"value\": 5.3 },\n  { \"date\": \"2012-06-02\", \"value\": 5.3 },\n  { \"date\": \"2012-06-03\", \"value\": 5.2 },\n  { \"date\": \"2012-06-04\", \"value\": 5.3 },\n  { \"date\": \"2012-06-05\", \"value\": 5.4 },\n  { \"date\": \"2012-06-06\", \"value\": 5.5 },\n  { \"date\": \"2012-06-07\", \"value\": 5.6 },\n  { \"date\": \"2012-06-08\", \"value\": 5.6 },\n  { \"date\": \"2012-06-09\", \"value\": 5.6 },\n  { \"date\": \"2012-06-10\", \"value\": 5.5 },\n  { \"date\": \"2012-06-11\", \"value\": 5.6 },\n  { \"date\": \"2012-06-12\", \"value\": 5.7 },\n  { \"date\": \"2012-06-13\", \"value\": 5.9 },\n  { \"date\": \"2012-06-14\", \"value\": 5.9 },\n  { \"date\": \"2012-06-15\", \"value\": 6.5 },\n  { \"date\": \"2012-06-16\", \"value\": 6.4 },\n  { \"date\": \"2012-06-17\", \"value\": 6.2 },\n  { \"date\": \"2012-06-18\", \"value\": 6.3 },\n  { \"date\": \"2012-06-19\", \"value\": 6.5 },\n  { \"date\": \"2012-06-20\", \"value\": 6.7 },\n  { \"date\": \"2012-06-21\", \"value\": 6.7 },\n  { \"date\": \"2012-06-22\", \"value\": 6.6 },\n  { \"date\": \"2012-06-23\", \"value\": 6.4 },\n  { \"date\": \"2012-06-24\", \"value\": 6.3 },\n  { \"date\": \"2012-06-25\", \"value\": 6.3 },\n  { \"date\": \"2012-06-26\", \"value\": 6.4 },\n  { \"date\": \"2012-06-27\", \"value\": 6.7 },\n  { \"date\": \"2012-06-28\", \"value\": 6.6 },\n  { \"date\": \"2012-06-29\", \"value\": 6.7 },\n  { \"date\": \"2012-06-30\", \"value\": 6.7 },\n  { \"date\": \"2012-07-01\", \"value\": 6.6 },\n  { \"date\": \"2012-07-02\", \"value\": 6.8 },\n  { \"date\": \"2012-07-03\", \"value\": 6.4 },\n  { \"date\": \"2012-07-04\", \"value\": 6.5 },\n  { \"date\": \"2012-07-05\", \"value\": 6.7 },\n  { \"date\": \"2012-07-06\", \"value\": 6.7 },\n  { \"date\": \"2012-07-07\", \"value\": 6.8 },\n  { \"date\": \"2012-07-08\", \"value\": 6.8 },\n  { \"date\": \"2012-07-09\", \"value\": 7.0 },\n  { \"date\": \"2012-07-10\", \"value\": 7.2 },\n  { \"date\": \"2012-07-11\", \"value\": 7.2 },\n  { \"date\": \"2012-07-12\", \"value\": 7.8 },\n  { \"date\": \"2012-07-13\", \"value\": 7.7 },\n  { \"date\": \"2012-07-14\", \"value\": 7.5 },\n  { \"date\": \"2012-07-15\", \"value\": 7.6 },\n  { \"date\": \"2012-07-16\", \"value\": 8.5 },\n  { \"date\": \"2012-07-17\", \"value\": 8.8 },\n  { \"date\": \"2012-07-18\", \"value\": 9.1 },\n  { \"date\": \"2012-07-19\", \"value\": 8.9 },\n  { \"date\": \"2012-07-20\", \"value\": 8.5 },\n  { \"date\": \"2012-07-21\", \"value\": 8.9 },\n  { \"date\": \"2012-07-22\", \"value\": 8.4 },\n  { \"date\": \"2012-07-23\", \"value\": 8.4 },\n  { \"date\": \"2012-07-24\", \"value\": 8.6 },\n  { \"date\": \"2012-07-25\", \"value\": 8.8 },\n  { \"date\": \"2012-07-26\", \"value\": 8.9 },\n  { \"date\": \"2012-07-27\", \"value\": 8.9 },\n  { \"date\": \"2012-07-28\", \"value\": 8.9 },\n  { \"date\": \"2012-07-29\", \"value\": 8.7 },\n  { \"date\": \"2012-07-30\", \"value\": 9.1 },\n  { \"date\": \"2012-07-31\", \"value\": 9.4 },\n  { \"date\": \"2012-08-01\", \"value\": 9.6 },\n  { \"date\": \"2012-08-02\", \"value\": 10.5 },\n  { \"date\": \"2012-08-03\", \"value\": 11.0 },\n  { \"date\": \"2012-08-04\", \"value\": 11.0 },\n  { \"date\": \"2012-08-05\", \"value\": 10.9 },\n  { \"date\": \"2012-08-06\", \"value\": 10.9 },\n  { \"date\": \"2012-08-07\", \"value\": 11.1 },\n  { \"date\": \"2012-08-08\", \"value\": 11.1 },\n  { \"date\": \"2012-08-09\", \"value\": 11.1 },\n  { \"date\": \"2012-08-10\", \"value\": 11.4 },\n  { \"date\": \"2012-08-11\", \"value\": 11.5 },\n  { \"date\": \"2012-08-12\", \"value\": 11.6 },\n  { \"date\": \"2012-08-13\", \"value\": 12.0 },\n  { \"date\": \"2012-08-14\", \"value\": 12.2 },\n  { \"date\": \"2012-08-15\", \"value\": 13.3 },\n  { \"date\": \"2012-08-16\", \"value\": 13.5 },\n  { \"date\": \"2012-08-17\", \"value\": 11.6 },\n  { \"date\": \"2012-08-18\", \"value\": 11.6 },\n  { \"date\": \"2012-08-19\", \"value\": 8.0 },\n  { \"date\": \"2012-08-20\", \"value\": 10.1 },\n  { \"date\": \"2012-08-21\", \"value\": 9.9 },\n  { \"date\": \"2012-08-22\", \"value\": 9.8 },\n  { \"date\": \"2012-08-23\", \"value\": 10.1 },\n  { \"date\": \"2012-08-24\", \"value\": 10.6 },\n  { \"date\": \"2012-08-25\", \"value\": 10.5 },\n  { \"date\": \"2012-08-26\", \"value\": 10.6 },\n  { \"date\": \"2012-08-27\", \"value\": 10.9 },\n  { \"date\": \"2012-08-28\", \"value\": 10.9 },\n  { \"date\": \"2012-08-29\", \"value\": 10.9 },\n  { \"date\": \"2012-08-30\", \"value\": 10.8 },\n  { \"date\": \"2012-08-31\", \"value\": 10.2 },\n  { \"date\": \"2012-09-01\", \"value\": 10.0 },\n  { \"date\": \"2012-09-02\", \"value\": 10.2 },\n  { \"date\": \"2012-09-03\", \"value\": 10.5 },\n  { \"date\": \"2012-09-04\", \"value\": 10.4 },\n  { \"date\": \"2012-09-05\", \"value\": 11.0 },\n  { \"date\": \"2012-09-06\", \"value\": 11.2 },\n  { \"date\": \"2012-09-07\", \"value\": 11.0 },\n  { \"date\": \"2012-09-08\", \"value\": 11.0 },\n  { \"date\": \"2012-09-09\", \"value\": 11.0 },\n  { \"date\": \"2012-09-10\", \"value\": 11.2 },\n  { \"date\": \"2012-09-11\", \"value\": 11.3 },\n  { \"date\": \"2012-09-12\", \"value\": 11.4 },\n  { \"date\": \"2012-09-13\", \"value\": 11.4 },\n  { \"date\": \"2012-09-14\", \"value\": 11.7 },\n  { \"date\": \"2012-09-15\", \"value\": 11.8 },\n  { \"date\": \"2012-09-16\", \"value\": 11.9 },\n  { \"date\": \"2012-09-17\", \"value\": 11.9 },\n  { \"date\": \"2012-09-18\", \"value\": 12.3 },\n  { \"date\": \"2012-09-19\", \"value\": 12.6 },\n  { \"date\": \"2012-09-20\", \"value\": 12.3 },\n  { \"date\": \"2012-09-21\", \"value\": 12.4 },\n  { \"date\": \"2012-09-22\", \"value\": 12.2 },\n  { \"date\": \"2012-09-23\", \"value\": 12.2 },\n  { \"date\": \"2012-09-24\", \"value\": 12.1 },\n  { \"date\": \"2012-09-25\", \"value\": 12.2 },\n  { \"date\": \"2012-09-26\", \"value\": 12.3 },\n  { \"date\": \"2012-09-27\", \"value\": 12.3 },\n  { \"date\": \"2012-09-28\", \"value\": 12.4 },\n  { \"date\": \"2012-09-29\", \"value\": 12.4 },\n  { \"date\": \"2012-09-30\", \"value\": 12.4 },\n  { \"date\": \"2012-10-01\", \"value\": 12.4 },\n  { \"date\": \"2012-10-02\", \"value\": 12.8 },\n  { \"date\": \"2012-10-03\", \"value\": 12.9 },\n  { \"date\": \"2012-10-04\", \"value\": 12.9 },\n  { \"date\": \"2012-10-05\", \"value\": 12.7 },\n  { \"date\": \"2012-10-06\", \"value\": 12.5 },\n  { \"date\": \"2012-10-07\", \"value\": 11.8 },\n  { \"date\": \"2012-10-08\", \"value\": 11.8 },\n  { \"date\": \"2012-10-09\", \"value\": 11.9 },\n  { \"date\": \"2012-10-10\", \"value\": 12.1 },\n  { \"date\": \"2012-10-11\", \"value\": 12.0 },\n  { \"date\": \"2012-10-12\", \"value\": 12.0 },\n  { \"date\": \"2012-10-13\", \"value\": 11.9 },\n  { \"date\": \"2012-10-14\", \"value\": 11.7 },\n  { \"date\": \"2012-10-15\", \"value\": 11.8 },\n  { \"date\": \"2012-10-16\", \"value\": 11.9 },\n  { \"date\": \"2012-10-17\", \"value\": 11.8 },\n  { \"date\": \"2012-10-18\", \"value\": 11.9 },\n  { \"date\": \"2012-10-19\", \"value\": 11.7 },\n  { \"date\": \"2012-10-20\", \"value\": 11.7 },\n  { \"date\": \"2012-10-21\", \"value\": 11.6 },\n  { \"date\": \"2012-10-22\", \"value\": 11.7 },\n  { \"date\": \"2012-10-23\", \"value\": 11.6 },\n  { \"date\": \"2012-10-24\", \"value\": 11.6 },\n  { \"date\": \"2012-10-25\", \"value\": 10.9 },\n  { \"date\": \"2012-10-26\", \"value\": 10.2 },\n  { \"date\": \"2012-10-27\", \"value\": 10.3 },\n  { \"date\": \"2012-10-28\", \"value\": 10.7 },\n  { \"date\": \"2012-10-29\", \"value\": 10.6 },\n  { \"date\": \"2012-10-30\", \"value\": 10.9 },\n  { \"date\": \"2012-10-31\", \"value\": 11.2 },\n  { \"date\": \"2012-11-01\", \"value\": 10.6 },\n  { \"date\": \"2012-11-02\", \"value\": 10.5 },\n  { \"date\": \"2012-11-03\", \"value\": 10.6 },\n  { \"date\": \"2012-11-04\", \"value\": 10.8 },\n  { \"date\": \"2012-11-05\", \"value\": 10.8 },\n  { \"date\": \"2012-11-06\", \"value\": 10.9 },\n  { \"date\": \"2012-11-07\", \"value\": 10.9 },\n  { \"date\": \"2012-11-08\", \"value\": 10.9 },\n  { \"date\": \"2012-11-09\", \"value\": 10.8 },\n  { \"date\": \"2012-11-10\", \"value\": 10.9 },\n  { \"date\": \"2012-11-11\", \"value\": 10.9 },\n  { \"date\": \"2012-11-12\", \"value\": 11.0 },\n  { \"date\": \"2012-11-13\", \"value\": 10.9 },\n  { \"date\": \"2012-11-14\", \"value\": 10.9 },\n  { \"date\": \"2012-11-15\", \"value\": 11.2 },\n  { \"date\": \"2012-11-16\", \"value\": 11.8 },\n  { \"date\": \"2012-11-17\", \"value\": 11.8 },\n  { \"date\": \"2012-11-18\", \"value\": 11.6 },\n  { \"date\": \"2012-11-19\", \"value\": 11.8 },\n  { \"date\": \"2012-11-20\", \"value\": 11.7 },\n  { \"date\": \"2012-11-21\", \"value\": 11.8 },\n  { \"date\": \"2012-11-22\", \"value\": 12.4 },\n  { \"date\": \"2012-11-23\", \"value\": 12.4 },\n  { \"date\": \"2012-11-24\", \"value\": 12.4 },\n  { \"date\": \"2012-11-25\", \"value\": 12.5 },\n  { \"date\": \"2012-11-26\", \"value\": 12.3 },\n  { \"date\": \"2012-11-27\", \"value\": 12.2 },\n  { \"date\": \"2012-11-28\", \"value\": 12.4 },\n  { \"date\": \"2012-11-29\", \"value\": 12.4 },\n  { \"date\": \"2012-11-30\", \"value\": 12.6 },\n  { \"date\": \"2012-12-01\", \"value\": 12.6 },\n  { \"date\": \"2012-12-02\", \"value\": 12.5 },\n  { \"date\": \"2012-12-03\", \"value\": 12.7 },\n  { \"date\": \"2012-12-04\", \"value\": 13.4 },\n  { \"date\": \"2012-12-05\", \"value\": 13.4 },\n  { \"date\": \"2012-12-06\", \"value\": 13.3 },\n  { \"date\": \"2012-12-07\", \"value\": 13.5 },\n  { \"date\": \"2012-12-08\", \"value\": 13.4 },\n  { \"date\": \"2012-12-09\", \"value\": 13.4 },\n  { \"date\": \"2012-12-10\", \"value\": 13.4 },\n  { \"date\": \"2012-12-11\", \"value\": 13.6 },\n  { \"date\": \"2012-12-12\", \"value\": 13.7 },\n  { \"date\": \"2012-12-13\", \"value\": 13.7 },\n  { \"date\": \"2012-12-14\", \"value\": 13.6 },\n  { \"date\": \"2012-12-15\", \"value\": 13.5 },\n  { \"date\": \"2012-12-16\", \"value\": 13.3 },\n  { \"date\": \"2012-12-17\", \"value\": 13.3 },\n  { \"date\": \"2012-12-18\", \"value\": 13.3 },\n  { \"date\": \"2012-12-19\", \"value\": 13.6 },\n  { \"date\": \"2012-12-20\", \"value\": 13.5 },\n  { \"date\": \"2012-12-21\", \"value\": 13.5 },\n  { \"date\": \"2012-12-22\", \"value\": 13.4 },\n  { \"date\": \"2012-12-23\", \"value\": 13.3 },\n  { \"date\": \"2012-12-24\", \"value\": 13.4 },\n  { \"date\": \"2012-12-25\", \"value\": 13.4 },\n  { \"date\": \"2012-12-26\", \"value\": 13.5 },\n  { \"date\": \"2012-12-27\", \"value\": 13.4 },\n  { \"date\": \"2012-12-28\", \"value\": 13.4 },\n  { \"date\": \"2012-12-29\", \"value\": 13.4 },\n  { \"date\": \"2012-12-30\", \"value\": 13.4 },\n  { \"date\": \"2012-12-31\", \"value\": 13.5 },\n  { \"date\": \"2013-01-01\", \"value\": 13.3 },\n  { \"date\": \"2013-01-02\", \"value\": 13.3 },\n  { \"date\": \"2013-01-03\", \"value\": 13.4 },\n  { \"date\": \"2013-01-04\", \"value\": 13.5 },\n  { \"date\": \"2013-01-05\", \"value\": 13.4 },\n  { \"date\": \"2013-01-06\", \"value\": 13.4 },\n  { \"date\": \"2013-01-07\", \"value\": 13.6 },\n  { \"date\": \"2013-01-08\", \"value\": 13.7 },\n  { \"date\": \"2013-01-09\", \"value\": 13.8 },\n  { \"date\": \"2013-01-10\", \"value\": 14.1 },\n  { \"date\": \"2013-01-11\", \"value\": 14.1 },\n  { \"date\": \"2013-01-12\", \"value\": 14.2 },\n  { \"date\": \"2013-01-13\", \"value\": 14.1 },\n  { \"date\": \"2013-01-14\", \"value\": 14.3 },\n  { \"date\": \"2013-01-15\", \"value\": 14.3 },\n  { \"date\": \"2013-01-16\", \"value\": 14.7 },\n  { \"date\": \"2013-01-17\", \"value\": 15.5 },\n  { \"date\": \"2013-01-18\", \"value\": 15.7 },\n  { \"date\": \"2013-01-19\", \"value\": 15.6 },\n  { \"date\": \"2013-01-20\", \"value\": 15.7 },\n  { \"date\": \"2013-01-21\", \"value\": 16.8 },\n  { \"date\": \"2013-01-22\", \"value\": 17.3 },\n  { \"date\": \"2013-01-23\", \"value\": 17.5 },\n  { \"date\": \"2013-01-24\", \"value\": 16.9 },\n  { \"date\": \"2013-01-25\", \"value\": 17.4 },\n  { \"date\": \"2013-01-26\", \"value\": 17.9 },\n  { \"date\": \"2013-01-27\", \"value\": 17.8 },\n  { \"date\": \"2013-01-28\", \"value\": 18.7 },\n  { \"date\": \"2013-01-29\", \"value\": 19.5 },\n  { \"date\": \"2013-01-30\", \"value\": 19.7 },\n  { \"date\": \"2013-01-31\", \"value\": 20.4 },\n  { \"date\": \"2013-02-01\", \"value\": 20.5 },\n  { \"date\": \"2013-02-02\", \"value\": 19.6 },\n  { \"date\": \"2013-02-03\", \"value\": 20.6 },\n  { \"date\": \"2013-02-04\", \"value\": 20.4 },\n  { \"date\": \"2013-02-05\", \"value\": 20.6 },\n  { \"date\": \"2013-02-06\", \"value\": 21.2 },\n  { \"date\": \"2013-02-07\", \"value\": 22.1 },\n  { \"date\": \"2013-02-08\", \"value\": 22.7 },\n  { \"date\": \"2013-02-09\", \"value\": 23.6 },\n  { \"date\": \"2013-02-10\", \"value\": 24.0 },\n  { \"date\": \"2013-02-11\", \"value\": 24.6 },\n  { \"date\": \"2013-02-12\", \"value\": 25.2 },\n  { \"date\": \"2013-02-13\", \"value\": 24.2 },\n  { \"date\": \"2013-02-14\", \"value\": 27.2 },\n  { \"date\": \"2013-02-15\", \"value\": 27.1 },\n  { \"date\": \"2013-02-16\", \"value\": 27.2 },\n  { \"date\": \"2013-02-17\", \"value\": 26.8 },\n  { \"date\": \"2013-02-18\", \"value\": 27.0 },\n  { \"date\": \"2013-02-19\", \"value\": 29.4 },\n  { \"date\": \"2013-02-20\", \"value\": 29.6 },\n  { \"date\": \"2013-02-21\", \"value\": 29.8 },\n  { \"date\": \"2013-02-22\", \"value\": 30.3 },\n  { \"date\": \"2013-02-23\", \"value\": 29.8 },\n  { \"date\": \"2013-02-24\", \"value\": 29.9 },\n  { \"date\": \"2013-02-25\", \"value\": 30.4 },\n  { \"date\": \"2013-02-26\", \"value\": 31.1 },\n  { \"date\": \"2013-02-27\", \"value\": 30.9 },\n  { \"date\": \"2013-02-28\", \"value\": 33.4 },\n  { \"date\": \"2013-03-01\", \"value\": 34.5 },\n  { \"date\": \"2013-03-02\", \"value\": 34.3 },\n  { \"date\": \"2013-03-03\", \"value\": 34.5 },\n  { \"date\": \"2013-03-04\", \"value\": 36.2 },\n  { \"date\": \"2013-03-05\", \"value\": 40.3 },\n  { \"date\": \"2013-03-06\", \"value\": 41.0 },\n  { \"date\": \"2013-03-07\", \"value\": 42.0 },\n  { \"date\": \"2013-03-08\", \"value\": 44.2 },\n  { \"date\": \"2013-03-09\", \"value\": 46.8 },\n  { \"date\": \"2013-03-10\", \"value\": 46.0 },\n  { \"date\": \"2013-03-11\", \"value\": 48.4 },\n  { \"date\": \"2013-03-12\", \"value\": 44.3 },\n  { \"date\": \"2013-03-13\", \"value\": 46.9 },\n  { \"date\": \"2013-03-14\", \"value\": 47.2 },\n  { \"date\": \"2013-03-15\", \"value\": 47.0 },\n  { \"date\": \"2013-03-16\", \"value\": 47.0 },\n  { \"date\": \"2013-03-17\", \"value\": 47.4 },\n  { \"date\": \"2013-03-18\", \"value\": 51.6 },\n  { \"date\": \"2013-03-19\", \"value\": 59.1 },\n  { \"date\": \"2013-03-20\", \"value\": 64.5 },\n  { \"date\": \"2013-03-21\", \"value\": 70.8 },\n  { \"date\": \"2013-03-22\", \"value\": 69.9 },\n  { \"date\": \"2013-03-23\", \"value\": 64.3 },\n  { \"date\": \"2013-03-24\", \"value\": 71.5 },\n  { \"date\": \"2013-03-25\", \"value\": 73.6 },\n  { \"date\": \"2013-03-26\", \"value\": 78.5 },\n  { \"date\": \"2013-03-27\", \"value\": 88.9 },\n  { \"date\": \"2013-03-28\", \"value\": 86.2 },\n  { \"date\": \"2013-03-29\", \"value\": 90.5 },\n  { \"date\": \"2013-03-30\", \"value\": 92.2 },\n  { \"date\": \"2013-03-31\", \"value\": 93.0 },\n  { \"date\": \"2013-04-01\", \"value\": 104.0 },\n  { \"date\": \"2013-04-02\", \"value\": 118.0 },\n  { \"date\": \"2013-04-03\", \"value\": 135.0 },\n  { \"date\": \"2013-04-04\", \"value\": 132.1 },\n  { \"date\": \"2013-04-05\", \"value\": 142.3 },\n  { \"date\": \"2013-04-06\", \"value\": 142.6 },\n  { \"date\": \"2013-04-07\", \"value\": 162.3 },\n  { \"date\": \"2013-04-08\", \"value\": 187.5 },\n  { \"date\": \"2013-04-09\", \"value\": 230.0 },\n  { \"date\": \"2013-04-10\", \"value\": 165.0 },\n  { \"date\": \"2013-04-11\", \"value\": 124.9 },\n  { \"date\": \"2013-04-12\", \"value\": 117.0 },\n  { \"date\": \"2013-04-13\", \"value\": 93.0 },\n  { \"date\": \"2013-04-14\", \"value\": 90.0 },\n  { \"date\": \"2013-04-15\", \"value\": 82.4 },\n  { \"date\": \"2013-04-16\", \"value\": 68.4 },\n  { \"date\": \"2013-04-17\", \"value\": 93.1 },\n  { \"date\": \"2013-04-18\", \"value\": 109.0 },\n  { \"date\": \"2013-04-19\", \"value\": 118.5 },\n  { \"date\": \"2013-04-20\", \"value\": 126.6 },\n  { \"date\": \"2013-04-21\", \"value\": 119.2 },\n  { \"date\": \"2013-04-22\", \"value\": 127.4 },\n  { \"date\": \"2013-04-23\", \"value\": 143.5 },\n  { \"date\": \"2013-04-24\", \"value\": 154.2 },\n  { \"date\": \"2013-04-25\", \"value\": 141.7 },\n  { \"date\": \"2013-04-26\", \"value\": 136.9 },\n  { \"date\": \"2013-04-27\", \"value\": 128.0 },\n  { \"date\": \"2013-04-28\", \"value\": 134.4 },\n  { \"date\": \"2013-04-29\", \"value\": 144.0 },\n  { \"date\": \"2013-04-30\", \"value\": 139.2 },\n  { \"date\": \"2013-05-01\", \"value\": 116.4 },\n  { \"date\": \"2013-05-02\", \"value\": 106.3 },\n  { \"date\": \"2013-05-03\", \"value\": 98.1 },\n  { \"date\": \"2013-05-04\", \"value\": 112.9 },\n  { \"date\": \"2013-05-05\", \"value\": 116.0 },\n  { \"date\": \"2013-05-06\", \"value\": 112.3 },\n  { \"date\": \"2013-05-07\", \"value\": 109.6 },\n  { \"date\": \"2013-05-08\", \"value\": 113.2 },\n  { \"date\": \"2013-05-09\", \"value\": 112.8 },\n  { \"date\": \"2013-05-10\", \"value\": 117.7 },\n  { \"date\": \"2013-05-11\", \"value\": 115.6 },\n  { \"date\": \"2013-05-12\", \"value\": 114.8 },\n  { \"date\": \"2013-05-13\", \"value\": 118.0 },\n  { \"date\": \"2013-05-14\", \"value\": 111.4 },\n  { \"date\": \"2013-05-15\", \"value\": 114.2 },\n  { \"date\": \"2013-05-16\", \"value\": 118.2 },\n  { \"date\": \"2013-05-17\", \"value\": 123.5 },\n  { \"date\": \"2013-05-18\", \"value\": 123.2 },\n  { \"date\": \"2013-05-19\", \"value\": 122.5 },\n  { \"date\": \"2013-05-20\", \"value\": 122.0 },\n  { \"date\": \"2013-05-21\", \"value\": 122.9 },\n  { \"date\": \"2013-05-22\", \"value\": 123.8 },\n  { \"date\": \"2013-05-23\", \"value\": 126.3 },\n  { \"date\": \"2013-05-24\", \"value\": 133.1 },\n  { \"date\": \"2013-05-25\", \"value\": 132.0 },\n  { \"date\": \"2013-05-26\", \"value\": 133.5 },\n  { \"date\": \"2013-05-27\", \"value\": 129.8 },\n  { \"date\": \"2013-05-28\", \"value\": 129.0 },\n  { \"date\": \"2013-05-29\", \"value\": 132.3 },\n  { \"date\": \"2013-05-30\", \"value\": 128.8 },\n  { \"date\": \"2013-05-31\", \"value\": 128.8 },\n  { \"date\": \"2013-06-01\", \"value\": 129.3 },\n  { \"date\": \"2013-06-02\", \"value\": 122.5 },\n  { \"date\": \"2013-06-03\", \"value\": 120.7 },\n  { \"date\": \"2013-06-04\", \"value\": 121.4 },\n  { \"date\": \"2013-06-05\", \"value\": 121.9 },\n  { \"date\": \"2013-06-06\", \"value\": 119.0 },\n  { \"date\": \"2013-06-07\", \"value\": 111.0 },\n  { \"date\": \"2013-06-08\", \"value\": 107.9 },\n  { \"date\": \"2013-06-09\", \"value\": 100.4 },\n  { \"date\": \"2013-06-10\", \"value\": 106.3 },\n  { \"date\": \"2013-06-11\", \"value\": 109.0 },\n  { \"date\": \"2013-06-12\", \"value\": 108.8 },\n  { \"date\": \"2013-06-13\", \"value\": 103.9 },\n  { \"date\": \"2013-06-14\", \"value\": 100.0 },\n  { \"date\": \"2013-06-15\", \"value\": 99.8 },\n  { \"date\": \"2013-06-16\", \"value\": 99.9 },\n  { \"date\": \"2013-06-17\", \"value\": 101.9 },\n  { \"date\": \"2013-06-18\", \"value\": 107.3 },\n  { \"date\": \"2013-06-19\", \"value\": 108.3 },\n  { \"date\": \"2013-06-20\", \"value\": 111.3 },\n  { \"date\": \"2013-06-21\", \"value\": 109.5 },\n  { \"date\": \"2013-06-22\", \"value\": 108.2 },\n  { \"date\": \"2013-06-23\", \"value\": 107.9 },\n  { \"date\": \"2013-06-24\", \"value\": 102.1 },\n  { \"date\": \"2013-06-25\", \"value\": 103.3 },\n  { \"date\": \"2013-06-26\", \"value\": 104.0 },\n  { \"date\": \"2013-06-27\", \"value\": 101.7 },\n  { \"date\": \"2013-06-28\", \"value\": 94.7 },\n  { \"date\": \"2013-06-29\", \"value\": 95.0 },\n  { \"date\": \"2013-06-30\", \"value\": 97.5 },\n  { \"date\": \"2013-07-01\", \"value\": 88.1 },\n  { \"date\": \"2013-07-02\", \"value\": 90.4 },\n  { \"date\": \"2013-07-03\", \"value\": 78.9 },\n  { \"date\": \"2013-07-04\", \"value\": 80.0 },\n  { \"date\": \"2013-07-05\", \"value\": 68.5 },\n  { \"date\": \"2013-07-06\", \"value\": 69.7 },\n  { \"date\": \"2013-07-07\", \"value\": 76.5 },\n  { \"date\": \"2013-07-08\", \"value\": 76.0 },\n  { \"date\": \"2013-07-09\", \"value\": 76.7 },\n  { \"date\": \"2013-07-10\", \"value\": 88.0 },\n  { \"date\": \"2013-07-11\", \"value\": 89.0 },\n  { \"date\": \"2013-07-12\", \"value\": 94.0 },\n  { \"date\": \"2013-07-13\", \"value\": 98.3 },\n  { \"date\": \"2013-07-14\", \"value\": 94.4 },\n  { \"date\": \"2013-07-15\", \"value\": 98.9 },\n  { \"date\": \"2013-07-16\", \"value\": 97.1 },\n  { \"date\": \"2013-07-17\", \"value\": 98.5 },\n  { \"date\": \"2013-07-18\", \"value\": 90.1 },\n  { \"date\": \"2013-07-19\", \"value\": 92.0 },\n  { \"date\": \"2013-07-20\", \"value\": 89.8 },\n  { \"date\": \"2013-07-21\", \"value\": 92.0 },\n  { \"date\": \"2013-07-22\", \"value\": 91.6 },\n  { \"date\": \"2013-07-23\", \"value\": 95.6 },\n  { \"date\": \"2013-07-24\", \"value\": 95.1 },\n  { \"date\": \"2013-07-25\", \"value\": 96.9 },\n  { \"date\": \"2013-07-26\", \"value\": 96.0 },\n  { \"date\": \"2013-07-27\", \"value\": 94.4 },\n  { \"date\": \"2013-07-28\", \"value\": 98.8 },\n  { \"date\": \"2013-07-29\", \"value\": 101.5 },\n  { \"date\": \"2013-07-30\", \"value\": 108.0 },\n  { \"date\": \"2013-07-31\", \"value\": 106.2 },\n  { \"date\": \"2013-08-01\", \"value\": 104.0 },\n  { \"date\": \"2013-08-02\", \"value\": 104.5 },\n  { \"date\": \"2013-08-03\", \"value\": 104.9 },\n  { \"date\": \"2013-08-04\", \"value\": 105.1 },\n  { \"date\": \"2013-08-05\", \"value\": 106.7 },\n  { \"date\": \"2013-08-06\", \"value\": 106.6 },\n  { \"date\": \"2013-08-07\", \"value\": 106.0 },\n  { \"date\": \"2013-08-08\", \"value\": 103.1 },\n  { \"date\": \"2013-08-09\", \"value\": 102.8 },\n  { \"date\": \"2013-08-10\", \"value\": 103.0 },\n  { \"date\": \"2013-08-11\", \"value\": 105.0 },\n  { \"date\": \"2013-08-12\", \"value\": 106.8 },\n  { \"date\": \"2013-08-13\", \"value\": 109.6 },\n  { \"date\": \"2013-08-14\", \"value\": 112.6 },\n  { \"date\": \"2013-08-15\", \"value\": 110.0 },\n  { \"date\": \"2013-08-16\", \"value\": 109.0 },\n  { \"date\": \"2013-08-17\", \"value\": 112.8 },\n  { \"date\": \"2013-08-18\", \"value\": 113.4 },\n  { \"date\": \"2013-08-19\", \"value\": 118.5 },\n  { \"date\": \"2013-08-20\", \"value\": 121.2 },\n  { \"date\": \"2013-08-21\", \"value\": 123.3 },\n  { \"date\": \"2013-08-22\", \"value\": 122.0 },\n  { \"date\": \"2013-08-23\", \"value\": 118.5 },\n  { \"date\": \"2013-08-24\", \"value\": 119.6 },\n  { \"date\": \"2013-08-25\", \"value\": 122.1 },\n  { \"date\": \"2013-08-26\", \"value\": 120.1 },\n  { \"date\": \"2013-08-27\", \"value\": 131.3 },\n  { \"date\": \"2013-08-28\", \"value\": 128.8 },\n  { \"date\": \"2013-08-29\", \"value\": 129.3 },\n  { \"date\": \"2013-08-30\", \"value\": 138.0 },\n  { \"date\": \"2013-08-31\", \"value\": 141.0 },\n  { \"date\": \"2013-09-01\", \"value\": 146.0 },\n  { \"date\": \"2013-09-02\", \"value\": 144.0 },\n  { \"date\": \"2013-09-03\", \"value\": 144.0 },\n  { \"date\": \"2013-09-04\", \"value\": 132.5 },\n  { \"date\": \"2013-09-05\", \"value\": 130.2 },\n  { \"date\": \"2013-09-06\", \"value\": 121.9 },\n  { \"date\": \"2013-09-07\", \"value\": 129.0 },\n  { \"date\": \"2013-09-08\", \"value\": 126.3 },\n  { \"date\": \"2013-09-09\", \"value\": 133.1 },\n  { \"date\": \"2013-09-10\", \"value\": 132.6 },\n  { \"date\": \"2013-09-11\", \"value\": 142.1 },\n  { \"date\": \"2013-09-12\", \"value\": 139.4 },\n  { \"date\": \"2013-09-13\", \"value\": 140.7 },\n  { \"date\": \"2013-09-14\", \"value\": 136.7 },\n  { \"date\": \"2013-09-15\", \"value\": 138.3 },\n  { \"date\": \"2013-09-16\", \"value\": 139.4 },\n  { \"date\": \"2013-09-17\", \"value\": 139.1 },\n  { \"date\": \"2013-09-18\", \"value\": 140.4 },\n  { \"date\": \"2013-09-19\", \"value\": 135.1 },\n  { \"date\": \"2013-09-20\", \"value\": 133.8 },\n  { \"date\": \"2013-09-21\", \"value\": 134.4 },\n  { \"date\": \"2013-09-22\", \"value\": 134.0 },\n  { \"date\": \"2013-09-23\", \"value\": 133.4 },\n  { \"date\": \"2013-09-24\", \"value\": 134.8 },\n  { \"date\": \"2013-09-25\", \"value\": 135.0 },\n  { \"date\": \"2013-09-26\", \"value\": 137.1 },\n  { \"date\": \"2013-09-27\", \"value\": 138.9 },\n  { \"date\": \"2013-09-28\", \"value\": 142.5 },\n  { \"date\": \"2013-09-29\", \"value\": 143.9 },\n  { \"date\": \"2013-09-30\", \"value\": 141.9 },\n  { \"date\": \"2013-10-01\", \"value\": 140.3 },\n  { \"date\": \"2013-10-02\", \"value\": 123.0 },\n  { \"date\": \"2013-10-03\", \"value\": 131.0 },\n  { \"date\": \"2013-10-04\", \"value\": 136.8 },\n  { \"date\": \"2013-10-05\", \"value\": 136.7 },\n  { \"date\": \"2013-10-06\", \"value\": 137.8 },\n  { \"date\": \"2013-10-07\", \"value\": 135.8 },\n  { \"date\": \"2013-10-08\", \"value\": 136.5 },\n  { \"date\": \"2013-10-09\", \"value\": 139.5 },\n  { \"date\": \"2013-10-10\", \"value\": 140.4 },\n  { \"date\": \"2013-10-11\", \"value\": 140.1 },\n  { \"date\": \"2013-10-12\", \"value\": 142.9 },\n  { \"date\": \"2013-10-13\", \"value\": 147.5 },\n  { \"date\": \"2013-10-14\", \"value\": 151.4 },\n  { \"date\": \"2013-10-15\", \"value\": 158.1 },\n  { \"date\": \"2013-10-16\", \"value\": 152.8 },\n  { \"date\": \"2013-10-17\", \"value\": 157.6 },\n  { \"date\": \"2013-10-18\", \"value\": 168.3 },\n  { \"date\": \"2013-10-19\", \"value\": 183.1 },\n  { \"date\": \"2013-10-20\", \"value\": 186.1 },\n  { \"date\": \"2013-10-21\", \"value\": 192.8 },\n  { \"date\": \"2013-10-22\", \"value\": 203.0 },\n  { \"date\": \"2013-10-23\", \"value\": 228.0 },\n  { \"date\": \"2013-10-24\", \"value\": 207.0 },\n  { \"date\": \"2013-10-25\", \"value\": 197.9 },\n  { \"date\": \"2013-10-26\", \"value\": 188.6 },\n  { \"date\": \"2013-10-27\", \"value\": 206.9 },\n  { \"date\": \"2013-10-28\", \"value\": 206.9 },\n  { \"date\": \"2013-10-29\", \"value\": 216.0 },\n  { \"date\": \"2013-10-30\", \"value\": 208.0 },\n  { \"date\": \"2013-10-31\", \"value\": 211.2 },\n  { \"date\": \"2013-11-01\", \"value\": 213.4 },\n  { \"date\": \"2013-11-02\", \"value\": 211.7 },\n  { \"date\": \"2013-11-03\", \"value\": 224.0 },\n  { \"date\": \"2013-11-04\", \"value\": 238.2 },\n  { \"date\": \"2013-11-05\", \"value\": 251.3 },\n  { \"date\": \"2013-11-06\", \"value\": 264.1 },\n  { \"date\": \"2013-11-07\", \"value\": 309.6 },\n  { \"date\": \"2013-11-08\", \"value\": 355.0 },\n  { \"date\": \"2013-11-09\", \"value\": 367.8 },\n  { \"date\": \"2013-11-10\", \"value\": 336.3 },\n  { \"date\": \"2013-11-11\", \"value\": 363.0 },\n  { \"date\": \"2013-11-12\", \"value\": 380.0 },\n  { \"date\": \"2013-11-13\", \"value\": 434.9 },\n  { \"date\": \"2013-11-14\", \"value\": 433.4 },\n  { \"date\": \"2013-11-15\", \"value\": 433.9 },\n  { \"date\": \"2013-11-16\", \"value\": 462.0 },\n  { \"date\": \"2013-11-17\", \"value\": 528.3 },\n  { \"date\": \"2013-11-18\", \"value\": 785.4 },\n  { \"date\": \"2013-11-19\", \"value\": 645.7 },\n  { \"date\": \"2013-11-20\", \"value\": 638.0 },\n  { \"date\": \"2013-11-21\", \"value\": 764.9 },\n  { \"date\": \"2013-11-22\", \"value\": 802.0 },\n  { \"date\": \"2013-11-23\", \"value\": 832.5 },\n  { \"date\": \"2013-11-24\", \"value\": 795.0 },\n  { \"date\": \"2013-11-25\", \"value\": 830.0 },\n  { \"date\": \"2013-11-26\", \"value\": 970.0 },\n  { \"date\": \"2013-11-27\", \"value\": 1079.9 },\n  { \"date\": \"2013-11-28\", \"value\": 1101.4 },\n  { \"date\": \"2013-11-29\", \"value\": 1206.9 },\n  { \"date\": \"2013-11-30\", \"value\": 1205.7 },\n  { \"date\": \"2013-12-01\", \"value\": 1004.4 },\n  { \"date\": \"2013-12-02\", \"value\": 1096.6 },\n  { \"date\": \"2013-12-03\", \"value\": 1154.9 },\n  { \"date\": \"2013-12-04\", \"value\": 1237.6 },\n  { \"date\": \"2013-12-05\", \"value\": 1106.3 },\n  { \"date\": \"2013-12-06\", \"value\": 845.0 },\n  { \"date\": \"2013-12-07\", \"value\": 697.0 },\n  { \"date\": \"2013-12-08\", \"value\": 804.0 },\n  { \"date\": \"2013-12-09\", \"value\": 919.0 },\n  { \"date\": \"2013-12-10\", \"value\": 1033.7 },\n  { \"date\": \"2013-12-11\", \"value\": 919.9 },\n  { \"date\": \"2013-12-12\", \"value\": 900.0 },\n  { \"date\": \"2013-12-13\", \"value\": 936.8 },\n  { \"date\": \"2013-12-14\", \"value\": 908.9 },\n  { \"date\": \"2013-12-15\", \"value\": 919.9 },\n  { \"date\": \"2013-12-16\", \"value\": 759.9 },\n  { \"date\": \"2013-12-17\", \"value\": 715.0 },\n  { \"date\": \"2013-12-18\", \"value\": 541.0 },\n  { \"date\": \"2013-12-19\", \"value\": 732.0 },\n  { \"date\": \"2013-12-20\", \"value\": 650.0 },\n  { \"date\": \"2013-12-21\", \"value\": 640.5 },\n  { \"date\": \"2013-12-22\", \"value\": 639.5 },\n  { \"date\": \"2013-12-23\", \"value\": 713.2 },\n  { \"date\": \"2013-12-24\", \"value\": 702.8 },\n  { \"date\": \"2013-12-25\", \"value\": 707.3 },\n  { \"date\": \"2013-12-26\", \"value\": 802.0 },\n  { \"date\": \"2013-12-27\", \"value\": 803.0 },\n  { \"date\": \"2013-12-28\", \"value\": 762.0 },\n  { \"date\": \"2013-12-29\", \"value\": 785.0 },\n  { \"date\": \"2013-12-30\", \"value\": 804.8 },\n  { \"date\": \"2013-12-31\", \"value\": 805.9 },\n  { \"date\": \"2014-01-01\", \"value\": 815.9 },\n  { \"date\": \"2014-01-02\", \"value\": 856.9 },\n  { \"date\": \"2014-01-03\", \"value\": 884.3 },\n  { \"date\": \"2014-01-04\", \"value\": 924.7 },\n  { \"date\": \"2014-01-05\", \"value\": 1014.7 },\n  { \"date\": \"2014-01-06\", \"value\": 1012.7 },\n  { \"date\": \"2014-01-07\", \"value\": 879.9 },\n  { \"date\": \"2014-01-08\", \"value\": 938.8 },\n  { \"date\": \"2014-01-09\", \"value\": 937.0 },\n  { \"date\": \"2014-01-10\", \"value\": 957.8 },\n  { \"date\": \"2014-01-11\", \"value\": 1005.3 },\n  { \"date\": \"2014-01-12\", \"value\": 939.8 },\n  { \"date\": \"2014-01-13\", \"value\": 922.9 },\n  { \"date\": \"2014-01-14\", \"value\": 919.3 },\n  { \"date\": \"2014-01-15\", \"value\": 941.2 },\n  { \"date\": \"2014-01-16\", \"value\": 913.5 },\n  { \"date\": \"2014-01-17\", \"value\": 894.2 },\n  { \"date\": \"2014-01-18\", \"value\": 905.7 },\n  { \"date\": \"2014-01-19\", \"value\": 954.8 },\n  { \"date\": \"2014-01-20\", \"value\": 956.0 },\n  { \"date\": \"2014-01-21\", \"value\": 962.2 },\n  { \"date\": \"2014-01-22\", \"value\": 951.0 },\n  { \"date\": \"2014-01-23\", \"value\": 944.2 },\n  { \"date\": \"2014-01-24\", \"value\": 916.5 },\n  { \"date\": \"2014-01-25\", \"value\": 961.0 },\n  { \"date\": \"2014-01-26\", \"value\": 1007.0 },\n  { \"date\": \"2014-01-27\", \"value\": 943.5 },\n  { \"date\": \"2014-01-28\", \"value\": 932.7 },\n  { \"date\": \"2014-01-29\", \"value\": 925.7 },\n  { \"date\": \"2014-01-30\", \"value\": 941.4 },\n  { \"date\": \"2014-01-31\", \"value\": 938.8 },\n  { \"date\": \"2014-02-01\", \"value\": 940.4 },\n  { \"date\": \"2014-02-02\", \"value\": 953.3 },\n  { \"date\": \"2014-02-03\", \"value\": 931.7 },\n  { \"date\": \"2014-02-04\", \"value\": 926.6 },\n  { \"date\": \"2014-02-05\", \"value\": 904.5 },\n  { \"date\": \"2014-02-06\", \"value\": 828.9 },\n  { \"date\": \"2014-02-07\", \"value\": 695.7 },\n  { \"date\": \"2014-02-08\", \"value\": 648.8 },\n  { \"date\": \"2014-02-09\", \"value\": 659.6 },\n  { \"date\": \"2014-02-10\", \"value\": 582.6 },\n  { \"date\": \"2014-02-11\", \"value\": 579.0 },\n  { \"date\": \"2014-02-12\", \"value\": 531.1 },\n  { \"date\": \"2014-02-13\", \"value\": 451.4 },\n  { \"date\": \"2014-02-14\", \"value\": 427.7 },\n  { \"date\": \"2014-02-15\", \"value\": 371.1 },\n  { \"date\": \"2014-02-16\", \"value\": 299.8 },\n  { \"date\": \"2014-02-17\", \"value\": 272.3 },\n  { \"date\": \"2014-02-18\", \"value\": 294.0 },\n  { \"date\": \"2014-02-19\", \"value\": 261.5 },\n  { \"date\": \"2014-02-20\", \"value\": 111.9 },\n  { \"date\": \"2014-02-21\", \"value\": 111.6 },\n  { \"date\": \"2014-02-22\", \"value\": 255.6 },\n  { \"date\": \"2014-02-23\", \"value\": 310.2 },\n  { \"date\": \"2014-02-24\", \"value\": 174.0 },\n  { \"date\": \"2014-02-25\", \"value\": 135.8 },\n  { \"date\": \"2014-02-26\", \"value\": 593.1 },\n  { \"date\": \"2014-02-27\", \"value\": 596.5 },\n  { \"date\": \"2014-02-28\", \"value\": 573.9 },\n  { \"date\": \"2014-03-01\", \"value\": 557.4 },\n  { \"date\": \"2014-03-02\", \"value\": 544.6 },\n  { \"date\": \"2014-03-03\", \"value\": 662.2 },\n  { \"date\": \"2014-03-04\", \"value\": 661.8 },\n  { \"date\": \"2014-03-05\", \"value\": 658.3 },\n  { \"date\": \"2014-03-06\", \"value\": 648.3 },\n  { \"date\": \"2014-03-07\", \"value\": 616.7 },\n  { \"date\": \"2014-03-08\", \"value\": 609.2 },\n  { \"date\": \"2014-03-09\", \"value\": 627.0 },\n  { \"date\": \"2014-03-10\", \"value\": 613.0 },\n  { \"date\": \"2014-03-11\", \"value\": 608.7 },\n  { \"date\": \"2014-03-12\", \"value\": 619.4 },\n  { \"date\": \"2014-03-13\", \"value\": 625.0 },\n  { \"date\": \"2014-03-14\", \"value\": 614.0 },\n  { \"date\": \"2014-03-15\", \"value\": 624.0 },\n  { \"date\": \"2014-03-16\", \"value\": 619.1 },\n  { \"date\": \"2014-03-17\", \"value\": 606.4 },\n  { \"date\": \"2014-03-18\", \"value\": 598.9 },\n  { \"date\": \"2014-03-19\", \"value\": 595.0 },\n  { \"date\": \"2014-03-20\", \"value\": 566.0 },\n  { \"date\": \"2014-03-21\", \"value\": 549.6 },\n  { \"date\": \"2014-03-22\", \"value\": 564.3 },\n  { \"date\": \"2014-03-23\", \"value\": 551.2 },\n  { \"date\": \"2014-03-24\", \"value\": 567.6 },\n  { \"date\": \"2014-03-25\", \"value\": 562.9 },\n  { \"date\": \"2014-03-26\", \"value\": 562.5 },\n  { \"date\": \"2014-03-27\", \"value\": 460.5 },\n  { \"date\": \"2014-03-28\", \"value\": 482.6 },\n  { \"date\": \"2014-03-29\", \"value\": 477.1 },\n  { \"date\": \"2014-03-30\", \"value\": 446.9 },\n  { \"date\": \"2014-03-31\", \"value\": 444.7 },\n  { \"date\": \"2014-04-01\", \"value\": 463.5 },\n  { \"date\": \"2014-04-02\", \"value\": 424.4 },\n  { \"date\": \"2014-04-03\", \"value\": 436.3 },\n  { \"date\": \"2014-04-04\", \"value\": 444.4 },\n  { \"date\": \"2014-04-05\", \"value\": 456.6 },\n  { \"date\": \"2014-04-06\", \"value\": 455.7 },\n  { \"date\": \"2014-04-07\", \"value\": 462.4 },\n  { \"date\": \"2014-04-08\", \"value\": 466.6 },\n  { \"date\": \"2014-04-09\", \"value\": 457.3 },\n  { \"date\": \"2014-04-10\", \"value\": 384.6 },\n  { \"date\": \"2014-04-11\", \"value\": 435.1 },\n  { \"date\": \"2014-04-12\", \"value\": 437.6 },\n  { \"date\": \"2014-04-13\", \"value\": 427.6 },\n  { \"date\": \"2014-04-14\", \"value\": 478.4 },\n  { \"date\": \"2014-04-15\", \"value\": 526.4 },\n  { \"date\": \"2014-04-16\", \"value\": 537.0 },\n  { \"date\": \"2014-04-17\", \"value\": 502.0 },\n  { \"date\": \"2014-04-18\", \"value\": 485.5 },\n  { \"date\": \"2014-04-19\", \"value\": 506.0 },\n  { \"date\": \"2014-04-20\", \"value\": 498.5 },\n  { \"date\": \"2014-04-21\", \"value\": 495.2 },\n  { \"date\": \"2014-04-22\", \"value\": 487.9 },\n  { \"date\": \"2014-04-23\", \"value\": 487.3 },\n  { \"date\": \"2014-04-24\", \"value\": 500.3 },\n  { \"date\": \"2014-04-25\", \"value\": 464.5 },\n  { \"date\": \"2014-04-26\", \"value\": 457.9 },\n  { \"date\": \"2014-04-27\", \"value\": 443.2 },\n  { \"date\": \"2014-04-28\", \"value\": 441.9 },\n  { \"date\": \"2014-04-29\", \"value\": 446.1 },\n  { \"date\": \"2014-04-30\", \"value\": 445.6 },\n  { \"date\": \"2014-05-01\", \"value\": 460.1 },\n  { \"date\": \"2014-05-02\", \"value\": 453.7 },\n  { \"date\": \"2014-05-03\", \"value\": 438.6 },\n  { \"date\": \"2014-05-04\", \"value\": 436.0 },\n  { \"date\": \"2014-05-05\", \"value\": 430.9 },\n  { \"date\": \"2014-05-06\", \"value\": 432.2 },\n  { \"date\": \"2014-05-07\", \"value\": 446.5 },\n  { \"date\": \"2014-05-08\", \"value\": 441.1 },\n  { \"date\": \"2014-05-09\", \"value\": 445.5 },\n  { \"date\": \"2014-05-10\", \"value\": 451.9 },\n  { \"date\": \"2014-05-11\", \"value\": 433.2 },\n  { \"date\": \"2014-05-12\", \"value\": 438.2 },\n  { \"date\": \"2014-05-13\", \"value\": 433.9 },\n  { \"date\": \"2014-05-14\", \"value\": 442.6 },\n  { \"date\": \"2014-05-15\", \"value\": 448.1 },\n  { \"date\": \"2014-05-16\", \"value\": 453.6 },\n  { \"date\": \"2014-05-17\", \"value\": 452.8 },\n  { \"date\": \"2014-05-18\", \"value\": 450.1 },\n  { \"date\": \"2014-05-19\", \"value\": 443.9 },\n  { \"date\": \"2014-05-20\", \"value\": 484.6 },\n  { \"date\": \"2014-05-21\", \"value\": 488.8 },\n  { \"date\": \"2014-05-22\", \"value\": 515.4 },\n  { \"date\": \"2014-05-23\", \"value\": 518.1 },\n  { \"date\": \"2014-05-24\", \"value\": 520.5 },\n  { \"date\": \"2014-05-25\", \"value\": 570.4 },\n  { \"date\": \"2014-05-26\", \"value\": 582.0 },\n  { \"date\": \"2014-05-27\", \"value\": 570.1 },\n  { \"date\": \"2014-05-28\", \"value\": 570.8 },\n  { \"date\": \"2014-05-29\", \"value\": 564.4 },\n  { \"date\": \"2014-05-30\", \"value\": 612.3 },\n  { \"date\": \"2014-05-31\", \"value\": 627.9 },\n  { \"date\": \"2014-06-01\", \"value\": 649.8 },\n  { \"date\": \"2014-06-02\", \"value\": 655.5 },\n  { \"date\": \"2014-06-03\", \"value\": 669.4 },\n  { \"date\": \"2014-06-04\", \"value\": 638.9 },\n  { \"date\": \"2014-06-05\", \"value\": 660.2 },\n  { \"date\": \"2014-06-06\", \"value\": 650.4 },\n  { \"date\": \"2014-06-07\", \"value\": 651.7 },\n  { \"date\": \"2014-06-08\", \"value\": 651.0 },\n  { \"date\": \"2014-06-09\", \"value\": 644.3 },\n  { \"date\": \"2014-06-10\", \"value\": 655.6 },\n  { \"date\": \"2014-06-11\", \"value\": 643.0 },\n  { \"date\": \"2014-06-12\", \"value\": 597.1 },\n  { \"date\": \"2014-06-13\", \"value\": 610.3 },\n  { \"date\": \"2014-06-14\", \"value\": 583.4 },\n  { \"date\": \"2014-06-15\", \"value\": 582.3 },\n  { \"date\": \"2014-06-16\", \"value\": 599.1 },\n  { \"date\": \"2014-06-17\", \"value\": 605.1 },\n  { \"date\": \"2014-06-18\", \"value\": 606.2 },\n  { \"date\": \"2014-06-19\", \"value\": 600.2 },\n  { \"date\": \"2014-06-20\", \"value\": 590.8 },\n  { \"date\": \"2014-06-21\", \"value\": 597.0 },\n  { \"date\": \"2014-06-22\", \"value\": 603.6 },\n  { \"date\": \"2014-06-23\", \"value\": 591.2 },\n  { \"date\": \"2014-06-24\", \"value\": 588.8 },\n  { \"date\": \"2014-06-25\", \"value\": 568.5 },\n  { \"date\": \"2014-06-26\", \"value\": 582.7 },\n  { \"date\": \"2014-06-27\", \"value\": 602.2 },\n  { \"date\": \"2014-06-28\", \"value\": 597.6 },\n  { \"date\": \"2014-06-29\", \"value\": 601.1 },\n  { \"date\": \"2014-06-30\", \"value\": 635.1 },\n  { \"date\": \"2014-07-01\", \"value\": 643.2 },\n  { \"date\": \"2014-07-02\", \"value\": 645.7 },\n  { \"date\": \"2014-07-03\", \"value\": 638.0 },\n  { \"date\": \"2014-07-04\", \"value\": 624.0 },\n  { \"date\": \"2014-07-05\", \"value\": 623.0 },\n  { \"date\": \"2014-07-06\", \"value\": 626.7 },\n  { \"date\": \"2014-07-07\", \"value\": 613.6 },\n  { \"date\": \"2014-07-08\", \"value\": 615.3 },\n  { \"date\": \"2014-07-09\", \"value\": 623.0 },\n  { \"date\": \"2014-07-10\", \"value\": 618.4 },\n  { \"date\": \"2014-07-11\", \"value\": 632.9 },\n  { \"date\": \"2014-07-12\", \"value\": 635.9 },\n  { \"date\": \"2014-07-13\", \"value\": 628.0 },\n  { \"date\": \"2014-07-14\", \"value\": 618.3 },\n  { \"date\": \"2014-07-15\", \"value\": 619.6 },\n  { \"date\": \"2014-07-16\", \"value\": 614.8 },\n  { \"date\": \"2014-07-17\", \"value\": 626.6 },\n  { \"date\": \"2014-07-18\", \"value\": 627.5 },\n  { \"date\": \"2014-07-19\", \"value\": 627.0 },\n  { \"date\": \"2014-07-20\", \"value\": 621.0 },\n  { \"date\": \"2014-07-21\", \"value\": 625.1 },\n  { \"date\": \"2014-07-22\", \"value\": 622.5 },\n  { \"date\": \"2014-07-23\", \"value\": 621.7 },\n  { \"date\": \"2014-07-24\", \"value\": 601.9 },\n  { \"date\": \"2014-07-25\", \"value\": 600.5 },\n  { \"date\": \"2014-07-26\", \"value\": 596.0 },\n  { \"date\": \"2014-07-27\", \"value\": 595.0 },\n  { \"date\": \"2014-07-28\", \"value\": 587.9 },\n  { \"date\": \"2014-07-29\", \"value\": 585.8 },\n  { \"date\": \"2014-07-30\", \"value\": 564.6 },\n  { \"date\": \"2014-07-31\", \"value\": 589.5 },\n  { \"date\": \"2014-08-01\", \"value\": 598.8 },\n  { \"date\": \"2014-08-02\", \"value\": 591.7 },\n  { \"date\": \"2014-08-03\", \"value\": 588.9 },\n  { \"date\": \"2014-08-04\", \"value\": 592.8 },\n  { \"date\": \"2014-08-05\", \"value\": 588.8 },\n  { \"date\": \"2014-08-06\", \"value\": 589.8 },\n  { \"date\": \"2014-08-07\", \"value\": 592.8 },\n  { \"date\": \"2014-08-08\", \"value\": 595.8 },\n  { \"date\": \"2014-08-09\", \"value\": 589.5 },\n  { \"date\": \"2014-08-10\", \"value\": 592.1 },\n  { \"date\": \"2014-08-11\", \"value\": 575.9 },\n  { \"date\": \"2014-08-12\", \"value\": 567.7 },\n  { \"date\": \"2014-08-13\", \"value\": 542.1 },\n  { \"date\": \"2014-08-14\", \"value\": 504.8 },\n  { \"date\": \"2014-08-15\", \"value\": 496.5 },\n  { \"date\": \"2014-08-16\", \"value\": 522.0 },\n  { \"date\": \"2014-08-17\", \"value\": 485.5 },\n  { \"date\": \"2014-08-18\", \"value\": 462.2 },\n  { \"date\": \"2014-08-19\", \"value\": 485.1 },\n  { \"date\": \"2014-08-20\", \"value\": 516.8 },\n  { \"date\": \"2014-08-21\", \"value\": 517.9 },\n  { \"date\": \"2014-08-22\", \"value\": 516.1 },\n  { \"date\": \"2014-08-23\", \"value\": 497.7 },\n  { \"date\": \"2014-08-24\", \"value\": 509.7 },\n  { \"date\": \"2014-08-25\", \"value\": 502.9 },\n  { \"date\": \"2014-08-26\", \"value\": 512.6 },\n  { \"date\": \"2014-08-27\", \"value\": 515.2 },\n  { \"date\": \"2014-08-28\", \"value\": 510.8 },\n  { \"date\": \"2014-08-29\", \"value\": 512.6 },\n  { \"date\": \"2014-08-30\", \"value\": 506.0 },\n  { \"date\": \"2014-08-31\", \"value\": 481.8 },\n  { \"date\": \"2014-09-01\", \"value\": 477.2 },\n  { \"date\": \"2014-09-02\", \"value\": 478.9 },\n  { \"date\": \"2014-09-03\", \"value\": 480.0 },\n  { \"date\": \"2014-09-04\", \"value\": 491.0 },\n  { \"date\": \"2014-09-05\", \"value\": 483.6 },\n  { \"date\": \"2014-09-06\", \"value\": 484.5 },\n  { \"date\": \"2014-09-07\", \"value\": 485.8 },\n  { \"date\": \"2014-09-08\", \"value\": 475.7 },\n  { \"date\": \"2014-09-09\", \"value\": 474.9 },\n  { \"date\": \"2014-09-10\", \"value\": 479.7 },\n  { \"date\": \"2014-09-11\", \"value\": 478.5 },\n  { \"date\": \"2014-09-12\", \"value\": 477.7 },\n  { \"date\": \"2014-09-13\", \"value\": 478.2 },\n  { \"date\": \"2014-09-14\", \"value\": 477.7 },\n  { \"date\": \"2014-09-15\", \"value\": 477.7 },\n  { \"date\": \"2014-09-16\", \"value\": 466.8 },\n  { \"date\": \"2014-09-17\", \"value\": 461.1 },\n  { \"date\": \"2014-09-18\", \"value\": 424.3 },\n  { \"date\": \"2014-09-19\", \"value\": 397.7 },\n  { \"date\": \"2014-09-20\", \"value\": 411.5 },\n  { \"date\": \"2014-09-21\", \"value\": 401.6 },\n  { \"date\": \"2014-09-22\", \"value\": 404.1 },\n  { \"date\": \"2014-09-23\", \"value\": 436.9 },\n  { \"date\": \"2014-09-24\", \"value\": 423.8 },\n  { \"date\": \"2014-09-25\", \"value\": 412.3 },\n  { \"date\": \"2014-09-26\", \"value\": 404.5 },\n  { \"date\": \"2014-09-27\", \"value\": 399.0 },\n  { \"date\": \"2014-09-28\", \"value\": 379.1 },\n  { \"date\": \"2014-09-29\", \"value\": 376.8 },\n  { \"date\": \"2014-09-30\", \"value\": 388.2 },\n  { \"date\": \"2014-10-01\", \"value\": 382.8 },\n  { \"date\": \"2014-10-02\", \"value\": 375.1 },\n  { \"date\": \"2014-10-03\", \"value\": 363.5 },\n  { \"date\": \"2014-10-04\", \"value\": 335.3 },\n  { \"date\": \"2014-10-05\", \"value\": 322.9 },\n  { \"date\": \"2014-10-06\", \"value\": 331.5 },\n  { \"date\": \"2014-10-07\", \"value\": 331.6 },\n  { \"date\": \"2014-10-08\", \"value\": 350.9 },\n  { \"date\": \"2014-10-09\", \"value\": 360.9 },\n  { \"date\": \"2014-10-10\", \"value\": 361.7 },\n  { \"date\": \"2014-10-11\", \"value\": 361.2 },\n  { \"date\": \"2014-10-12\", \"value\": 373.2 },\n  { \"date\": \"2014-10-13\", \"value\": 387.3 },\n  { \"date\": \"2014-10-14\", \"value\": 397.1 },\n  { \"date\": \"2014-10-15\", \"value\": 393.2 },\n  { \"date\": \"2014-10-16\", \"value\": 379.8 },\n  { \"date\": \"2014-10-17\", \"value\": 380.5 },\n  { \"date\": \"2014-10-18\", \"value\": 390.9 },\n  { \"date\": \"2014-10-19\", \"value\": 387.3 },\n  { \"date\": \"2014-10-20\", \"value\": 380.4 },\n  { \"date\": \"2014-10-21\", \"value\": 382.4 },\n  { \"date\": \"2014-10-22\", \"value\": 378.9 },\n  { \"date\": \"2014-10-23\", \"value\": 355.8 },\n  { \"date\": \"2014-10-24\", \"value\": 355.1 },\n  { \"date\": \"2014-10-25\", \"value\": 346.7 },\n  { \"date\": \"2014-10-26\", \"value\": 348.7 },\n  { \"date\": \"2014-10-27\", \"value\": 350.1 },\n  { \"date\": \"2014-10-28\", \"value\": 351.1 },\n  { \"date\": \"2014-10-29\", \"value\": 335.1 },\n  { \"date\": \"2014-10-30\", \"value\": 344.9 },\n  { \"date\": \"2014-10-31\", \"value\": 337.9 },\n  { \"date\": \"2014-11-01\", \"value\": 325.4 },\n  { \"date\": \"2014-11-02\", \"value\": 322.5 },\n  { \"date\": \"2014-11-03\", \"value\": 324.2 },\n  { \"date\": \"2014-11-04\", \"value\": 328.0 },\n  { \"date\": \"2014-11-05\", \"value\": 338.0 },\n  { \"date\": \"2014-11-06\", \"value\": 347.7 },\n  { \"date\": \"2014-11-07\", \"value\": 341.9 },\n  { \"date\": \"2014-11-08\", \"value\": 343.5 },\n  { \"date\": \"2014-11-09\", \"value\": 362.0 },\n  { \"date\": \"2014-11-10\", \"value\": 367.1 },\n  { \"date\": \"2014-11-11\", \"value\": 365.4 },\n  { \"date\": \"2014-11-12\", \"value\": 432.0 },\n  { \"date\": \"2014-11-13\", \"value\": 428.7 },\n  { \"date\": \"2014-11-14\", \"value\": 396.5 },\n  { \"date\": \"2014-11-15\", \"value\": 374.9 },\n  { \"date\": \"2014-11-16\", \"value\": 385.6 },\n  { \"date\": \"2014-11-17\", \"value\": 384.7 },\n  { \"date\": \"2014-11-18\", \"value\": 379.2 },\n  { \"date\": \"2014-11-19\", \"value\": 381.4 },\n  { \"date\": \"2014-11-20\", \"value\": 357.3 },\n  { \"date\": \"2014-11-21\", \"value\": 351.8 },\n  { \"date\": \"2014-11-22\", \"value\": 352.0 },\n  { \"date\": \"2014-11-23\", \"value\": 365.9 },\n  { \"date\": \"2014-11-24\", \"value\": 378.9 },\n  { \"date\": \"2014-11-25\", \"value\": 376.4 },\n  { \"date\": \"2014-11-26\", \"value\": 365.4 },\n  { \"date\": \"2014-11-27\", \"value\": 368.8 },\n  { \"date\": \"2014-11-28\", \"value\": 377.6 },\n  { \"date\": \"2014-11-29\", \"value\": 376.3 },\n  { \"date\": \"2014-11-30\", \"value\": 374.9 },\n  { \"date\": \"2014-12-01\", \"value\": 378.6 },\n  { \"date\": \"2014-12-02\", \"value\": 380.6 },\n  { \"date\": \"2014-12-03\", \"value\": 377.0 },\n  { \"date\": \"2014-12-04\", \"value\": 369.8 },\n  { \"date\": \"2014-12-05\", \"value\": 377.6 },\n  { \"date\": \"2014-12-06\", \"value\": 376.3 },\n  { \"date\": \"2014-12-07\", \"value\": 376.5 },\n  { \"date\": \"2014-12-08\", \"value\": 365.0 },\n  { \"date\": \"2014-12-09\", \"value\": 352.2 },\n  { \"date\": \"2014-12-10\", \"value\": 347.9 },\n  { \"date\": \"2014-12-11\", \"value\": 347.7 },\n  { \"date\": \"2014-12-12\", \"value\": 353.4 },\n  { \"date\": \"2014-12-13\", \"value\": 348.2 },\n  { \"date\": \"2014-12-14\", \"value\": 349.4 },\n  { \"date\": \"2014-12-15\", \"value\": 345.4 },\n  { \"date\": \"2014-12-16\", \"value\": 330.2 },\n  { \"date\": \"2014-12-17\", \"value\": 320.0 },\n  { \"date\": \"2014-12-18\", \"value\": 310.3 },\n  { \"date\": \"2014-12-19\", \"value\": 317.8 },\n  { \"date\": \"2014-12-20\", \"value\": 330.4 },\n  { \"date\": \"2014-12-21\", \"value\": 322.6 },\n  { \"date\": \"2014-12-22\", \"value\": 330.8 },\n  { \"date\": \"2014-12-23\", \"value\": 335.3 },\n  { \"date\": \"2014-12-24\", \"value\": 322.4 },\n  { \"date\": \"2014-12-25\", \"value\": 319.0 },\n  { \"date\": \"2014-12-26\", \"value\": 330.0 },\n  { \"date\": \"2014-12-27\", \"value\": 315.3 },\n  { \"date\": \"2014-12-28\", \"value\": 316.5 },\n  { \"date\": \"2014-12-29\", \"value\": 314.1 },\n  { \"date\": \"2014-12-30\", \"value\": 311.3 },\n  { \"date\": \"2014-12-31\", \"value\": 318.2 },\n  { \"date\": \"2015-01-01\", \"value\": 314.9 },\n  { \"date\": \"2015-01-02\", \"value\": 315.2 },\n  { \"date\": \"2015-01-03\", \"value\": 287.1 },\n  { \"date\": \"2015-01-04\", \"value\": 264.7 },\n  { \"date\": \"2015-01-05\", \"value\": 274.8 },\n  { \"date\": \"2015-01-06\", \"value\": 282.3 },\n  { \"date\": \"2015-01-07\", \"value\": 291.3 },\n  { \"date\": \"2015-01-08\", \"value\": 282.7 },\n  { \"date\": \"2015-01-09\", \"value\": 288.0 },\n  { \"date\": \"2015-01-10\", \"value\": 273.4 },\n  { \"date\": \"2015-01-11\", \"value\": 264.8 },\n  { \"date\": \"2015-01-12\", \"value\": 269.3 },\n  { \"date\": \"2015-01-13\", \"value\": 221.3 },\n  { \"date\": \"2015-01-14\", \"value\": 164.9 },\n  { \"date\": \"2015-01-15\", \"value\": 209.8 },\n  { \"date\": \"2015-01-16\", \"value\": 206.9 },\n  { \"date\": \"2015-01-17\", \"value\": 199.6 },\n  { \"date\": \"2015-01-18\", \"value\": 210.6 },\n  { \"date\": \"2015-01-19\", \"value\": 215.9 },\n  { \"date\": \"2015-01-20\", \"value\": 210.6 },\n  { \"date\": \"2015-01-21\", \"value\": 228.2 },\n  { \"date\": \"2015-01-22\", \"value\": 232.7 },\n  { \"date\": \"2015-01-23\", \"value\": 232.2 },\n  { \"date\": \"2015-01-24\", \"value\": 248.2 },\n  { \"date\": \"2015-01-25\", \"value\": 252.1 },\n  { \"date\": \"2015-01-26\", \"value\": 269.2 },\n  { \"date\": \"2015-01-27\", \"value\": 263.3 },\n  { \"date\": \"2015-01-28\", \"value\": 236.2 },\n  { \"date\": \"2015-01-29\", \"value\": 234.0 },\n  { \"date\": \"2015-01-30\", \"value\": 231.8 },\n  { \"date\": \"2015-01-31\", \"value\": 218.5 },\n  { \"date\": \"2015-02-01\", \"value\": 225.3 },\n  { \"date\": \"2015-02-02\", \"value\": 238.9 },\n  { \"date\": \"2015-02-03\", \"value\": 227.4 },\n  { \"date\": \"2015-02-04\", \"value\": 226.6 },\n  { \"date\": \"2015-02-05\", \"value\": 216.5 },\n  { \"date\": \"2015-02-06\", \"value\": 223.0 },\n  { \"date\": \"2015-02-07\", \"value\": 227.7 },\n  { \"date\": \"2015-02-08\", \"value\": 223.7 },\n  { \"date\": \"2015-02-09\", \"value\": 220.3 },\n  { \"date\": \"2015-02-10\", \"value\": 219.7 },\n  { \"date\": \"2015-02-11\", \"value\": 218.8 },\n  { \"date\": \"2015-02-12\", \"value\": 221.8 },\n  { \"date\": \"2015-02-13\", \"value\": 236.2 },\n  { \"date\": \"2015-02-14\", \"value\": 258.6 },\n  { \"date\": \"2015-02-15\", \"value\": 233.3 },\n  { \"date\": \"2015-02-16\", \"value\": 235.8 },\n  { \"date\": \"2015-02-17\", \"value\": 243.2 },\n  { \"date\": \"2015-02-18\", \"value\": 235.2 },\n  { \"date\": \"2015-02-19\", \"value\": 241.9 },\n  { \"date\": \"2015-02-20\", \"value\": 244.5 },\n  { \"date\": \"2015-02-21\", \"value\": 244.4 },\n  { \"date\": \"2015-02-22\", \"value\": 235.7 },\n  { \"date\": \"2015-02-23\", \"value\": 238.8 },\n  { \"date\": \"2015-02-24\", \"value\": 238.9 },\n  { \"date\": \"2015-02-25\", \"value\": 237.3 },\n  { \"date\": \"2015-02-26\", \"value\": 236.5 },\n  { \"date\": \"2015-02-27\", \"value\": 253.5 },\n  { \"date\": \"2015-02-28\", \"value\": 254.1 },\n  { \"date\": \"2015-03-01\", \"value\": 257.9 },\n  { \"date\": \"2015-03-02\", \"value\": 273.8 },\n  { \"date\": \"2015-03-03\", \"value\": 280.6 },\n  { \"date\": \"2015-03-04\", \"value\": 271.9 },\n  { \"date\": \"2015-03-05\", \"value\": 275.2 },\n  { \"date\": \"2015-03-06\", \"value\": 272.6 },\n  { \"date\": \"2015-03-07\", \"value\": 274.9 },\n  { \"date\": \"2015-03-08\", \"value\": 274.5 },\n  { \"date\": \"2015-03-09\", \"value\": 290.0 },\n  { \"date\": \"2015-03-10\", \"value\": 291.4 },\n  { \"date\": \"2015-03-11\", \"value\": 295.6 },\n  { \"date\": \"2015-03-12\", \"value\": 293.9 },\n  { \"date\": \"2015-03-13\", \"value\": 287.2 },\n  { \"date\": \"2015-03-14\", \"value\": 281.6 },\n  { \"date\": \"2015-03-15\", \"value\": 284.9 },\n  { \"date\": \"2015-03-16\", \"value\": 290.4 },\n  { \"date\": \"2015-03-17\", \"value\": 285.4 },\n  { \"date\": \"2015-03-18\", \"value\": 255.9 },\n  { \"date\": \"2015-03-19\", \"value\": 260.9 },\n  { \"date\": \"2015-03-20\", \"value\": 261.8 },\n  { \"date\": \"2015-03-21\", \"value\": 259.7 },\n  { \"date\": \"2015-03-22\", \"value\": 268.6 },\n  { \"date\": \"2015-03-23\", \"value\": 265.5 },\n  { \"date\": \"2015-03-24\", \"value\": 246.7 },\n  { \"date\": \"2015-03-25\", \"value\": 246.4 },\n  { \"date\": \"2015-03-26\", \"value\": 248.0 },\n  { \"date\": \"2015-03-27\", \"value\": 247.2 },\n  { \"date\": \"2015-03-28\", \"value\": 252.0 },\n  { \"date\": \"2015-03-29\", \"value\": 242.1 },\n  { \"date\": \"2015-03-30\", \"value\": 246.8 },\n  { \"date\": \"2015-03-31\", \"value\": 244.1 },\n  { \"date\": \"2015-04-01\", \"value\": 246.2 },\n  { \"date\": \"2015-04-02\", \"value\": 252.6 },\n  { \"date\": \"2015-04-03\", \"value\": 254.5 },\n  { \"date\": \"2015-04-04\", \"value\": 252.9 },\n  { \"date\": \"2015-04-05\", \"value\": 259.6 },\n  { \"date\": \"2015-04-06\", \"value\": 255.0 },\n  { \"date\": \"2015-04-07\", \"value\": 253.0 },\n  { \"date\": \"2015-04-08\", \"value\": 244.6 },\n  { \"date\": \"2015-04-09\", \"value\": 243.3 },\n  { \"date\": \"2015-04-10\", \"value\": 234.7 },\n  { \"date\": \"2015-04-11\", \"value\": 236.5 },\n  { \"date\": \"2015-04-12\", \"value\": 235.9 },\n  { \"date\": \"2015-04-13\", \"value\": 223.6 },\n  { \"date\": \"2015-04-14\", \"value\": 218.0 },\n  { \"date\": \"2015-04-15\", \"value\": 223.0 },\n  { \"date\": \"2015-04-16\", \"value\": 228.0 },\n  { \"date\": \"2015-04-17\", \"value\": 222.6 },\n  { \"date\": \"2015-04-18\", \"value\": 223.4 },\n  { \"date\": \"2015-04-19\", \"value\": 223.0 },\n  { \"date\": \"2015-04-20\", \"value\": 224.2 },\n  { \"date\": \"2015-04-21\", \"value\": 233.7 },\n  { \"date\": \"2015-04-22\", \"value\": 233.8 },\n  { \"date\": \"2015-04-23\", \"value\": 235.4 },\n  { \"date\": \"2015-04-24\", \"value\": 231.1 },\n  { \"date\": \"2015-04-25\", \"value\": 226.1 },\n  { \"date\": \"2015-04-26\", \"value\": 218.7 },\n  { \"date\": \"2015-04-27\", \"value\": 229.0 },\n  { \"date\": \"2015-04-28\", \"value\": 225.8 },\n  { \"date\": \"2015-04-29\", \"value\": 225.4 },\n  { \"date\": \"2015-04-30\", \"value\": 235.8 },\n  { \"date\": \"2015-05-01\", \"value\": 233.2 },\n  { \"date\": \"2015-05-02\", \"value\": 235.3 },\n  { \"date\": \"2015-05-03\", \"value\": 240.0 },\n  { \"date\": \"2015-05-04\", \"value\": 239.0 },\n  { \"date\": \"2015-05-05\", \"value\": 235.8 },\n  { \"date\": \"2015-05-06\", \"value\": 230.0 },\n  { \"date\": \"2015-05-07\", \"value\": 237.7 },\n  { \"date\": \"2015-05-08\", \"value\": 243.7 },\n  { \"date\": \"2015-05-09\", \"value\": 241.4 },\n  { \"date\": \"2015-05-10\", \"value\": 240.0 },\n  { \"date\": \"2015-05-11\", \"value\": 241.8 },\n  { \"date\": \"2015-05-12\", \"value\": 241.6 },\n  { \"date\": \"2015-05-13\", \"value\": 236.4 },\n  { \"date\": \"2015-05-14\", \"value\": 236.9 },\n  { \"date\": \"2015-05-15\", \"value\": 237.2 },\n  { \"date\": \"2015-05-16\", \"value\": 236.2 },\n  { \"date\": \"2015-05-17\", \"value\": 236.3 },\n  { \"date\": \"2015-05-18\", \"value\": 232.6 },\n  { \"date\": \"2015-05-19\", \"value\": 232.0 },\n  { \"date\": \"2015-05-20\", \"value\": 234.0 },\n  { \"date\": \"2015-05-21\", \"value\": 235.4 },\n  { \"date\": \"2015-05-22\", \"value\": 240.4 },\n  { \"date\": \"2015-05-23\", \"value\": 238.9 },\n  { \"date\": \"2015-05-24\", \"value\": 241.0 },\n  { \"date\": \"2015-05-25\", \"value\": 237.4 },\n  { \"date\": \"2015-05-26\", \"value\": 237.8 },\n  { \"date\": \"2015-05-27\", \"value\": 237.3 },\n  { \"date\": \"2015-05-28\", \"value\": 237.3 },\n  { \"date\": \"2015-05-29\", \"value\": 237.0 },\n  { \"date\": \"2015-05-30\", \"value\": 233.2 },\n  { \"date\": \"2015-05-31\", \"value\": 229.8 },\n  { \"date\": \"2015-06-01\", \"value\": 223.1 },\n  { \"date\": \"2015-06-02\", \"value\": 225.7 },\n  { \"date\": \"2015-06-03\", \"value\": 225.6 },\n  { \"date\": \"2015-06-04\", \"value\": 224.2 },\n  { \"date\": \"2015-06-05\", \"value\": 225.3 },\n  { \"date\": \"2015-06-06\", \"value\": 224.7 },\n  { \"date\": \"2015-06-07\", \"value\": 223.5 },\n  { \"date\": \"2015-06-08\", \"value\": 228.6 },\n  { \"date\": \"2015-06-09\", \"value\": 229.6 },\n  { \"date\": \"2015-06-10\", \"value\": 228.8 },\n  { \"date\": \"2015-06-11\", \"value\": 229.9 },\n  { \"date\": \"2015-06-12\", \"value\": 230.5 },\n  { \"date\": \"2015-06-13\", \"value\": 232.5 },\n  { \"date\": \"2015-06-14\", \"value\": 233.8 },\n  { \"date\": \"2015-06-15\", \"value\": 237.0 },\n  { \"date\": \"2015-06-16\", \"value\": 249.8 },\n  { \"date\": \"2015-06-17\", \"value\": 247.4 },\n  { \"date\": \"2015-06-18\", \"value\": 248.4 },\n  { \"date\": \"2015-06-19\", \"value\": 244.1 },\n  { \"date\": \"2015-06-20\", \"value\": 245.0 },\n  { \"date\": \"2015-06-21\", \"value\": 244.1 },\n  { \"date\": \"2015-06-22\", \"value\": 247.5 },\n  { \"date\": \"2015-06-23\", \"value\": 243.8 },\n  { \"date\": \"2015-06-24\", \"value\": 240.6 },\n  { \"date\": \"2015-06-25\", \"value\": 242.6 },\n  { \"date\": \"2015-06-26\", \"value\": 242.9 },\n  { \"date\": \"2015-06-27\", \"value\": 250.7 },\n  { \"date\": \"2015-06-28\", \"value\": 248.9 },\n  { \"date\": \"2015-06-29\", \"value\": 257.0 },\n  { \"date\": \"2015-06-30\", \"value\": 264.1 },\n  { \"date\": \"2015-07-01\", \"value\": 257.6 },\n  { \"date\": \"2015-07-02\", \"value\": 254.9 },\n  { \"date\": \"2015-07-03\", \"value\": 255.4 },\n  { \"date\": \"2015-07-04\", \"value\": 260.5 },\n  { \"date\": \"2015-07-05\", \"value\": 270.1 },\n  { \"date\": \"2015-07-06\", \"value\": 269.1 },\n  { \"date\": \"2015-07-07\", \"value\": 266.2 },\n  { \"date\": \"2015-07-08\", \"value\": 268.6 },\n  { \"date\": \"2015-07-09\", \"value\": 269.1 },\n  { \"date\": \"2015-07-10\", \"value\": 283.6 },\n  { \"date\": \"2015-07-11\", \"value\": 292.0 },\n  { \"date\": \"2015-07-12\", \"value\": 310.4 },\n  { \"date\": \"2015-07-13\", \"value\": 290.4 },\n  { \"date\": \"2015-07-14\", \"value\": 287.0 },\n  { \"date\": \"2015-07-15\", \"value\": 283.4 },\n  { \"date\": \"2015-07-16\", \"value\": 276.6 },\n  { \"date\": \"2015-07-17\", \"value\": 279.6 },\n  { \"date\": \"2015-07-18\", \"value\": 274.0 },\n  { \"date\": \"2015-07-19\", \"value\": 273.2 },\n  { \"date\": \"2015-07-20\", \"value\": 277.7 },\n  { \"date\": \"2015-07-21\", \"value\": 275.1 },\n  { \"date\": \"2015-07-22\", \"value\": 276.5 },\n  { \"date\": \"2015-07-23\", \"value\": 275.5 },\n  { \"date\": \"2015-07-24\", \"value\": 288.4 },\n  { \"date\": \"2015-07-25\", \"value\": 288.7 },\n  { \"date\": \"2015-07-26\", \"value\": 291.8 },\n  { \"date\": \"2015-07-27\", \"value\": 293.0 },\n  { \"date\": \"2015-07-28\", \"value\": 293.7 },\n  { \"date\": \"2015-07-29\", \"value\": 288.4 },\n  { \"date\": \"2015-07-30\", \"value\": 287.0 },\n  { \"date\": \"2015-07-31\", \"value\": 283.7 },\n  { \"date\": \"2015-08-01\", \"value\": 280.5 },\n  { \"date\": \"2015-08-02\", \"value\": 281.4 },\n  { \"date\": \"2015-08-03\", \"value\": 281.6 },\n  { \"date\": \"2015-08-04\", \"value\": 284.3 },\n  { \"date\": \"2015-08-05\", \"value\": 281.7 },\n  { \"date\": \"2015-08-06\", \"value\": 278.0 },\n  { \"date\": \"2015-08-07\", \"value\": 277.9 },\n  { \"date\": \"2015-08-08\", \"value\": 258.6 },\n  { \"date\": \"2015-08-09\", \"value\": 263.9 },\n  { \"date\": \"2015-08-10\", \"value\": 263.3 },\n  { \"date\": \"2015-08-11\", \"value\": 269.0 },\n  { \"date\": \"2015-08-12\", \"value\": 267.7 },\n  { \"date\": \"2015-08-13\", \"value\": 263.4 },\n  { \"date\": \"2015-08-14\", \"value\": 265.0 },\n  { \"date\": \"2015-08-15\", \"value\": 260.5 },\n  { \"date\": \"2015-08-16\", \"value\": 257.1 },\n  { \"date\": \"2015-08-17\", \"value\": 257.1 },\n  { \"date\": \"2015-08-18\", \"value\": 246.7 },\n  { \"date\": \"2015-08-19\", \"value\": 226.0 },\n  { \"date\": \"2015-08-20\", \"value\": 234.7 },\n  { \"date\": \"2015-08-21\", \"value\": 232.4 },\n  { \"date\": \"2015-08-22\", \"value\": 229.5 },\n  { \"date\": \"2015-08-23\", \"value\": 226.8 },\n  { \"date\": \"2015-08-24\", \"value\": 211.4 },\n  { \"date\": \"2015-08-25\", \"value\": 220.5 },\n  { \"date\": \"2015-08-26\", \"value\": 225.0 },\n  { \"date\": \"2015-08-27\", \"value\": 222.7 },\n  { \"date\": \"2015-08-28\", \"value\": 231.6 },\n  { \"date\": \"2015-08-29\", \"value\": 228.5 },\n  { \"date\": \"2015-08-30\", \"value\": 228.4 },\n  { \"date\": \"2015-08-31\", \"value\": 229.5 },\n  { \"date\": \"2015-09-01\", \"value\": 227.2 },\n  { \"date\": \"2015-09-02\", \"value\": 228.6 },\n  { \"date\": \"2015-09-03\", \"value\": 226.2 },\n  { \"date\": \"2015-09-04\", \"value\": 230.3 },\n  { \"date\": \"2015-09-05\", \"value\": 233.7 },\n  { \"date\": \"2015-09-06\", \"value\": 239.9 },\n  { \"date\": \"2015-09-07\", \"value\": 239.6 },\n  { \"date\": \"2015-09-08\", \"value\": 243.2 },\n  { \"date\": \"2015-09-09\", \"value\": 237.4 },\n  { \"date\": \"2015-09-10\", \"value\": 238.1 },\n  { \"date\": \"2015-09-11\", \"value\": 239.9 },\n  { \"date\": \"2015-09-12\", \"value\": 235.6 },\n  { \"date\": \"2015-09-13\", \"value\": 230.2 },\n  { \"date\": \"2015-09-14\", \"value\": 229.9 },\n  { \"date\": \"2015-09-15\", \"value\": 229.5 },\n  { \"date\": \"2015-09-16\", \"value\": 228.6 },\n  { \"date\": \"2015-09-17\", \"value\": 232.7 },\n  { \"date\": \"2015-09-18\", \"value\": 232.2 },\n  { \"date\": \"2015-09-19\", \"value\": 231.1 },\n  { \"date\": \"2015-09-20\", \"value\": 231.1 },\n  { \"date\": \"2015-09-21\", \"value\": 226.3 },\n  { \"date\": \"2015-09-22\", \"value\": 230.0 },\n  { \"date\": \"2015-09-23\", \"value\": 229.9 },\n  { \"date\": \"2015-09-24\", \"value\": 233.8 },\n  { \"date\": \"2015-09-25\", \"value\": 235.0 },\n  { \"date\": \"2015-09-26\", \"value\": 234.3 },\n  { \"date\": \"2015-09-27\", \"value\": 232.5 },\n  { \"date\": \"2015-09-28\", \"value\": 238.9 },\n  { \"date\": \"2015-09-29\", \"value\": 236.7 },\n  { \"date\": \"2015-09-30\", \"value\": 235.9 },\n  { \"date\": \"2015-10-01\", \"value\": 237.1 },\n  { \"date\": \"2015-10-02\", \"value\": 236.7 },\n  { \"date\": \"2015-10-03\", \"value\": 238.6 },\n  { \"date\": \"2015-10-04\", \"value\": 238.3 },\n  { \"date\": \"2015-10-05\", \"value\": 240.1 },\n  { \"date\": \"2015-10-06\", \"value\": 246.1 },\n  { \"date\": \"2015-10-07\", \"value\": 243.0 },\n  { \"date\": \"2015-10-08\", \"value\": 242.6 },\n  { \"date\": \"2015-10-09\", \"value\": 244.0 },\n  { \"date\": \"2015-10-10\", \"value\": 245.4 },\n  { \"date\": \"2015-10-11\", \"value\": 247.6 },\n  { \"date\": \"2015-10-12\", \"value\": 245.4 },\n  { \"date\": \"2015-10-13\", \"value\": 248.8 },\n  { \"date\": \"2015-10-14\", \"value\": 252.3 },\n  { \"date\": \"2015-10-15\", \"value\": 254.4 },\n  { \"date\": \"2015-10-16\", \"value\": 262.9 },\n  { \"date\": \"2015-10-17\", \"value\": 269.6 },\n  { \"date\": \"2015-10-18\", \"value\": 261.7 },\n  { \"date\": \"2015-10-19\", \"value\": 263.8 },\n  { \"date\": \"2015-10-20\", \"value\": 269.8 },\n  { \"date\": \"2015-10-21\", \"value\": 267.1 },\n  { \"date\": \"2015-10-22\", \"value\": 274.4 },\n  { \"date\": \"2015-10-23\", \"value\": 276.9 },\n  { \"date\": \"2015-10-24\", \"value\": 282.6 },\n  { \"date\": \"2015-10-25\", \"value\": 287.9 },\n  { \"date\": \"2015-10-26\", \"value\": 285.1 },\n  { \"date\": \"2015-10-27\", \"value\": 294.7 },\n  { \"date\": \"2015-10-28\", \"value\": 303.5 },\n  { \"date\": \"2015-10-29\", \"value\": 313.6 },\n  { \"date\": \"2015-10-30\", \"value\": 327.1 },\n  { \"date\": \"2015-10-31\", \"value\": 311.2 },\n  { \"date\": \"2015-11-01\", \"value\": 323.0 },\n  { \"date\": \"2015-11-02\", \"value\": 359.3 },\n  { \"date\": \"2015-11-03\", \"value\": 396.5 },\n  { \"date\": \"2015-11-04\", \"value\": 400.9 },\n  { \"date\": \"2015-11-05\", \"value\": 382.7 },\n  { \"date\": \"2015-11-06\", \"value\": 369.8 },\n  { \"date\": \"2015-11-07\", \"value\": 385.1 },\n  { \"date\": \"2015-11-08\", \"value\": 371.6 },\n  { \"date\": \"2015-11-09\", \"value\": 380.2 },\n  { \"date\": \"2015-11-10\", \"value\": 336.7 },\n  { \"date\": \"2015-11-11\", \"value\": 304.7 },\n  { \"date\": \"2015-11-12\", \"value\": 333.9 },\n  { \"date\": \"2015-11-13\", \"value\": 333.8 },\n  { \"date\": \"2015-11-14\", \"value\": 331.8 },\n  { \"date\": \"2015-11-15\", \"value\": 317.5 },\n  { \"date\": \"2015-11-16\", \"value\": 330.2 },\n  { \"date\": \"2015-11-17\", \"value\": 333.9 },\n  { \"date\": \"2015-11-18\", \"value\": 335.9 },\n  { \"date\": \"2015-11-19\", \"value\": 325.0 },\n  { \"date\": \"2015-11-20\", \"value\": 321.1 },\n  { \"date\": \"2015-11-21\", \"value\": 324.7 },\n  { \"date\": \"2015-11-22\", \"value\": 322.8 },\n  { \"date\": \"2015-11-23\", \"value\": 322.1 },\n  { \"date\": \"2015-11-24\", \"value\": 318.4 },\n  { \"date\": \"2015-11-25\", \"value\": 327.5 },\n  { \"date\": \"2015-11-26\", \"value\": 353.7 },\n  { \"date\": \"2015-11-27\", \"value\": 359.5 },\n  { \"date\": \"2015-11-28\", \"value\": 355.8 },\n  { \"date\": \"2015-11-29\", \"value\": 370.8 },\n  { \"date\": \"2015-11-30\", \"value\": 378.0 },\n  { \"date\": \"2015-12-01\", \"value\": 361.8 },\n  { \"date\": \"2015-12-02\", \"value\": 360.0 },\n  { \"date\": \"2015-12-03\", \"value\": 360.3 },\n  { \"date\": \"2015-12-04\", \"value\": 361.7 },\n  { \"date\": \"2015-12-05\", \"value\": 386.7 },\n  { \"date\": \"2015-12-06\", \"value\": 393.4 },\n  { \"date\": \"2015-12-07\", \"value\": 394.3 },\n  { \"date\": \"2015-12-08\", \"value\": 410.7 },\n  { \"date\": \"2015-12-09\", \"value\": 416.0 },\n  { \"date\": \"2015-12-10\", \"value\": 415.5 },\n  { \"date\": \"2015-12-11\", \"value\": 449.8 },\n  { \"date\": \"2015-12-12\", \"value\": 432.3 },\n  { \"date\": \"2015-12-13\", \"value\": 434.7 },\n  { \"date\": \"2015-12-14\", \"value\": 442.0 },\n  { \"date\": \"2015-12-15\", \"value\": 462.6 },\n  { \"date\": \"2015-12-16\", \"value\": 454.0 },\n  { \"date\": \"2015-12-17\", \"value\": 455.5 },\n  { \"date\": \"2015-12-18\", \"value\": 463.2 },\n  { \"date\": \"2015-12-19\", \"value\": 461.2 },\n  { \"date\": \"2015-12-20\", \"value\": 441.8 },\n  { \"date\": \"2015-12-21\", \"value\": 437.6 },\n  { \"date\": \"2015-12-22\", \"value\": 437.0 },\n  { \"date\": \"2015-12-23\", \"value\": 442.4 },\n  { \"date\": \"2015-12-24\", \"value\": 453.0 },\n  { \"date\": \"2015-12-25\", \"value\": 454.0 },\n  { \"date\": \"2015-12-26\", \"value\": 415.4 },\n  { \"date\": \"2015-12-27\", \"value\": 422.4 },\n  { \"date\": \"2015-12-28\", \"value\": 421.8 },\n  { \"date\": \"2015-12-29\", \"value\": 431.9 },\n  { \"date\": \"2015-12-30\", \"value\": 427.1 },\n  { \"date\": \"2015-12-31\", \"value\": 430.0 },\n  { \"date\": \"2016-01-01\", \"value\": 434.0 },\n  { \"date\": \"2016-01-02\", \"value\": 433.7 },\n  { \"date\": \"2016-01-03\", \"value\": 430.7 },\n  { \"date\": \"2016-01-04\", \"value\": 433.3 },\n  { \"date\": \"2016-01-05\", \"value\": 431.2 },\n  { \"date\": \"2016-01-06\", \"value\": 430.8 },\n  { \"date\": \"2016-01-07\", \"value\": 457.0 },\n  { \"date\": \"2016-01-08\", \"value\": 452.9 },\n  { \"date\": \"2016-01-09\", \"value\": 448.3 },\n  { \"date\": \"2016-01-10\", \"value\": 446.2 },\n  { \"date\": \"2016-01-11\", \"value\": 447.7 },\n  { \"date\": \"2016-01-12\", \"value\": 445.0 },\n  { \"date\": \"2016-01-13\", \"value\": 432.2 },\n  { \"date\": \"2016-01-14\", \"value\": 429.1 },\n  { \"date\": \"2016-01-15\", \"value\": 372.3 },\n  { \"date\": \"2016-01-16\", \"value\": 385.0 },\n  { \"date\": \"2016-01-17\", \"value\": 382.5 },\n  { \"date\": \"2016-01-18\", \"value\": 384.4 },\n  { \"date\": \"2016-01-19\", \"value\": 379.5 },\n  { \"date\": \"2016-01-20\", \"value\": 414.6 },\n  { \"date\": \"2016-01-21\", \"value\": 410.2 },\n  { \"date\": \"2016-01-22\", \"value\": 382.6 },\n  { \"date\": \"2016-01-23\", \"value\": 388.6 },\n  { \"date\": \"2016-01-24\", \"value\": 402.1 },\n  { \"date\": \"2016-01-25\", \"value\": 392.8 },\n  { \"date\": \"2016-01-26\", \"value\": 389.8 },\n  { \"date\": \"2016-01-27\", \"value\": 395.0 },\n  { \"date\": \"2016-01-28\", \"value\": 379.7 },\n  { \"date\": \"2016-01-29\", \"value\": 380.3 },\n  { \"date\": \"2016-01-30\", \"value\": 377.8 },\n  { \"date\": \"2016-01-31\", \"value\": 369.8 },\n  { \"date\": \"2016-02-01\", \"value\": 372.2 },\n  { \"date\": \"2016-02-02\", \"value\": 373.9 },\n  { \"date\": \"2016-02-03\", \"value\": 368.0 },\n  { \"date\": \"2016-02-04\", \"value\": 390.6 },\n  { \"date\": \"2016-02-05\", \"value\": 386.5 },\n  { \"date\": \"2016-02-06\", \"value\": 376.7 },\n  { \"date\": \"2016-02-07\", \"value\": 377.9 },\n  { \"date\": \"2016-02-08\", \"value\": 372.6 },\n  { \"date\": \"2016-02-09\", \"value\": 375.3 },\n  { \"date\": \"2016-02-10\", \"value\": 381.9 },\n  { \"date\": \"2016-02-11\", \"value\": 379.5 },\n  { \"date\": \"2016-02-12\", \"value\": 384.0 },\n  { \"date\": \"2016-02-13\", \"value\": 390.1 },\n  { \"date\": \"2016-02-14\", \"value\": 405.5 },\n  { \"date\": \"2016-02-15\", \"value\": 401.1 },\n  { \"date\": \"2016-02-16\", \"value\": 406.4 },\n  { \"date\": \"2016-02-17\", \"value\": 417.1 },\n  { \"date\": \"2016-02-18\", \"value\": 421.4 },\n  { \"date\": \"2016-02-19\", \"value\": 420.0 },\n  { \"date\": \"2016-02-20\", \"value\": 440.1 },\n  { \"date\": \"2016-02-21\", \"value\": 437.9 },\n  { \"date\": \"2016-02-22\", \"value\": 437.8 },\n  { \"date\": \"2016-02-23\", \"value\": 419.9 },\n  { \"date\": \"2016-02-24\", \"value\": 422.7 },\n  { \"date\": \"2016-02-25\", \"value\": 423.5 },\n  { \"date\": \"2016-02-26\", \"value\": 427.3 },\n  { \"date\": \"2016-02-27\", \"value\": 431.3 },\n  { \"date\": \"2016-02-28\", \"value\": 432.5 },\n  { \"date\": \"2016-02-29\", \"value\": 436.2 },\n  { \"date\": \"2016-03-01\", \"value\": 434.0 },\n  { \"date\": \"2016-03-02\", \"value\": 425.4 },\n  { \"date\": \"2016-03-03\", \"value\": 419.6 },\n  { \"date\": \"2016-03-04\", \"value\": 409.5 },\n  { \"date\": \"2016-03-05\", \"value\": 399.0 },\n  { \"date\": \"2016-03-06\", \"value\": 406.0 },\n  { \"date\": \"2016-03-07\", \"value\": 414.9 },\n  { \"date\": \"2016-03-08\", \"value\": 411.9 },\n  { \"date\": \"2016-03-09\", \"value\": 412.8 },\n  { \"date\": \"2016-03-10\", \"value\": 415.8 },\n  { \"date\": \"2016-03-11\", \"value\": 419.1 },\n  { \"date\": \"2016-03-12\", \"value\": 410.4 },\n  { \"date\": \"2016-03-13\", \"value\": 412.4 },\n  { \"date\": \"2016-03-14\", \"value\": 414.3 },\n  { \"date\": \"2016-03-15\", \"value\": 415.1 },\n  { \"date\": \"2016-03-16\", \"value\": 415.9 },\n  { \"date\": \"2016-03-17\", \"value\": 418.2 },\n  { \"date\": \"2016-03-18\", \"value\": 408.2 },\n  { \"date\": \"2016-03-19\", \"value\": 408.7 },\n  { \"date\": \"2016-03-20\", \"value\": 411.5 },\n  { \"date\": \"2016-03-21\", \"value\": 411.1 },\n  { \"date\": \"2016-03-22\", \"value\": 416.2 },\n  { \"date\": \"2016-03-23\", \"value\": 417.0 },\n  { \"date\": \"2016-03-24\", \"value\": 414.7 },\n  { \"date\": \"2016-03-25\", \"value\": 415.7 },\n  { \"date\": \"2016-03-26\", \"value\": 416.5 },\n  { \"date\": \"2016-03-27\", \"value\": 424.6 },\n  { \"date\": \"2016-03-28\", \"value\": 422.2 },\n  { \"date\": \"2016-03-29\", \"value\": 415.0 },\n  { \"date\": \"2016-03-30\", \"value\": 412.4 },\n  { \"date\": \"2016-03-31\", \"value\": 415.7 },\n  { \"date\": \"2016-04-01\", \"value\": 415.6 },\n  { \"date\": \"2016-04-02\", \"value\": 418.5 },\n  { \"date\": \"2016-04-03\", \"value\": 419.1 },\n  { \"date\": \"2016-04-04\", \"value\": 419.3 },\n  { \"date\": \"2016-04-05\", \"value\": 422.1 },\n  { \"date\": \"2016-04-06\", \"value\": 421.3 },\n  { \"date\": \"2016-04-07\", \"value\": 420.1 },\n  { \"date\": \"2016-04-08\", \"value\": 417.7 },\n  { \"date\": \"2016-04-09\", \"value\": 418.0 },\n  { \"date\": \"2016-04-10\", \"value\": 420.3 },\n  { \"date\": \"2016-04-11\", \"value\": 421.4 },\n  { \"date\": \"2016-04-12\", \"value\": 424.7 },\n  { \"date\": \"2016-04-13\", \"value\": 423.5 },\n  { \"date\": \"2016-04-14\", \"value\": 424.0 },\n  { \"date\": \"2016-04-15\", \"value\": 428.7 },\n  { \"date\": \"2016-04-16\", \"value\": 430.0 },\n  { \"date\": \"2016-04-17\", \"value\": 426.3 },\n  { \"date\": \"2016-04-18\", \"value\": 427.7 },\n  { \"date\": \"2016-04-19\", \"value\": 434.9 },\n  { \"date\": \"2016-04-20\", \"value\": 441.2 },\n  { \"date\": \"2016-04-21\", \"value\": 449.3 },\n  { \"date\": \"2016-04-22\", \"value\": 445.3 },\n  { \"date\": \"2016-04-23\", \"value\": 450.1 },\n  { \"date\": \"2016-04-24\", \"value\": 457.6 },\n  { \"date\": \"2016-04-25\", \"value\": 461.7 },\n  { \"date\": \"2016-04-26\", \"value\": 466.0 },\n  { \"date\": \"2016-04-27\", \"value\": 447.0 },\n  { \"date\": \"2016-04-28\", \"value\": 448.5 },\n  { \"date\": \"2016-04-29\", \"value\": 455.0 },\n  { \"date\": \"2016-04-30\", \"value\": 448.5 },\n  { \"date\": \"2016-05-01\", \"value\": 452.2 },\n  { \"date\": \"2016-05-02\", \"value\": 444.2 },\n  { \"date\": \"2016-05-03\", \"value\": 450.3 },\n  { \"date\": \"2016-05-04\", \"value\": 445.8 },\n  { \"date\": \"2016-05-05\", \"value\": 448.1 },\n  { \"date\": \"2016-05-06\", \"value\": 459.6 },\n  { \"date\": \"2016-05-07\", \"value\": 458.5 },\n  { \"date\": \"2016-05-08\", \"value\": 457.9 },\n  { \"date\": \"2016-05-09\", \"value\": 460.4 },\n  { \"date\": \"2016-05-10\", \"value\": 449.4 },\n  { \"date\": \"2016-05-11\", \"value\": 452.5 },\n  { \"date\": \"2016-05-12\", \"value\": 454.4 },\n  { \"date\": \"2016-05-13\", \"value\": 455.4 },\n  { \"date\": \"2016-05-14\", \"value\": 456.4 },\n  { \"date\": \"2016-05-15\", \"value\": 458.1 },\n  { \"date\": \"2016-05-16\", \"value\": 454.9 },\n  { \"date\": \"2016-05-17\", \"value\": 453.3 },\n  { \"date\": \"2016-05-18\", \"value\": 454.2 },\n  { \"date\": \"2016-05-19\", \"value\": 442.7 },\n  { \"date\": \"2016-05-20\", \"value\": 442.1 },\n  { \"date\": \"2016-05-21\", \"value\": 443.6 },\n  { \"date\": \"2016-05-22\", \"value\": 439.6 },\n  { \"date\": \"2016-05-23\", \"value\": 443.7 },\n  { \"date\": \"2016-05-24\", \"value\": 446.1 },\n  { \"date\": \"2016-05-25\", \"value\": 449.8 },\n  { \"date\": \"2016-05-26\", \"value\": 453.3 },\n  { \"date\": \"2016-05-27\", \"value\": 474.0 },\n  { \"date\": \"2016-05-28\", \"value\": 524.2 },\n  { \"date\": \"2016-05-29\", \"value\": 516.0 },\n  { \"date\": \"2016-05-30\", \"value\": 532.3 },\n  { \"date\": \"2016-05-31\", \"value\": 528.9 },\n  { \"date\": \"2016-06-01\", \"value\": 537.4 },\n  { \"date\": \"2016-06-02\", \"value\": 537.1 },\n  { \"date\": \"2016-06-03\", \"value\": 567.0 },\n  { \"date\": \"2016-06-04\", \"value\": 572.0 },\n  { \"date\": \"2016-06-05\", \"value\": 574.9 },\n  { \"date\": \"2016-06-06\", \"value\": 583.6 },\n  { \"date\": \"2016-06-07\", \"value\": 575.6 },\n  { \"date\": \"2016-06-08\", \"value\": 580.5 },\n  { \"date\": \"2016-06-09\", \"value\": 574.7 },\n  { \"date\": \"2016-06-10\", \"value\": 577.9 },\n  { \"date\": \"2016-06-11\", \"value\": 591.6 },\n  { \"date\": \"2016-06-12\", \"value\": 666.5 },\n  { \"date\": \"2016-06-13\", \"value\": 700.1 },\n  { \"date\": \"2016-06-14\", \"value\": 685.1 },\n  { \"date\": \"2016-06-15\", \"value\": 690.8 },\n  { \"date\": \"2016-06-16\", \"value\": 761.2 },\n  { \"date\": \"2016-06-17\", \"value\": 743.9 },\n  { \"date\": \"2016-06-18\", \"value\": 753.8 },\n  { \"date\": \"2016-06-19\", \"value\": 761.0 },\n  { \"date\": \"2016-06-20\", \"value\": 734.0 },\n  { \"date\": \"2016-06-21\", \"value\": 667.4 },\n  { \"date\": \"2016-06-22\", \"value\": 590.6 },\n  { \"date\": \"2016-06-23\", \"value\": 620.8 },\n  { \"date\": \"2016-06-24\", \"value\": 656.9 },\n  { \"date\": \"2016-06-25\", \"value\": 663.5 },\n  { \"date\": \"2016-06-26\", \"value\": 625.4 },\n  { \"date\": \"2016-06-27\", \"value\": 644.7 },\n  { \"date\": \"2016-06-28\", \"value\": 644.9 },\n  { \"date\": \"2016-06-29\", \"value\": 636.5 },\n  { \"date\": \"2016-06-30\", \"value\": 670.0 },\n  { \"date\": \"2016-07-01\", \"value\": 674.6 },\n  { \"date\": \"2016-07-02\", \"value\": 698.1 },\n  { \"date\": \"2016-07-03\", \"value\": 661.6 },\n  { \"date\": \"2016-07-04\", \"value\": 675.2 },\n  { \"date\": \"2016-07-05\", \"value\": 663.7 },\n  { \"date\": \"2016-07-06\", \"value\": 672.7 },\n  { \"date\": \"2016-07-07\", \"value\": 635.3 },\n  { \"date\": \"2016-07-08\", \"value\": 662.8 },\n  { \"date\": \"2016-07-09\", \"value\": 651.8 },\n  { \"date\": \"2016-07-10\", \"value\": 647.1 },\n  { \"date\": \"2016-07-11\", \"value\": 646.7 },\n  { \"date\": \"2016-07-12\", \"value\": 670.6 },\n  { \"date\": \"2016-07-13\", \"value\": 661.2 },\n  { \"date\": \"2016-07-14\", \"value\": 657.3 },\n  { \"date\": \"2016-07-15\", \"value\": 664.2 },\n  { \"date\": \"2016-07-16\", \"value\": 660.7 },\n  { \"date\": \"2016-07-17\", \"value\": 676.3 },\n  { \"date\": \"2016-07-18\", \"value\": 670.4 },\n  { \"date\": \"2016-07-19\", \"value\": 671.1 },\n  { \"date\": \"2016-07-20\", \"value\": 664.4 },\n  { \"date\": \"2016-07-21\", \"value\": 664.6 },\n  { \"date\": \"2016-07-22\", \"value\": 651.1 },\n  { \"date\": \"2016-07-23\", \"value\": 655.2 },\n  { \"date\": \"2016-07-24\", \"value\": 659.3 },\n  { \"date\": \"2016-07-25\", \"value\": 654.0 },\n  { \"date\": \"2016-07-26\", \"value\": 654.4 },\n  { \"date\": \"2016-07-27\", \"value\": 654.5 },\n  { \"date\": \"2016-07-28\", \"value\": 654.1 },\n  { \"date\": \"2016-07-29\", \"value\": 655.4 },\n  { \"date\": \"2016-07-30\", \"value\": 654.7 },\n  { \"date\": \"2016-07-31\", \"value\": 621.9 },\n  { \"date\": \"2016-08-01\", \"value\": 607.0 },\n  { \"date\": \"2016-08-02\", \"value\": 513.4 },\n  { \"date\": \"2016-08-03\", \"value\": 566.4 },\n  { \"date\": \"2016-08-04\", \"value\": 576.2 },\n  { \"date\": \"2016-08-05\", \"value\": 574.7 },\n  { \"date\": \"2016-08-06\", \"value\": 586.5 },\n  { \"date\": \"2016-08-07\", \"value\": 590.8 },\n  { \"date\": \"2016-08-08\", \"value\": 589.2 },\n  { \"date\": \"2016-08-09\", \"value\": 585.3 },\n  { \"date\": \"2016-08-10\", \"value\": 590.9 },\n  { \"date\": \"2016-08-11\", \"value\": 587.8 },\n  { \"date\": \"2016-08-12\", \"value\": 587.1 },\n  { \"date\": \"2016-08-13\", \"value\": 584.6 },\n  { \"date\": \"2016-08-14\", \"value\": 569.1 },\n  { \"date\": \"2016-08-15\", \"value\": 567.0 },\n  { \"date\": \"2016-08-16\", \"value\": 580.2 },\n  { \"date\": \"2016-08-17\", \"value\": 572.3 },\n  { \"date\": \"2016-08-18\", \"value\": 573.4 },\n  { \"date\": \"2016-08-19\", \"value\": 574.6 },\n  { \"date\": \"2016-08-20\", \"value\": 582.6 },\n  { \"date\": \"2016-08-21\", \"value\": 580.7 },\n  { \"date\": \"2016-08-22\", \"value\": 587.5 },\n  { \"date\": \"2016-08-23\", \"value\": 583.6 },\n  { \"date\": \"2016-08-24\", \"value\": 579.7 },\n  { \"date\": \"2016-08-25\", \"value\": 578.0 },\n  { \"date\": \"2016-08-26\", \"value\": 579.4 },\n  { \"date\": \"2016-08-27\", \"value\": 570.3 },\n  { \"date\": \"2016-08-28\", \"value\": 575.0 },\n  { \"date\": \"2016-08-29\", \"value\": 574.2 },\n  { \"date\": \"2016-08-30\", \"value\": 577.3 },\n  { \"date\": \"2016-08-31\", \"value\": 573.9 },\n  { \"date\": \"2016-09-01\", \"value\": 572.0 },\n  { \"date\": \"2016-09-02\", \"value\": 575.3 },\n  { \"date\": \"2016-09-03\", \"value\": 598.8 },\n  { \"date\": \"2016-09-04\", \"value\": 609.5 },\n  { \"date\": \"2016-09-05\", \"value\": 605.8 },\n  { \"date\": \"2016-09-06\", \"value\": 610.4 },\n  { \"date\": \"2016-09-07\", \"value\": 613.2 },\n  { \"date\": \"2016-09-08\", \"value\": 625.6 },\n  { \"date\": \"2016-09-09\", \"value\": 623.2 },\n  { \"date\": \"2016-09-10\", \"value\": 624.5 },\n  { \"date\": \"2016-09-11\", \"value\": 605.6 },\n  { \"date\": \"2016-09-12\", \"value\": 608.0 },\n  { \"date\": \"2016-09-13\", \"value\": 608.6 },\n  { \"date\": \"2016-09-14\", \"value\": 609.5 },\n  { \"date\": \"2016-09-15\", \"value\": 608.1 },\n  { \"date\": \"2016-09-16\", \"value\": 607.8 },\n  { \"date\": \"2016-09-17\", \"value\": 607.1 },\n  { \"date\": \"2016-09-18\", \"value\": 610.7 },\n  { \"date\": \"2016-09-19\", \"value\": 609.8 },\n  { \"date\": \"2016-09-20\", \"value\": 609.2 },\n  { \"date\": \"2016-09-21\", \"value\": 597.2 },\n  { \"date\": \"2016-09-22\", \"value\": 595.6 },\n  { \"date\": \"2016-09-23\", \"value\": 602.9 },\n  { \"date\": \"2016-09-24\", \"value\": 602.6 },\n  { \"date\": \"2016-09-25\", \"value\": 601.5 },\n  { \"date\": \"2016-09-26\", \"value\": 606.5 },\n  { \"date\": \"2016-09-27\", \"value\": 605.5 },\n  { \"date\": \"2016-09-28\", \"value\": 604.7 },\n  { \"date\": \"2016-09-29\", \"value\": 604.7 },\n  { \"date\": \"2016-09-30\", \"value\": 608.1 },\n  { \"date\": \"2016-10-01\", \"value\": 613.4 },\n  { \"date\": \"2016-10-02\", \"value\": 610.7 },\n  { \"date\": \"2016-10-03\", \"value\": 611.6 },\n  { \"date\": \"2016-10-04\", \"value\": 609.0 },\n  { \"date\": \"2016-10-05\", \"value\": 611.8 },\n  { \"date\": \"2016-10-06\", \"value\": 611.0 },\n  { \"date\": \"2016-10-07\", \"value\": 616.0 },\n  { \"date\": \"2016-10-08\", \"value\": 617.7 },\n  { \"date\": \"2016-10-09\", \"value\": 615.8 },\n  { \"date\": \"2016-10-10\", \"value\": 617.3 },\n  { \"date\": \"2016-10-11\", \"value\": 640.5 },\n  { \"date\": \"2016-10-12\", \"value\": 636.0 },\n  { \"date\": \"2016-10-13\", \"value\": 635.6 },\n  { \"date\": \"2016-10-14\", \"value\": 637.9 },\n  { \"date\": \"2016-10-15\", \"value\": 637.0 },\n  { \"date\": \"2016-10-16\", \"value\": 640.1 },\n  { \"date\": \"2016-10-17\", \"value\": 637.4 },\n  { \"date\": \"2016-10-18\", \"value\": 635.3 },\n  { \"date\": \"2016-10-19\", \"value\": 629.1 },\n  { \"date\": \"2016-10-20\", \"value\": 628.3 },\n  { \"date\": \"2016-10-21\", \"value\": 630.5 },\n  { \"date\": \"2016-10-22\", \"value\": 655.5 },\n  { \"date\": \"2016-10-23\", \"value\": 653.0 },\n  { \"date\": \"2016-10-24\", \"value\": 650.5 },\n  { \"date\": \"2016-10-25\", \"value\": 651.0 },\n  { \"date\": \"2016-10-26\", \"value\": 674.7 },\n  { \"date\": \"2016-10-27\", \"value\": 682.3 },\n  { \"date\": \"2016-10-28\", \"value\": 686.2 },\n  { \"date\": \"2016-10-29\", \"value\": 715.0 },\n  { \"date\": \"2016-10-30\", \"value\": 697.3 },\n  { \"date\": \"2016-10-31\", \"value\": 698.7 },\n  { \"date\": \"2016-11-01\", \"value\": 726.8 },\n  { \"date\": \"2016-11-02\", \"value\": 733.5 },\n  { \"date\": \"2016-11-03\", \"value\": 684.9 },\n  { \"date\": \"2016-11-04\", \"value\": 702.1 },\n  { \"date\": \"2016-11-05\", \"value\": 702.1 },\n  { \"date\": \"2016-11-06\", \"value\": 709.9 },\n  { \"date\": \"2016-11-07\", \"value\": 705.4 },\n  { \"date\": \"2016-11-08\", \"value\": 710.9 },\n  { \"date\": \"2016-11-09\", \"value\": 721.4 },\n  { \"date\": \"2016-11-10\", \"value\": 714.6 },\n  { \"date\": \"2016-11-11\", \"value\": 715.0 },\n  { \"date\": \"2016-11-12\", \"value\": 704.3 },\n  { \"date\": \"2016-11-13\", \"value\": 702.0 },\n  { \"date\": \"2016-11-14\", \"value\": 704.6 },\n  { \"date\": \"2016-11-15\", \"value\": 711.1 },\n  { \"date\": \"2016-11-16\", \"value\": 740.3 },\n  { \"date\": \"2016-11-17\", \"value\": 737.5 },\n  { \"date\": \"2016-11-18\", \"value\": 747.0 },\n  { \"date\": \"2016-11-19\", \"value\": 747.9 },\n  { \"date\": \"2016-11-20\", \"value\": 728.5 },\n  { \"date\": \"2016-11-21\", \"value\": 736.2 },\n  { \"date\": \"2016-11-22\", \"value\": 749.3 },\n  { \"date\": \"2016-11-23\", \"value\": 741.1 },\n  { \"date\": \"2016-11-24\", \"value\": 735.3 },\n  { \"date\": \"2016-11-25\", \"value\": 740.4 },\n  { \"date\": \"2016-11-26\", \"value\": 734.1 },\n  { \"date\": \"2016-11-27\", \"value\": 729.4 },\n  { \"date\": \"2016-11-28\", \"value\": 733.3 },\n  { \"date\": \"2016-11-29\", \"value\": 732.6 },\n  { \"date\": \"2016-11-30\", \"value\": 742.5 },\n  { \"date\": \"2016-12-01\", \"value\": 752.6 },\n  { \"date\": \"2016-12-02\", \"value\": 770.9 },\n  { \"date\": \"2016-12-03\", \"value\": 764.2 },\n  { \"date\": \"2016-12-04\", \"value\": 766.4 },\n  { \"date\": \"2016-12-05\", \"value\": 754.3 },\n  { \"date\": \"2016-12-06\", \"value\": 758.2 },\n  { \"date\": \"2016-12-07\", \"value\": 765.6 },\n  { \"date\": \"2016-12-08\", \"value\": 768.5 },\n  { \"date\": \"2016-12-09\", \"value\": 770.5 },\n  { \"date\": \"2016-12-10\", \"value\": 774.0 },\n  { \"date\": \"2016-12-11\", \"value\": 767.9 },\n  { \"date\": \"2016-12-12\", \"value\": 778.5 },\n  { \"date\": \"2016-12-13\", \"value\": 778.7 },\n  { \"date\": \"2016-12-14\", \"value\": 776.5 },\n  { \"date\": \"2016-12-15\", \"value\": 775.2 },\n  { \"date\": \"2016-12-16\", \"value\": 782.0 },\n  { \"date\": \"2016-12-17\", \"value\": 787.2 },\n  { \"date\": \"2016-12-18\", \"value\": 789.0 },\n  { \"date\": \"2016-12-19\", \"value\": 789.8 },\n  { \"date\": \"2016-12-20\", \"value\": 799.1 },\n  { \"date\": \"2016-12-21\", \"value\": 829.2 },\n  { \"date\": \"2016-12-22\", \"value\": 860.2 },\n  { \"date\": \"2016-12-23\", \"value\": 917.2 },\n  { \"date\": \"2016-12-24\", \"value\": 891.1 },\n  { \"date\": \"2016-12-25\", \"value\": 891.1 },\n  { \"date\": \"2016-12-26\", \"value\": 898.4 },\n  { \"date\": \"2016-12-27\", \"value\": 925.8 },\n  { \"date\": \"2016-12-28\", \"value\": 972.2 },\n  { \"date\": \"2016-12-29\", \"value\": 971.1 },\n  { \"date\": \"2016-12-30\", \"value\": 959.0 },\n  { \"date\": \"2016-12-31\", \"value\": 963.4 },\n  { \"date\": \"2017-01-01\", \"value\": 995.4 },\n  { \"date\": \"2017-01-02\", \"value\": 1017.0 },\n  { \"date\": \"2017-01-03\", \"value\": 1033.3 },\n  { \"date\": \"2017-01-04\", \"value\": 1135.4 },\n  { \"date\": \"2017-01-05\", \"value\": 989.3 },\n  { \"date\": \"2017-01-06\", \"value\": 886.2 },\n  { \"date\": \"2017-01-07\", \"value\": 888.9 },\n  { \"date\": \"2017-01-08\", \"value\": 900.9 },\n  { \"date\": \"2017-01-09\", \"value\": 899.8 },\n  { \"date\": \"2017-01-10\", \"value\": 904.4 },\n  { \"date\": \"2017-01-11\", \"value\": 785.4 },\n  { \"date\": \"2017-01-12\", \"value\": 810.1 },\n  { \"date\": \"2017-01-13\", \"value\": 824.8 },\n  { \"date\": \"2017-01-14\", \"value\": 819.6 },\n  { \"date\": \"2017-01-15\", \"value\": 821.2 },\n  { \"date\": \"2017-01-16\", \"value\": 827.3 },\n  { \"date\": \"2017-01-17\", \"value\": 899.7 },\n  { \"date\": \"2017-01-18\", \"value\": 872.0 },\n  { \"date\": \"2017-01-19\", \"value\": 895.2 },\n  { \"date\": \"2017-01-20\", \"value\": 892.9 },\n  { \"date\": \"2017-01-21\", \"value\": 919.8 },\n  { \"date\": \"2017-01-22\", \"value\": 918.8 },\n  { \"date\": \"2017-01-23\", \"value\": 921.5 },\n  { \"date\": \"2017-01-24\", \"value\": 893.8 },\n  { \"date\": \"2017-01-25\", \"value\": 894.4 },\n  { \"date\": \"2017-01-26\", \"value\": 915.6 },\n  { \"date\": \"2017-01-27\", \"value\": 918.0 },\n  { \"date\": \"2017-01-28\", \"value\": 918.5 },\n  { \"date\": \"2017-01-29\", \"value\": 914.5 },\n  { \"date\": \"2017-01-30\", \"value\": 920.7 },\n  { \"date\": \"2017-01-31\", \"value\": 965.5 },\n  { \"date\": \"2017-02-01\", \"value\": 982.4 },\n  { \"date\": \"2017-02-02\", \"value\": 1004.0 },\n  { \"date\": \"2017-02-03\", \"value\": 1013.0 },\n  { \"date\": \"2017-02-04\", \"value\": 1031.8 },\n  { \"date\": \"2017-02-05\", \"value\": 1016.1 },\n  { \"date\": \"2017-02-06\", \"value\": 1024.7 },\n  { \"date\": \"2017-02-07\", \"value\": 1049.6 },\n  { \"date\": \"2017-02-08\", \"value\": 1055.5 },\n  { \"date\": \"2017-02-09\", \"value\": 979.0 },\n  { \"date\": \"2017-02-10\", \"value\": 997.6 },\n  { \"date\": \"2017-02-11\", \"value\": 1008.3 },\n  { \"date\": \"2017-02-12\", \"value\": 996.5 },\n  { \"date\": \"2017-02-13\", \"value\": 995.4 },\n  { \"date\": \"2017-02-14\", \"value\": 1008.3 },\n  { \"date\": \"2017-02-15\", \"value\": 1008.2 },\n  { \"date\": \"2017-02-16\", \"value\": 1031.9 },\n  { \"date\": \"2017-02-17\", \"value\": 1049.4 },\n  { \"date\": \"2017-02-18\", \"value\": 1052.3 },\n  { \"date\": \"2017-02-19\", \"value\": 1048.9 },\n  { \"date\": \"2017-02-20\", \"value\": 1077.6 },\n  { \"date\": \"2017-02-21\", \"value\": 1119.0 },\n  { \"date\": \"2017-02-22\", \"value\": 1120.5 },\n  { \"date\": \"2017-02-23\", \"value\": 1171.9 },\n  { \"date\": \"2017-02-24\", \"value\": 1176.5 },\n  { \"date\": \"2017-02-25\", \"value\": 1149.1 },\n  { \"date\": \"2017-02-26\", \"value\": 1171.6 },\n  { \"date\": \"2017-02-27\", \"value\": 1188.8 },\n  { \"date\": \"2017-02-28\", \"value\": 1189.3 },\n  { \"date\": \"2017-03-01\", \"value\": 1222.7 },\n  { \"date\": \"2017-03-02\", \"value\": 1255.5 },\n  { \"date\": \"2017-03-03\", \"value\": 1283.3 },\n  { \"date\": \"2017-03-04\", \"value\": 1264.3 },\n  { \"date\": \"2017-03-05\", \"value\": 1271.2 },\n  { \"date\": \"2017-03-06\", \"value\": 1277.0 },\n  { \"date\": \"2017-03-07\", \"value\": 1232.7 },\n  { \"date\": \"2017-03-08\", \"value\": 1147.0 },\n  { \"date\": \"2017-03-09\", \"value\": 1191.3 },\n  { \"date\": \"2017-03-10\", \"value\": 1112.4 },\n  { \"date\": \"2017-03-11\", \"value\": 1179.2 },\n  { \"date\": \"2017-03-12\", \"value\": 1225.1 },\n  { \"date\": \"2017-03-13\", \"value\": 1238.2 },\n  { \"date\": \"2017-03-14\", \"value\": 1243.1 },\n  { \"date\": \"2017-03-15\", \"value\": 1253.4 },\n  { \"date\": \"2017-03-16\", \"value\": 1172.9 },\n  { \"date\": \"2017-03-17\", \"value\": 1071.7 },\n  { \"date\": \"2017-03-18\", \"value\": 971.4 },\n  { \"date\": \"2017-03-19\", \"value\": 1022.6 },\n  { \"date\": \"2017-03-20\", \"value\": 1047.5 },\n  { \"date\": \"2017-03-21\", \"value\": 1121.3 },\n  { \"date\": \"2017-03-22\", \"value\": 1044.7 },\n  { \"date\": \"2017-03-23\", \"value\": 1035.0 },\n  { \"date\": \"2017-03-24\", \"value\": 939.7 },\n  { \"date\": \"2017-03-25\", \"value\": 966.3 },\n  { \"date\": \"2017-03-26\", \"value\": 969.4 },\n  { \"date\": \"2017-03-27\", \"value\": 1045.1 },\n  { \"date\": \"2017-03-28\", \"value\": 1044.4 },\n  { \"date\": \"2017-03-29\", \"value\": 1041.9 },\n  { \"date\": \"2017-03-30\", \"value\": 1037.9 },\n  { \"date\": \"2017-03-31\", \"value\": 1079.1 },\n  { \"date\": \"2017-04-01\", \"value\": 1086.1 },\n  { \"date\": \"2017-04-02\", \"value\": 1097.4 },\n  { \"date\": \"2017-04-03\", \"value\": 1147.6 },\n  { \"date\": \"2017-04-04\", \"value\": 1141.8 },\n  { \"date\": \"2017-04-05\", \"value\": 1129.9 },\n  { \"date\": \"2017-04-06\", \"value\": 1188.7 },\n  { \"date\": \"2017-04-07\", \"value\": 1190.5 },\n  { \"date\": \"2017-04-08\", \"value\": 1180.8 },\n  { \"date\": \"2017-04-09\", \"value\": 1204.3 },\n  { \"date\": \"2017-04-10\", \"value\": 1206.7 },\n  { \"date\": \"2017-04-11\", \"value\": 1220.7 },\n  { \"date\": \"2017-04-12\", \"value\": 1212.5 },\n  { \"date\": \"2017-04-13\", \"value\": 1176.2 },\n  { \"date\": \"2017-04-14\", \"value\": 1177.3 },\n  { \"date\": \"2017-04-15\", \"value\": 1177.0 },\n  { \"date\": \"2017-04-16\", \"value\": 1176.8 },\n  { \"date\": \"2017-04-17\", \"value\": 1194.0 },\n  { \"date\": \"2017-04-18\", \"value\": 1206.1 },\n  { \"date\": \"2017-04-19\", \"value\": 1215.2 },\n  { \"date\": \"2017-04-20\", \"value\": 1238.1 },\n  { \"date\": \"2017-04-21\", \"value\": 1249.6 },\n  { \"date\": \"2017-04-22\", \"value\": 1240.9 },\n  { \"date\": \"2017-04-23\", \"value\": 1249.1 },\n  { \"date\": \"2017-04-24\", \"value\": 1248.2 },\n  { \"date\": \"2017-04-25\", \"value\": 1264.3 },\n  { \"date\": \"2017-04-26\", \"value\": 1286.6 },\n  { \"date\": \"2017-04-27\", \"value\": 1332.9 },\n  { \"date\": \"2017-04-28\", \"value\": 1329.6 },\n  { \"date\": \"2017-04-29\", \"value\": 1336.3 },\n  { \"date\": \"2017-04-30\", \"value\": 1351.9 },\n  { \"date\": \"2017-05-01\", \"value\": 1415.8 },\n  { \"date\": \"2017-05-02\", \"value\": 1445.9 },\n  { \"date\": \"2017-05-03\", \"value\": 1485.6 },\n  { \"date\": \"2017-05-04\", \"value\": 1516.8 },\n  { \"date\": \"2017-05-05\", \"value\": 1507.8 },\n  { \"date\": \"2017-05-06\", \"value\": 1545.3 },\n  { \"date\": \"2017-05-07\", \"value\": 1554.4 },\n  { \"date\": \"2017-05-08\", \"value\": 1664.5 },\n  { \"date\": \"2017-05-09\", \"value\": 1697.5 },\n  { \"date\": \"2017-05-10\", \"value\": 1752.3 },\n  { \"date\": \"2017-05-11\", \"value\": 1819.3 },\n  { \"date\": \"2017-05-12\", \"value\": 1686.4 },\n  { \"date\": \"2017-05-13\", \"value\": 1763.7 },\n  { \"date\": \"2017-05-14\", \"value\": 1772.6 },\n  { \"date\": \"2017-05-15\", \"value\": 1708.9 },\n  { \"date\": \"2017-05-16\", \"value\": 1729.3 },\n  { \"date\": \"2017-05-17\", \"value\": 1801.3 },\n  { \"date\": \"2017-05-18\", \"value\": 1881.0 },\n  { \"date\": \"2017-05-19\", \"value\": 1962.0 },\n  { \"date\": \"2017-05-20\", \"value\": 2040.2 },\n  { \"date\": \"2017-05-21\", \"value\": 2044.2 },\n  { \"date\": \"2017-05-22\", \"value\": 2124.4 },\n  { \"date\": \"2017-05-23\", \"value\": 2272.6 },\n  { \"date\": \"2017-05-24\", \"value\": 2445.3 },\n  { \"date\": \"2017-05-25\", \"value\": 2307.2 },\n  { \"date\": \"2017-05-26\", \"value\": 2244.9 },\n  { \"date\": \"2017-05-27\", \"value\": 2052.4 },\n  { \"date\": \"2017-05-28\", \"value\": 2189.0 },\n  { \"date\": \"2017-05-29\", \"value\": 2278.2 },\n  { \"date\": \"2017-05-30\", \"value\": 2192.6 },\n  { \"date\": \"2017-05-31\", \"value\": 2303.3 },\n  { \"date\": \"2017-06-01\", \"value\": 2412.6 },\n  { \"date\": \"2017-06-02\", \"value\": 2492.6 },\n  { \"date\": \"2017-06-03\", \"value\": 2545.4 },\n  { \"date\": \"2017-06-04\", \"value\": 2524.1 },\n  { \"date\": \"2017-06-05\", \"value\": 2705.0 },\n  { \"date\": \"2017-06-06\", \"value\": 2870.5 },\n  { \"date\": \"2017-06-07\", \"value\": 2691.5 },\n  { \"date\": \"2017-06-08\", \"value\": 2798.8 },\n  { \"date\": \"2017-06-09\", \"value\": 2811.4 },\n  { \"date\": \"2017-06-10\", \"value\": 2900.3 },\n  { \"date\": \"2017-06-11\", \"value\": 2973.4 },\n  { \"date\": \"2017-06-12\", \"value\": 2656.8 },\n  { \"date\": \"2017-06-13\", \"value\": 2713.0 },\n  { \"date\": \"2017-06-14\", \"value\": 2467.3 },\n  { \"date\": \"2017-06-15\", \"value\": 2442.5 },\n  { \"date\": \"2017-06-16\", \"value\": 2508.6 },\n  { \"date\": \"2017-06-17\", \"value\": 2655.1 },\n  { \"date\": \"2017-06-18\", \"value\": 2539.6 },\n  { \"date\": \"2017-06-19\", \"value\": 2616.8 },\n  { \"date\": \"2017-06-20\", \"value\": 2754.4 },\n  { \"date\": \"2017-06-21\", \"value\": 2677.6 },\n  { \"date\": \"2017-06-22\", \"value\": 2722.8 },\n  { \"date\": \"2017-06-23\", \"value\": 2710.4 },\n  { \"date\": \"2017-06-24\", \"value\": 2590.1 },\n  { \"date\": \"2017-06-25\", \"value\": 2541.6 },\n  { \"date\": \"2017-06-26\", \"value\": 2446.1 },\n  { \"date\": \"2017-06-27\", \"value\": 2583.8 },\n  { \"date\": \"2017-06-28\", \"value\": 2577.7 },\n  { \"date\": \"2017-06-29\", \"value\": 2558.4 },\n  { \"date\": \"2017-06-30\", \"value\": 2480.6 },\n  { \"date\": \"2017-07-01\", \"value\": 2424.6 },\n  { \"date\": \"2017-07-02\", \"value\": 2536.5 },\n  { \"date\": \"2017-07-03\", \"value\": 2572.5 },\n  { \"date\": \"2017-07-04\", \"value\": 2617.3 },\n  { \"date\": \"2017-07-05\", \"value\": 2627.9 },\n  { \"date\": \"2017-07-06\", \"value\": 2614.2 },\n  { \"date\": \"2017-07-07\", \"value\": 2513.9 },\n  { \"date\": \"2017-07-08\", \"value\": 2564.9 },\n  { \"date\": \"2017-07-09\", \"value\": 2511.4 },\n  { \"date\": \"2017-07-10\", \"value\": 2344.0 },\n  { \"date\": \"2017-07-11\", \"value\": 2324.3 },\n  { \"date\": \"2017-07-12\", \"value\": 2403.1 },\n  { \"date\": \"2017-07-13\", \"value\": 2362.4 },\n  { \"date\": \"2017-07-14\", \"value\": 2234.2 },\n  { \"date\": \"2017-07-15\", \"value\": 1975.1 },\n  { \"date\": \"2017-07-16\", \"value\": 1914.1 },\n  { \"date\": \"2017-07-17\", \"value\": 2233.4 },\n  { \"date\": \"2017-07-18\", \"value\": 2320.2 },\n  { \"date\": \"2017-07-19\", \"value\": 2282.6 },\n  { \"date\": \"2017-07-20\", \"value\": 2866.0 },\n  { \"date\": \"2017-07-21\", \"value\": 2675.1 },\n  { \"date\": \"2017-07-22\", \"value\": 2836.5 },\n  { \"date\": \"2017-07-23\", \"value\": 2756.6 },\n  { \"date\": \"2017-07-24\", \"value\": 2763.4 },\n  { \"date\": \"2017-07-25\", \"value\": 2582.6 },\n  { \"date\": \"2017-07-26\", \"value\": 2559.2 },\n  { \"date\": \"2017-07-27\", \"value\": 2691.9 },\n  { \"date\": \"2017-07-28\", \"value\": 2806.8 },\n  { \"date\": \"2017-07-29\", \"value\": 2733.5 },\n  { \"date\": \"2017-07-30\", \"value\": 2766.5 },\n  { \"date\": \"2017-07-31\", \"value\": 2883.3 },\n  { \"date\": \"2017-08-01\", \"value\": 2747.0 },\n  { \"date\": \"2017-08-02\", \"value\": 2720.5 },\n  { \"date\": \"2017-08-03\", \"value\": 2810.0 },\n  { \"date\": \"2017-08-04\", \"value\": 2878.5 },\n  { \"date\": \"2017-08-05\", \"value\": 3262.8 },\n  { \"date\": \"2017-08-06\", \"value\": 3232.0 },\n  { \"date\": \"2017-08-07\", \"value\": 3401.9 },\n  { \"date\": \"2017-08-08\", \"value\": 3429.4 },\n  { \"date\": \"2017-08-09\", \"value\": 3348.8 },\n  { \"date\": \"2017-08-10\", \"value\": 3425.7 },\n  { \"date\": \"2017-08-11\", \"value\": 3654.4 },\n  { \"date\": \"2017-08-12\", \"value\": 3871.6 },\n  { \"date\": \"2017-08-13\", \"value\": 4062.6 },\n  { \"date\": \"2017-08-14\", \"value\": 4327.9 },\n  { \"date\": \"2017-08-15\", \"value\": 4161.7 },\n  { \"date\": \"2017-08-16\", \"value\": 4387.4 },\n  { \"date\": \"2017-08-17\", \"value\": 4278.9 },\n  { \"date\": \"2017-08-18\", \"value\": 4105.4 },\n  { \"date\": \"2017-08-19\", \"value\": 4150.5 },\n  { \"date\": \"2017-08-20\", \"value\": 4066.6 },\n  { \"date\": \"2017-08-21\", \"value\": 4005.1 },\n  { \"date\": \"2017-08-22\", \"value\": 4089.7 },\n  { \"date\": \"2017-08-23\", \"value\": 4141.1 },\n  { \"date\": \"2017-08-24\", \"value\": 4318.4 },\n  { \"date\": \"2017-08-25\", \"value\": 4364.4 },\n  { \"date\": \"2017-08-26\", \"value\": 4352.3 },\n  { \"date\": \"2017-08-27\", \"value\": 4345.8 },\n  { \"date\": \"2017-08-28\", \"value\": 4390.3 },\n  { \"date\": \"2017-08-29\", \"value\": 4597.3 },\n  { \"date\": \"2017-08-30\", \"value\": 4583.0 },\n  { \"date\": \"2017-08-31\", \"value\": 4735.1 },\n  { \"date\": \"2017-09-01\", \"value\": 4921.9 },\n  { \"date\": \"2017-09-02\", \"value\": 4573.8 },\n  { \"date\": \"2017-09-03\", \"value\": 4612.9 },\n  { \"date\": \"2017-09-04\", \"value\": 4267.5 },\n  { \"date\": \"2017-09-05\", \"value\": 4409.1 },\n  { \"date\": \"2017-09-06\", \"value\": 4618.7 },\n  { \"date\": \"2017-09-07\", \"value\": 4635.6 },\n  { \"date\": \"2017-09-08\", \"value\": 4326.5 },\n  { \"date\": \"2017-09-09\", \"value\": 4335.1 },\n  { \"date\": \"2017-09-10\", \"value\": 4245.9 },\n  { \"date\": \"2017-09-11\", \"value\": 4217.9 },\n  { \"date\": \"2017-09-12\", \"value\": 4158.9 },\n  { \"date\": \"2017-09-13\", \"value\": 3870.3 },\n  { \"date\": \"2017-09-14\", \"value\": 3243.1 },\n  { \"date\": \"2017-09-15\", \"value\": 3713.8 },\n  { \"date\": \"2017-09-16\", \"value\": 3698.9 },\n  { \"date\": \"2017-09-17\", \"value\": 3689.6 },\n  { \"date\": \"2017-09-18\", \"value\": 4100.3 },\n  { \"date\": \"2017-09-19\", \"value\": 3908.0 },\n  { \"date\": \"2017-09-20\", \"value\": 3882.2 },\n  { \"date\": \"2017-09-21\", \"value\": 3617.3 },\n  { \"date\": \"2017-09-22\", \"value\": 3600.8 },\n  { \"date\": \"2017-09-23\", \"value\": 3788.0 },\n  { \"date\": \"2017-09-24\", \"value\": 3667.5 },\n  { \"date\": \"2017-09-25\", \"value\": 3932.8 },\n  { \"date\": \"2017-09-26\", \"value\": 3892.7 },\n  { \"date\": \"2017-09-27\", \"value\": 4212.2 },\n  { \"date\": \"2017-09-28\", \"value\": 4195.6 },\n  { \"date\": \"2017-09-29\", \"value\": 4172.8 },\n  { \"date\": \"2017-09-30\", \"value\": 4360.6 },\n  { \"date\": \"2017-10-01\", \"value\": 4403.1 },\n  { \"date\": \"2017-10-02\", \"value\": 4401.3 },\n  { \"date\": \"2017-10-03\", \"value\": 4314.2 },\n  { \"date\": \"2017-10-04\", \"value\": 4218.7 },\n  { \"date\": \"2017-10-05\", \"value\": 4321.4 },\n  { \"date\": \"2017-10-06\", \"value\": 4371.9 },\n  { \"date\": \"2017-10-07\", \"value\": 4435.8 },\n  { \"date\": \"2017-10-08\", \"value\": 4611.7 },\n  { \"date\": \"2017-10-09\", \"value\": 4777.5 },\n  { \"date\": \"2017-10-10\", \"value\": 4763.4 },\n  { \"date\": \"2017-10-11\", \"value\": 4824.2 },\n  { \"date\": \"2017-10-12\", \"value\": 5432.6 },\n  { \"date\": \"2017-10-13\", \"value\": 5637.3 },\n  { \"date\": \"2017-10-14\", \"value\": 5824.7 },\n  { \"date\": \"2017-10-15\", \"value\": 5688.1 },\n  { \"date\": \"2017-10-16\", \"value\": 5759.3 },\n  { \"date\": \"2017-10-17\", \"value\": 5598.6 },\n  { \"date\": \"2017-10-18\", \"value\": 5575.8 },\n  { \"date\": \"2017-10-19\", \"value\": 5698.6 },\n  { \"date\": \"2017-10-20\", \"value\": 5993.1 },\n  { \"date\": \"2017-10-21\", \"value\": 6006.6 },\n  { \"date\": \"2017-10-22\", \"value\": 5982.9 },\n  { \"date\": \"2017-10-23\", \"value\": 5903.6 },\n  { \"date\": \"2017-10-24\", \"value\": 5513.1 },\n  { \"date\": \"2017-10-25\", \"value\": 5734.0 },\n  { \"date\": \"2017-10-26\", \"value\": 5887.6 },\n  { \"date\": \"2017-10-27\", \"value\": 5764.6 },\n  { \"date\": \"2017-10-28\", \"value\": 5726.6 },\n  { \"date\": \"2017-10-29\", \"value\": 6147.5 },\n  { \"date\": \"2017-10-30\", \"value\": 6124.3 },\n  { \"date\": \"2017-10-31\", \"value\": 6451.2 },\n  { \"date\": \"2017-11-01\", \"value\": 6737.8 },\n  { \"date\": \"2017-11-02\", \"value\": 7024.8 },\n  { \"date\": \"2017-11-03\", \"value\": 7152.1 },\n  { \"date\": \"2017-11-04\", \"value\": 7363.8 },\n  { \"date\": \"2017-11-05\", \"value\": 7389.5 },\n  { \"date\": \"2017-11-06\", \"value\": 6959.2 },\n  { \"date\": \"2017-11-07\", \"value\": 7102.8 },\n  { \"date\": \"2017-11-08\", \"value\": 7444.4 },\n  { \"date\": \"2017-11-09\", \"value\": 7129.6 },\n  { \"date\": \"2017-11-10\", \"value\": 6565.8 },\n  { \"date\": \"2017-11-11\", \"value\": 6339.9 },\n  { \"date\": \"2017-11-12\", \"value\": 5878.1 },\n  { \"date\": \"2017-11-13\", \"value\": 6522.5 },\n  { \"date\": \"2017-11-14\", \"value\": 6597.1 },\n  { \"date\": \"2017-11-15\", \"value\": 7283.2 },\n  { \"date\": \"2017-11-16\", \"value\": 7853.7 },\n  { \"date\": \"2017-11-17\", \"value\": 7700.0 },\n  { \"date\": \"2017-11-18\", \"value\": 7780.9 },\n  { \"date\": \"2017-11-19\", \"value\": 8042.6 },\n  { \"date\": \"2017-11-20\", \"value\": 8244.7 },\n  { \"date\": \"2017-11-21\", \"value\": 8100.0 },\n  { \"date\": \"2017-11-22\", \"value\": 8234.5 },\n  { \"date\": \"2017-11-23\", \"value\": 8013.4 },\n  { \"date\": \"2017-11-24\", \"value\": 8200.8 },\n  { \"date\": \"2017-11-25\", \"value\": 8754.7 },\n  { \"date\": \"2017-11-26\", \"value\": 9318.4 },\n  { \"date\": \"2017-11-27\", \"value\": 9733.2 },\n  { \"date\": \"2017-11-28\", \"value\": 9906.0 },\n  { \"date\": \"2017-11-29\", \"value\": 9837.9 },\n  { \"date\": \"2017-11-30\", \"value\": 9946.8 },\n  { \"date\": \"2017-12-01\", \"value\": 10861.5 },\n  { \"date\": \"2017-12-02\", \"value\": 10912.7 },\n  { \"date\": \"2017-12-03\", \"value\": 11246.2 },\n  { \"date\": \"2017-12-04\", \"value\": 11623.9 },\n  { \"date\": \"2017-12-05\", \"value\": 11667.1 },\n  { \"date\": \"2017-12-06\", \"value\": 13749.6 },\n  { \"date\": \"2017-12-07\", \"value\": 16850.3 },\n  { \"date\": \"2017-12-08\", \"value\": 16047.6 },\n  { \"date\": \"2017-12-09\", \"value\": 14843.4 },\n  { \"date\": \"2017-12-10\", \"value\": 15059.6 },\n  { \"date\": \"2017-12-11\", \"value\": 16732.5 },\n  { \"date\": \"2017-12-12\", \"value\": 17083.9 },\n  { \"date\": \"2017-12-13\", \"value\": 16286.8 },\n  { \"date\": \"2017-12-14\", \"value\": 16467.9 },\n  { \"date\": \"2017-12-15\", \"value\": 17604.8 },\n  { \"date\": \"2017-12-16\", \"value\": 19345.5 },\n  { \"date\": \"2017-12-17\", \"value\": 19065.7 },\n  { \"date\": \"2017-12-18\", \"value\": 18972.3 },\n  { \"date\": \"2017-12-19\", \"value\": 17523.7 },\n  { \"date\": \"2017-12-20\", \"value\": 16462.0 },\n  { \"date\": \"2017-12-21\", \"value\": 15632.1 },\n  { \"date\": \"2017-12-22\", \"value\": 13665.0 },\n  { \"date\": \"2017-12-23\", \"value\": 14396.5 },\n  { \"date\": \"2017-12-24\", \"value\": 13790.0 },\n  { \"date\": \"2017-12-25\", \"value\": 13833.5 },\n  { \"date\": \"2017-12-26\", \"value\": 15756.6 },\n  { \"date\": \"2017-12-27\", \"value\": 15416.6 },\n  { \"date\": \"2017-12-28\", \"value\": 14398.7 },\n  { \"date\": \"2017-12-29\", \"value\": 14392.6 },\n  { \"date\": \"2017-12-30\", \"value\": 12531.5 },\n  { \"date\": \"2017-12-31\", \"value\": 13850.4 },\n  { \"date\": \"2018-01-01\", \"value\": 13444.9 },\n  { \"date\": \"2018-01-02\", \"value\": 14754.1 },\n  { \"date\": \"2018-01-03\", \"value\": 15156.6 },\n  { \"date\": \"2018-01-04\", \"value\": 15180.1 },\n  { \"date\": \"2018-01-05\", \"value\": 16954.8 },\n  { \"date\": \"2018-01-06\", \"value\": 17172.3 },\n  { \"date\": \"2018-01-07\", \"value\": 16228.2 },\n  { \"date\": \"2018-01-08\", \"value\": 14976.2 },\n  { \"date\": \"2018-01-09\", \"value\": 14778.5 },\n  { \"date\": \"2018-01-10\", \"value\": 15043.0 },\n  { \"date\": \"2018-01-11\", \"value\": 13535.4 },\n  { \"date\": \"2018-01-12\", \"value\": 13886.7 },\n  { \"date\": \"2018-01-13\", \"value\": 14292.2 },\n  { \"date\": \"2018-01-14\", \"value\": 13695.2 },\n  { \"date\": \"2018-01-15\", \"value\": 13697.5 },\n  { \"date\": \"2018-01-16\", \"value\": 11362.0 },\n  { \"date\": \"2018-01-17\", \"value\": 11192.3 },\n  { \"date\": \"2018-01-18\", \"value\": 11245.4 },\n  { \"date\": \"2018-01-19\", \"value\": 11580.2 },\n  { \"date\": \"2018-01-20\", \"value\": 12858.9 },\n  { \"date\": \"2018-01-21\", \"value\": 11594.9 },\n  { \"date\": \"2018-01-22\", \"value\": 10864.8 },\n  { \"date\": \"2018-01-23\", \"value\": 10903.2 },\n  { \"date\": \"2018-01-24\", \"value\": 11452.3 },\n  { \"date\": \"2018-01-25\", \"value\": 11203.0 },\n  { \"date\": \"2018-01-26\", \"value\": 11118.1 },\n  { \"date\": \"2018-01-27\", \"value\": 11467.5 },\n  { \"date\": \"2018-01-28\", \"value\": 11795.1 },\n  { \"date\": \"2018-01-29\", \"value\": 11244.8 },\n  { \"date\": \"2018-01-30\", \"value\": 10166.0 },\n  { \"date\": \"2018-01-31\", \"value\": 10265.4 },\n  { \"date\": \"2018-02-01\", \"value\": 9181.1 },\n  { \"date\": \"2018-02-02\", \"value\": 8893.2 },\n  { \"date\": \"2018-02-03\", \"value\": 9241.1 },\n  { \"date\": \"2018-02-04\", \"value\": 8222.2 },\n  { \"date\": \"2018-02-05\", \"value\": 6938.5 },\n  { \"date\": \"2018-02-06\", \"value\": 7701.2 },\n  { \"date\": \"2018-02-07\", \"value\": 7594.7 },\n  { \"date\": \"2018-02-08\", \"value\": 8164.2 },\n  { \"date\": \"2018-02-09\", \"value\": 8699.8 },\n  { \"date\": \"2018-02-10\", \"value\": 8559.6 },\n  { \"date\": \"2018-02-11\", \"value\": 8081.9 },\n  { \"date\": \"2018-02-12\", \"value\": 8903.5 },\n  { \"date\": \"2018-02-13\", \"value\": 8539.2 },\n  { \"date\": \"2018-02-14\", \"value\": 9476.3 },\n  { \"date\": \"2018-02-15\", \"value\": 10037.3 },\n  { \"date\": \"2018-02-16\", \"value\": 10178.7 },\n  { \"date\": \"2018-02-17\", \"value\": 11073.5 },\n  { \"date\": \"2018-02-18\", \"value\": 10398.8 },\n  { \"date\": \"2018-02-19\", \"value\": 11169.4 },\n  { \"date\": \"2018-02-20\", \"value\": 11238.7 },\n  { \"date\": \"2018-02-21\", \"value\": 10473.0 },\n  { \"date\": \"2018-02-22\", \"value\": 9841.7 },\n  { \"date\": \"2018-02-23\", \"value\": 10170.4 },\n  { \"date\": \"2018-02-24\", \"value\": 9704.3 },\n  { \"date\": \"2018-02-25\", \"value\": 9585.2 },\n  { \"date\": \"2018-02-26\", \"value\": 10285.1 },\n  { \"date\": \"2018-02-27\", \"value\": 10594.4 },\n  { \"date\": \"2018-02-28\", \"value\": 10333.9 },\n  { \"date\": \"2018-03-01\", \"value\": 10904.5 },\n  { \"date\": \"2018-03-02\", \"value\": 10827.7 },\n  { \"date\": \"2018-03-03\", \"value\": 11402.3 },\n  { \"date\": \"2018-03-04\", \"value\": 11416.5 },\n  { \"date\": \"2018-03-05\", \"value\": 11330.6 },\n  { \"date\": \"2018-03-06\", \"value\": 10675.1 },\n  { \"date\": \"2018-03-07\", \"value\": 9902.9 },\n  { \"date\": \"2018-03-08\", \"value\": 9300.0 },\n  { \"date\": \"2018-03-09\", \"value\": 9217.0 },\n  { \"date\": \"2018-03-10\", \"value\": 8762.0 },\n  { \"date\": \"2018-03-11\", \"value\": 9529.6 },\n  { \"date\": \"2018-03-12\", \"value\": 9137.4 },\n  { \"date\": \"2018-03-13\", \"value\": 9154.9 },\n  { \"date\": \"2018-03-14\", \"value\": 8210.6 },\n  { \"date\": \"2018-03-15\", \"value\": 8264.4 },\n  { \"date\": \"2018-03-16\", \"value\": 8289.2 },\n  { \"date\": \"2018-03-17\", \"value\": 7874.9 },\n  { \"date\": \"2018-03-18\", \"value\": 8201.2 },\n  { \"date\": \"2018-03-19\", \"value\": 8616.8 },\n  { \"date\": \"2018-03-20\", \"value\": 8912.6 },\n  { \"date\": \"2018-03-21\", \"value\": 8905.9 },\n  { \"date\": \"2018-03-22\", \"value\": 8726.2 },\n  { \"date\": \"2018-03-23\", \"value\": 8916.8 },\n  { \"date\": \"2018-03-24\", \"value\": 8547.4 },\n  { \"date\": \"2018-03-25\", \"value\": 8473.2 },\n  { \"date\": \"2018-03-26\", \"value\": 8143.5 },\n  { \"date\": \"2018-03-27\", \"value\": 7801.7 },\n  { \"date\": \"2018-03-28\", \"value\": 7954.9 },\n  { \"date\": \"2018-03-29\", \"value\": 7129.2 },\n  { \"date\": \"2018-03-30\", \"value\": 6853.7 },\n  { \"date\": \"2018-03-31\", \"value\": 6938.2 },\n  { \"date\": \"2018-04-01\", \"value\": 6825.2 },\n  { \"date\": \"2018-04-02\", \"value\": 7068.4 },\n  { \"date\": \"2018-04-03\", \"value\": 7424.2 },\n  { \"date\": \"2018-04-04\", \"value\": 6808.9 },\n  { \"date\": \"2018-04-05\", \"value\": 6782.0 },\n  { \"date\": \"2018-04-06\", \"value\": 6624.3 },\n  { \"date\": \"2018-04-07\", \"value\": 6905.7 },\n  { \"date\": \"2018-04-08\", \"value\": 7030.5 },\n  { \"date\": \"2018-04-09\", \"value\": 6781.9 },\n  { \"date\": \"2018-04-10\", \"value\": 6854.8 },\n  { \"date\": \"2018-04-11\", \"value\": 6962.1 },\n  { \"date\": \"2018-04-12\", \"value\": 7926.6 },\n  { \"date\": \"2018-04-13\", \"value\": 7887.4 },\n  { \"date\": \"2018-04-14\", \"value\": 8004.4 },\n  { \"date\": \"2018-04-15\", \"value\": 8363.6 },\n  { \"date\": \"2018-04-16\", \"value\": 8070.0 },\n  { \"date\": \"2018-04-17\", \"value\": 7908.6 },\n  { \"date\": \"2018-04-18\", \"value\": 8178.4 },\n  { \"date\": \"2018-04-19\", \"value\": 8290.8 },\n  { \"date\": \"2018-04-20\", \"value\": 8867.0 },\n  { \"date\": \"2018-04-21\", \"value\": 8923.1 },\n  { \"date\": \"2018-04-22\", \"value\": 8806.7 },\n  { \"date\": \"2018-04-23\", \"value\": 8952.8 },\n  { \"date\": \"2018-04-24\", \"value\": 9645.3 },\n  { \"date\": \"2018-04-25\", \"value\": 8873.1 },\n  { \"date\": \"2018-04-26\", \"value\": 9287.0 },\n  { \"date\": \"2018-04-27\", \"value\": 8940.9 },\n  { \"date\": \"2018-04-28\", \"value\": 9352.4 },\n  { \"date\": \"2018-04-29\", \"value\": 9415.1 },\n  { \"date\": \"2018-04-30\", \"value\": 9245.1 },\n  { \"date\": \"2018-05-01\", \"value\": 9074.9 },\n  { \"date\": \"2018-05-02\", \"value\": 9243.2 },\n  { \"date\": \"2018-05-03\", \"value\": 9749.7 },\n  { \"date\": \"2018-05-04\", \"value\": 9708.6 },\n  { \"date\": \"2018-05-05\", \"value\": 9853.5 },\n  { \"date\": \"2018-05-06\", \"value\": 9656.4 },\n  { \"date\": \"2018-05-07\", \"value\": 9431.6 },\n  { \"date\": \"2018-05-08\", \"value\": 9196.4 },\n  { \"date\": \"2018-05-09\", \"value\": 9319.1 },\n  { \"date\": \"2018-05-10\", \"value\": 9025.7 },\n  { \"date\": \"2018-05-11\", \"value\": 8408.3 },\n  { \"date\": \"2018-05-12\", \"value\": 8459.5 },\n  { \"date\": \"2018-05-13\", \"value\": 8693.5 },\n  { \"date\": \"2018-05-14\", \"value\": 8674.1 },\n  { \"date\": \"2018-05-15\", \"value\": 8477.0 },\n  { \"date\": \"2018-05-16\", \"value\": 8344.4 },\n  { \"date\": \"2018-05-17\", \"value\": 8063.0 },\n  { \"date\": \"2018-05-18\", \"value\": 8245.7 },\n  { \"date\": \"2018-05-19\", \"value\": 8245.1 },\n  { \"date\": \"2018-05-20\", \"value\": 8529.0 },\n  { \"date\": \"2018-05-21\", \"value\": 8403.3 },\n  { \"date\": \"2018-05-22\", \"value\": 8006.0 },\n  { \"date\": \"2018-05-23\", \"value\": 7512.3 },\n  { \"date\": \"2018-05-24\", \"value\": 7592.9 },\n  { \"date\": \"2018-05-25\", \"value\": 7477.7 },\n  { \"date\": \"2018-05-26\", \"value\": 7361.3 },\n  { \"date\": \"2018-05-27\", \"value\": 7366.7 },\n  { \"date\": \"2018-05-28\", \"value\": 7119.3 },\n  { \"date\": \"2018-05-29\", \"value\": 7467.7 },\n  { \"date\": \"2018-05-30\", \"value\": 7400.1 },\n  { \"date\": \"2018-05-31\", \"value\": 7502.6 },\n  { \"date\": \"2018-06-01\", \"value\": 7530.8 },\n  { \"date\": \"2018-06-02\", \"value\": 7646.6 },\n  { \"date\": \"2018-06-03\", \"value\": 7729.3 },\n  { \"date\": \"2018-06-04\", \"value\": 7504.3 },\n  { \"date\": \"2018-06-05\", \"value\": 7631.5 },\n  { \"date\": \"2018-06-06\", \"value\": 7661.0 },\n  { \"date\": \"2018-06-07\", \"value\": 7697.8 },\n  { \"date\": \"2018-06-08\", \"value\": 7622.1 },\n  { \"date\": \"2018-06-09\", \"value\": 7515.8 },\n  { \"date\": \"2018-06-10\", \"value\": 6775.1 },\n  { \"date\": \"2018-06-11\", \"value\": 6885.9 },\n  { \"date\": \"2018-06-12\", \"value\": 6558.2 },\n  { \"date\": \"2018-06-13\", \"value\": 6312.3 },\n  { \"date\": \"2018-06-14\", \"value\": 6647.1 },\n  { \"date\": \"2018-06-15\", \"value\": 6410.3 },\n  { \"date\": \"2018-06-16\", \"value\": 6505.8 },\n  { \"date\": \"2018-06-17\", \"value\": 6460.3 },\n  { \"date\": \"2018-06-18\", \"value\": 6719.8 },\n  { \"date\": \"2018-06-19\", \"value\": 6752.4 },\n  { \"date\": \"2018-06-20\", \"value\": 6765.4 },\n  { \"date\": \"2018-06-21\", \"value\": 6728.0 },\n  { \"date\": \"2018-06-22\", \"value\": 6055.7 },\n  { \"date\": \"2018-06-23\", \"value\": 6167.3 },\n  { \"date\": \"2018-06-24\", \"value\": 6154.6 },\n  { \"date\": \"2018-06-25\", \"value\": 6256.6 },\n  { \"date\": \"2018-06-26\", \"value\": 6082.1 },\n  { \"date\": \"2018-06-27\", \"value\": 6154.9 },\n  { \"date\": \"2018-06-28\", \"value\": 5883.5 },\n  { \"date\": \"2018-06-29\", \"value\": 6213.3 },\n  { \"date\": \"2018-06-30\", \"value\": 6398.9 },\n  { \"date\": \"2018-07-01\", \"value\": 6366.8 },\n  { \"date\": \"2018-07-02\", \"value\": 6619.5 },\n  { \"date\": \"2018-07-03\", \"value\": 6513.5 },\n  { \"date\": \"2018-07-04\", \"value\": 6598.4 },\n  { \"date\": \"2018-07-05\", \"value\": 6546.5 },\n  { \"date\": \"2018-07-06\", \"value\": 6617.7 },\n  { \"date\": \"2018-07-07\", \"value\": 6765.5 },\n  { \"date\": \"2018-07-08\", \"value\": 6714.8 },\n  { \"date\": \"2018-07-09\", \"value\": 6667.1 },\n  { \"date\": \"2018-07-10\", \"value\": 6307.2 },\n  { \"date\": \"2018-07-11\", \"value\": 6389.1 },\n  { \"date\": \"2018-07-12\", \"value\": 6250.6 },\n  { \"date\": \"2018-07-13\", \"value\": 6230.2 },\n  { \"date\": \"2018-07-14\", \"value\": 6254.8 },\n  { \"date\": \"2018-07-15\", \"value\": 6362.9 },\n  { \"date\": \"2018-07-16\", \"value\": 6729.9 },\n  { \"date\": \"2018-07-17\", \"value\": 7322.0 },\n  { \"date\": \"2018-07-18\", \"value\": 7383.6 },\n  { \"date\": \"2018-07-19\", \"value\": 7477.5 },\n  { \"date\": \"2018-07-20\", \"value\": 7339.4 },\n  { \"date\": \"2018-07-21\", \"value\": 7408.7 },\n  { \"date\": \"2018-07-22\", \"value\": 7412.3 },\n  { \"date\": \"2018-07-23\", \"value\": 7723.0 },\n  { \"date\": \"2018-07-24\", \"value\": 8407.0 },\n  { \"date\": \"2018-07-25\", \"value\": 8173.7 },\n  { \"date\": \"2018-07-26\", \"value\": 7937.0 },\n  { \"date\": \"2018-07-27\", \"value\": 8187.4 },\n  { \"date\": \"2018-07-28\", \"value\": 8234.1 },\n  { \"date\": \"2018-07-29\", \"value\": 8215.6 },\n  { \"date\": \"2018-07-30\", \"value\": 8177.1 },\n  { \"date\": \"2018-07-31\", \"value\": 7729.4 },\n  { \"date\": \"2018-08-01\", \"value\": 7606.4 },\n  { \"date\": \"2018-08-02\", \"value\": 7535.6 },\n  { \"date\": \"2018-08-03\", \"value\": 7419.0 },\n  { \"date\": \"2018-08-04\", \"value\": 7014.3 },\n  { \"date\": \"2018-08-05\", \"value\": 7027.1 },\n  { \"date\": \"2018-08-06\", \"value\": 6943.6 },\n  { \"date\": \"2018-08-07\", \"value\": 6724.9 },\n  { \"date\": \"2018-08-08\", \"value\": 6283.6 },\n  { \"date\": \"2018-08-09\", \"value\": 6538.8 },\n  { \"date\": \"2018-08-10\", \"value\": 6152.3 },\n  { \"date\": \"2018-08-11\", \"value\": 6231.6 },\n  { \"date\": \"2018-08-12\", \"value\": 6313.0 },\n  { \"date\": \"2018-08-13\", \"value\": 6255.3 },\n  { \"date\": \"2018-08-14\", \"value\": 6190.2 },\n  { \"date\": \"2018-08-15\", \"value\": 6256.9 },\n  { \"date\": \"2018-08-16\", \"value\": 6306.7 },\n  { \"date\": \"2018-08-17\", \"value\": 6581.7 },\n  { \"date\": \"2018-08-18\", \"value\": 6379.1 },\n  { \"date\": \"2018-08-19\", \"value\": 6481.5 },\n  { \"date\": \"2018-08-20\", \"value\": 6268.1 },\n  { \"date\": \"2018-08-21\", \"value\": 6482.2 },\n  { \"date\": \"2018-08-22\", \"value\": 6359.6 },\n  { \"date\": \"2018-08-23\", \"value\": 6521.2 },\n  { \"date\": \"2018-08-24\", \"value\": 6680.4 },\n  { \"date\": \"2018-08-25\", \"value\": 6734.8 },\n  { \"date\": \"2018-08-26\", \"value\": 6712.7 },\n  { \"date\": \"2018-08-27\", \"value\": 6897.6 },\n  { \"date\": \"2018-08-28\", \"value\": 7074.6 },\n  { \"date\": \"2018-08-29\", \"value\": 7029.1 },\n  { \"date\": \"2018-08-30\", \"value\": 6993.7 },\n  { \"date\": \"2018-08-31\", \"value\": 7033.8 },\n  { \"date\": \"2018-09-01\", \"value\": 7189.6 },\n  { \"date\": \"2018-09-02\", \"value\": 7293.9 },\n  { \"date\": \"2018-09-03\", \"value\": 7264.2 },\n  { \"date\": \"2018-09-04\", \"value\": 7377.5 },\n  { \"date\": \"2018-09-05\", \"value\": 6706.8 },\n  { \"date\": \"2018-09-06\", \"value\": 6514.0 },\n  { \"date\": \"2018-09-07\", \"value\": 6390.9 },\n  { \"date\": \"2018-09-08\", \"value\": 6184.3 },\n  { \"date\": \"2018-09-09\", \"value\": 6238.5 },\n  { \"date\": \"2018-09-10\", \"value\": 6321.0 },\n  { \"date\": \"2018-09-11\", \"value\": 6293.9 },\n  { \"date\": \"2018-09-12\", \"value\": 6338.0 },\n  { \"date\": \"2018-09-13\", \"value\": 6482.9 },\n  { \"date\": \"2018-09-14\", \"value\": 6483.7 },\n  { \"date\": \"2018-09-15\", \"value\": 6519.0 },\n  { \"date\": \"2018-09-16\", \"value\": 6500.2 },\n  { \"date\": \"2018-09-17\", \"value\": 6251.9 },\n  { \"date\": \"2018-09-18\", \"value\": 6342.0 },\n  { \"date\": \"2018-09-19\", \"value\": 6390.4 },\n  { \"date\": \"2018-09-20\", \"value\": 6489.2 },\n  { \"date\": \"2018-09-21\", \"value\": 6766.7 },\n  { \"date\": \"2018-09-22\", \"value\": 6729.6 },\n  { \"date\": \"2018-09-23\", \"value\": 6704.1 },\n  { \"date\": \"2018-09-24\", \"value\": 6584.1 },\n  { \"date\": \"2018-09-25\", \"value\": 6445.1 },\n  { \"date\": \"2018-09-26\", \"value\": 6468.1 },\n  { \"date\": \"2018-09-27\", \"value\": 6689.2 },\n  { \"date\": \"2018-09-28\", \"value\": 6636.0 },\n  { \"date\": \"2018-09-29\", \"value\": 6603.9 },\n  { \"date\": \"2018-09-30\", \"value\": 6635.2 },\n  { \"date\": \"2018-10-01\", \"value\": 6608.2 },\n  { \"date\": \"2018-10-02\", \"value\": 6549.9 },\n  { \"date\": \"2018-10-03\", \"value\": 6507.8 },\n  { \"date\": \"2018-10-04\", \"value\": 6584.2 },\n  { \"date\": \"2018-10-05\", \"value\": 6639.1 },\n  { \"date\": \"2018-10-06\", \"value\": 6596.3 },\n  { \"date\": \"2018-10-07\", \"value\": 6611.0 },\n  { \"date\": \"2018-10-08\", \"value\": 6669.6 },\n  { \"date\": \"2018-10-09\", \"value\": 6650.8 },\n  { \"date\": \"2018-10-10\", \"value\": 6618.0 },\n  { \"date\": \"2018-10-11\", \"value\": 6239.1 },\n  { \"date\": \"2018-10-12\", \"value\": 6291.3 },\n  { \"date\": \"2018-10-13\", \"value\": 6321.7 },\n  { \"date\": \"2018-10-14\", \"value\": 6326.8 },\n  { \"date\": \"2018-10-15\", \"value\": 6699.8 },\n  { \"date\": \"2018-10-16\", \"value\": 6705.3 },\n  { \"date\": \"2018-10-17\", \"value\": 6686.6 },\n  { \"date\": \"2018-10-18\", \"value\": 6574.1 },\n  { \"date\": \"2018-10-19\", \"value\": 6512.0 },\n  { \"date\": \"2018-10-20\", \"value\": 6572.2 },\n  { \"date\": \"2018-10-21\", \"value\": 6583.0 },\n  { \"date\": \"2018-10-22\", \"value\": 6555.8 },\n  { \"date\": \"2018-10-23\", \"value\": 6528.7 },\n  { \"date\": \"2018-10-24\", \"value\": 6530.7 },\n  { \"date\": \"2018-10-25\", \"value\": 6507.0 },\n  { \"date\": \"2018-10-26\", \"value\": 6510.0 },\n  { \"date\": \"2018-10-27\", \"value\": 6494.2 },\n  { \"date\": \"2018-10-28\", \"value\": 6486.1 },\n  { \"date\": \"2018-10-29\", \"value\": 6335.0 },\n  { \"date\": \"2018-10-30\", \"value\": 6325.7 },\n  { \"date\": \"2018-10-31\", \"value\": 6365.9 },\n  { \"date\": \"2018-11-01\", \"value\": 6400.5 },\n  { \"date\": \"2018-11-02\", \"value\": 6424.7 },\n  { \"date\": \"2018-11-03\", \"value\": 6386.2 },\n  { \"date\": \"2018-11-04\", \"value\": 6478.2 },\n  { \"date\": \"2018-11-05\", \"value\": 6459.7 },\n  { \"date\": \"2018-11-06\", \"value\": 6502.8 },\n  { \"date\": \"2018-11-07\", \"value\": 6565.3 },\n  { \"date\": \"2018-11-08\", \"value\": 6474.0 },\n  { \"date\": \"2018-11-09\", \"value\": 6412.0 },\n  { \"date\": \"2018-11-10\", \"value\": 6427.1 },\n  { \"date\": \"2018-11-11\", \"value\": 6446.1 },\n  { \"date\": \"2018-11-12\", \"value\": 6435.0 },\n  { \"date\": \"2018-11-13\", \"value\": 6429.2 },\n  { \"date\": \"2018-11-14\", \"value\": 5842.4 },\n  { \"date\": \"2018-11-15\", \"value\": 5718.9 },\n  { \"date\": \"2018-11-16\", \"value\": 5636.2 },\n  { \"date\": \"2018-11-17\", \"value\": 5621.8 },\n  { \"date\": \"2018-11-18\", \"value\": 5658.3 },\n  { \"date\": \"2018-11-19\", \"value\": 4883.8 },\n  { \"date\": \"2018-11-20\", \"value\": 4524.6 },\n  { \"date\": \"2018-11-21\", \"value\": 4638.7 },\n  { \"date\": \"2018-11-22\", \"value\": 4356.0 },\n  { \"date\": \"2018-11-23\", \"value\": 4398.0 },\n  { \"date\": \"2018-11-24\", \"value\": 3920.4 },\n  { \"date\": \"2018-11-25\", \"value\": 4062.2 },\n  { \"date\": \"2018-11-26\", \"value\": 3837.0 },\n  { \"date\": \"2018-11-27\", \"value\": 3866.5 },\n  { \"date\": \"2018-11-28\", \"value\": 4265.4 },\n  { \"date\": \"2018-11-29\", \"value\": 4296.5 },\n  { \"date\": \"2018-11-30\", \"value\": 4039.7 },\n  { \"date\": \"2018-12-01\", \"value\": 4196.2 },\n  { \"date\": \"2018-12-02\", \"value\": 4160.4 },\n  { \"date\": \"2018-12-03\", \"value\": 3897.8 },\n  { \"date\": \"2018-12-04\", \"value\": 3958.5 },\n  { \"date\": \"2018-12-05\", \"value\": 3771.6 },\n  { \"date\": \"2018-12-06\", \"value\": 3508.6 },\n  { \"date\": \"2018-12-07\", \"value\": 3422.2 },\n  { \"date\": \"2018-12-08\", \"value\": 3430.4 },\n  { \"date\": \"2018-12-09\", \"value\": 3567.5 },\n  { \"date\": \"2018-12-10\", \"value\": 3460.5 },\n  { \"date\": \"2018-12-11\", \"value\": 3407.7 },\n  { \"date\": \"2018-12-12\", \"value\": 3466.1 },\n  { \"date\": \"2018-12-13\", \"value\": 3315.3 },\n  { \"date\": \"2018-12-14\", \"value\": 3247.8 },\n  { \"date\": \"2018-12-15\", \"value\": 3228.7 },\n  { \"date\": \"2018-12-16\", \"value\": 3247.9 },\n  { \"date\": \"2018-12-17\", \"value\": 3526.1 },\n  { \"date\": \"2018-12-18\", \"value\": 3668.0 },\n  { \"date\": \"2018-12-19\", \"value\": 3687.1 },\n  { \"date\": \"2018-12-20\", \"value\": 4076.0 },\n  { \"date\": \"2018-12-21\", \"value\": 3850.9 },\n  { \"date\": \"2018-12-22\", \"value\": 3964.4 },\n  { \"date\": \"2018-12-23\", \"value\": 3944.4 },\n  { \"date\": \"2018-12-24\", \"value\": 4026.1 },\n  { \"date\": \"2018-12-25\", \"value\": 3762.5 },\n  { \"date\": \"2018-12-26\", \"value\": 3793.7 },\n  { \"date\": \"2018-12-27\", \"value\": 3586.9 },\n  { \"date\": \"2018-12-28\", \"value\": 3861.6 },\n  { \"date\": \"2018-12-29\", \"value\": 3706.8 },\n  { \"date\": \"2018-12-30\", \"value\": 3815.0 },\n  { \"date\": \"2018-12-31\", \"value\": 3709.4 },\n  { \"date\": \"2019-01-01\", \"value\": 3809.4 },\n  { \"date\": \"2019-01-02\", \"value\": 3873.8 },\n  { \"date\": \"2019-01-03\", \"value\": 3780.1 },\n  { \"date\": \"2019-01-04\", \"value\": 3802.7 },\n  { \"date\": \"2019-01-05\", \"value\": 3785.4 },\n  { \"date\": \"2019-01-06\", \"value\": 4004.1 },\n  { \"date\": \"2019-01-07\", \"value\": 3985.9 },\n  { \"date\": \"2019-01-08\", \"value\": 3971.0 },\n  { \"date\": \"2019-01-09\", \"value\": 3978.0 },\n  { \"date\": \"2019-01-10\", \"value\": 3603.7 },\n  { \"date\": \"2019-01-11\", \"value\": 3616.5 },\n  { \"date\": \"2019-01-12\", \"value\": 3597.2 },\n  { \"date\": \"2019-01-13\", \"value\": 3490.2 },\n  { \"date\": \"2019-01-14\", \"value\": 3638.1 },\n  { \"date\": \"2019-01-15\", \"value\": 3571.3 },\n  { \"date\": \"2019-01-16\", \"value\": 3588.0 },\n  { \"date\": \"2019-01-17\", \"value\": 3626.4 },\n  { \"date\": \"2019-01-18\", \"value\": 3605.6 },\n  { \"date\": \"2019-01-19\", \"value\": 3677.8 },\n  { \"date\": \"2019-01-20\", \"value\": 3542.3 },\n  { \"date\": \"2019-01-21\", \"value\": 3536.7 },\n  { \"date\": \"2019-01-22\", \"value\": 3580.1 },\n  { \"date\": \"2019-01-23\", \"value\": 3561.5 },\n  { \"date\": \"2019-01-24\", \"value\": 3574.3 },\n  { \"date\": \"2019-01-25\", \"value\": 3572.0 },\n  { \"date\": \"2019-01-26\", \"value\": 3570.9 },\n  { \"date\": \"2019-01-27\", \"value\": 3555.6 },\n  { \"date\": \"2019-01-28\", \"value\": 3442.8 },\n  { \"date\": \"2019-01-29\", \"value\": 3414.8 },\n  { \"date\": \"2019-01-30\", \"value\": 3460.0 },\n  { \"date\": \"2019-01-31\", \"value\": 3437.2 },\n  { \"date\": \"2019-02-01\", \"value\": 3467.9 },\n  { \"date\": \"2019-02-02\", \"value\": 3502.5 },\n  { \"date\": \"2019-02-03\", \"value\": 3459.1 },\n  { \"date\": \"2019-02-04\", \"value\": 3462.8 },\n  { \"date\": \"2019-02-05\", \"value\": 3468.4 },\n  { \"date\": \"2019-02-06\", \"value\": 3404.3 },\n  { \"date\": \"2019-02-07\", \"value\": 3397.7 },\n  { \"date\": \"2019-02-08\", \"value\": 3661.7 },\n  { \"date\": \"2019-02-09\", \"value\": 3661.4 },\n  { \"date\": \"2019-02-10\", \"value\": 3679.0 },\n  { \"date\": \"2019-02-11\", \"value\": 3631.8 },\n  { \"date\": \"2019-02-12\", \"value\": 3632.0 },\n  { \"date\": \"2019-02-13\", \"value\": 3611.5 },\n  { \"date\": \"2019-02-14\", \"value\": 3592.6 },\n  { \"date\": \"2019-02-15\", \"value\": 3604.7 },\n  { \"date\": \"2019-02-16\", \"value\": 3616.8 },\n  { \"date\": \"2019-02-17\", \"value\": 3664.2 },\n  { \"date\": \"2019-02-18\", \"value\": 3896.0 },\n  { \"date\": \"2019-02-19\", \"value\": 3914.3 },\n  { \"date\": \"2019-02-20\", \"value\": 3972.4 },\n  { \"date\": \"2019-02-21\", \"value\": 3936.6 },\n  { \"date\": \"2019-02-22\", \"value\": 3965.2 },\n  { \"date\": \"2019-02-23\", \"value\": 4120.4 },\n  { \"date\": \"2019-02-24\", \"value\": 3755.2 },\n  { \"date\": \"2019-02-25\", \"value\": 3833.7 },\n  { \"date\": \"2019-02-26\", \"value\": 3810.3 },\n  { \"date\": \"2019-02-27\", \"value\": 3814.6 },\n  { \"date\": \"2019-02-28\", \"value\": 3816.6 },\n  { \"date\": \"2019-03-01\", \"value\": 3821.9 },\n  { \"date\": \"2019-03-02\", \"value\": 3823.1 },\n  { \"date\": \"2019-03-03\", \"value\": 3809.5 },\n  { \"date\": \"2019-03-04\", \"value\": 3715.9 },\n  { \"date\": \"2019-03-05\", \"value\": 3857.2 },\n  { \"date\": \"2019-03-06\", \"value\": 3863.0 },\n  { \"date\": \"2019-03-07\", \"value\": 3875.1 },\n  { \"date\": \"2019-03-08\", \"value\": 3865.9 },\n  { \"date\": \"2019-03-09\", \"value\": 3944.3 },\n  { \"date\": \"2019-03-10\", \"value\": 3915.2 },\n  { \"date\": \"2019-03-11\", \"value\": 3870.3 },\n  { \"date\": \"2019-03-12\", \"value\": 3886.0 },\n  { \"date\": \"2019-03-13\", \"value\": 3865.1 },\n  { \"date\": \"2019-03-14\", \"value\": 3879.0 },\n  { \"date\": \"2019-03-15\", \"value\": 3924.3 },\n  { \"date\": \"2019-03-16\", \"value\": 4006.4 },\n  { \"date\": \"2019-03-17\", \"value\": 3981.5 },\n  { \"date\": \"2019-03-18\", \"value\": 3990.2 },\n  { \"date\": \"2019-03-19\", \"value\": 4017.0 },\n  { \"date\": \"2019-03-20\", \"value\": 4041.2 },\n  { \"date\": \"2019-03-21\", \"value\": 3982.2 },\n  { \"date\": \"2019-03-22\", \"value\": 3990.4 },\n  { \"date\": \"2019-03-23\", \"value\": 4002.5 },\n  { \"date\": \"2019-03-24\", \"value\": 3994.7 },\n  { \"date\": \"2019-03-25\", \"value\": 3937.0 },\n  { \"date\": \"2019-03-26\", \"value\": 3942.8 },\n  { \"date\": \"2019-03-27\", \"value\": 4041.7 },\n  { \"date\": \"2019-03-28\", \"value\": 4025.6 },\n  { \"date\": \"2019-03-29\", \"value\": 4102.2 },\n  { \"date\": \"2019-03-30\", \"value\": 4111.8 },\n  { \"date\": \"2019-03-31\", \"value\": 4102.3 },\n  { \"date\": \"2019-04-01\", \"value\": 4145.1 },\n  { \"date\": \"2019-04-02\", \"value\": 4859.3 },\n  { \"date\": \"2019-04-03\", \"value\": 4968.7 },\n  { \"date\": \"2019-04-04\", \"value\": 4902.4 },\n  { \"date\": \"2019-04-05\", \"value\": 5010.2 },\n  { \"date\": \"2019-04-06\", \"value\": 5046.2 },\n  { \"date\": \"2019-04-07\", \"value\": 5173.6 },\n  { \"date\": \"2019-04-08\", \"value\": 5245.2 },\n  { \"date\": \"2019-04-09\", \"value\": 5158.4 },\n  { \"date\": \"2019-04-10\", \"value\": 5307.8 },\n  { \"date\": \"2019-04-11\", \"value\": 5022.6 },\n  { \"date\": \"2019-04-12\", \"value\": 5054.2 },\n  { \"date\": \"2019-04-13\", \"value\": 5051.8 },\n  { \"date\": \"2019-04-14\", \"value\": 5134.8 },\n  { \"date\": \"2019-04-15\", \"value\": 5032.3 },\n  { \"date\": \"2019-04-16\", \"value\": 5180.9 },\n  { \"date\": \"2019-04-17\", \"value\": 5208.3 },\n  { \"date\": \"2019-04-18\", \"value\": 5264.7 },\n  { \"date\": \"2019-04-19\", \"value\": 5241.0 },\n  { \"date\": \"2019-04-20\", \"value\": 5290.2 },\n  { \"date\": \"2019-04-21\", \"value\": 5243.5 },\n  { \"date\": \"2019-04-22\", \"value\": 5346.7 },\n  { \"date\": \"2019-04-23\", \"value\": 5511.6 },\n  { \"date\": \"2019-04-24\", \"value\": 5415.6 },\n  { \"date\": \"2019-04-25\", \"value\": 5209.1 },\n  { \"date\": \"2019-04-26\", \"value\": 5298.3 },\n  { \"date\": \"2019-04-27\", \"value\": 5265.9 },\n  { \"date\": \"2019-04-28\", \"value\": 5302.3 },\n  { \"date\": \"2019-04-29\", \"value\": 5235.0 },\n  { \"date\": \"2019-04-30\", \"value\": 5320.8 },\n  { \"date\": \"2019-05-01\", \"value\": 5384.2 },\n  { \"date\": \"2019-05-02\", \"value\": 5493.8 },\n  { \"date\": \"2019-05-03\", \"value\": 5766.8 },\n  { \"date\": \"2019-05-04\", \"value\": 5830.9 },\n  { \"date\": \"2019-05-05\", \"value\": 5774.9 },\n  { \"date\": \"2019-05-06\", \"value\": 5745.1 },\n  { \"date\": \"2019-05-07\", \"value\": 5849.5 },\n  { \"date\": \"2019-05-08\", \"value\": 5990.3 },\n  { \"date\": \"2019-05-09\", \"value\": 6191.5 },\n  { \"date\": \"2019-05-10\", \"value\": 6386.0 },\n  { \"date\": \"2019-05-11\", \"value\": 7190.3 },\n  { \"date\": \"2019-05-12\", \"value\": 6984.8 },\n  { \"date\": \"2019-05-13\", \"value\": 7806.0 },\n  { \"date\": \"2019-05-14\", \"value\": 7994.6 },\n  { \"date\": \"2019-05-15\", \"value\": 8164.6 },\n  { \"date\": \"2019-05-16\", \"value\": 7871.8 },\n  { \"date\": \"2019-05-17\", \"value\": 7359.5 },\n  { \"date\": \"2019-05-18\", \"value\": 7262.6 },\n  { \"date\": \"2019-05-19\", \"value\": 8157.2 },\n  { \"date\": \"2019-05-20\", \"value\": 7965.3 },\n  { \"date\": \"2019-05-21\", \"value\": 7930.3 },\n  { \"date\": \"2019-05-22\", \"value\": 7635.7 },\n  { \"date\": \"2019-05-23\", \"value\": 7852.1 },\n  { \"date\": \"2019-05-24\", \"value\": 7970.1 },\n  { \"date\": \"2019-05-25\", \"value\": 8027.4 },\n  { \"date\": \"2019-05-26\", \"value\": 8630.2 },\n  { \"date\": \"2019-05-27\", \"value\": 8760.1 },\n  { \"date\": \"2019-05-28\", \"value\": 8716.3 },\n  { \"date\": \"2019-05-29\", \"value\": 8647.8 },\n  { \"date\": \"2019-05-30\", \"value\": 8271.9 },\n  { \"date\": \"2019-05-31\", \"value\": 8558.3 },\n  { \"date\": \"2019-06-01\", \"value\": 8545.7 },\n  { \"date\": \"2019-06-02\", \"value\": 8728.6 },\n  { \"date\": \"2019-06-03\", \"value\": 8124.8 },\n  { \"date\": \"2019-06-04\", \"value\": 7685.5 },\n  { \"date\": \"2019-06-05\", \"value\": 7779.1 },\n  { \"date\": \"2019-06-06\", \"value\": 7784.9 },\n  { \"date\": \"2019-06-07\", \"value\": 7985.2 },\n  { \"date\": \"2019-06-08\", \"value\": 7901.4 },\n  { \"date\": \"2019-06-09\", \"value\": 7635.0 },\n  { \"date\": \"2019-06-10\", \"value\": 7987.8 },\n  { \"date\": \"2019-06-11\", \"value\": 7888.0 },\n  { \"date\": \"2019-06-12\", \"value\": 8133.1 },\n  { \"date\": \"2019-06-13\", \"value\": 8219.0 },\n  { \"date\": \"2019-06-14\", \"value\": 8656.1 },\n  { \"date\": \"2019-06-15\", \"value\": 8812.5 },\n  { \"date\": \"2019-06-16\", \"value\": 8962.5 },\n  { \"date\": \"2019-06-17\", \"value\": 9318.8 },\n  { \"date\": \"2019-06-18\", \"value\": 9080.6 },\n  { \"date\": \"2019-06-19\", \"value\": 9255.4 },\n  { \"date\": \"2019-06-20\", \"value\": 9517.0 },\n  { \"date\": \"2019-06-21\", \"value\": 10179.3 },\n  { \"date\": \"2019-06-22\", \"value\": 10721.7 },\n  { \"date\": \"2019-06-23\", \"value\": 10897.1 },\n  { \"date\": \"2019-06-24\", \"value\": 11046.4 },\n  { \"date\": \"2019-06-25\", \"value\": 11809.9 },\n  { \"date\": \"2019-06-26\", \"value\": 13063.8 },\n  { \"date\": \"2019-06-27\", \"value\": 11287.8 },\n  { \"date\": \"2019-06-28\", \"value\": 12409.1 },\n  { \"date\": \"2019-06-29\", \"value\": 11906.5 },\n  { \"date\": \"2019-06-30\", \"value\": 10818.6 },\n  { \"date\": \"2019-07-01\", \"value\": 10616.6 },\n  { \"date\": \"2019-07-02\", \"value\": 10835.9 },\n  { \"date\": \"2019-07-03\", \"value\": 11900.8 },\n  { \"date\": \"2019-07-04\", \"value\": 11163.1 },\n  { \"date\": \"2019-07-05\", \"value\": 10970.2 },\n  { \"date\": \"2019-07-06\", \"value\": 11268.0 },\n  { \"date\": \"2019-07-07\", \"value\": 11415.9 },\n  { \"date\": \"2019-07-08\", \"value\": 12252.6 },\n  { \"date\": \"2019-07-09\", \"value\": 12541.5 },\n  { \"date\": \"2019-07-10\", \"value\": 12110.6 },\n  { \"date\": \"2019-07-11\", \"value\": 11342.3 },\n  { \"date\": \"2019-07-12\", \"value\": 11762.1 },\n  { \"date\": \"2019-07-13\", \"value\": 11364.9 },\n  { \"date\": \"2019-07-14\", \"value\": 10200.1 },\n  { \"date\": \"2019-07-15\", \"value\": 10845.9 },\n  { \"date\": \"2019-07-16\", \"value\": 9424.8 },\n  { \"date\": \"2019-07-17\", \"value\": 9723.2 },\n  { \"date\": \"2019-07-18\", \"value\": 10651.4 },\n  { \"date\": \"2019-07-19\", \"value\": 10571.5 },\n  { \"date\": \"2019-07-20\", \"value\": 10826.7 },\n  { \"date\": \"2019-07-21\", \"value\": 10714.4 },\n  { \"date\": \"2019-07-22\", \"value\": 10412.5 },\n  { \"date\": \"2019-07-23\", \"value\": 9888.7 },\n  { \"date\": \"2019-07-24\", \"value\": 9804.3 },\n  { \"date\": \"2019-07-25\", \"value\": 9945.3 },\n  { \"date\": \"2019-07-26\", \"value\": 9831.0 },\n  { \"date\": \"2019-07-27\", \"value\": 9492.1 },\n  { \"date\": \"2019-07-28\", \"value\": 9727.8 },\n  { \"date\": \"2019-07-29\", \"value\": 9580.9 },\n  { \"date\": \"2019-07-30\", \"value\": 9580.7 },\n  { \"date\": \"2019-07-31\", \"value\": 10082.0 },\n  { \"date\": \"2019-08-01\", \"value\": 10380.0 },\n  { \"date\": \"2019-08-02\", \"value\": 10520.1 },\n  { \"date\": \"2019-08-03\", \"value\": 10815.7 },\n  { \"date\": \"2019-08-04\", \"value\": 10934.6 },\n  { \"date\": \"2019-08-05\", \"value\": 11816.8 },\n  { \"date\": \"2019-08-06\", \"value\": 11480.9 },\n  { \"date\": \"2019-08-07\", \"value\": 12013.9 },\n  { \"date\": \"2019-08-08\", \"value\": 12191.6 },\n  { \"date\": \"2019-08-09\", \"value\": 12089.8 },\n  { \"date\": \"2019-08-10\", \"value\": 11314.5 },\n  { \"date\": \"2019-08-11\", \"value\": 11517.2 },\n  { \"date\": \"2019-08-12\", \"value\": 11394.2 },\n  { \"date\": \"2019-08-13\", \"value\": 10892.9 },\n  { \"date\": \"2019-08-14\", \"value\": 10049.4 },\n  { \"date\": \"2019-08-15\", \"value\": 10303.4 },\n  { \"date\": \"2019-08-16\", \"value\": 10335.6 },\n  { \"date\": \"2019-08-17\", \"value\": 10218.1 },\n  { \"date\": \"2019-08-18\", \"value\": 10312.7 },\n  { \"date\": \"2019-08-19\", \"value\": 10910.7 },\n  { \"date\": \"2019-08-20\", \"value\": 10752.6 },\n  { \"date\": \"2019-08-21\", \"value\": 10141.5 },\n  { \"date\": \"2019-08-22\", \"value\": 10105.0 },\n  { \"date\": \"2019-08-23\", \"value\": 10388.7 },\n  { \"date\": \"2019-08-24\", \"value\": 10131.0 },\n  { \"date\": \"2019-08-25\", \"value\": 10136.3 },\n  { \"date\": \"2019-08-26\", \"value\": 10371.8 },\n  { \"date\": \"2019-08-27\", \"value\": 10184.8 },\n  { \"date\": \"2019-08-28\", \"value\": 9729.4 },\n  { \"date\": \"2019-08-29\", \"value\": 9491.0 },\n  { \"date\": \"2019-08-30\", \"value\": 9585.4 },\n  { \"date\": \"2019-08-31\", \"value\": 9594.4 },\n  { \"date\": \"2019-09-01\", \"value\": 9729.3 },\n  { \"date\": \"2019-09-02\", \"value\": 10348.8 },\n  { \"date\": \"2019-09-03\", \"value\": 10612.3 },\n  { \"date\": \"2019-09-04\", \"value\": 10568.2 },\n  { \"date\": \"2019-09-05\", \"value\": 10566.9 },\n  { \"date\": \"2019-09-06\", \"value\": 10309.3 },\n  { \"date\": \"2019-09-07\", \"value\": 10461.1 },\n  { \"date\": \"2019-09-08\", \"value\": 10402.8 },\n  { \"date\": \"2019-09-09\", \"value\": 10309.0 },\n  { \"date\": \"2019-09-10\", \"value\": 10105.4 },\n  { \"date\": \"2019-09-11\", \"value\": 10162.5 },\n  { \"date\": \"2019-09-12\", \"value\": 10415.1 },\n  { \"date\": \"2019-09-13\", \"value\": 10342.1 },\n  { \"date\": \"2019-09-14\", \"value\": 10337.3 },\n  { \"date\": \"2019-09-15\", \"value\": 10311.5 },\n  { \"date\": \"2019-09-16\", \"value\": 10255.5 },\n  { \"date\": \"2019-09-17\", \"value\": 10195.7 },\n  { \"date\": \"2019-09-18\", \"value\": 10164.7 },\n  { \"date\": \"2019-09-19\", \"value\": 10250.5 },\n  { \"date\": \"2019-09-20\", \"value\": 10172.7 },\n  { \"date\": \"2019-09-21\", \"value\": 9993.0 },\n  { \"date\": \"2019-09-22\", \"value\": 10031.6 },\n  { \"date\": \"2019-09-23\", \"value\": 9702.2 },\n  { \"date\": \"2019-09-24\", \"value\": 8513.9 },\n  { \"date\": \"2019-09-25\", \"value\": 8432.4 },\n  { \"date\": \"2019-09-26\", \"value\": 8063.8 },\n  { \"date\": \"2019-09-27\", \"value\": 8184.9 },\n  { \"date\": \"2019-09-28\", \"value\": 8208.5 },\n  { \"date\": \"2019-09-29\", \"value\": 8049.1 },\n  { \"date\": \"2019-09-30\", \"value\": 8284.3 },\n  { \"date\": \"2019-10-01\", \"value\": 8302.7 },\n  { \"date\": \"2019-10-02\", \"value\": 8364.1 },\n  { \"date\": \"2019-10-03\", \"value\": 8226.9 },\n  { \"date\": \"2019-10-04\", \"value\": 8148.1 },\n  { \"date\": \"2019-10-05\", \"value\": 8127.3 },\n  { \"date\": \"2019-10-06\", \"value\": 7881.9 },\n  { \"date\": \"2019-10-07\", \"value\": 8198.6 },\n  { \"date\": \"2019-10-08\", \"value\": 8182.9 },\n  { \"date\": \"2019-10-09\", \"value\": 8566.7 },\n  { \"date\": \"2019-10-10\", \"value\": 8562.3 },\n  { \"date\": \"2019-10-11\", \"value\": 8267.8 },\n  { \"date\": \"2019-10-12\", \"value\": 8304.4 },\n  { \"date\": \"2019-10-13\", \"value\": 8281.5 },\n  { \"date\": \"2019-10-14\", \"value\": 8353.3 },\n  { \"date\": \"2019-10-15\", \"value\": 8167.2 },\n  { \"date\": \"2019-10-16\", \"value\": 8000.4 },\n  { \"date\": \"2019-10-17\", \"value\": 8073.3 },\n  { \"date\": \"2019-10-18\", \"value\": 7948.5 },\n  { \"date\": \"2019-10-19\", \"value\": 7957.3 },\n  { \"date\": \"2019-10-20\", \"value\": 8223.4 },\n  { \"date\": \"2019-10-21\", \"value\": 8208.2 },\n  { \"date\": \"2019-10-22\", \"value\": 8031.4 },\n  { \"date\": \"2019-10-23\", \"value\": 7477.0 },\n  { \"date\": \"2019-10-24\", \"value\": 7422.7 },\n  { \"date\": \"2019-10-25\", \"value\": 8658.3 },\n  { \"date\": \"2019-10-26\", \"value\": 9230.6 },\n  { \"date\": \"2019-10-27\", \"value\": 9529.6 },\n  { \"date\": \"2019-10-28\", \"value\": 9207.2 },\n  { \"date\": \"2019-10-29\", \"value\": 9411.3 },\n  { \"date\": \"2019-10-30\", \"value\": 9157.9 },\n  { \"date\": \"2019-10-31\", \"value\": 9152.6 },\n  { \"date\": \"2019-11-01\", \"value\": 9230.1 },\n  { \"date\": \"2019-11-02\", \"value\": 9300.6 },\n  { \"date\": \"2019-11-03\", \"value\": 9198.3 },\n  { \"date\": \"2019-11-04\", \"value\": 9396.4 },\n  { \"date\": \"2019-11-05\", \"value\": 9310.8 },\n  { \"date\": \"2019-11-06\", \"value\": 9338.9 },\n  { \"date\": \"2019-11-07\", \"value\": 9223.5 },\n  { \"date\": \"2019-11-08\", \"value\": 8778.2 },\n  { \"date\": \"2019-11-09\", \"value\": 8804.5 },\n  { \"date\": \"2019-11-10\", \"value\": 9036.8 },\n  { \"date\": \"2019-11-11\", \"value\": 8736.9 },\n  { \"date\": \"2019-11-12\", \"value\": 8812.6 },\n  { \"date\": \"2019-11-13\", \"value\": 8783.1 },\n  { \"date\": \"2019-11-14\", \"value\": 8661.2 },\n  { \"date\": \"2019-11-15\", \"value\": 8476.3 },\n  { \"date\": \"2019-11-16\", \"value\": 8497.3 },\n  { \"date\": \"2019-11-17\", \"value\": 8509.8 },\n  { \"date\": \"2019-11-18\", \"value\": 8208.4 },\n  { \"date\": \"2019-11-19\", \"value\": 8145.7 },\n  { \"date\": \"2019-11-20\", \"value\": 8099.3 },\n  { \"date\": \"2019-11-21\", \"value\": 7627.9 },\n  { \"date\": \"2019-11-22\", \"value\": 7272.5 },\n  { \"date\": \"2019-11-23\", \"value\": 7324.1 },\n  { \"date\": \"2019-11-24\", \"value\": 6924.7 },\n  { \"date\": \"2019-11-25\", \"value\": 7115.6 },\n  { \"date\": \"2019-11-26\", \"value\": 7162.8 },\n  { \"date\": \"2019-11-27\", \"value\": 7510.6 },\n  { \"date\": \"2019-11-28\", \"value\": 7426.7 },\n  { \"date\": \"2019-11-29\", \"value\": 7742.7 },\n  { \"date\": \"2019-11-30\", \"value\": 7546.6 },\n  { \"date\": \"2019-12-01\", \"value\": 7396.4 },\n  { \"date\": \"2019-12-02\", \"value\": 7298.2 },\n  { \"date\": \"2019-12-03\", \"value\": 7291.8 },\n  { \"date\": \"2019-12-04\", \"value\": 7204.4 },\n  { \"date\": \"2019-12-05\", \"value\": 7399.2 },\n  { \"date\": \"2019-12-06\", \"value\": 7530.8 },\n  { \"date\": \"2019-12-07\", \"value\": 7510.9 },\n  { \"date\": \"2019-12-08\", \"value\": 7524.4 },\n  { \"date\": \"2019-12-09\", \"value\": 7355.8 },\n  { \"date\": \"2019-12-10\", \"value\": 7235.7 },\n  { \"date\": \"2019-12-11\", \"value\": 7208.0 },\n  { \"date\": \"2019-12-12\", \"value\": 7208.0 },\n  { \"date\": \"2019-12-13\", \"value\": 7255.2 },\n  { \"date\": \"2019-12-14\", \"value\": 7080.8 },\n  { \"date\": \"2019-12-15\", \"value\": 7128.5 },\n  { \"date\": \"2019-12-16\", \"value\": 6903.5 },\n  { \"date\": \"2019-12-17\", \"value\": 6613.3 },\n  { \"date\": \"2019-12-18\", \"value\": 7276.0 },\n  { \"date\": \"2019-12-19\", \"value\": 7165.5 },\n  { \"date\": \"2019-12-20\", \"value\": 7196.4 },\n  { \"date\": \"2019-12-21\", \"value\": 7156.2 },\n  { \"date\": \"2019-12-22\", \"value\": 7495.8 },\n  { \"date\": \"2019-12-23\", \"value\": 7322.8 },\n  { \"date\": \"2019-12-24\", \"value\": 7268.3 },\n  { \"date\": \"2019-12-25\", \"value\": 7224.8 },\n  { \"date\": \"2019-12-26\", \"value\": 7210.9 },\n  { \"date\": \"2019-12-27\", \"value\": 7261.7 },\n  { \"date\": \"2019-12-28\", \"value\": 7321.5 },\n  { \"date\": \"2019-12-29\", \"value\": 7397.5 },\n  { \"date\": \"2019-12-30\", \"value\": 7261.8 },\n  { \"date\": \"2019-12-31\", \"value\": 7196.4 },\n  { \"date\": \"2020-01-01\", \"value\": 7199.8 },\n  { \"date\": \"2020-01-02\", \"value\": 6967.0 },\n  { \"date\": \"2020-01-03\", \"value\": 7343.1 },\n  { \"date\": \"2020-01-04\", \"value\": 7376.8 },\n  { \"date\": \"2020-01-05\", \"value\": 7372.5 },\n  { \"date\": \"2020-01-06\", \"value\": 7759.1 },\n  { \"date\": \"2020-01-07\", \"value\": 8155.7 },\n  { \"date\": \"2020-01-08\", \"value\": 8059.6 },\n  { \"date\": \"2020-01-09\", \"value\": 7842.4 },\n  { \"date\": \"2020-01-10\", \"value\": 8187.1 },\n  { \"date\": \"2020-01-11\", \"value\": 8024.1 },\n  { \"date\": \"2020-01-12\", \"value\": 8187.6 },\n  { \"date\": \"2020-01-13\", \"value\": 8111.4 },\n  { \"date\": \"2020-01-14\", \"value\": 8829.2 },\n  { \"date\": \"2020-01-15\", \"value\": 8818.3 },\n  { \"date\": \"2020-01-16\", \"value\": 8726.9 },\n  { \"date\": \"2020-01-17\", \"value\": 8913.1 },\n  { \"date\": \"2020-01-18\", \"value\": 8916.3 },\n  { \"date\": \"2020-01-19\", \"value\": 8706.2 },\n  { \"date\": \"2020-01-20\", \"value\": 8641.9 },\n  { \"date\": \"2020-01-21\", \"value\": 8732.6 },\n  { \"date\": \"2020-01-22\", \"value\": 8678.5 },\n  { \"date\": \"2020-01-23\", \"value\": 8405.1 },\n  { \"date\": \"2020-01-24\", \"value\": 8439.9 },\n  { \"date\": \"2020-01-25\", \"value\": 8341.6 },\n  { \"date\": \"2020-01-26\", \"value\": 8607.8 },\n  { \"date\": \"2020-01-27\", \"value\": 8866.6 },\n  { \"date\": \"2020-01-28\", \"value\": 9377.3 },\n  { \"date\": \"2020-01-29\", \"value\": 9298.9 },\n  { \"date\": \"2020-01-30\", \"value\": 9507.3 },\n  { \"date\": \"2020-01-31\", \"value\": 9349.1 },\n  { \"date\": \"2020-02-01\", \"value\": 9381.6 },\n  { \"date\": \"2020-02-02\", \"value\": 9334.9 },\n  { \"date\": \"2020-02-03\", \"value\": 9296.6 },\n  { \"date\": \"2020-02-04\", \"value\": 9193.9 },\n  { \"date\": \"2020-02-05\", \"value\": 9611.8 },\n  { \"date\": \"2020-02-06\", \"value\": 9772.0 },\n  { \"date\": \"2020-02-07\", \"value\": 9818.6 },\n  { \"date\": \"2020-02-08\", \"value\": 9895.5 },\n  { \"date\": \"2020-02-09\", \"value\": 10151.5 },\n  { \"date\": \"2020-02-10\", \"value\": 9854.1 },\n  { \"date\": \"2020-02-11\", \"value\": 10229.5 },\n  { \"date\": \"2020-02-12\", \"value\": 10317.7 },\n  { \"date\": \"2020-02-13\", \"value\": 10235.1 },\n  { \"date\": \"2020-02-14\", \"value\": 10333.0 },\n  { \"date\": \"2020-02-15\", \"value\": 9907.7 },\n  { \"date\": \"2020-02-16\", \"value\": 9932.3 },\n  { \"date\": \"2020-02-17\", \"value\": 9701.4 },\n  { \"date\": \"2020-02-18\", \"value\": 10158.4 },\n  { \"date\": \"2020-02-19\", \"value\": 9609.4 },\n  { \"date\": \"2020-02-20\", \"value\": 9602.4 },\n  { \"date\": \"2020-02-21\", \"value\": 9684.5 },\n  { \"date\": \"2020-02-22\", \"value\": 9655.7 },\n  { \"date\": \"2020-02-23\", \"value\": 9942.7 },\n  { \"date\": \"2020-02-24\", \"value\": 9662.7 },\n  { \"date\": \"2020-02-25\", \"value\": 9317.2 },\n  { \"date\": \"2020-02-26\", \"value\": 8800.3 },\n  { \"date\": \"2020-02-27\", \"value\": 8818.6 },\n  { \"date\": \"2020-02-28\", \"value\": 8697.5 },\n  { \"date\": \"2020-02-29\", \"value\": 8543.7 },\n  { \"date\": \"2020-03-01\", \"value\": 8540.0 },\n  { \"date\": \"2020-03-02\", \"value\": 8904.8 },\n  { \"date\": \"2020-03-03\", \"value\": 8761.4 },\n  { \"date\": \"2020-03-04\", \"value\": 8757.9 },\n  { \"date\": \"2020-03-05\", \"value\": 9060.3 },\n  { \"date\": \"2020-03-06\", \"value\": 9134.8 },\n  { \"date\": \"2020-03-07\", \"value\": 8887.8 },\n  { \"date\": \"2020-03-08\", \"value\": 8034.1 },\n  { \"date\": \"2020-03-09\", \"value\": 7933.0 },\n  { \"date\": \"2020-03-10\", \"value\": 7891.2 },\n  { \"date\": \"2020-03-11\", \"value\": 7935.1 },\n  { \"date\": \"2020-03-12\", \"value\": 4826.0 },\n  { \"date\": \"2020-03-13\", \"value\": 5584.3 },\n  { \"date\": \"2020-03-14\", \"value\": 5182.7 },\n  { \"date\": \"2020-03-15\", \"value\": 5366.3 },\n  { \"date\": \"2020-03-16\", \"value\": 5030.0 },\n  { \"date\": \"2020-03-17\", \"value\": 5261.1 },\n  { \"date\": \"2020-03-18\", \"value\": 5361.4 },\n  { \"date\": \"2020-03-19\", \"value\": 6172.0 },\n  { \"date\": \"2020-03-20\", \"value\": 6205.3 },\n  { \"date\": \"2020-03-21\", \"value\": 6186.2 },\n  { \"date\": \"2020-03-22\", \"value\": 5822.1 },\n  { \"date\": \"2020-03-23\", \"value\": 6468.9 },\n  { \"date\": \"2020-03-24\", \"value\": 6744.6 },\n  { \"date\": \"2020-03-25\", \"value\": 6678.9 },\n  { \"date\": \"2020-03-26\", \"value\": 6725.1 },\n  { \"date\": \"2020-03-27\", \"value\": 6373.4 },\n  { \"date\": \"2020-03-28\", \"value\": 6233.7 },\n  { \"date\": \"2020-03-29\", \"value\": 5890.4 },\n  { \"date\": \"2020-03-30\", \"value\": 6391.0 },\n  { \"date\": \"2020-03-31\", \"value\": 6412.5 },\n  { \"date\": \"2020-04-01\", \"value\": 6638.5 },\n  { \"date\": \"2020-04-02\", \"value\": 6800.5 },\n  { \"date\": \"2020-04-03\", \"value\": 6735.9 },\n  { \"date\": \"2020-04-04\", \"value\": 6857.4 },\n  { \"date\": \"2020-04-05\", \"value\": 6772.7 },\n  { \"date\": \"2020-04-06\", \"value\": 7332.3 },\n  { \"date\": \"2020-04-07\", \"value\": 7185.2 },\n  { \"date\": \"2020-04-08\", \"value\": 7361.2 },\n  { \"date\": \"2020-04-09\", \"value\": 7289.0 },\n  { \"date\": \"2020-04-10\", \"value\": 6863.1 },\n  { \"date\": \"2020-04-11\", \"value\": 6867.8 },\n  { \"date\": \"2020-04-12\", \"value\": 6917.6 },\n  { \"date\": \"2020-04-13\", \"value\": 6841.3 },\n  { \"date\": \"2020-04-14\", \"value\": 6850.9 },\n  { \"date\": \"2020-04-15\", \"value\": 6629.1 },\n  { \"date\": \"2020-04-16\", \"value\": 7085.6 },\n  { \"date\": \"2020-04-17\", \"value\": 7035.8 },\n  { \"date\": \"2020-04-18\", \"value\": 7230.8 },\n  { \"date\": \"2020-04-19\", \"value\": 7122.9 },\n  { \"date\": \"2020-04-20\", \"value\": 6833.5 },\n  { \"date\": \"2020-04-21\", \"value\": 6842.5 },\n  { \"date\": \"2020-04-22\", \"value\": 7112.9 },\n  { \"date\": \"2020-04-23\", \"value\": 7488.5 },\n  { \"date\": \"2020-04-24\", \"value\": 7503.8 },\n  { \"date\": \"2020-04-25\", \"value\": 7540.4 },\n  { \"date\": \"2020-04-26\", \"value\": 7678.9 },\n  { \"date\": \"2020-04-27\", \"value\": 7766.0 },\n  { \"date\": \"2020-04-28\", \"value\": 7746.9 },\n  { \"date\": \"2020-04-29\", \"value\": 8770.9 },\n  { \"date\": \"2020-04-30\", \"value\": 8629.0 },\n  { \"date\": \"2020-05-01\", \"value\": 8821.6 },\n  { \"date\": \"2020-05-02\", \"value\": 8966.3 },\n  { \"date\": \"2020-05-03\", \"value\": 8885.5 },\n  { \"date\": \"2020-05-04\", \"value\": 8874.7 },\n  { \"date\": \"2020-05-05\", \"value\": 9001.0 },\n  { \"date\": \"2020-05-06\", \"value\": 9151.4 },\n  { \"date\": \"2020-05-07\", \"value\": 9979.8 },\n  { \"date\": \"2020-05-08\", \"value\": 9806.2 },\n  { \"date\": \"2020-05-09\", \"value\": 9554.6 },\n  { \"date\": \"2020-05-10\", \"value\": 8738.8 },\n  { \"date\": \"2020-05-11\", \"value\": 8579.8 },\n  { \"date\": \"2020-05-12\", \"value\": 8813.8 },\n  { \"date\": \"2020-05-13\", \"value\": 9298.7 },\n  { \"date\": \"2020-05-14\", \"value\": 9778.4 },\n  { \"date\": \"2020-05-15\", \"value\": 9318.0 },\n  { \"date\": \"2020-05-16\", \"value\": 9379.5 },\n  { \"date\": \"2020-05-17\", \"value\": 9677.7 },\n  { \"date\": \"2020-05-18\", \"value\": 9730.7 },\n  { \"date\": \"2020-05-19\", \"value\": 9773.3 },\n  { \"date\": \"2020-05-20\", \"value\": 9512.3 },\n  { \"date\": \"2020-05-21\", \"value\": 9059.0 },\n  { \"date\": \"2020-05-22\", \"value\": 9169.7 },\n  { \"date\": \"2020-05-23\", \"value\": 9177.0 },\n  { \"date\": \"2020-05-24\", \"value\": 8728.2 },\n  { \"date\": \"2020-05-25\", \"value\": 8898.2 },\n  { \"date\": \"2020-05-26\", \"value\": 8842.5 },\n  { \"date\": \"2020-05-27\", \"value\": 9199.1 },\n  { \"date\": \"2020-05-28\", \"value\": 9572.2 },\n  { \"date\": \"2020-05-29\", \"value\": 9424.8 },\n  { \"date\": \"2020-05-30\", \"value\": 9692.5 },\n  { \"date\": \"2020-05-31\", \"value\": 9454.8 },\n  { \"date\": \"2020-06-01\", \"value\": 10189.3 },\n  { \"date\": \"2020-06-02\", \"value\": 9527.6 },\n  { \"date\": \"2020-06-03\", \"value\": 9667.2 },\n  { \"date\": \"2020-06-04\", \"value\": 9794.4 },\n  { \"date\": \"2020-06-05\", \"value\": 9631.2 },\n  { \"date\": \"2020-06-06\", \"value\": 9669.6 },\n  { \"date\": \"2020-06-07\", \"value\": 9742.6 },\n  { \"date\": \"2020-06-08\", \"value\": 9777.9 },\n  { \"date\": \"2020-06-09\", \"value\": 9768.8 },\n  { \"date\": \"2020-06-10\", \"value\": 9878.8 },\n  { \"date\": \"2020-06-11\", \"value\": 9283.2 },\n  { \"date\": \"2020-06-12\", \"value\": 9466.6 },\n  { \"date\": \"2020-06-13\", \"value\": 9471.3 },\n  { \"date\": \"2020-06-14\", \"value\": 9345.3 },\n  { \"date\": \"2020-06-15\", \"value\": 9425.4 },\n  { \"date\": \"2020-06-16\", \"value\": 9523.5 },\n  { \"date\": \"2020-06-17\", \"value\": 9464.6 },\n  { \"date\": \"2020-06-18\", \"value\": 9388.1 },\n  { \"date\": \"2020-06-19\", \"value\": 9314.0 },\n  { \"date\": \"2020-06-20\", \"value\": 9358.8 },\n  { \"date\": \"2020-06-21\", \"value\": 9296.4 },\n  { \"date\": \"2020-06-22\", \"value\": 9683.7 },\n  { \"date\": \"2020-06-23\", \"value\": 9624.6 },\n  { \"date\": \"2020-06-24\", \"value\": 9302.0 },\n  { \"date\": \"2020-06-25\", \"value\": 9247.5 },\n  { \"date\": \"2020-06-26\", \"value\": 9160.0 },\n  { \"date\": \"2020-06-27\", \"value\": 9008.3 },\n  { \"date\": \"2020-06-28\", \"value\": 9124.0 },\n  { \"date\": \"2020-06-29\", \"value\": 9185.4 },\n  { \"date\": \"2020-06-30\", \"value\": 9135.4 },\n  { \"date\": \"2020-07-01\", \"value\": 9229.9 },\n  { \"date\": \"2020-07-02\", \"value\": 9085.1 },\n  { \"date\": \"2020-07-03\", \"value\": 9067.1 },\n  { \"date\": \"2020-07-04\", \"value\": 9134.4 },\n  { \"date\": \"2020-07-05\", \"value\": 9081.0 },\n  { \"date\": \"2020-07-06\", \"value\": 9339.0 },\n  { \"date\": \"2020-07-07\", \"value\": 9256.0 },\n  { \"date\": \"2020-07-08\", \"value\": 9429.9 },\n  { \"date\": \"2020-07-09\", \"value\": 9235.7 },\n  { \"date\": \"2020-07-10\", \"value\": 9285.1 },\n  { \"date\": \"2020-07-11\", \"value\": 9233.3 },\n  { \"date\": \"2020-07-12\", \"value\": 9300.8 },\n  { \"date\": \"2020-07-13\", \"value\": 9243.6 },\n  { \"date\": \"2020-07-14\", \"value\": 9253.4 },\n  { \"date\": \"2020-07-15\", \"value\": 9198.7 },\n  { \"date\": \"2020-07-16\", \"value\": 9135.3 },\n  { \"date\": \"2020-07-17\", \"value\": 9155.8 },\n  { \"date\": \"2020-07-18\", \"value\": 9170.2 },\n  { \"date\": \"2020-07-19\", \"value\": 9208.0 },\n  { \"date\": \"2020-07-20\", \"value\": 9162.4 },\n  { \"date\": \"2020-07-21\", \"value\": 9387.3 },\n  { \"date\": \"2020-07-22\", \"value\": 9513.7 },\n  { \"date\": \"2020-07-23\", \"value\": 9599.6 },\n  { \"date\": \"2020-07-24\", \"value\": 9546.4 },\n  { \"date\": \"2020-07-25\", \"value\": 9704.1 },\n  { \"date\": \"2020-07-26\", \"value\": 9932.5 },\n  { \"date\": \"2020-07-27\", \"value\": 11022.8 },\n  { \"date\": \"2020-07-28\", \"value\": 10908.5 },\n  { \"date\": \"2020-07-29\", \"value\": 11105.9 },\n  { \"date\": \"2020-07-30\", \"value\": 11096.2 },\n  { \"date\": \"2020-07-31\", \"value\": 11333.4 },\n  { \"date\": \"2020-08-01\", \"value\": 11803.1 },\n  { \"date\": \"2020-08-02\", \"value\": 11066.8 },\n  { \"date\": \"2020-08-03\", \"value\": 11224.4 },\n  { \"date\": \"2020-08-04\", \"value\": 11184.7 },\n  { \"date\": \"2020-08-05\", \"value\": 11735.1 },\n  { \"date\": \"2020-08-06\", \"value\": 11757.1 },\n  { \"date\": \"2020-08-07\", \"value\": 11592.0 },\n  { \"date\": \"2020-08-08\", \"value\": 11764.3 },\n  { \"date\": \"2020-08-09\", \"value\": 11681.2 },\n  { \"date\": \"2020-08-10\", \"value\": 11889.2 },\n  { \"date\": \"2020-08-11\", \"value\": 11390.4 },\n  { \"date\": \"2020-08-12\", \"value\": 11557.2 },\n  { \"date\": \"2020-08-13\", \"value\": 11770.9 },\n  { \"date\": \"2020-08-14\", \"value\": 11750.8 },\n  { \"date\": \"2020-08-15\", \"value\": 11845.3 },\n  { \"date\": \"2020-08-16\", \"value\": 11899.0 },\n  { \"date\": \"2020-08-17\", \"value\": 12282.6 },\n  { \"date\": \"2020-08-18\", \"value\": 11947.6 },\n  { \"date\": \"2020-08-19\", \"value\": 11750.2 },\n  { \"date\": \"2020-08-20\", \"value\": 11856.9 },\n  { \"date\": \"2020-08-21\", \"value\": 11529.2 },\n  { \"date\": \"2020-08-22\", \"value\": 11661.3 },\n  { \"date\": \"2020-08-23\", \"value\": 11641.6 },\n  { \"date\": \"2020-08-24\", \"value\": 11753.5 },\n  { \"date\": \"2020-08-25\", \"value\": 11324.8 },\n  { \"date\": \"2020-08-26\", \"value\": 11462.3 },\n  { \"date\": \"2020-08-27\", \"value\": 11327.4 },\n  { \"date\": \"2020-08-28\", \"value\": 11527.4 },\n  { \"date\": \"2020-08-29\", \"value\": 11468.1 },\n  { \"date\": \"2020-08-30\", \"value\": 11702.0 },\n  { \"date\": \"2020-08-31\", \"value\": 11644.2 },\n  { \"date\": \"2020-09-01\", \"value\": 11914.9 },\n  { \"date\": \"2020-09-02\", \"value\": 11413.3 },\n  { \"date\": \"2020-09-03\", \"value\": 10168.8 },\n  { \"date\": \"2020-09-04\", \"value\": 10472.5 },\n  { \"date\": \"2020-09-05\", \"value\": 10092.2 },\n  { \"date\": \"2020-09-06\", \"value\": 10296.4 },\n  { \"date\": \"2020-09-07\", \"value\": 10376.9 },\n  { \"date\": \"2020-09-08\", \"value\": 10126.6 },\n  { \"date\": \"2020-09-09\", \"value\": 10224.6 },\n  { \"date\": \"2020-09-10\", \"value\": 10339.7 },\n  { \"date\": \"2020-09-11\", \"value\": 10390.2 },\n  { \"date\": \"2020-09-12\", \"value\": 10441.9 },\n  { \"date\": \"2020-09-13\", \"value\": 10326.0 },\n  { \"date\": \"2020-09-14\", \"value\": 10675.3 },\n  { \"date\": \"2020-09-15\", \"value\": 10785.3 },\n  { \"date\": \"2020-09-16\", \"value\": 10949.5 },\n  { \"date\": \"2020-09-17\", \"value\": 10941.3 },\n  { \"date\": \"2020-09-18\", \"value\": 10933.0 },\n  { \"date\": \"2020-09-19\", \"value\": 11081.8 },\n  { \"date\": \"2020-09-20\", \"value\": 10921.5 },\n  { \"date\": \"2020-09-21\", \"value\": 10416.8 },\n  { \"date\": \"2020-09-22\", \"value\": 10531.5 },\n  { \"date\": \"2020-09-23\", \"value\": 10237.3 },\n  { \"date\": \"2020-09-24\", \"value\": 10739.4 },\n  { \"date\": \"2020-09-25\", \"value\": 10688.8 },\n  { \"date\": \"2020-09-26\", \"value\": 10727.9 },\n  { \"date\": \"2020-09-27\", \"value\": 10776.2 },\n  { \"date\": \"2020-09-28\", \"value\": 10693.2 },\n  { \"date\": \"2020-09-29\", \"value\": 10840.9 },\n  { \"date\": \"2020-09-30\", \"value\": 10776.1 },\n  { \"date\": \"2020-10-01\", \"value\": 10620.5 },\n  { \"date\": \"2020-10-02\", \"value\": 10572.3 },\n  { \"date\": \"2020-10-03\", \"value\": 10544.2 },\n  { \"date\": \"2020-10-04\", \"value\": 10672.9 },\n  { \"date\": \"2020-10-05\", \"value\": 10789.5 },\n  { \"date\": \"2020-10-06\", \"value\": 10602.6 },\n  { \"date\": \"2020-10-07\", \"value\": 10670.9 },\n  { \"date\": \"2020-10-08\", \"value\": 10924.1 },\n  { \"date\": \"2020-10-09\", \"value\": 11054.2 },\n  { \"date\": \"2020-10-10\", \"value\": 11298.4 },\n  { \"date\": \"2020-10-11\", \"value\": 11371.0 },\n  { \"date\": \"2020-10-12\", \"value\": 11533.9 },\n  { \"date\": \"2020-10-13\", \"value\": 11423.8 },\n  { \"date\": \"2020-10-14\", \"value\": 11420.4 },\n  { \"date\": \"2020-10-15\", \"value\": 11503.0 },\n  { \"date\": \"2020-10-16\", \"value\": 11322.0 },\n  { \"date\": \"2020-10-17\", \"value\": 11362.1 },\n  { \"date\": \"2020-10-18\", \"value\": 11506.9 },\n  { \"date\": \"2020-10-19\", \"value\": 11753.4 },\n  { \"date\": \"2020-10-20\", \"value\": 11913.5 },\n  { \"date\": \"2020-10-21\", \"value\": 12808.7 },\n  { \"date\": \"2020-10-22\", \"value\": 12974.6 },\n  { \"date\": \"2020-10-23\", \"value\": 12934.1 },\n  { \"date\": \"2020-10-24\", \"value\": 13117.2 },\n  { \"date\": \"2020-10-25\", \"value\": 13032.2 },\n  { \"date\": \"2020-10-26\", \"value\": 13061.6 },\n  { \"date\": \"2020-10-27\", \"value\": 13657.8 },\n  { \"date\": \"2020-10-28\", \"value\": 13278.9 },\n  { \"date\": \"2020-10-29\", \"value\": 13457.2 },\n  { \"date\": \"2020-10-30\", \"value\": 13559.9 },\n  { \"date\": \"2020-10-31\", \"value\": 13797.3 },\n  { \"date\": \"2020-11-01\", \"value\": 13759.4 },\n  { \"date\": \"2020-11-02\", \"value\": 13561.4 },\n  { \"date\": \"2020-11-03\", \"value\": 14019.9 },\n  { \"date\": \"2020-11-04\", \"value\": 14145.6 },\n  { \"date\": \"2020-11-05\", \"value\": 15587.1 },\n  { \"date\": \"2020-11-06\", \"value\": 15577.9 },\n  { \"date\": \"2020-11-07\", \"value\": 14828.4 },\n  { \"date\": \"2020-11-08\", \"value\": 15483.7 },\n  { \"date\": \"2020-11-09\", \"value\": 15327.2 },\n  { \"date\": \"2020-11-10\", \"value\": 15303.6 },\n  { \"date\": \"2020-11-11\", \"value\": 15695.8 },\n  { \"date\": \"2020-11-12\", \"value\": 16294.7 },\n  { \"date\": \"2020-11-13\", \"value\": 16324.2 },\n  { \"date\": \"2020-11-14\", \"value\": 16071.0 },\n  { \"date\": \"2020-11-15\", \"value\": 15953.0 },\n  { \"date\": \"2020-11-16\", \"value\": 16715.8 },\n  { \"date\": \"2020-11-17\", \"value\": 17662.3 },\n  { \"date\": \"2020-11-18\", \"value\": 17774.6 },\n  { \"date\": \"2020-11-19\", \"value\": 17803.5 },\n  { \"date\": \"2020-11-20\", \"value\": 18675.2 },\n  { \"date\": \"2020-11-21\", \"value\": 18687.2 },\n  { \"date\": \"2020-11-22\", \"value\": 18412.9 },\n  { \"date\": \"2020-11-23\", \"value\": 18379.6 },\n  { \"date\": \"2020-11-24\", \"value\": 19152.6 },\n  { \"date\": \"2020-11-25\", \"value\": 18723.0 },\n  { \"date\": \"2020-11-26\", \"value\": 17162.0 },\n  { \"date\": \"2020-11-27\", \"value\": 17127.1 },\n  { \"date\": \"2020-11-28\", \"value\": 17730.7 },\n  { \"date\": \"2020-11-29\", \"value\": 18185.5 },\n  { \"date\": \"2020-11-30\", \"value\": 19698.1 },\n  { \"date\": \"2020-12-01\", \"value\": 18770.7 },\n  { \"date\": \"2020-12-02\", \"value\": 19218.8 },\n  { \"date\": \"2020-12-03\", \"value\": 19433.3 },\n  { \"date\": \"2020-12-04\", \"value\": 18658.1 },\n  { \"date\": \"2020-12-05\", \"value\": 19146.5 },\n  { \"date\": \"2020-12-06\", \"value\": 19379.9 },\n  { \"date\": \"2020-12-07\", \"value\": 19170.7 },\n  { \"date\": \"2020-12-08\", \"value\": 18326.6 },\n  { \"date\": \"2020-12-09\", \"value\": 18546.0 },\n  { \"date\": \"2020-12-10\", \"value\": 18247.2 },\n  { \"date\": \"2020-12-11\", \"value\": 18023.6 },\n  { \"date\": \"2020-12-12\", \"value\": 18808.9 },\n  { \"date\": \"2020-12-13\", \"value\": 19176.8 },\n  { \"date\": \"2020-12-14\", \"value\": 19273.8 },\n  { \"date\": \"2020-12-15\", \"value\": 19434.9 },\n  { \"date\": \"2020-12-16\", \"value\": 21352.2 },\n  { \"date\": \"2020-12-17\", \"value\": 22825.4 },\n  { \"date\": \"2020-12-18\", \"value\": 23127.9 },\n  { \"date\": \"2020-12-19\", \"value\": 23844.0 },\n  { \"date\": \"2020-12-20\", \"value\": 23474.9 },\n  { \"date\": \"2020-12-21\", \"value\": 22728.5 },\n  { \"date\": \"2020-12-22\", \"value\": 23823.2 },\n  { \"date\": \"2020-12-23\", \"value\": 23257.9 },\n  { \"date\": \"2020-12-24\", \"value\": 23736.5 },\n  { \"date\": \"2020-12-25\", \"value\": 24689.6 },\n  { \"date\": \"2020-12-26\", \"value\": 26454.4 },\n  { \"date\": \"2020-12-27\", \"value\": 26261.3 },\n  { \"date\": \"2020-12-28\", \"value\": 27057.8 },\n  { \"date\": \"2020-12-29\", \"value\": 27376.0 },\n  { \"date\": \"2020-12-30\", \"value\": 28868.7 },\n  { \"date\": \"2020-12-31\", \"value\": 28949.4 },\n  { \"date\": \"2021-01-01\", \"value\": 29359.9 },\n  { \"date\": \"2021-01-02\", \"value\": 32193.3 },\n  { \"date\": \"2021-01-03\", \"value\": 32958.9 },\n  { \"date\": \"2021-01-04\", \"value\": 32022.6 },\n  { \"date\": \"2021-01-05\", \"value\": 33991.5 },\n  { \"date\": \"2021-01-06\", \"value\": 36793.2 },\n  { \"date\": \"2021-01-07\", \"value\": 39460.2 },\n  { \"date\": \"2021-01-08\", \"value\": 40599.3 },\n  { \"date\": \"2021-01-09\", \"value\": 40151.9 },\n  { \"date\": \"2021-01-10\", \"value\": 38192.2 },\n  { \"date\": \"2021-01-11\", \"value\": 35544.3 },\n  { \"date\": \"2021-01-12\", \"value\": 34076.1 },\n  { \"date\": \"2021-01-13\", \"value\": 37382.2 },\n  { \"date\": \"2021-01-14\", \"value\": 39175.7 },\n  { \"date\": \"2021-01-15\", \"value\": 36845.8 },\n  { \"date\": \"2021-01-16\", \"value\": 36019.5 },\n  { \"date\": \"2021-01-17\", \"value\": 35839.6 },\n  { \"date\": \"2021-01-18\", \"value\": 36613.2 },\n  { \"date\": \"2021-01-19\", \"value\": 36002.9 },\n  { \"date\": \"2021-01-20\", \"value\": 35476.3 },\n  { \"date\": \"2021-01-21\", \"value\": 30842.1 },\n  { \"date\": \"2021-01-22\", \"value\": 33000.5 },\n  { \"date\": \"2021-01-23\", \"value\": 32088.9 },\n  { \"date\": \"2021-01-24\", \"value\": 32241.3 },\n  { \"date\": \"2021-01-25\", \"value\": 32252.3 },\n  { \"date\": \"2021-01-26\", \"value\": 32502.1 },\n  { \"date\": \"2021-01-27\", \"value\": 30404.0 },\n  { \"date\": \"2021-01-28\", \"value\": 33374.8 },\n  { \"date\": \"2021-01-29\", \"value\": 34301.8 },\n  { \"date\": \"2021-01-30\", \"value\": 34283.1 },\n  { \"date\": \"2021-01-31\", \"value\": 33108.1 },\n  { \"date\": \"2021-02-01\", \"value\": 33515.7 },\n  { \"date\": \"2021-02-02\", \"value\": 35485.2 },\n  { \"date\": \"2021-02-03\", \"value\": 37646.8 },\n  { \"date\": \"2021-02-04\", \"value\": 36982.1 },\n  { \"date\": \"2021-02-05\", \"value\": 38297.6 },\n  { \"date\": \"2021-02-06\", \"value\": 39256.6 },\n  { \"date\": \"2021-02-07\", \"value\": 38852.9 },\n  { \"date\": \"2021-02-08\", \"value\": 46395.7 },\n  { \"date\": \"2021-02-09\", \"value\": 46508.6 },\n  { \"date\": \"2021-02-10\", \"value\": 44836.0 },\n  { \"date\": \"2021-02-11\", \"value\": 47990.7 },\n  { \"date\": \"2021-02-12\", \"value\": 47371.7 },\n  { \"date\": \"2021-02-13\", \"value\": 47168.7 },\n  { \"date\": \"2021-02-14\", \"value\": 48643.4 },\n  { \"date\": \"2021-02-15\", \"value\": 47936.3 },\n  { \"date\": \"2021-02-16\", \"value\": 49169.7 },\n  { \"date\": \"2021-02-17\", \"value\": 52079.2 },\n  { \"date\": \"2021-02-18\", \"value\": 51582.2 },\n  { \"date\": \"2021-02-19\", \"value\": 55906.6 },\n  { \"date\": \"2021-02-20\", \"value\": 55923.7 },\n  { \"date\": \"2021-02-21\", \"value\": 57433.8 },\n  { \"date\": \"2021-02-22\", \"value\": 54111.8 },\n  { \"date\": \"2021-02-23\", \"value\": 48911.2 },\n  { \"date\": \"2021-02-24\", \"value\": 49697.5 },\n  { \"date\": \"2021-02-25\", \"value\": 46928.5 },\n  { \"date\": \"2021-02-26\", \"value\": 46345.6 },\n  { \"date\": \"2021-02-27\", \"value\": 46136.7 },\n  { \"date\": \"2021-02-28\", \"value\": 45164.0 },\n  { \"date\": \"2021-03-01\", \"value\": 49595.5 },\n  { \"date\": \"2021-03-02\", \"value\": 48424.2 },\n  { \"date\": \"2021-03-03\", \"value\": 50395.1 },\n  { \"date\": \"2021-03-04\", \"value\": 48428.0 },\n  { \"date\": \"2021-03-05\", \"value\": 48792.5 },\n  { \"date\": \"2021-03-06\", \"value\": 48855.6 },\n  { \"date\": \"2021-03-07\", \"value\": 50982.3 },\n  { \"date\": \"2021-03-08\", \"value\": 52311.0 },\n  { \"date\": \"2021-03-09\", \"value\": 54879.0 },\n  { \"date\": \"2021-03-10\", \"value\": 55851.9 },\n  { \"date\": \"2021-03-11\", \"value\": 57799.5 },\n  { \"date\": \"2021-03-12\", \"value\": 57265.1 },\n  { \"date\": \"2021-03-13\", \"value\": 61195.3 },\n  { \"date\": \"2021-03-14\", \"value\": 59113.7 },\n  { \"date\": \"2021-03-15\", \"value\": 55791.3 },\n  { \"date\": \"2021-03-16\", \"value\": 56889.7 },\n  { \"date\": \"2021-03-17\", \"value\": 58913.5 },\n  { \"date\": \"2021-03-18\", \"value\": 57656.0 },\n  { \"date\": \"2021-03-19\", \"value\": 58088.0 },\n  { \"date\": \"2021-03-20\", \"value\": 58093.4 },\n  { \"date\": \"2021-03-21\", \"value\": 57383.8 },\n  { \"date\": \"2021-03-22\", \"value\": 54158.3 },\n  { \"date\": \"2021-03-23\", \"value\": 54452.5 },\n  { \"date\": \"2021-03-24\", \"value\": 52325.4 },\n  { \"date\": \"2021-03-25\", \"value\": 51322.3 },\n  { \"date\": \"2021-03-26\", \"value\": 55036.1 },\n  { \"date\": \"2021-03-27\", \"value\": 55862.9 },\n  { \"date\": \"2021-03-28\", \"value\": 55765.2 },\n  { \"date\": \"2021-03-29\", \"value\": 57616.2 },\n  { \"date\": \"2021-03-30\", \"value\": 58771.3 },\n  { \"date\": \"2021-03-31\", \"value\": 58763.7 },\n  { \"date\": \"2021-04-01\", \"value\": 58718.3 },\n  { \"date\": \"2021-04-02\", \"value\": 58977.3 },\n  { \"date\": \"2021-04-03\", \"value\": 57059.9 },\n  { \"date\": \"2021-04-04\", \"value\": 58199.9 },\n  { \"date\": \"2021-04-05\", \"value\": 58993.4 },\n  { \"date\": \"2021-04-06\", \"value\": 57996.3 },\n  { \"date\": \"2021-04-07\", \"value\": 55948.7 },\n  { \"date\": \"2021-04-08\", \"value\": 58077.4 },\n  { \"date\": \"2021-04-09\", \"value\": 58118.7 },\n  { \"date\": \"2021-04-10\", \"value\": 59748.4 },\n  { \"date\": \"2021-04-11\", \"value\": 59978.7 },\n  { \"date\": \"2021-04-12\", \"value\": 59863.8 },\n  { \"date\": \"2021-04-13\", \"value\": 63540.9 },\n  { \"date\": \"2021-04-14\", \"value\": 62980.4 },\n  { \"date\": \"2021-04-15\", \"value\": 63216.0 },\n  { \"date\": \"2021-04-16\", \"value\": 61379.7 },\n  { \"date\": \"2021-04-17\", \"value\": 60041.9 },\n  { \"date\": \"2021-04-18\", \"value\": 56207.1 },\n  { \"date\": \"2021-04-19\", \"value\": 55646.1 },\n  { \"date\": \"2021-04-20\", \"value\": 56483.2 },\n  { \"date\": \"2021-04-21\", \"value\": 53820.2 },\n  { \"date\": \"2021-04-22\", \"value\": 51729.5 },\n  { \"date\": \"2021-04-23\", \"value\": 51143.6 },\n  { \"date\": \"2021-04-24\", \"value\": 50088.9 },\n  { \"date\": \"2021-04-25\", \"value\": 48963.6 },\n  { \"date\": \"2021-04-26\", \"value\": 54020.5 },\n  { \"date\": \"2021-04-27\", \"value\": 55036.5 },\n  { \"date\": \"2021-04-28\", \"value\": 54841.4 },\n  { \"date\": \"2021-04-29\", \"value\": 53560.8 },\n  { \"date\": \"2021-04-30\", \"value\": 57720.3 },\n  { \"date\": \"2021-05-01\", \"value\": 57807.1 },\n  { \"date\": \"2021-05-02\", \"value\": 56603.8 },\n  { \"date\": \"2021-05-03\", \"value\": 57169.8 },\n  { \"date\": \"2021-05-04\", \"value\": 53741.5 },\n  { \"date\": \"2021-05-05\", \"value\": 57441.3 },\n  { \"date\": \"2021-05-06\", \"value\": 56405.4 },\n  { \"date\": \"2021-05-07\", \"value\": 57337.2 },\n  { \"date\": \"2021-05-08\", \"value\": 58840.1 },\n  { \"date\": \"2021-05-09\", \"value\": 58238.3 },\n  { \"date\": \"2021-05-10\", \"value\": 55848.9 },\n  { \"date\": \"2021-05-11\", \"value\": 56695.7 },\n  { \"date\": \"2021-05-12\", \"value\": 49384.2 },\n  { \"date\": \"2021-05-13\", \"value\": 49704.6 },\n  { \"date\": \"2021-05-14\", \"value\": 49839.8 },\n  { \"date\": \"2021-05-15\", \"value\": 46708.8 },\n  { \"date\": \"2021-05-16\", \"value\": 46426.4 },\n  { \"date\": \"2021-05-17\", \"value\": 43541.3 },\n  { \"date\": \"2021-05-18\", \"value\": 42897.3 },\n  { \"date\": \"2021-05-19\", \"value\": 36720.5 },\n  { \"date\": \"2021-05-20\", \"value\": 40717.2 },\n  { \"date\": \"2021-05-21\", \"value\": 37297.4 },\n  { \"date\": \"2021-05-22\", \"value\": 37448.3 },\n  { \"date\": \"2021-05-23\", \"value\": 34679.7 },\n  { \"date\": \"2021-05-24\", \"value\": 38750.6 },\n  { \"date\": \"2021-05-25\", \"value\": 38378.3 },\n  { \"date\": \"2021-05-26\", \"value\": 39249.2 },\n  { \"date\": \"2021-05-27\", \"value\": 38417.3 },\n  { \"date\": \"2021-05-28\", \"value\": 35662.5 },\n  { \"date\": \"2021-05-29\", \"value\": 34584.6 },\n  { \"date\": \"2021-05-30\", \"value\": 35652.8 },\n  { \"date\": \"2021-05-31\", \"value\": 37298.6 },\n  { \"date\": \"2021-06-01\", \"value\": 36687.6 },\n  { \"date\": \"2021-06-02\", \"value\": 37555.8 },\n  { \"date\": \"2021-06-03\", \"value\": 39187.3 },\n  { \"date\": \"2021-06-04\", \"value\": 36851.3 },\n  { \"date\": \"2021-06-05\", \"value\": 35520.0 },\n  { \"date\": \"2021-06-06\", \"value\": 35815.4 },\n  { \"date\": \"2021-06-07\", \"value\": 33578.0 },\n  { \"date\": \"2021-06-08\", \"value\": 33382.9 },\n  { \"date\": \"2021-06-09\", \"value\": 37332.2 },\n  { \"date\": \"2021-06-10\", \"value\": 36649.4 },\n  { \"date\": \"2021-06-11\", \"value\": 37314.6 },\n  { \"date\": \"2021-06-12\", \"value\": 35467.5 },\n  { \"date\": \"2021-06-13\", \"value\": 39022.9 },\n  { \"date\": \"2021-06-14\", \"value\": 40529.4 },\n  { \"date\": \"2021-06-15\", \"value\": 40156.1 },\n  { \"date\": \"2021-06-16\", \"value\": 38336.0 },\n  { \"date\": \"2021-06-17\", \"value\": 38052.0 },\n  { \"date\": \"2021-06-18\", \"value\": 35749.4 },\n  { \"date\": \"2021-06-19\", \"value\": 35513.4 },\n  { \"date\": \"2021-06-20\", \"value\": 35595.8 },\n  { \"date\": \"2021-06-21\", \"value\": 31692.0 },\n  { \"date\": \"2021-06-22\", \"value\": 32496.4 },\n  { \"date\": \"2021-06-23\", \"value\": 33674.3 },\n  { \"date\": \"2021-06-24\", \"value\": 34665.8 },\n  { \"date\": \"2021-06-25\", \"value\": 31594.0 },\n  { \"date\": \"2021-06-26\", \"value\": 32243.4 },\n  { \"date\": \"2021-06-27\", \"value\": 34678.5 },\n  { \"date\": \"2021-06-28\", \"value\": 34475.9 },\n  { \"date\": \"2021-06-29\", \"value\": 35834.7 },\n  { \"date\": \"2021-06-30\", \"value\": 35026.9 },\n  { \"date\": \"2021-07-01\", \"value\": 33543.6 },\n  { \"date\": \"2021-07-02\", \"value\": 33813.4 },\n  { \"date\": \"2021-07-03\", \"value\": 34742.8 },\n  { \"date\": \"2021-07-04\", \"value\": 35298.2 },\n  { \"date\": \"2021-07-05\", \"value\": 33687.8 },\n  { \"date\": \"2021-07-06\", \"value\": 34225.6 },\n  { \"date\": \"2021-07-07\", \"value\": 33867.8 },\n  { \"date\": \"2021-07-08\", \"value\": 32866.3 },\n  { \"date\": \"2021-07-09\", \"value\": 33797.4 },\n  { \"date\": \"2021-07-10\", \"value\": 33510.6 },\n  { \"date\": \"2021-07-11\", \"value\": 34227.7 },\n  { \"date\": \"2021-07-12\", \"value\": 33113.0 },\n  { \"date\": \"2021-07-13\", \"value\": 32728.1 },\n  { \"date\": \"2021-07-14\", \"value\": 32820.7 },\n  { \"date\": \"2021-07-15\", \"value\": 31840.5 },\n  { \"date\": \"2021-07-16\", \"value\": 31394.0 },\n  { \"date\": \"2021-07-17\", \"value\": 31518.6 },\n  { \"date\": \"2021-07-18\", \"value\": 31785.4 },\n  { \"date\": \"2021-07-19\", \"value\": 30837.2 },\n  { \"date\": \"2021-07-20\", \"value\": 29793.8 },\n  { \"date\": \"2021-07-21\", \"value\": 32131.4 },\n  { \"date\": \"2021-07-22\", \"value\": 32298.9 },\n  { \"date\": \"2021-07-23\", \"value\": 33603.3 },\n  { \"date\": \"2021-07-24\", \"value\": 33824.8 },\n  { \"date\": \"2021-07-25\", \"value\": 35391.1 },\n  { \"date\": \"2021-07-26\", \"value\": 37276.6 },\n  { \"date\": \"2021-07-27\", \"value\": 39452.0 },\n  { \"date\": \"2021-07-28\", \"value\": 40003.2 },\n  { \"date\": \"2021-07-29\", \"value\": 40001.4 },\n  { \"date\": \"2021-07-30\", \"value\": 42203.4 },\n  { \"date\": \"2021-07-31\", \"value\": 41553.7 },\n  { \"date\": \"2021-08-01\", \"value\": 39878.3 },\n  { \"date\": \"2021-08-02\", \"value\": 39168.4 },\n  { \"date\": \"2021-08-03\", \"value\": 38130.3 },\n  { \"date\": \"2021-08-04\", \"value\": 39736.9 },\n  { \"date\": \"2021-08-05\", \"value\": 40867.2 },\n  { \"date\": \"2021-08-06\", \"value\": 42795.4 },\n  { \"date\": \"2021-08-07\", \"value\": 44614.2 },\n  { \"date\": \"2021-08-08\", \"value\": 43792.8 },\n  { \"date\": \"2021-08-09\", \"value\": 46284.3 },\n  { \"date\": \"2021-08-10\", \"value\": 45593.8 },\n  { \"date\": \"2021-08-11\", \"value\": 45564.3 },\n  { \"date\": \"2021-08-12\", \"value\": 44403.4 },\n  { \"date\": \"2021-08-13\", \"value\": 47809.1 },\n  { \"date\": \"2021-08-14\", \"value\": 47081.5 },\n  { \"date\": \"2021-08-15\", \"value\": 46991.3 },\n  { \"date\": \"2021-08-16\", \"value\": 45996.3 },\n  { \"date\": \"2021-08-17\", \"value\": 44691.6 },\n  { \"date\": \"2021-08-18\", \"value\": 44723.8 },\n  { \"date\": \"2021-08-19\", \"value\": 46755.9 },\n  { \"date\": \"2021-08-20\", \"value\": 49324.0 },\n  { \"date\": \"2021-08-21\", \"value\": 48875.8 },\n  { \"date\": \"2021-08-22\", \"value\": 49254.5 },\n  { \"date\": \"2021-08-23\", \"value\": 49539.7 },\n  { \"date\": \"2021-08-24\", \"value\": 47714.7 },\n  { \"date\": \"2021-08-25\", \"value\": 48994.5 },\n  { \"date\": \"2021-08-26\", \"value\": 46831.6 },\n  { \"date\": \"2021-08-27\", \"value\": 49064.3 },\n  { \"date\": \"2021-08-28\", \"value\": 48897.1 },\n  { \"date\": \"2021-08-29\", \"value\": 48777.4 },\n  { \"date\": \"2021-08-30\", \"value\": 46992.7 },\n  { \"date\": \"2021-08-31\", \"value\": 47130.4 },\n  { \"date\": \"2021-09-01\", \"value\": 48819.4 },\n  { \"date\": \"2021-09-02\", \"value\": 49274.3 },\n  { \"date\": \"2021-09-03\", \"value\": 49999.0 },\n  { \"date\": \"2021-09-04\", \"value\": 49918.4 },\n  { \"date\": \"2021-09-05\", \"value\": 51768.6 },\n  { \"date\": \"2021-09-06\", \"value\": 52672.1 },\n  { \"date\": \"2021-09-07\", \"value\": 46779.6 },\n  { \"date\": \"2021-09-08\", \"value\": 46061.4 },\n  { \"date\": \"2021-09-09\", \"value\": 46385.6 },\n  { \"date\": \"2021-09-10\", \"value\": 44842.8 },\n  { \"date\": \"2021-09-11\", \"value\": 45161.9 },\n  { \"date\": \"2021-09-12\", \"value\": 46062.3 },\n  { \"date\": \"2021-09-13\", \"value\": 44949.5 },\n  { \"date\": \"2021-09-14\", \"value\": 47077.5 },\n  { \"date\": \"2021-09-15\", \"value\": 48130.6 },\n  { \"date\": \"2021-09-16\", \"value\": 47748.0 },\n  { \"date\": \"2021-09-17\", \"value\": 47282.8 },\n  { \"date\": \"2021-09-18\", \"value\": 48306.7 },\n  { \"date\": \"2021-09-19\", \"value\": 47238.7 },\n  { \"date\": \"2021-09-20\", \"value\": 42870.6 },\n  { \"date\": \"2021-09-21\", \"value\": 40651.3 },\n  { \"date\": \"2021-09-22\", \"value\": 43551.6 },\n  { \"date\": \"2021-09-23\", \"value\": 44869.2 },\n  { \"date\": \"2021-09-24\", \"value\": 42819.9 },\n  { \"date\": \"2021-09-25\", \"value\": 42686.8 },\n  { \"date\": \"2021-09-26\", \"value\": 43203.4 },\n  { \"date\": \"2021-09-27\", \"value\": 42172.6 },\n  { \"date\": \"2021-09-28\", \"value\": 41022.3 },\n  { \"date\": \"2021-09-29\", \"value\": 41536.8 },\n  { \"date\": \"2021-09-30\", \"value\": 43823.3 },\n  { \"date\": \"2021-10-01\", \"value\": 48146.0 },\n  { \"date\": \"2021-10-02\", \"value\": 47666.9 },\n  { \"date\": \"2021-10-03\", \"value\": 48200.1 },\n  { \"date\": \"2021-10-04\", \"value\": 49227.3 },\n  { \"date\": \"2021-10-05\", \"value\": 51469.3 },\n  { \"date\": \"2021-10-06\", \"value\": 55323.2 },\n  { \"date\": \"2021-10-07\", \"value\": 53783.9 },\n  { \"date\": \"2021-10-08\", \"value\": 53914.7 },\n  { \"date\": \"2021-10-09\", \"value\": 54942.5 },\n  { \"date\": \"2021-10-10\", \"value\": 54687.7 },\n  { \"date\": \"2021-10-11\", \"value\": 57477.3 },\n  { \"date\": \"2021-10-12\", \"value\": 56015.9 },\n  { \"date\": \"2021-10-13\", \"value\": 57380.1 },\n  { \"date\": \"2021-10-14\", \"value\": 57345.8 },\n  { \"date\": \"2021-10-15\", \"value\": 61672.5 },\n  { \"date\": \"2021-10-16\", \"value\": 60861.1 },\n  { \"date\": \"2021-10-17\", \"value\": 61527.5 },\n  { \"date\": \"2021-10-18\", \"value\": 62056.3 },\n  { \"date\": \"2021-10-19\", \"value\": 64278.5 },\n  { \"date\": \"2021-10-20\", \"value\": 65979.1 },\n  { \"date\": \"2021-10-21\", \"value\": 62210.2 },\n  { \"date\": \"2021-10-22\", \"value\": 60690.3 },\n  { \"date\": \"2021-10-23\", \"value\": 61312.5 },\n  { \"date\": \"2021-10-24\", \"value\": 60866.5 },\n  { \"date\": \"2021-10-25\", \"value\": 63067.0 },\n  { \"date\": \"2021-10-26\", \"value\": 60310.8 },\n  { \"date\": \"2021-10-27\", \"value\": 58438.1 },\n  { \"date\": \"2021-10-28\", \"value\": 60582.5 },\n  { \"date\": \"2021-10-29\", \"value\": 62242.8 },\n  { \"date\": \"2021-10-30\", \"value\": 61840.1 },\n  { \"date\": \"2021-10-31\", \"value\": 61309.6 },\n  { \"date\": \"2021-11-01\", \"value\": 60915.3 },\n  { \"date\": \"2021-11-02\", \"value\": 63221.7 },\n  { \"date\": \"2021-11-03\", \"value\": 62918.5 },\n  { \"date\": \"2021-11-04\", \"value\": 61412.6 },\n  { \"date\": \"2021-11-05\", \"value\": 60974.3 },\n  { \"date\": \"2021-11-06\", \"value\": 61483.9 },\n  { \"date\": \"2021-11-07\", \"value\": 63273.2 },\n  { \"date\": \"2021-11-08\", \"value\": 67527.9 },\n  { \"date\": \"2021-11-09\", \"value\": 66904.4 },\n  { \"date\": \"2021-11-10\", \"value\": 64932.6 },\n  { \"date\": \"2021-11-11\", \"value\": 64806.7 },\n  { \"date\": \"2021-11-12\", \"value\": 64134.5 },\n  { \"date\": \"2021-11-13\", \"value\": 64398.6 },\n  { \"date\": \"2021-11-14\", \"value\": 65508.2 },\n  { \"date\": \"2021-11-15\", \"value\": 63597.9 },\n  { \"date\": \"2021-11-16\", \"value\": 60089.1 },\n  { \"date\": \"2021-11-17\", \"value\": 60367.8 },\n  { \"date\": \"2021-11-18\", \"value\": 56955.3 },\n  { \"date\": \"2021-11-19\", \"value\": 58083.4 },\n  { \"date\": \"2021-11-20\", \"value\": 59717.6 },\n  { \"date\": \"2021-11-21\", \"value\": 58714.3 },\n  { \"date\": \"2021-11-22\", \"value\": 56308.8 },\n  { \"date\": \"2021-11-23\", \"value\": 57573.2 },\n  { \"date\": \"2021-11-24\", \"value\": 57171.7 },\n  { \"date\": \"2021-11-25\", \"value\": 58935.1 },\n  { \"date\": \"2021-11-26\", \"value\": 53730.9 },\n  { \"date\": \"2021-11-27\", \"value\": 54765.9 },\n  { \"date\": \"2021-11-28\", \"value\": 57291.5 },\n  { \"date\": \"2021-11-29\", \"value\": 57794.8 },\n  { \"date\": \"2021-11-30\", \"value\": 56882.9 },\n  { \"date\": \"2021-12-01\", \"value\": 57210.3 },\n  { \"date\": \"2021-12-02\", \"value\": 56496.0 },\n  { \"date\": \"2021-12-03\", \"value\": 53631.5 },\n  { \"date\": \"2021-12-04\", \"value\": 49195.2 },\n  { \"date\": \"2021-12-05\", \"value\": 49405.5 },\n  { \"date\": \"2021-12-06\", \"value\": 50562.1 },\n  { \"date\": \"2021-12-07\", \"value\": 50595.2 },\n  { \"date\": \"2021-12-08\", \"value\": 50473.9 },\n  { \"date\": \"2021-12-09\", \"value\": 47596.6 },\n  { \"date\": \"2021-12-10\", \"value\": 47137.2 },\n  { \"date\": \"2021-12-11\", \"value\": 49314.5 },\n  { \"date\": \"2021-12-12\", \"value\": 50081.0 },\n  { \"date\": \"2021-12-13\", \"value\": 46703.6 },\n  { \"date\": \"2021-12-14\", \"value\": 48366.5 },\n  { \"date\": \"2021-12-15\", \"value\": 48871.5 },\n  { \"date\": \"2021-12-16\", \"value\": 47628.2 },\n  { \"date\": \"2021-12-17\", \"value\": 46172.2 },\n  { \"date\": \"2021-12-18\", \"value\": 46856.2 },\n  { \"date\": \"2021-12-19\", \"value\": 46704.5 },\n  { \"date\": \"2021-12-20\", \"value\": 46895.2 },\n  { \"date\": \"2021-12-21\", \"value\": 48902.0 },\n  { \"date\": \"2021-12-22\", \"value\": 48599.7 },\n  { \"date\": \"2021-12-23\", \"value\": 50801.0 },\n  { \"date\": \"2021-12-24\", \"value\": 50786.1 },\n  { \"date\": \"2021-12-25\", \"value\": 50406.4 },\n  { \"date\": \"2021-12-26\", \"value\": 50779.9 },\n  { \"date\": \"2021-12-27\", \"value\": 50678.2 },\n  { \"date\": \"2021-12-28\", \"value\": 47545.2 },\n  { \"date\": \"2021-12-29\", \"value\": 46461.7 },\n  { \"date\": \"2021-12-30\", \"value\": 47123.3 },\n  { \"date\": \"2021-12-31\", \"value\": 46219.5 },\n  { \"date\": \"2022-01-01\", \"value\": 47738.0 },\n  { \"date\": \"2022-01-02\", \"value\": 47311.8 },\n  { \"date\": \"2022-01-03\", \"value\": 46430.2 },\n  { \"date\": \"2022-01-04\", \"value\": 45837.3 },\n  { \"date\": \"2022-01-05\", \"value\": 43425.9 },\n  { \"date\": \"2022-01-06\", \"value\": 43097.5 },\n  { \"date\": \"2022-01-07\", \"value\": 41546.7 },\n  { \"date\": \"2022-01-08\", \"value\": 41672.0 },\n  { \"date\": \"2022-01-09\", \"value\": 41848.3 },\n  { \"date\": \"2022-01-10\", \"value\": 41832.2 },\n  { \"date\": \"2022-01-11\", \"value\": 42733.2 },\n  { \"date\": \"2022-01-12\", \"value\": 43901.0 },\n  { \"date\": \"2022-01-13\", \"value\": 42560.0 },\n  { \"date\": \"2022-01-14\", \"value\": 43073.3 },\n  { \"date\": \"2022-01-15\", \"value\": 43097.0 },\n  { \"date\": \"2022-01-16\", \"value\": 43079.1 },\n  { \"date\": \"2022-01-17\", \"value\": 42209.3 },\n  { \"date\": \"2022-01-18\", \"value\": 42364.6 },\n  { \"date\": \"2022-01-19\", \"value\": 41677.8 },\n  { \"date\": \"2022-01-20\", \"value\": 40715.9 },\n  { \"date\": \"2022-01-21\", \"value\": 36475.5 },\n  { \"date\": \"2022-01-22\", \"value\": 35075.2 },\n  { \"date\": \"2022-01-23\", \"value\": 36269.5 },\n  { \"date\": \"2022-01-24\", \"value\": 36686.3 },\n  { \"date\": \"2022-01-25\", \"value\": 36950.6 },\n  { \"date\": \"2022-01-26\", \"value\": 36800.4 },\n  { \"date\": \"2022-01-27\", \"value\": 37164.3 },\n  { \"date\": \"2022-01-28\", \"value\": 37745.1 },\n  { \"date\": \"2022-01-29\", \"value\": 38170.8 },\n  { \"date\": \"2022-01-30\", \"value\": 37917.7 },\n  { \"date\": \"2022-01-31\", \"value\": 38498.6 },\n  { \"date\": \"2022-02-01\", \"value\": 38709.7 },\n  { \"date\": \"2022-02-02\", \"value\": 36890.2 },\n  { \"date\": \"2022-02-03\", \"value\": 37287.8 },\n  { \"date\": \"2022-02-04\", \"value\": 41567.6 },\n  { \"date\": \"2022-02-05\", \"value\": 41412.1 },\n  { \"date\": \"2022-02-06\", \"value\": 42392.2 },\n  { \"date\": \"2022-02-07\", \"value\": 43833.9 },\n  { \"date\": \"2022-02-08\", \"value\": 44038.2 },\n  { \"date\": \"2022-02-09\", \"value\": 44388.9 },\n  { \"date\": \"2022-02-10\", \"value\": 43521.0 },\n  { \"date\": \"2022-02-11\", \"value\": 42388.4 },\n  { \"date\": \"2022-02-12\", \"value\": 42205.2 },\n  { \"date\": \"2022-02-13\", \"value\": 42061.1 },\n  { \"date\": \"2022-02-14\", \"value\": 42550.3 },\n  { \"date\": \"2022-02-15\", \"value\": 44544.4 },\n  { \"date\": \"2022-02-16\", \"value\": 43883.6 },\n  { \"date\": \"2022-02-17\", \"value\": 40552.8 },\n  { \"date\": \"2022-02-18\", \"value\": 40000.1 },\n  { \"date\": \"2022-02-19\", \"value\": 40090.3 },\n  { \"date\": \"2022-02-20\", \"value\": 38355.0 },\n  { \"date\": \"2022-02-21\", \"value\": 37017.7 },\n  { \"date\": \"2022-02-22\", \"value\": 38248.2 },\n  { \"date\": \"2022-02-23\", \"value\": 37224.6 },\n  { \"date\": \"2022-02-24\", \"value\": 38339.2 },\n  { \"date\": \"2022-02-25\", \"value\": 39209.6 },\n  { \"date\": \"2022-02-26\", \"value\": 39115.5 },\n  { \"date\": \"2022-02-27\", \"value\": 37689.1 },\n  { \"date\": \"2022-02-28\", \"value\": 43188.2 },\n  { \"date\": \"2022-03-01\", \"value\": 44420.3 },\n  { \"date\": \"2022-03-02\", \"value\": 43912.8 },\n  { \"date\": \"2022-03-03\", \"value\": 42463.0 },\n  { \"date\": \"2022-03-04\", \"value\": 39142.7 },\n  { \"date\": \"2022-03-05\", \"value\": 39395.8 },\n  { \"date\": \"2022-03-06\", \"value\": 38403.1 },\n  { \"date\": \"2022-03-07\", \"value\": 38024.8 },\n  { \"date\": \"2022-03-08\", \"value\": 38744.8 },\n  { \"date\": \"2022-03-09\", \"value\": 41929.0 },\n  { \"date\": \"2022-03-10\", \"value\": 39416.3 },\n  { \"date\": \"2022-03-11\", \"value\": 38730.2 },\n  { \"date\": \"2022-03-12\", \"value\": 38814.3 },\n  { \"date\": \"2022-03-13\", \"value\": 37792.4 },\n  { \"date\": \"2022-03-14\", \"value\": 39671.1 },\n  { \"date\": \"2022-03-15\", \"value\": 39285.7 },\n  { \"date\": \"2022-03-16\", \"value\": 41118.7 },\n  { \"date\": \"2022-03-17\", \"value\": 40914.8 },\n  { \"date\": \"2022-03-18\", \"value\": 41767.8 },\n  { \"date\": \"2022-03-19\", \"value\": 42233.0 },\n  { \"date\": \"2022-03-20\", \"value\": 41276.0 },\n  { \"date\": \"2022-03-21\", \"value\": 41022.0 },\n  { \"date\": \"2022-03-22\", \"value\": 42373.0 },\n  { \"date\": \"2022-03-23\", \"value\": 42912.0 },\n  { \"date\": \"2022-03-24\", \"value\": 44013.0 },\n  { \"date\": \"2022-03-25\", \"value\": 44331.0 },\n  { \"date\": \"2022-03-26\", \"value\": 44548.0 },\n  { \"date\": \"2022-03-27\", \"value\": 46859.0 },\n  { \"date\": \"2022-03-28\", \"value\": 47105.0 },\n  { \"date\": \"2022-03-29\", \"value\": 47449.0 },\n  { \"date\": \"2022-03-30\", \"value\": 47075.0 },\n  { \"date\": \"2022-03-31\", \"value\": 45525.0 },\n  { \"date\": \"2022-04-01\", \"value\": 46297.0 },\n  { \"date\": \"2022-04-02\", \"value\": 45811.0 },\n  { \"date\": \"2022-04-03\", \"value\": 46407.0 },\n  { \"date\": \"2022-04-04\", \"value\": 46629.0 },\n  { \"date\": \"2022-04-05\", \"value\": 45506.0 },\n  { \"date\": \"2022-04-06\", \"value\": 43173.0 },\n  { \"date\": \"2022-04-07\", \"value\": 43448.0 },\n  { \"date\": \"2022-04-08\", \"value\": 42275.0 },\n  { \"date\": \"2022-04-09\", \"value\": 42767.0 },\n  { \"date\": \"2022-04-10\", \"value\": 42138.0 },\n  { \"date\": \"2022-04-11\", \"value\": 39497.0 },\n  { \"date\": \"2022-04-12\", \"value\": 40078.0 },\n  { \"date\": \"2022-04-13\", \"value\": 41133.0 },\n  { \"date\": \"2022-04-14\", \"value\": 39936.0 },\n  { \"date\": \"2022-04-15\", \"value\": 40560.0 },\n  { \"date\": \"2022-04-16\", \"value\": 40382.0 },\n  { \"date\": \"2022-04-17\", \"value\": 39703.0 },\n  { \"date\": \"2022-04-18\", \"value\": 40803.0 },\n  { \"date\": \"2022-04-19\", \"value\": 41503.0 },\n  { \"date\": \"2022-04-20\", \"value\": 41368.0 },\n  { \"date\": \"2022-04-21\", \"value\": 40482.0 },\n  { \"date\": \"2022-04-22\", \"value\": 39709.0 },\n  { \"date\": \"2022-04-23\", \"value\": 39418.0 },\n  { \"date\": \"2022-04-24\", \"value\": 39464.0 },\n  { \"date\": \"2022-04-25\", \"value\": 40427.0 },\n  { \"date\": \"2022-04-26\", \"value\": 38113.0 },\n  { \"date\": \"2022-04-27\", \"value\": 39243.0 },\n  { \"date\": \"2022-04-28\", \"value\": 39748.0 },\n  { \"date\": \"2022-04-29\", \"value\": 38581.0 },\n  { \"date\": \"2022-04-30\", \"value\": 37650.0 },\n  { \"date\": \"2022-05-01\", \"value\": 38461.0 },\n  { \"date\": \"2022-05-02\", \"value\": 38514.0 },\n  { \"date\": \"2022-05-03\", \"value\": 37718.0 },\n  { \"date\": \"2022-05-04\", \"value\": 39688.0 },\n  { \"date\": \"2022-05-05\", \"value\": 36544.0 },\n  { \"date\": \"2022-05-06\", \"value\": 36009.0 },\n  { \"date\": \"2022-05-07\", \"value\": 35468.0 },\n  { \"date\": \"2022-05-08\", \"value\": 34060.0 },\n  { \"date\": \"2022-05-09\", \"value\": 30095.0 },\n  { \"date\": \"2022-05-10\", \"value\": 31007.5 },\n  { \"date\": \"2022-05-11\", \"value\": 29068.2 },\n  { \"date\": \"2022-05-12\", \"value\": 28976.0 },\n  { \"date\": \"2022-05-13\", \"value\": 29284.4 },\n  { \"date\": \"2022-05-14\", \"value\": 30080.4 },\n  { \"date\": \"2022-05-15\", \"value\": 31308.7 },\n  { \"date\": \"2022-05-16\", \"value\": 29849.0 },\n  { \"date\": \"2022-05-17\", \"value\": 30437.5 },\n  { \"date\": \"2022-05-18\", \"value\": 28683.7 },\n  { \"date\": \"2022-05-19\", \"value\": 30305.9 },\n  { \"date\": \"2022-05-20\", \"value\": 29178.6 },\n  { \"date\": \"2022-05-21\", \"value\": 29434.6 },\n  { \"date\": \"2022-05-22\", \"value\": 30286.6 },\n  { \"date\": \"2022-05-23\", \"value\": 29093.3 },\n  { \"date\": \"2022-05-24\", \"value\": 29648.7 },\n  { \"date\": \"2022-05-25\", \"value\": 29540.6 },\n  { \"date\": \"2022-05-26\", \"value\": 29203.5 },\n  { \"date\": \"2022-05-27\", \"value\": 28601.2 },\n  { \"date\": \"2022-05-28\", \"value\": 29027.1 },\n  { \"date\": \"2022-05-29\", \"value\": 29465.2 },\n  { \"date\": \"2022-05-30\", \"value\": 31723.3 },\n  { \"date\": \"2022-05-31\", \"value\": 31793.4 },\n  { \"date\": \"2022-06-01\", \"value\": 29798.5 },\n  { \"date\": \"2022-06-02\", \"value\": 30455.5 },\n  { \"date\": \"2022-06-03\", \"value\": 29700.9 },\n  { \"date\": \"2022-06-04\", \"value\": 29864.3 },\n  { \"date\": \"2022-06-05\", \"value\": 29913.0 },\n  { \"date\": \"2022-06-06\", \"value\": 31367.6 },\n  { \"date\": \"2022-06-07\", \"value\": 31128.8 },\n  { \"date\": \"2022-06-08\", \"value\": 30201.6 },\n  { \"date\": \"2022-06-09\", \"value\": 30097.8 },\n  { \"date\": \"2022-06-10\", \"value\": 29083.3 },\n  { \"date\": \"2022-06-11\", \"value\": 28403.4 },\n  { \"date\": \"2022-06-12\", \"value\": 26606.3 },\n  { \"date\": \"2022-06-13\", \"value\": 22448.0 },\n  { \"date\": \"2022-06-14\", \"value\": 22157.3 },\n  { \"date\": \"2022-06-15\", \"value\": 22577.9 },\n  { \"date\": \"2022-06-16\", \"value\": 20386.6 },\n  { \"date\": \"2022-06-17\", \"value\": 20444.6 },\n  { \"date\": \"2022-06-18\", \"value\": 18986.5 },\n  { \"date\": \"2022-06-19\", \"value\": 20577.2 },\n  { \"date\": \"2022-06-20\", \"value\": 20572.3 },\n  { \"date\": \"2022-06-21\", \"value\": 20720.4 },\n  { \"date\": \"2022-06-22\", \"value\": 19965.8 },\n  { \"date\": \"2022-06-23\", \"value\": 21100.7 },\n  { \"date\": \"2022-06-24\", \"value\": 21226.9 },\n  { \"date\": \"2022-06-25\", \"value\": 21489.9 },\n  { \"date\": \"2022-06-26\", \"value\": 21043.5 },\n  { \"date\": \"2022-06-27\", \"value\": 20730.2 },\n  { \"date\": \"2022-06-28\", \"value\": 20278.0 },\n  { \"date\": \"2022-06-29\", \"value\": 20111.3 },\n  { \"date\": \"2022-06-30\", \"value\": 19926.6 },\n  { \"date\": \"2022-07-01\", \"value\": 19262.9 },\n  { \"date\": \"2022-07-02\", \"value\": 19243.2 },\n  { \"date\": \"2022-07-03\", \"value\": 19309.9 },\n  { \"date\": \"2022-07-04\", \"value\": 20215.8 },\n  { \"date\": \"2022-07-05\", \"value\": 20200.6 },\n  { \"date\": \"2022-07-06\", \"value\": 20561.1 },\n  { \"date\": \"2022-07-07\", \"value\": 21637.8 },\n  { \"date\": \"2022-07-08\", \"value\": 21611.2 },\n  { \"date\": \"2022-07-09\", \"value\": 21587.5 },\n  { \"date\": \"2022-07-10\", \"value\": 20847.4 },\n  { \"date\": \"2022-07-11\", \"value\": 19963.2 },\n  { \"date\": \"2022-07-12\", \"value\": 19330.9 },\n  { \"date\": \"2022-07-13\", \"value\": 20250.0 },\n  { \"date\": \"2022-07-14\", \"value\": 20586.0 },\n  { \"date\": \"2022-07-15\", \"value\": 20825.1 },\n  { \"date\": \"2022-07-16\", \"value\": 21209.9 },\n  { \"date\": \"2022-07-17\", \"value\": 20785.6 },\n  { \"date\": \"2022-07-18\", \"value\": 22525.8 },\n  { \"date\": \"2022-07-19\", \"value\": 23410.2 },\n  { \"date\": \"2022-07-20\", \"value\": 23215.2 },\n  { \"date\": \"2022-07-21\", \"value\": 23153.0 },\n  { \"date\": \"2022-07-22\", \"value\": 22675.2 },\n  { \"date\": \"2022-07-23\", \"value\": 22460.4 },\n  { \"date\": \"2022-07-24\", \"value\": 22582.1 },\n  { \"date\": \"2022-07-25\", \"value\": 21301.9 },\n  { \"date\": \"2022-07-26\", \"value\": 21248.7 },\n  { \"date\": \"2022-07-27\", \"value\": 22958.3 },\n  { \"date\": \"2022-07-28\", \"value\": 23850.0 },\n  { \"date\": \"2022-07-29\", \"value\": 23774.3 },\n  { \"date\": \"2022-07-30\", \"value\": 23634.2 },\n  { \"date\": \"2022-07-31\", \"value\": 23303.4 },\n  { \"date\": \"2022-08-01\", \"value\": 23271.2 },\n  { \"date\": \"2022-08-02\", \"value\": 22988.6 },\n  { \"date\": \"2022-08-03\", \"value\": 22820.8 },\n  { \"date\": \"2022-08-04\", \"value\": 22612.1 },\n  { \"date\": \"2022-08-05\", \"value\": 23308.2 },\n  { \"date\": \"2022-08-06\", \"value\": 22944.2 },\n  { \"date\": \"2022-08-07\", \"value\": 23175.3 },\n  { \"date\": \"2022-08-08\", \"value\": 23816.3 },\n  { \"date\": \"2022-08-09\", \"value\": 23146.7 },\n  { \"date\": \"2022-08-10\", \"value\": 23962.9 },\n  { \"date\": \"2022-08-11\", \"value\": 23935.3 },\n  { \"date\": \"2022-08-12\", \"value\": 24398.7 },\n  { \"date\": \"2022-08-13\", \"value\": 24442.5 },\n  { \"date\": \"2022-08-14\", \"value\": 24302.8 },\n  { \"date\": \"2022-08-15\", \"value\": 24101.7 },\n  { \"date\": \"2022-08-16\", \"value\": 23856.8 },\n  { \"date\": \"2022-08-17\", \"value\": 23338.0 },\n  { \"date\": \"2022-08-18\", \"value\": 23203.6 },\n  { \"date\": \"2022-08-19\", \"value\": 20831.3 },\n  { \"date\": \"2022-08-20\", \"value\": 21138.9 },\n  { \"date\": \"2022-08-21\", \"value\": 21517.2 },\n  { \"date\": \"2022-08-22\", \"value\": 21416.3 },\n  { \"date\": \"2022-08-23\", \"value\": 21517.2 },\n  { \"date\": \"2022-08-24\", \"value\": 21365.2 },\n  { \"date\": \"2022-08-25\", \"value\": 21565.4 },\n  { \"date\": \"2022-08-26\", \"value\": 20249.9 },\n  { \"date\": \"2022-08-27\", \"value\": 20033.9 },\n  { \"date\": \"2022-08-28\", \"value\": 19550.2 },\n  { \"date\": \"2022-08-29\", \"value\": 20295.8 },\n  { \"date\": \"2022-08-30\", \"value\": 19792.6 },\n  { \"date\": \"2022-08-31\", \"value\": 20043.9 },\n  { \"date\": \"2022-09-01\", \"value\": 20126.1 },\n  { \"date\": \"2022-09-02\", \"value\": 19952.7 },\n  { \"date\": \"2022-09-03\", \"value\": 19831.4 },\n  { \"date\": \"2022-09-04\", \"value\": 19999.9 },\n  { \"date\": \"2022-09-05\", \"value\": 19793.1 },\n  { \"date\": \"2022-09-06\", \"value\": 18786.4 },\n  { \"date\": \"2022-09-07\", \"value\": 19281.5 },\n  { \"date\": \"2022-09-08\", \"value\": 19317.4 },\n  { \"date\": \"2022-09-09\", \"value\": 21365.2 },\n  { \"date\": \"2022-09-10\", \"value\": 21650.4 },\n  { \"date\": \"2022-09-11\", \"value\": 21834.9 },\n  { \"date\": \"2022-09-12\", \"value\": 22395.3 },\n  { \"date\": \"2022-09-13\", \"value\": 20175.5 },\n  { \"date\": \"2022-09-14\", \"value\": 20222.5 },\n  { \"date\": \"2022-09-15\", \"value\": 19701.7 },\n  { \"date\": \"2022-09-16\", \"value\": 19802.4 },\n  { \"date\": \"2022-09-17\", \"value\": 20113.5 },\n  { \"date\": \"2022-09-18\", \"value\": 19418.8 },\n  { \"date\": \"2022-09-19\", \"value\": 19538.9 },\n  { \"date\": \"2022-09-20\", \"value\": 18872.4 },\n  { \"date\": \"2022-09-21\", \"value\": 18489.0 },\n  { \"date\": \"2022-09-22\", \"value\": 19404.0 },\n  { \"date\": \"2022-09-23\", \"value\": 19293.5 },\n  { \"date\": \"2022-09-24\", \"value\": 18925.2 },\n  { \"date\": \"2022-09-25\", \"value\": 18803.2 },\n  { \"date\": \"2022-09-26\", \"value\": 19225.7 },\n  { \"date\": \"2022-09-27\", \"value\": 19081.0 },\n  { \"date\": \"2022-09-28\", \"value\": 19411.0 },\n  { \"date\": \"2022-09-29\", \"value\": 19593.0 },\n  { \"date\": \"2022-09-30\", \"value\": 19423.0 },\n  { \"date\": \"2022-10-01\", \"value\": 19311.9 },\n  { \"date\": \"2022-10-02\", \"value\": 19052.2 },\n  { \"date\": \"2022-10-03\", \"value\": 19628.3 },\n  { \"date\": \"2022-10-04\", \"value\": 20340.2 },\n  { \"date\": \"2022-10-05\", \"value\": 20157.5 },\n  { \"date\": \"2022-10-06\", \"value\": 19956.7 },\n  { \"date\": \"2022-10-07\", \"value\": 19531.3 },\n  { \"date\": \"2022-10-08\", \"value\": 19415.0 },\n  { \"date\": \"2022-10-09\", \"value\": 19441.0 },\n  { \"date\": \"2022-10-10\", \"value\": 19134.6 },\n  { \"date\": \"2022-10-11\", \"value\": 19059.1 },\n  { \"date\": \"2022-10-12\", \"value\": 19154.8 },\n  { \"date\": \"2022-10-13\", \"value\": 19379.8 },\n  { \"date\": \"2022-10-14\", \"value\": 19181.8 },\n  { \"date\": \"2022-10-15\", \"value\": 19068.7 },\n  { \"date\": \"2022-10-16\", \"value\": 19261.9 },\n  { \"date\": \"2022-10-17\", \"value\": 19548.2 },\n  { \"date\": \"2022-10-18\", \"value\": 19328.2 },\n  { \"date\": \"2022-10-19\", \"value\": 19123.9 },\n  { \"date\": \"2022-10-20\", \"value\": 19042.9 },\n  { \"date\": \"2022-10-21\", \"value\": 19162.6 },\n  { \"date\": \"2022-10-22\", \"value\": 19204.8 },\n  { \"date\": \"2022-10-23\", \"value\": 19571.2 },\n  { \"date\": \"2022-10-24\", \"value\": 19331.5 },\n  { \"date\": \"2022-10-25\", \"value\": 20082.7 },\n  { \"date\": \"2022-10-26\", \"value\": 20769.5 },\n  { \"date\": \"2022-10-27\", \"value\": 20292.9 },\n  { \"date\": \"2022-10-28\", \"value\": 20594.4 },\n  { \"date\": \"2022-10-29\", \"value\": 20809.8 },\n  { \"date\": \"2022-10-30\", \"value\": 20626.3 },\n  { \"date\": \"2022-10-31\", \"value\": 20496.3 },\n  { \"date\": \"2022-11-01\", \"value\": 20483.5 },\n  { \"date\": \"2022-11-02\", \"value\": 20154.4 },\n  { \"date\": \"2022-11-03\", \"value\": 20206.4 },\n  { \"date\": \"2022-11-04\", \"value\": 21145.9 },\n  { \"date\": \"2022-11-05\", \"value\": 21301.6 },\n  { \"date\": \"2022-11-06\", \"value\": 20916.3 },\n  { \"date\": \"2022-11-07\", \"value\": 20589.0 },\n  { \"date\": \"2022-11-08\", \"value\": 18527.4 },\n  { \"date\": \"2022-11-09\", \"value\": 15886.9 },\n  { \"date\": \"2022-11-10\", \"value\": 17589.1 },\n  { \"date\": \"2022-11-11\", \"value\": 17049.9 },\n  { \"date\": \"2022-11-12\", \"value\": 16795.2 },\n  { \"date\": \"2022-11-13\", \"value\": 16324.5 },\n  { \"date\": \"2022-11-14\", \"value\": 16613.7 },\n  { \"date\": \"2022-11-15\", \"value\": 16895.1 },\n  { \"date\": \"2022-11-16\", \"value\": 16540.5 },\n  { \"date\": \"2022-11-17\", \"value\": 16691.2 },\n  { \"date\": \"2022-11-18\", \"value\": 16638.3 },\n  { \"date\": \"2022-11-19\", \"value\": 16699.2 },\n  { \"date\": \"2022-11-20\", \"value\": 16286.7 },\n  { \"date\": \"2022-11-21\", \"value\": 15776.2 },\n  { \"date\": \"2022-11-22\", \"value\": 16212.9 },\n  { \"date\": \"2022-11-23\", \"value\": 16623.9 },\n  { \"date\": \"2022-11-24\", \"value\": 16601.2 },\n  { \"date\": \"2022-11-25\", \"value\": 16512.3 },\n  { \"date\": \"2022-11-26\", \"value\": 16456.5 },\n  { \"date\": \"2022-11-27\", \"value\": 16425.6 },\n  { \"date\": \"2022-11-28\", \"value\": 16211.7 },\n  { \"date\": \"2022-11-29\", \"value\": 16440.4 },\n  { \"date\": \"2022-11-30\", \"value\": 17163.9 },\n  { \"date\": \"2022-12-01\", \"value\": 16972.0 },\n  { \"date\": \"2022-12-02\", \"value\": 17093.6 },\n  { \"date\": \"2022-12-03\", \"value\": 16884.5 },\n  { \"date\": \"2022-12-04\", \"value\": 17112.6 },\n  { \"date\": \"2022-12-05\", \"value\": 16966.5 },\n  { \"date\": \"2022-12-06\", \"value\": 17089.3 },\n  { \"date\": \"2022-12-07\", \"value\": 16835.2 },\n  { \"date\": \"2022-12-08\", \"value\": 17225.7 },\n  { \"date\": \"2022-12-09\", \"value\": 17125.7 },\n  { \"date\": \"2022-12-10\", \"value\": 17127.2 },\n  { \"date\": \"2022-12-11\", \"value\": 17093.3 },\n  { \"date\": \"2022-12-12\", \"value\": 17210.4 },\n  { \"date\": \"2022-12-13\", \"value\": 17778.6 },\n  { \"date\": \"2022-12-14\", \"value\": 17796.4 },\n  { \"date\": \"2022-12-15\", \"value\": 17356.1 },\n  { \"date\": \"2022-12-16\", \"value\": 16629.6 },\n  { \"date\": \"2022-12-17\", \"value\": 16777.1 },\n  { \"date\": \"2022-12-18\", \"value\": 16741.1 },\n  { \"date\": \"2022-12-19\", \"value\": 16441.3 },\n  { \"date\": \"2022-12-20\", \"value\": 16902.8 },\n  { \"date\": \"2022-12-21\", \"value\": 16831.8 },\n  { \"date\": \"2022-12-22\", \"value\": 16820.6 },\n  { \"date\": \"2022-12-23\", \"value\": 16779.1 },\n  { \"date\": \"2022-12-24\", \"value\": 16837.2 },\n  { \"date\": \"2022-12-25\", \"value\": 16831.8 },\n  { \"date\": \"2022-12-26\", \"value\": 16918.1 },\n  { \"date\": \"2022-12-27\", \"value\": 16706.1 },\n  { \"date\": \"2022-12-28\", \"value\": 16546.2 },\n  { \"date\": \"2022-12-29\", \"value\": 16636.4 },\n  { \"date\": \"2022-12-30\", \"value\": 16607.2 },\n  { \"date\": \"2022-12-31\", \"value\": 16537.4 },\n  { \"date\": \"2023-01-01\", \"value\": 16618.4 },\n  { \"date\": \"2023-01-02\", \"value\": 16674.3 },\n  { \"date\": \"2023-01-03\", \"value\": 16674.2 },\n  { \"date\": \"2023-01-04\", \"value\": 16852.1 },\n  { \"date\": \"2023-01-05\", \"value\": 16829.8 },\n  { \"date\": \"2023-01-06\", \"value\": 16950.9 },\n  { \"date\": \"2023-01-07\", \"value\": 16943.6 },\n  { \"date\": \"2023-01-08\", \"value\": 17119.0 },\n  { \"date\": \"2023-01-09\", \"value\": 17180.1 },\n  { \"date\": \"2023-01-10\", \"value\": 17439.1 },\n  { \"date\": \"2023-01-11\", \"value\": 17942.3 },\n  { \"date\": \"2023-01-12\", \"value\": 18851.3 },\n  { \"date\": \"2023-01-13\", \"value\": 19927.0 },\n  { \"date\": \"2023-01-14\", \"value\": 20958.2 },\n  { \"date\": \"2023-01-15\", \"value\": 20879.8 },\n  { \"date\": \"2023-01-16\", \"value\": 21184.2 },\n  { \"date\": \"2023-01-17\", \"value\": 21137.1 },\n  { \"date\": \"2023-01-18\", \"value\": 20670.6 },\n  { \"date\": \"2023-01-19\", \"value\": 21081.2 },\n  { \"date\": \"2023-01-20\", \"value\": 22677.2 },\n  { \"date\": \"2023-01-21\", \"value\": 22775.7 },\n  { \"date\": \"2023-01-22\", \"value\": 22707.8 },\n  { \"date\": \"2023-01-23\", \"value\": 22915.5 },\n  { \"date\": \"2023-01-24\", \"value\": 22632.5 },\n  { \"date\": \"2023-01-25\", \"value\": 23055.1 },\n  { \"date\": \"2023-01-26\", \"value\": 23016.0 },\n  { \"date\": \"2023-01-27\", \"value\": 23074.6 },\n  { \"date\": \"2023-01-28\", \"value\": 23027.9 },\n  { \"date\": \"2023-01-29\", \"value\": 23753.1 },\n  { \"date\": \"2023-01-30\", \"value\": 22832.2 },\n  { \"date\": \"2023-01-31\", \"value\": 23125.1 },\n  { \"date\": \"2023-02-01\", \"value\": 23725.6 },\n  { \"date\": \"2023-02-02\", \"value\": 23427.6 },\n  { \"date\": \"2023-02-03\", \"value\": 23431.2 },\n  { \"date\": \"2023-02-04\", \"value\": 23323.8 },\n  { \"date\": \"2023-02-05\", \"value\": 22936.0 },\n  { \"date\": \"2023-02-06\", \"value\": 22761.8 },\n  { \"date\": \"2023-02-07\", \"value\": 23251.7 },\n  { \"date\": \"2023-02-08\", \"value\": 22964.6 },\n  { \"date\": \"2023-02-09\", \"value\": 21792.5 },\n  { \"date\": \"2023-02-10\", \"value\": 21635.0 },\n  { \"date\": \"2023-02-11\", \"value\": 21859.8 },\n  { \"date\": \"2023-02-12\", \"value\": 21786.8 },\n  { \"date\": \"2023-02-13\", \"value\": 21772.6 },\n  { \"date\": \"2023-02-14\", \"value\": 22198.5 },\n  { \"date\": \"2023-02-15\", \"value\": 24327.9 },\n  { \"date\": \"2023-02-16\", \"value\": 23539.6 },\n  { \"date\": \"2023-02-17\", \"value\": 24573.5 },\n  { \"date\": \"2023-02-18\", \"value\": 24631.4 },\n  { \"date\": \"2023-02-19\", \"value\": 24302.9 },\n  { \"date\": \"2023-02-20\", \"value\": 24839.5 },\n  { \"date\": \"2023-02-21\", \"value\": 24450.7 },\n  { \"date\": \"2023-02-22\", \"value\": 24186.6 },\n  { \"date\": \"2023-02-23\", \"value\": 23936.3 },\n  { \"date\": \"2023-02-24\", \"value\": 23191.5 },\n  { \"date\": \"2023-02-25\", \"value\": 23166.1 },\n  { \"date\": \"2023-02-26\", \"value\": 23558.7 },\n  { \"date\": \"2023-02-27\", \"value\": 23494.1 },\n  { \"date\": \"2023-02-28\", \"value\": 23130.5 },\n  { \"date\": \"2023-03-01\", \"value\": 23642.2 },\n  { \"date\": \"2023-03-02\", \"value\": 23465.4 },\n  { \"date\": \"2023-03-03\", \"value\": 22354.4 },\n  { \"date\": \"2023-03-04\", \"value\": 22347.1 },\n  { \"date\": \"2023-03-05\", \"value\": 22428.3 },\n  { \"date\": \"2023-03-06\", \"value\": 22410.0 },\n  { \"date\": \"2023-03-07\", \"value\": 22197.8 },\n  { \"date\": \"2023-03-08\", \"value\": 21710.8 },\n  { \"date\": \"2023-03-09\", \"value\": 20361.8 },\n  { \"date\": \"2023-03-10\", \"value\": 20156.7 },\n  { \"date\": \"2023-03-11\", \"value\": 20467.5 },\n  { \"date\": \"2023-03-12\", \"value\": 21994.8 },\n  { \"date\": \"2023-03-13\", \"value\": 24114.4 },\n  { \"date\": \"2023-03-14\", \"value\": 24699.7 },\n  { \"date\": \"2023-03-15\", \"value\": 24282.7 },\n  { \"date\": \"2023-03-16\", \"value\": 25004.1 },\n  { \"date\": \"2023-03-17\", \"value\": 27391.8 },\n  { \"date\": \"2023-03-18\", \"value\": 26914.5 },\n  { \"date\": \"2023-03-19\", \"value\": 27958.7 },\n  { \"date\": \"2023-03-20\", \"value\": 27720.5 },\n  { \"date\": \"2023-03-21\", \"value\": 28114.0 },\n  { \"date\": \"2023-03-22\", \"value\": 27261.7 },\n  { \"date\": \"2023-03-23\", \"value\": 28310.7 },\n  { \"date\": \"2023-03-24\", \"value\": 27462.2 },\n  { \"date\": \"2023-03-25\", \"value\": 27475.6 },\n  { \"date\": \"2023-03-26\", \"value\": 27973.5 },\n  { \"date\": \"2023-03-27\", \"value\": 27129.8 },\n  { \"date\": \"2023-03-28\", \"value\": 27262.2 },\n  { \"date\": \"2023-03-29\", \"value\": 28350.4 },\n  { \"date\": \"2023-03-30\", \"value\": 28029.5 },\n  { \"date\": \"2023-03-31\", \"value\": 28473.7 },\n  { \"date\": \"2023-04-01\", \"value\": 28456.1 },\n  { \"date\": \"2023-04-02\", \"value\": 28198.3 },\n  { \"date\": \"2023-04-03\", \"value\": 27802.1 },\n  { \"date\": \"2023-04-04\", \"value\": 28164.4 },\n  { \"date\": \"2023-04-05\", \"value\": 28173.5 },\n  { \"date\": \"2023-04-06\", \"value\": 28036.7 },\n  { \"date\": \"2023-04-07\", \"value\": 27910.4 },\n  { \"date\": \"2023-04-08\", \"value\": 27941.2 },\n  { \"date\": \"2023-04-09\", \"value\": 28326.6 },\n  { \"date\": \"2023-04-10\", \"value\": 29641.0 },\n  { \"date\": \"2023-04-11\", \"value\": 30209.6 },\n  { \"date\": \"2023-04-12\", \"value\": 29886.4 },\n  { \"date\": \"2023-04-13\", \"value\": 30387.4 },\n  { \"date\": \"2023-04-14\", \"value\": 30472.5 },\n  { \"date\": \"2023-04-15\", \"value\": 30299.6 },\n  { \"date\": \"2023-04-16\", \"value\": 30310.3 },\n  { \"date\": \"2023-04-17\", \"value\": 29434.9 },\n  { \"date\": \"2023-04-18\", \"value\": 30382.2 },\n  { \"date\": \"2023-04-19\", \"value\": 28813.7 },\n  { \"date\": \"2023-04-20\", \"value\": 28240.5 },\n  { \"date\": \"2023-04-21\", \"value\": 27264.8 },\n  { \"date\": \"2023-04-22\", \"value\": 27813.9 },\n  { \"date\": \"2023-04-23\", \"value\": 27591.4 },\n  { \"date\": \"2023-04-24\", \"value\": 27509.3 },\n  { \"date\": \"2023-04-25\", \"value\": 28298.8 },\n  { \"date\": \"2023-04-26\", \"value\": 28424.6 },\n  { \"date\": \"2023-04-27\", \"value\": 29475.9 },\n  { \"date\": \"2023-04-28\", \"value\": 29321.8 },\n  { \"date\": \"2023-04-29\", \"value\": 29234.1 },\n  { \"date\": \"2023-04-30\", \"value\": 29252.1 },\n  { \"date\": \"2023-05-01\", \"value\": 28077.6 },\n  { \"date\": \"2023-05-02\", \"value\": 28669.1 },\n  { \"date\": \"2023-05-03\", \"value\": 29023.6 },\n  { \"date\": \"2023-05-04\", \"value\": 28842.1 },\n  { \"date\": \"2023-05-05\", \"value\": 29513.2 },\n  { \"date\": \"2023-05-06\", \"value\": 28857.1 },\n  { \"date\": \"2023-05-07\", \"value\": 28424.8 },\n  { \"date\": \"2023-05-08\", \"value\": 27670.5 },\n  { \"date\": \"2023-05-09\", \"value\": 27634.9 },\n  { \"date\": \"2023-05-10\", \"value\": 27603.3 },\n  { \"date\": \"2023-05-11\", \"value\": 26983.5 },\n  { \"date\": \"2023-05-12\", \"value\": 26799.2 },\n  { \"date\": \"2023-05-13\", \"value\": 26777.5 },\n  { \"date\": \"2023-05-14\", \"value\": 26920.0 },\n  { \"date\": \"2023-05-15\", \"value\": 27183.9 },\n  { \"date\": \"2023-05-16\", \"value\": 27035.3 },\n  { \"date\": \"2023-05-17\", \"value\": 27403.1 },\n  { \"date\": \"2023-05-18\", \"value\": 26828.0 },\n  { \"date\": \"2023-05-19\", \"value\": 26882.9 },\n  { \"date\": \"2023-05-20\", \"value\": 27116.2 },\n  { \"date\": \"2023-05-21\", \"value\": 26749.9 },\n  { \"date\": \"2023-05-22\", \"value\": 26847.3 },\n  { \"date\": \"2023-05-23\", \"value\": 27220.7 },\n  { \"date\": \"2023-05-24\", \"value\": 26328.4 },\n  { \"date\": \"2023-05-25\", \"value\": 26475.8 },\n  { \"date\": \"2023-05-26\", \"value\": 26711.5 },\n  { \"date\": \"2023-05-27\", \"value\": 26857.5 },\n  { \"date\": \"2023-05-28\", \"value\": 28071.2 },\n  { \"date\": \"2023-05-29\", \"value\": 27739.4 },\n  { \"date\": \"2023-05-30\", \"value\": 27698.2 },\n  { \"date\": \"2023-05-31\", \"value\": 27216.1 },\n  { \"date\": \"2023-06-01\", \"value\": 26819.0 },\n  { \"date\": \"2023-06-02\", \"value\": 27244.7 },\n  { \"date\": \"2023-06-03\", \"value\": 27072.0 },\n  { \"date\": \"2023-06-04\", \"value\": 27122.3 },\n  { \"date\": \"2023-06-05\", \"value\": 25747.4 },\n  { \"date\": \"2023-06-06\", \"value\": 27230.2 },\n  { \"date\": \"2023-06-07\", \"value\": 26342.5 },\n  { \"date\": \"2023-06-08\", \"value\": 26501.1 },\n  { \"date\": \"2023-06-09\", \"value\": 26479.3 },\n  { \"date\": \"2023-06-10\", \"value\": 25844.0 },\n  { \"date\": \"2023-06-11\", \"value\": 25928.4 },\n  { \"date\": \"2023-06-12\", \"value\": 25906.8 },\n  { \"date\": \"2023-06-13\", \"value\": 25929.4 },\n  { \"date\": \"2023-06-14\", \"value\": 25129.5 },\n  { \"date\": \"2023-06-15\", \"value\": 25591.3 },\n  { \"date\": \"2023-06-16\", \"value\": 26341.3 },\n  { \"date\": \"2023-06-17\", \"value\": 26515.0 },\n  { \"date\": \"2023-06-18\", \"value\": 26339.7 },\n  { \"date\": \"2023-06-19\", \"value\": 26845.9 },\n  { \"date\": \"2023-06-20\", \"value\": 28307.7 },\n  { \"date\": \"2023-06-21\", \"value\": 29996.9 },\n  { \"date\": \"2023-06-22\", \"value\": 29890.5 },\n  { \"date\": \"2023-06-23\", \"value\": 30679.4 },\n  { \"date\": \"2023-06-24\", \"value\": 30533.6 },\n  { \"date\": \"2023-06-25\", \"value\": 30465.3 },\n  { \"date\": \"2023-06-26\", \"value\": 30267.0 },\n  { \"date\": \"2023-06-27\", \"value\": 30689.1 },\n  { \"date\": \"2023-06-28\", \"value\": 30078.6 },\n  { \"date\": \"2023-06-29\", \"value\": 30445.7 },\n  { \"date\": \"2023-06-30\", \"value\": 30472.9 },\n  { \"date\": \"2023-07-01\", \"value\": 30586.8 },\n  { \"date\": \"2023-07-02\", \"value\": 30617.7 },\n  { \"date\": \"2023-07-03\", \"value\": 31151.3 },\n  { \"date\": \"2023-07-04\", \"value\": 30768.4 },\n  { \"date\": \"2023-07-05\", \"value\": 30512.8 },\n  { \"date\": \"2023-07-06\", \"value\": 29913.1 },\n  { \"date\": \"2023-07-07\", \"value\": 30346.4 },\n  { \"date\": \"2023-07-08\", \"value\": 30288.8 },\n  { \"date\": \"2023-07-09\", \"value\": 30166.9 },\n  { \"date\": \"2023-07-10\", \"value\": 30415.3 },\n  { \"date\": \"2023-07-11\", \"value\": 30623.3 },\n  { \"date\": \"2023-07-12\", \"value\": 30387.3 },\n  { \"date\": \"2023-07-13\", \"value\": 31466.1 },\n  { \"date\": \"2023-07-14\", \"value\": 30317.4 },\n  { \"date\": \"2023-07-15\", \"value\": 30291.4 },\n  { \"date\": \"2023-07-16\", \"value\": 30235.5 },\n  { \"date\": \"2023-07-17\", \"value\": 30139.7 },\n  { \"date\": \"2023-07-18\", \"value\": 29866.8 },\n  { \"date\": \"2023-07-19\", \"value\": 29909.7 },\n  { \"date\": \"2023-07-20\", \"value\": 29801.0 },\n  { \"date\": \"2023-07-21\", \"value\": 29903.1 },\n  { \"date\": \"2023-07-22\", \"value\": 29788.9 },\n  { \"date\": \"2023-07-23\", \"value\": 30085.9 },\n  { \"date\": \"2023-07-24\", \"value\": 29178.1 },\n  { \"date\": \"2023-07-25\", \"value\": 29228.6 },\n  { \"date\": \"2023-07-26\", \"value\": 29352.2 },\n  { \"date\": \"2023-07-27\", \"value\": 29222.7 },\n  { \"date\": \"2023-07-28\", \"value\": 29315.0 },\n  { \"date\": \"2023-07-29\", \"value\": 29353.5 },\n  { \"date\": \"2023-07-30\", \"value\": 29281.7 },\n  { \"date\": \"2023-07-31\", \"value\": 29232.4 },\n  { \"date\": \"2023-08-01\", \"value\": 29712.2 },\n  { \"date\": \"2023-08-02\", \"value\": 29173.7 },\n  { \"date\": \"2023-08-03\", \"value\": 29189.3 },\n  { \"date\": \"2023-08-04\", \"value\": 29105.5 },\n  { \"date\": \"2023-08-05\", \"value\": 29068.1 },\n  { \"date\": \"2023-08-06\", \"value\": 29081.3 },\n  { \"date\": \"2023-08-07\", \"value\": 29204.2 },\n  { \"date\": \"2023-08-08\", \"value\": 29777.4 },\n  { \"date\": \"2023-08-09\", \"value\": 29578.0 },\n  { \"date\": \"2023-08-10\", \"value\": 29449.0 },\n  { \"date\": \"2023-08-11\", \"value\": 29420.8 },\n  { \"date\": \"2023-08-12\", \"value\": 29428.2 },\n  { \"date\": \"2023-08-13\", \"value\": 29300.1 },\n  { \"date\": \"2023-08-14\", \"value\": 29426.7 },\n  { \"date\": \"2023-08-15\", \"value\": 29195.3 },\n  { \"date\": \"2023-08-16\", \"value\": 28726.3 },\n  { \"date\": \"2023-08-17\", \"value\": 26635.7 },\n  { \"date\": \"2023-08-18\", \"value\": 26053.2 },\n  { \"date\": \"2023-08-19\", \"value\": 26099.4 },\n  { \"date\": \"2023-08-20\", \"value\": 26190.8 },\n  { \"date\": \"2023-08-21\", \"value\": 26126.0 },\n  { \"date\": \"2023-08-22\", \"value\": 26039.9 },\n  { \"date\": \"2023-08-23\", \"value\": 26436.2 },\n  { \"date\": \"2023-08-24\", \"value\": 26177.0 },\n  { \"date\": \"2023-08-25\", \"value\": 26057.2 },\n  { \"date\": \"2023-08-26\", \"value\": 26017.1 },\n  { \"date\": \"2023-08-27\", \"value\": 26100.6 },\n  { \"date\": \"2023-08-28\", \"value\": 26118.9 },\n  { \"date\": \"2023-08-29\", \"value\": 27723.9 },\n  { \"date\": \"2023-08-30\", \"value\": 27298.8 },\n  { \"date\": \"2023-08-31\", \"value\": 25937.3 },\n  { \"date\": \"2023-09-01\", \"value\": 25803.2 },\n  { \"date\": \"2023-09-02\", \"value\": 25869.7 },\n  { \"date\": \"2023-09-03\", \"value\": 25971.0 },\n  { \"date\": \"2023-09-04\", \"value\": 25823.3 },\n  { \"date\": \"2023-09-05\", \"value\": 25790.2 },\n  { \"date\": \"2023-09-06\", \"value\": 25758.0 },\n  { \"date\": \"2023-09-07\", \"value\": 26249.8 },\n  { \"date\": \"2023-09-08\", \"value\": 25909.5 },\n  { \"date\": \"2023-09-09\", \"value\": 25901.1 },\n  { \"date\": \"2023-09-10\", \"value\": 25840.2 },\n  { \"date\": \"2023-09-11\", \"value\": 25166.4 },\n  { \"date\": \"2023-09-12\", \"value\": 25834.5 },\n  { \"date\": \"2023-09-13\", \"value\": 26223.0 },\n  { \"date\": \"2023-09-14\", \"value\": 26524.7 },\n  { \"date\": \"2023-09-15\", \"value\": 26601.0 },\n  { \"date\": \"2023-09-16\", \"value\": 26562.0 },\n  { \"date\": \"2023-09-17\", \"value\": 26529.1 },\n  { \"date\": \"2023-09-18\", \"value\": 26763.5 },\n  { \"date\": \"2023-09-19\", \"value\": 27209.2 },\n  { \"date\": \"2023-09-20\", \"value\": 27125.0 },\n  { \"date\": \"2023-09-21\", \"value\": 26570.0 },\n  { \"date\": \"2023-09-22\", \"value\": 26581.9 },\n  { \"date\": \"2023-09-23\", \"value\": 26579.2 },\n  { \"date\": \"2023-09-24\", \"value\": 26251.5 },\n  { \"date\": \"2023-09-25\", \"value\": 26302.7 },\n  { \"date\": \"2023-09-26\", \"value\": 26218.9 },\n  { \"date\": \"2023-09-27\", \"value\": 26366.1 },\n  { \"date\": \"2023-09-28\", \"value\": 27022.6 },\n  { \"date\": \"2023-09-29\", \"value\": 26909.8 },\n  { \"date\": \"2023-09-30\", \"value\": 26962.7 },\n  { \"date\": \"2023-10-01\", \"value\": 27974.5 },\n  { \"date\": \"2023-10-02\", \"value\": 27505.3 },\n  { \"date\": \"2023-10-03\", \"value\": 27428.4 },\n  { \"date\": \"2023-10-04\", \"value\": 27790.9 },\n  { \"date\": \"2023-10-05\", \"value\": 27410.3 },\n  { \"date\": \"2023-10-06\", \"value\": 27936.9 },\n  { \"date\": \"2023-10-07\", \"value\": 27961.1 },\n  { \"date\": \"2023-10-08\", \"value\": 27922.7 },\n  { \"date\": \"2023-10-09\", \"value\": 27581.4 },\n  { \"date\": \"2023-10-10\", \"value\": 27391.0 },\n  { \"date\": \"2023-10-11\", \"value\": 26876.6 },\n  { \"date\": \"2023-10-12\", \"value\": 26761.1 },\n  { \"date\": \"2023-10-13\", \"value\": 26863.5 },\n  { \"date\": \"2023-10-14\", \"value\": 26852.8 },\n  { \"date\": \"2023-10-15\", \"value\": 27161.2 },\n  { \"date\": \"2023-10-16\", \"value\": 28509.7 },\n  { \"date\": \"2023-10-17\", \"value\": 28403.6 },\n  { \"date\": \"2023-10-18\", \"value\": 28321.7 },\n  { \"date\": \"2023-10-19\", \"value\": 28723.0 },\n  { \"date\": \"2023-10-20\", \"value\": 29674.5 },\n  { \"date\": \"2023-10-21\", \"value\": 29912.9 },\n  { \"date\": \"2023-10-22\", \"value\": 29984.2 },\n  { \"date\": \"2023-10-23\", \"value\": 33041.8 },\n  { \"date\": \"2023-10-24\", \"value\": 33917.0 },\n  { \"date\": \"2023-10-25\", \"value\": 34496.8 },\n  { \"date\": \"2023-10-26\", \"value\": 34153.7 },\n  { \"date\": \"2023-10-27\", \"value\": 33901.8 },\n  { \"date\": \"2023-10-28\", \"value\": 34082.6 },\n  { \"date\": \"2023-10-29\", \"value\": 34526.7 },\n  { \"date\": \"2023-10-30\", \"value\": 34477.9 },\n  { \"date\": \"2023-10-31\", \"value\": 34650.6 },\n  { \"date\": \"2023-11-01\", \"value\": 35423.8 },\n  { \"date\": \"2023-11-02\", \"value\": 34931.4 },\n  { \"date\": \"2023-11-03\", \"value\": 34718.7 },\n  { \"date\": \"2023-11-04\", \"value\": 35065.8 },\n  { \"date\": \"2023-11-05\", \"value\": 35019.4 },\n  { \"date\": \"2023-11-06\", \"value\": 35042.0 },\n  { \"date\": \"2023-11-07\", \"value\": 35426.1 },\n  { \"date\": \"2023-11-08\", \"value\": 35636.9 },\n  { \"date\": \"2023-11-09\", \"value\": 36700.5 },\n  { \"date\": \"2023-11-10\", \"value\": 37303.0 },\n  { \"date\": \"2023-11-11\", \"value\": 37150.5 },\n  { \"date\": \"2023-11-12\", \"value\": 37064.4 },\n  { \"date\": \"2023-11-13\", \"value\": 36478.3 },\n  { \"date\": \"2023-11-14\", \"value\": 35549.3 },\n  { \"date\": \"2023-11-15\", \"value\": 37874.9 },\n  { \"date\": \"2023-11-16\", \"value\": 36161.2 },\n  { \"date\": \"2023-11-17\", \"value\": 36595.4 },\n  { \"date\": \"2023-11-18\", \"value\": 36568.6 },\n  { \"date\": \"2023-11-19\", \"value\": 37354.2 },\n  { \"date\": \"2023-11-20\", \"value\": 37454.1 },\n  { \"date\": \"2023-11-21\", \"value\": 35813.6 },\n  { \"date\": \"2023-11-22\", \"value\": 37410.8 },\n  { \"date\": \"2023-11-23\", \"value\": 37293.1 },\n  { \"date\": \"2023-11-24\", \"value\": 37717.3 },\n  { \"date\": \"2023-11-25\", \"value\": 37787.0 },\n  { \"date\": \"2023-11-26\", \"value\": 37451.8 },\n  { \"date\": \"2023-11-27\", \"value\": 37248.6 },\n  { \"date\": \"2023-11-28\", \"value\": 37823.3 },\n  { \"date\": \"2023-11-29\", \"value\": 37855.5 },\n  { \"date\": \"2023-11-30\", \"value\": 37712.9 },\n  { \"date\": \"2023-12-01\", \"value\": 38688.2 },\n  { \"date\": \"2023-12-02\", \"value\": 39458.4 },\n  { \"date\": \"2023-12-03\", \"value\": 39970.2 },\n  { \"date\": \"2023-12-04\", \"value\": 41987.8 },\n  { \"date\": \"2023-12-05\", \"value\": 44076.2 },\n  { \"date\": \"2023-12-06\", \"value\": 43776.3 },\n  { \"date\": \"2023-12-07\", \"value\": 43289.7 },\n  { \"date\": \"2023-12-08\", \"value\": 44175.5 },\n  { \"date\": \"2023-12-09\", \"value\": 43718.4 },\n  { \"date\": \"2023-12-10\", \"value\": 43791.0 },\n  { \"date\": \"2023-12-11\", \"value\": 41256.1 },\n  { \"date\": \"2023-12-12\", \"value\": 41487.0 },\n  { \"date\": \"2023-12-13\", \"value\": 42884.5 },\n  { \"date\": \"2023-12-14\", \"value\": 43025.9 },\n  { \"date\": \"2023-12-15\", \"value\": 41929.0 },\n  { \"date\": \"2023-12-16\", \"value\": 42271.7 },\n  { \"date\": \"2023-12-17\", \"value\": 41368.7 },\n  { \"date\": \"2023-12-18\", \"value\": 42659.7 },\n  { \"date\": \"2023-12-19\", \"value\": 42259.3 },\n  { \"date\": \"2023-12-20\", \"value\": 43662.8 },\n  { \"date\": \"2023-12-21\", \"value\": 43865.9 },\n  { \"date\": \"2023-12-22\", \"value\": 43968.9 },\n  { \"date\": \"2023-12-23\", \"value\": 43710.4 },\n  { \"date\": \"2023-12-24\", \"value\": 42981.5 },\n  { \"date\": \"2023-12-25\", \"value\": 43578.5 },\n  { \"date\": \"2023-12-26\", \"value\": 42513.3 },\n  { \"date\": \"2023-12-27\", \"value\": 43446.5 },\n  { \"date\": \"2023-12-28\", \"value\": 42581.1 },\n  { \"date\": \"2023-12-29\", \"value\": 42072.4 },\n  { \"date\": \"2023-12-30\", \"value\": 42136.7 },\n  { \"date\": \"2023-12-31\", \"value\": 42272.5 }\n]\n","/**\n * The model holding a date and a value for the cart.\n */\nexport interface DateData {\n  date: string\n  value?: number\n}\n\nexport namespace Utils {\n  export const calculateMovingAverage = (\n    data: DateData[],\n    window: number,\n    factor = 1,\n  ): DateData[] => {\n    // Clone the input dates but set the price to undefined.\n    const out: DateData[] = Object.values(structuredClone(data)).map(\n      (entry) => {\n        return { date: entry.date, price: undefined }\n      },\n    )\n    if (data.length < window || window <= 0) {\n      return out\n    }\n    let sum = 0\n    for (let i = 0; i < window; i++) {\n      sum += data[i].value ?? 0\n    }\n    out[window - 1].value = (sum / window) * factor\n    for (let i = window; i < data.length; i++) {\n      sum += (data[i].value ?? 0) - (data[i - window].value ?? 0)\n      out[i].value = (sum / window) * factor\n    }\n    return out\n  }\n\n  export type stringFunction = () => string\n  export const setElementText = (\n    className: string,\n    text: string | stringFunction,\n  ): void => {\n    for (const infoBox of document.getElementsByClassName(className)) {\n      const container = infoBox as HTMLElement\n      if (container != null) {\n        container.innerText = typeof text === 'string' ? text : text()\n      }\n    }\n  }\n\n  export const toTwoDecimals = (val: number): string => {\n    return (Math.round(val * 100) / 100).toFixed(2)\n  }\n}\n","import Chart from 'chart.js/auto'\nimport annotationPlugin from 'chartjs-plugin-annotation'\nimport colors from 'tailwindcss/colors'\nimport btc_newest from '../data/btc_newest.json'\nimport btc_historical from '../data/btc_prices_until_2023.json'\nimport { Utils } from './utils'\n\nChart.register(annotationPlugin)\nChart.defaults.color = colors.slate[400]\n;(async () => {\n  const chartElement = document.getElementById('pi_cycle')\n  if (chartElement == null) {\n    return\n  }\n  const btc_data = [...btc_historical, ...btc_newest]\n\n  const dma350x2 = Utils.calculateMovingAverage(btc_data, 350, 2)\n  const dma111 = Utils.calculateMovingAverage(btc_data, 111)\n  const indicator = dma350x2.map((mva_350, index) => {\n    if (dma111[index].value === undefined || mva_350.value === undefined) {\n      return {\n        date: mva_350.date,\n        value: undefined,\n      }\n    }\n    return {\n      date: mva_350.date,\n      value: dma111[index].value / mva_350.value,\n    }\n  })\n\n  Utils.setElementText('pi-cycle-info', () => {\n    const val = indicator[indicator.length - 1].value\n    if (val === undefined) {\n      return 'unknown'\n    }\n    return `Indicator: ${Utils.toTwoDecimals(val)}`\n  })\n\n  new Chart(chartElement as HTMLCanvasElement, {\n    type: 'line',\n    data: {\n      datasets: [\n        {\n          label: 'USD/BTC',\n          data: btc_data,\n          borderWidth: 1,\n        },\n        {\n          label: '350DMAx2',\n          data: dma350x2,\n        },\n        {\n          label: '111DMA',\n          data: dma111,\n        },\n        {\n          label: 'Indicator',\n          data: indicator,\n          yAxisID: 'y1',\n        },\n      ],\n    },\n    options: {\n      normalized: true,\n      animation: false,\n      // Don't draw dots per data point.\n      datasets: {\n        line: {\n          pointRadius: 0,\n          borderWidth: 2,\n        },\n      },\n      // Hovering anywhere should hover the nearest x-value independent of y-value.\n      hover: {\n        mode: 'index',\n        intersect: false,\n      },\n      parsing: {\n        xAxisKey: 'date',\n        yAxisKey: 'value',\n      },\n      scales: {\n        y: {\n          type: 'logarithmic',\n          display: true,\n          position: 'left',\n        },\n        y1: {\n          type: 'linear',\n          display: true,\n          position: 'right',\n          min: 0,\n          max: 4,\n          grid: {\n            drawOnChartArea: false,\n          },\n        },\n      },\n      plugins: {\n        // Show tooltip for nearest x-value for all grpahs independent of y-value of mouse.\n        tooltip: {\n          mode: 'index',\n          intersect: false,\n        },\n        annotation: {\n          annotations: {\n            lowerBox: {\n              drawTime: 'beforeDatasetsDraw',\n              type: 'box',\n              xMin: btc_data[0].date,\n              xMax: btc_data[btc_data.length - 1].date,\n              yMin: 0,\n              yMax: 0.35,\n              yScaleID: 'y1',\n              backgroundColor: 'rgba(255, 0, 0, 0.15)',\n              borderWidth: 0,\n            },\n            upperBox: {\n              drawTime: 'beforeDatasetsDraw',\n              type: 'box',\n              xMin: btc_data[0].date,\n              xMax: btc_data[btc_data.length - 1].date,\n              yMin: 0.95,\n              yMax: 1.5,\n              yScaleID: 'y1',\n              backgroundColor: 'rgba(0, 255, 0, 0.15)',\n              borderWidth: 0,\n            },\n          },\n        },\n      },\n    },\n  })\n})()\n"],"names":["$parcel$export","e","n","v","s","Object","defineProperty","get","set","enumerable","configurable","$parcel$interopDefault","a","__esModule","default","$parcel$global","globalThis","$parcel$modules","$parcel$inits","parcelRequire","id","exports","init","module","call","err","Error","code","register","parcelRegister","$e24bb3f4f01060dd$export$2e2bcd8739ae039","$2RVy2","Chart","registerables","$216d2bdc6f281bf6$export$8ab227dac26677d","$216d2bdc6f281bf6$export$e04603e7d8b77172","$216d2bdc6f281bf6$export$db77ccec0bb4ccac","$216d2bdc6f281bf6$export$acaa6426d77a227e","$216d2bdc6f281bf6$export$e8959e79e3af550f","d","$c7mKY","$216d2bdc6f281bf6$export$a424a0aa8f687495","constructor","_request","_charts","Map","_running","_lastDate","undefined","_notify","chart","anims","date","type","callbacks","listeners","numSteps","duration","forEach","fn","initial","currentStep","Math","min","start","_refresh","r","window","_update","Date","now","remaining","item","running","items","length","i","draw","_active","_total","tick","pop","_getAnims","charts","complete","progress","listen","event","cb","push","add","has","reduce","acc","cur","max","_duration","stop","cancel","remove","delete","$216d2bdc6f281bf6$var$transparent","$216d2bdc6f281bf6$var$interpolators","boolean","from","to","factor","color","c0","c","c1","valid","mix","hexString","number","$216d2bdc6f281bf6$export$c35d437ae5945fcd","cfg","target","prop","currentValue","_fn","_easing","easing","linear","_start","floor","delay","_loop","loop","_target","_prop","_from","_to","_promises","active","update","elapsed","remain","wait","promises","Promise","res","rej","resolved","method","config","_chart","_properties","configure","animationOptions","keys","animation","animatedProps","getOwnPropertyNames","key","option","b","properties","_animateOptions","values","newOptions","options","$216d2bdc6f281bf6$var$resolveTargetOptions","$shared","assign","$animations","animations","_createAnimations","$216d2bdc6f281bf6$var$awaitAll","anim","all","then","props","charAt","value","size","$216d2bdc6f281bf6$var$scaleClip","scale","allowedOverflow","opts","reverse","end","$216d2bdc6f281bf6$var$getSortedDatasetIndices","filterVisible","ilen","metasets","_getSortedDatasetMetas","index","$216d2bdc6f281bf6$var$applyStack","stack","dsIndex","datasetIndex","otherValue","singleMode","mode","g","$216d2bdc6f281bf6$var$isStacked","meta","stacked","$216d2bdc6f281bf6$var$getLastIndexInStack","vScale","positive","getMatchingVisibleMetas","$216d2bdc6f281bf6$var$updateStacks","controller","parsed","_cachedMeta","stacks","_stacks","iScale","iAxis","axis","vAxis","indexScale","valueScale","itemStacks","$216d2bdc6f281bf6$var$getOrCreateStack","stackKey","indexValue","subStack","_top","_bottom","visualValues","_visualValues","$216d2bdc6f281bf6$var$getFirstScaleId","scales","filter","shift","$216d2bdc6f281bf6$var$clearStacks","_parsed","$216d2bdc6f281bf6$var$isDirectUpdateMode","$216d2bdc6f281bf6$var$cloneIfNotShared","cached","shared","$216d2bdc6f281bf6$var$createStack","canStack","hidden","_stacked","$216d2bdc6f281bf6$export$75572ec5c55b4048","defaults","datasetElementType","dataElementType","_ctx","ctx","_cachedDataOpts","getMeta","_type","_parsing","_data","_objectData","_sharedOptions","_drawStart","_drawCount","enableOptionSharing","supportsDecimation","$context","_syncList","initialize","linkScales","addElements","fill","isPluginEnabled","console","warn","updateIndex","dataset","getDataset","chooseId","x","y","xid","xAxisID","yid","yAxisID","rid","rAxisID","indexAxis","iid","iAxisID","vid","vAxisID","xScale","getScaleForId","yScale","rScale","data","datasets","getDatasetMeta","scaleID","_getOtherScale","reset","_destroy","u","_dataCheck","$216d2bdc6f281bf6$var$convertObjectDataToArray","iAxisKey","vAxisKey","adata","Array","isExtensible","l","buildOrUpdateElements","resetNewElements","stackChanged","oldStacked","_resyncElements","scopeKeys","datasetScopeKeys","scopes","getOptionScopes","createResolver","getContext","parsing","parse","count","sorted","_sorted","prev","parseArrayData","parseObjectData","parsePrimitiveData","isNotInOrderComparedToPrev","labels","getLabels","singleScale","xAxisKey","yAxisKey","f","getParsed","getDataElement","applyStack","updateRangeFromParsed","range","parsedValue","NaN","getMinMax","otherScale","Number","POSITIVE_INFINITY","NEGATIVE_INFINITY","otherMin","otherMax","$216d2bdc6f281bf6$var$getUserBounds","minDefined","maxDefined","getUserBounds","_skip","getAllParsedValues","getMaxOverflow","getLabelAndValue","label","getLabelForValue","t","_clip","clip","$216d2bdc6f281bf6$var$defaultClip","top","right","bottom","left","disabled","elements","area","chartArea","drawActiveElementsOnTop","element","getStyle","resolveDatasetElementOptions","resolveDataElementOptions","parent","context","j","dataIndex","raw","_resolveElementOptions","elementType","cache","cacheKey","sharing","h","datasetElementScopeKeys","prefixes","names","resolveNamedOptions","freeze","_resolveAnimations","transition","datasetAnimationScopeKeys","_cacheable","getSharedOptions","includeOptions","sharedOptions","_animationsDisabled","_getSharedOptions","firstOpts","previouslySharedOptions","updateSharedOptions","updateElement","_setStyle","removeHoverStyle","setHoverStyle","_removeDatasetHoverStyle","_setDatasetHoverStyle","arg1","arg2","numMeta","numData","_insertElements","_removeElements","move","arr","updateElements","removed","splice","_sync","args","_dataChanges","_onDataPush","arguments","_onDataPop","_onDataShift","_onDataSplice","newCount","_onDataUnshift","$216d2bdc6f281bf6$var$parseValue","entry","$216d2bdc6f281bf6$var$parseFloatBar","startValue","endValue","barStart","barEnd","abs","_custom","$216d2bdc6f281bf6$var$parseArrayOrPrimitive","$216d2bdc6f281bf6$var$isFloatBar","custom","$216d2bdc6f281bf6$var$parseEdge","edge","orig","$216d2bdc6f281bf6$var$startEnd","animateRotate","animateScale","numbers","cutout","rotation","circumference","radius","spacing","descriptors","_scriptable","name","_indexable","startsWith","overrides","aspectRatio","plugins","legend","generateLabels","pointStyle","map","style","text","fillStyle","backgroundColor","strokeStyle","borderColor","fontColor","lineWidth","borderWidth","getDataVisibility","onClick","legendItem","toggleDataVisibility","innerRadius","outerRadius","offsetX","offsetY","getter","_getRotation","_getCircumference","_getRotationExtents","T","isDatasetVisible","arcs","getMaxBorderWidth","getMaxOffset","maxSize","width","height","m","chartWeight","_getRingWeight","ratioX","ratioY","$216d2bdc6f281bf6$var$getRatioAndOffset","endAngle","startAngle","startX","cos","startY","sin","endX","endY","calcMax","angle","p","calcMin","maxX","maxY","H","minX","P","minY","maxRadius","radiusLength","_getVisibleDatasetWeightTotal","total","calculateTotal","_getRingWeightOffset","_circumference","calculateCircumference","animationOpts","centerX","centerY","arc","metaData","isNaN","o","locale","borderAlign","hoverBorderWidth","offset","hoverOffset","ringWeightOffset","weight","$216d2bdc6f281bf6$export$2a270b3a0d973c85","angleLines","display","beginAtZero","grid","circular","pointLabels","bind","_updateRadius","minSize","cutoutPercentage","getVisibleDatasetCount","xCenter","yCenter","datasetStartAngle","getIndexAngle","defaultAngle","countVisibleElements","_computeAngle","getDistanceFromCenterForValue","$216d2bdc6f281bf6$export$a6506504f799c5d5","__proto__","BarController","categoryPercentage","barPercentage","grouped","_index_","_value_","obj","bars","base","getBasePixel","horizontal","isHorizontal","ruler","_getRuler","vpixels","k","head","_calculateBarValuePixels","ipixels","_calculateBarIndexPixels","enableBorderRadius","center","$216d2bdc6f281bf6$var$setBorderSkipped","borderSkipped","$216d2bdc6f281bf6$var$setInflateAmount","inflateAmount","ratio","_getStacks","last","currentParsed","iScaleValue","skipNull","find","val","indexOf","_getStackCount","_getStackIndex","pixels","getPixelForValue","barThickness","$216d2bdc6f281bf6$var$computeMinSampleSize","curr","$216d2bdc6f281bf6$var$getAllScaleValues","_cache","$bar","visibleMetas","concat","_","sort","_length","updateMinAndPrev","ticks","getPixelForTick","_startPixel","_endPixel","stackCount","baseValue","minBarLength","actualBase","floating","$216d2bdc6f281bf6$var$barSign","startPixel","getPixelForDecimal","endPixel","getValueForPixel","halfGrid","getLineWidthForValue","maxBarThickness","Infinity","$216d2bdc6f281bf6$var$computeFlexCategoryTraits","next","percent","chunk","$216d2bdc6f281bf6$var$computeFitCategoryTraits","thickness","stackIndex","rects","BubbleController","points","point","iPixel","vPixel","skip","DoughnutController","LineController","showLine","spanGaps","line","_dataset","animationsDisabled","q","w","_datasetIndex","_decimated","segment","animated","maxGapLength","directUpdate","pointsCount","prevParsed","nullData","border","updateControlPoints","PieController","PolarAreaController","RadarController","_fullLoop","pointPosition","getPointPositionForValue","ScatterController","interaction","registry","getElement","$216d2bdc6f281bf6$var$abstract","$216d2bdc6f281bf6$var$DateAdapterBase","override","members","prototype","formats","format","diff","startOf","endOf","$216d2bdc6f281bf6$var$evaluateInteractionItems","position","handler","intersect","getSortedVisibleDatasetMetas","lo","hi","$216d2bdc6f281bf6$var$binarySearch","metaset","lookupMethod","_reversePixels","A","B","el","getRange","$216d2bdc6f281bf6$var$getIntersectItems","useFinalPosition","includeInvisible","isPointInArea","C","inRange","$216d2bdc6f281bf6$var$getNearestItems","$216d2bdc6f281bf6$var$getNearestCartesianItems","distanceMetric","$216d2bdc6f281bf6$var$getDistanceMetricForAxis","useX","useY","pt1","pt2","sqrt","pow","minDistance","getCenterPoint","distance","getProps","D","$216d2bdc6f281bf6$var$getAxisItems","rangeMethod","intersectsItem","$216d2bdc6f281bf6$export$a13296960cae0384","modes","z","nearest","$216d2bdc6f281bf6$var$STATIC_POSITIONS","$216d2bdc6f281bf6$var$filterByPosition","array","pos","$216d2bdc6f281bf6$var$filterDynamicPositionByAxis","box","$216d2bdc6f281bf6$var$sortByWeight","v0","v1","$216d2bdc6f281bf6$var$getCombinedMax","maxPadding","$216d2bdc6f281bf6$var$updateMaxPadding","boxPadding","$216d2bdc6f281bf6$var$fitBoxes","boxes","params","layout","refit","changed","refitBoxes","$216d2bdc6f281bf6$var$getMargins","positions","margin","same","other","$216d2bdc6f281bf6$var$updateDims","getPadding","newWidth","outerWidth","newHeight","outerHeight","widthChanged","heightChanged","fullSize","$216d2bdc6f281bf6$var$setBoxDims","$216d2bdc6f281bf6$var$placeBoxes","userPadding","padding","placed","stackWeight","$216d2bdc6f281bf6$export$1ecca0613f5e56d2","addBox","_layers","removeBox","layoutItem","minPadding","E","availableWidth","availableHeight","$216d2bdc6f281bf6$var$buildLayoutBoxes","layoutBoxes","$216d2bdc6f281bf6$var$wrapBoxes","wrap","centerHorizontal","centerVertical","leftAndTop","rightAndBottom","vertical","verticalBoxes","horizontalBoxes","F","beforeLayout","vBoxMaxWidth","hBoxMaxHeight","$216d2bdc6f281bf6$var$setLayoutDims","layouts","$216d2bdc6f281bf6$var$buildStacks","includes","_stack","$216d2bdc6f281bf6$var$handleMaxPadding","updatePos","change","$216d2bdc6f281bf6$export$7b1aeb87f31f7da8","acquireContext","canvas","releaseContext","addEventListener","listener","removeEventListener","getDevicePixelRatio","getMaximumSize","isAttached","updateConfig","$216d2bdc6f281bf6$export$a40a96b24b46cf35","$216d2bdc6f281bf6$var$EXPANDO_KEY","$216d2bdc6f281bf6$var$EVENT_TYPES","touchstart","touchmove","touchend","pointerenter","pointerdown","pointermove","pointerup","pointerleave","pointerout","$216d2bdc6f281bf6$var$isNullOrEmpty","$216d2bdc6f281bf6$var$eventListenerOptions","K","passive","$216d2bdc6f281bf6$var$nodeListContains","nodeList","node","contains","$216d2bdc6f281bf6$var$createAttachObserver","observer","MutationObserver","entries","trigger","addedNodes","removedNodes","observe","document","childList","subtree","$216d2bdc6f281bf6$var$createDetachObserver","$216d2bdc6f281bf6$var$drpListeningCharts","$216d2bdc6f281bf6$var$oldDevicePixelRatio","$216d2bdc6f281bf6$var$onWindowResize","dpr","devicePixelRatio","resize","currentDevicePixelRatio","$216d2bdc6f281bf6$var$createResizeObserver","container","I","L","clientWidth","ResizeObserver","contentRect","$216d2bdc6f281bf6$var$releaseObserver","disconnect","$216d2bdc6f281bf6$var$createProxyAndListen","proxy","$216d2bdc6f281bf6$var$fromNativeEvent","native","$216d2bdc6f281bf6$export$f02da7f882cf6b2e","$216d2bdc6f281bf6$var$initCanvas","renderHeight","getAttribute","renderWidth","boxSizing","displayWidth","J","displayHeight","removeAttribute","setAttribute","proxies","$proxies","handlers","attach","detach","G","isConnected","defaultRoutes","tooltipPosition","hasValue","final","ret","$216d2bdc6f281bf6$var$skip","newTicks","majorStart","majorEnd","ceil","round","$216d2bdc6f281bf6$var$reverseAlign","align","$216d2bdc6f281bf6$var$offsetFromEdge","$216d2bdc6f281bf6$var$getTicksLimit","ticksLength","maxTicksLimit","$216d2bdc6f281bf6$var$sample","numItems","result","increment","len","$216d2bdc6f281bf6$var$getTickMarkLength","drawTicks","tickLength","$216d2bdc6f281bf6$var$getTitleHeight","fallback","font","a0","lines","lineHeight","$216d2bdc6f281bf6$export$d60cfc58d3c358b6","_margins","maxWidth","maxHeight","paddingTop","paddingBottom","paddingLeft","paddingRight","labelRotation","_range","_gridLineItems","_labelItems","_labelSizes","_maxLength","_longestTextCache","_userMax","_userMin","_suggestedMax","_suggestedMin","_ticksLength","_borderValue","_dataLimitsCached","setContext","suggestedMin","suggestedMax","O","metas","getTicks","xLabels","yLabels","getLabelItems","_computeLabelItems","beforeUpdate","Q","margins","grace","tickOpts","sampleSize","beforeSetDimensions","setDimensions","afterSetDimensions","beforeDataLimits","determineDataLimits","afterDataLimits","R","beforeBuildTicks","buildTicks","afterBuildTicks","samplingEnabled","_convertTicksToLabels","beforeCalculateLabelRotation","calculateLabelRotation","afterCalculateLabelRotation","autoSkip","source","$216d2bdc6f281bf6$var$autoSkip","determinedMaxTicks","$216d2bdc6f281bf6$var$determineMaxTicks","_tickSize","ticksLimit","majorIndices","major","enabled","$216d2bdc6f281bf6$var$getMajorIndices","numMajorIndices","first","$216d2bdc6f281bf6$var$skipMajors","$216d2bdc6f281bf6$var$calculateSpacing","evenMajorSpacing","$216d2bdc6f281bf6$var$getEvenSpacing","factors","N","avgMajorSpacing","afterAutoSkip","beforeFit","fit","afterFit","afterUpdate","reversePixels","_alignToPixels","alignToPixels","_callHooks","notifyPlugins","beforeTickToLabelConversion","generateTickLabels","callback","afterTickToLabelConversion","tickWidth","maxLabelDiagonal","numTicks","minRotation","maxRotation","_isVisible","labelSizes","_getLabelSizes","maxLabelWidth","widest","maxLabelHeight","highest","S","title","U","asin","titleOpts","gridOpts","titleHeight","tickPadding","angleRadians","labelHeight","mirror","labelWidth","_calculatePadding","_handleMargins","isRotated","labelsBelowTicks","offsetLeft","offsetRight","isFullSize","_computeLabelSizes","jlen","tickFont","fontString","nestedLabel","caches","widths","heights","widestLabelSize","highestLabelSize","_resolveTickFontOptions","string","gc","V","gcLen","valueAt","idx","pixel","decimal","W","X","getDecimalForPixel","getBaseValue","optionTicks","rot","autoSkipPadding","_computeGridLineItems","borderValue","lineValue","alignedLineValue","tx1","ty1","tx2","ty2","x1","y1","x2","y2","tl","borderOpts","axisWidth","axisHalfWidth","alignBorderValue","positionAxisID","limit","step","optsAtIndex","optsAtIndexBorder","lineColor","borderDash","dash","borderDashOffset","dashOffset","tickColor","tickBorderDash","tickBorderDashOffset","$216d2bdc6f281bf6$var$getPixelForGridLine","offsetGridLines","validIndex","textAlign","lineCount","textOffset","crossAlign","tickAndPadding","hTickAndPadding","textBaseline","_getXAxisLabelAlignment","_getYAxisLabelAlignment","backdrop","labelOffset","halfCount","strokeColor","textStrokeColor","strokeWidth","textStrokeWidth","tickTextAlign","showLabelBackdrop","labelPadding","backdropPadding","backdropColor","translation","_computeLabelArea","drawBackground","save","fillRect","restore","findIndex","drawGrid","drawLine","p1","p2","setLineDash","lineDashOffset","beginPath","moveTo","lineTo","stroke","drawOnChartArea","drawBorder","lastLineWidth","drawLabels","Y","renderTextOptions","Z","$","drawTitle","titleX","titleY","$216d2bdc6f281bf6$var$titleArgs","a2","a1","tz","gz","bz","axisID","_maxDigits","fontSize","$216d2bdc6f281bf6$var$TypedRegistry","scope","create","isForType","isPrototypeOf","parentScope","proto","getPrototypeOf","$216d2bdc6f281bf6$var$registerDefaults","itemDefaults","a4","$216d2bdc6f281bf6$var$routeDefaults","routes","property","propertyParts","split","sourceName","sourceScope","join","parts","targetName","targetScope","route","describe","unregister","a3","$216d2bdc6f281bf6$export$4bb7493d241fd8a5","controllers","_typedRegistries","_each","addControllers","addPlugins","addScales","getController","_get","getPlugin","getScale","removeControllers","removeElements","removePlugins","removeScales","typedRegistry","arg","reg","_getRegistryForType","_exec","itemReg","component","camelMethod","a5","$216d2bdc6f281bf6$var$PluginService","_init","notify","hook","_createDescriptors","_descriptors","descriptor","plugin","cancelable","invalidate","_oldCache","_notifyStateChanges","$216d2bdc6f281bf6$var$allPlugins","localIds","local","$216d2bdc6f281bf6$var$createDescriptors","$216d2bdc6f281bf6$var$pluginOpts","pluginScopeKeys","scriptable","indexable","allKeys","previousDescriptors","some","$216d2bdc6f281bf6$var$getIndexAxis","datasetDefaults","datasetOptions","$216d2bdc6f281bf6$var$idMatchesAxis","$216d2bdc6f281bf6$var$determineAxis","scaleOptions","toLowerCase","$216d2bdc6f281bf6$var$getAxisFromDataset","$216d2bdc6f281bf6$var$initOptions","$216d2bdc6f281bf6$var$mergeScaleConfig","chartDefaults","configScales","chartIndexAxis","scaleConf","error","_proxy","$216d2bdc6f281bf6$var$retrieveAxisFromDatasets","boundDs","defaultId","defaultScaleOptions","ab","defaultID","$216d2bdc6f281bf6$var$initData","$216d2bdc6f281bf6$var$keyCache","$216d2bdc6f281bf6$var$keysCached","Set","$216d2bdc6f281bf6$var$cachedKeys","generate","$216d2bdc6f281bf6$var$addIfFound","$216d2bdc6f281bf6$var$Config","_config","_scopeCache","_resolverCache","platform","clearCache","clear","datasetType","additionalOptionScopes","_cachedScopes","mainScope","resetCache","keyLists","a6","chartOptionScopes","resolver","subPrefixes","$216d2bdc6f281bf6$var$getResolver","$216d2bdc6f281bf6$var$needContext","isScriptable","isIndexable","aa","a7","$216d2bdc6f281bf6$var$hasFunction","subResolver","a8","descriptorDefaults","resolverCache","a9","$216d2bdc6f281bf6$var$KNOWN_POSITIONS","$216d2bdc6f281bf6$var$positionIsHorizontal","$216d2bdc6f281bf6$var$compare2Level","l1","l2","$216d2bdc6f281bf6$var$onAnimationsComplete","onComplete","$216d2bdc6f281bf6$var$onAnimationProgress","onProgress","$216d2bdc6f281bf6$var$getCanvas","M","getElementById","$216d2bdc6f281bf6$var$instances","$216d2bdc6f281bf6$var$getChart","$216d2bdc6f281bf6$var$getSizeForArea","field","instances","version","getChart","$216d2bdc6f281bf6$var$invalidatePlugins","userConfig","initialCanvas","existingChart","OffscreenCanvas","ac","_options","_aspectRatio","_metasets","_lastEvent","_listeners","_responsiveListeners","_sortedMetasets","_plugins","_hiddenIndices","attached","_doResize","ad","resizeDelay","_initialize","maintainAspectRatio","responsive","ae","bindEvents","af","_resizeBeforeDraw","_resize","newSize","newRatio","onResize","render","ensureScalesHaveIDs","scalesOptions","axisOptions","buildOrUpdateScales","scaleOpts","updated","isRadial","dposition","dtype","scaleType","hasUpdated","_updateMetasets","_destroyDatasetMeta","slice","_removeUnreferencedMetasets","buildOrUpdateControllers","newControllers","order","visible","ControllerClass","_resetElements","animsDisabled","_updateScales","_checkEventBindings","_updateHiddenIndices","_minPadding","autoPadding","_updateLayout","_updateDatasets","_eventHandler","_updateHoverStyles","existingEvents","newEvents","events","ag","unbindEvents","_getUniformDataChanges","$216d2bdc6f281bf6$var$moveNumericKeys","intKey","datasetCount","makeSet","changeSet","noArea","_idx","_updateDataset","layers","_drawDatasets","_drawDataset","useClip","$216d2bdc6f281bf6$var$getDatasetArea","getElementsAtEventForMode","setDatasetVisibility","_updateVisibility","hide","show","_stop","destroy","toBase64Image","toDataURL","bindUserEvents","bindResponsiveEvents","_add","detached","_remove","updateHoverStyle","prefix","getActiveElements","setActiveElements","activeElements","lastActive","ah","pluginId","replay","hoverOptions","hover","deactivated","activated","inChartArea","eventFilter","_handleEvent","lastEvent","_getActiveElements","isClick","ai","onHover","$216d2bdc6f281bf6$var$rThetaToXY","theta","$216d2bdc6f281bf6$var$pathArc","pixelMargin","innerR","spacingOffset","alpha","noSpacingOuterRadius","avNogSpacingRadius","noSpacingInnerRadius","beta","angleOffset","outerStart","outerEnd","innerStart","innerEnd","$216d2bdc6f281bf6$var$parseBorderRadius$1","angleDelta","borderRadius","ak","halfThickness","innerLimit","computeOuterLimit","outerArcLimit","outerStartAdjustedRadius","outerEndAdjustedRadius","outerStartAdjustedAngle","outerEndAdjustedAngle","innerStartAdjustedRadius","innerEndAdjustedRadius","innerStartAdjustedAngle","innerEndAdjustedAngle","outerMidAdjustedAngle","pCenter","p4","PI","innerMidAdjustedAngle","p8","outerStartX","outerStartY","outerEndX","outerEndY","closePath","$216d2bdc6f281bf6$var$setStyle","lineCap","borderCapStyle","lineJoin","borderJoinStyle","$216d2bdc6f281bf6$var$lineTo","previous","$216d2bdc6f281bf6$var$pathVars","paramsStart","paramsEnd","segmentStart","segmentEnd","$216d2bdc6f281bf6$var$pathSegment","lineMethod","stepped","ar","tension","cubicInterpolationMode","as","$216d2bdc6f281bf6$var$fastPathSegment","prevX","lastY","avgX","countX","pointIndex","drawX","truncX","$216d2bdc6f281bf6$var$_getSegmentMethod","useFastPath","$216d2bdc6f281bf6$var$usePath2D","Path2D","$216d2bdc6f281bf6$export$55e463fa7bcd3469","capBezierPoints","_path","_points","_segments","_pointsUpdated","al","segments","am","interpolate","an","_interpolate","ao","ap","aq","interpolated","pathSegment","segmentMethod","path","$216d2bdc6f281bf6$var$draw","$216d2bdc6f281bf6$var$strokePathWithCache","$216d2bdc6f281bf6$var$strokePathDirect","$216d2bdc6f281bf6$var$inRange$1","hitRadius","$216d2bdc6f281bf6$var$getBarBounds","bar","half","$216d2bdc6f281bf6$var$skipOrLimit","$216d2bdc6f281bf6$var$inRange","skipX","skipY","bounds","aj","$216d2bdc6f281bf6$var$addNormalRectPath","rect","$216d2bdc6f281bf6$var$inflateRect","amount","refRect","$216d2bdc6f281bf6$export$7a5d735b2ab6389d","ArcElement","fullCircles","chartX","chartY","rAdjust","nonZeroBetween","betweenAngles","withinRadius","halfAngle","halfRadius","translate","radiusOffset","$216d2bdc6f281bf6$var$drawArc","$216d2bdc6f281bf6$var$drawBorder","inner","$216d2bdc6f281bf6$var$clipArc","angleMargin","BarElement","outer","$216d2bdc6f281bf6$var$boundingRects","$216d2bdc6f281bf6$var$parseBorderWidth","maxW","maxH","av","$216d2bdc6f281bf6$var$parseBorderRadius","aw","maxR","enableBorder","topLeft","topRight","bottomLeft","bottomRight","addRectPath","$216d2bdc6f281bf6$var$hasRadius","au","mouseX","mouseY","inXRange","inYRange","LineElement","PointElement","hoverRadius","at","$216d2bdc6f281bf6$var$BORDER_COLORS","$216d2bdc6f281bf6$var$BACKGROUND_COLORS","replace","$216d2bdc6f281bf6$var$getBorderColor","$216d2bdc6f281bf6$var$getBackgroundColor","$216d2bdc6f281bf6$var$containsColorsDefinitions","$216d2bdc6f281bf6$var$cleanDecimatedDataset","writable","$216d2bdc6f281bf6$var$cleanDecimatedData","$216d2bdc6f281bf6$var$_getBounds","ay","$216d2bdc6f281bf6$var$_findSegmentEnd","$216d2bdc6f281bf6$var$_getEdge","$216d2bdc6f281bf6$var$_createBoundaryLine","boundary","$216d2bdc6f281bf6$var$_pointsFromSegments","linePoints","$216d2bdc6f281bf6$var$_shouldApplyFill","$216d2bdc6f281bf6$var$simpleArc","$216d2bdc6f281bf6$var$_drawfill","$216d2bdc6f281bf6$var$_getTarget","$216d2bdc6f281bf6$var$getLineByIndex","$216d2bdc6f281bf6$var$_buildStackLine","sourcePoints","linesBelow","$216d2bdc6f281bf6$var$getLinesBelow","below","unshift","$216d2bdc6f281bf6$var$addPointsBelow","sourcePoint","postponed","$216d2bdc6f281bf6$var$findPoint","pointValue","firstValue","lastValue","$216d2bdc6f281bf6$var$computeCircularBoundary","$216d2bdc6f281bf6$var$computeLinearBoundary","lineOpts","fillOption","above","$216d2bdc6f281bf6$var$doFill","$216d2bdc6f281bf6$var$clipVertical","$216d2bdc6f281bf6$var$fill","clipY","lineLoop","firstPoint","lastPoint","src","tgt","$216d2bdc6f281bf6$var$_segments","tpoints","subBounds","fillSource","ax","notShape","$216d2bdc6f281bf6$var$clipBounds","$216d2bdc6f281bf6$var$interpolatedLineTo","targetLoop","interpolatedPoint","$216d2bdc6f281bf6$var$getBoxSize","labelOpts","boxHeight","boxWidth","usePointStyle","pointStyleWidth","itemHeight","$216d2bdc6f281bf6$var$itemsEqual","$216d2bdc6f281bf6$var$Legend","_added","legendHitBoxes","_hoveredItem","doughnutMode","legendItems","columnSizes","lineWidths","buildLabels","labelFont","_computeTitleHeight","_fitRows","_fitCols","hitboxes","totalHeight","row","itemWidth","measureText","_itemHeight","heightLimit","totalWidth","currentColWidth","currentColHeight","col","fontLineHeight","legendItemText","$216d2bdc6f281bf6$var$calculateLegendItemHeight","adjustHitBoxes","rtl","rtlHelper","az","hitbox","leftForLtr","_draw","cursor","defaultColor","halfFontSize","drawLegendBox","lineDash","drawOptions","SQRT2","xPlus","aD","yBoxTop","xBoxLeft","fillText","strikethrough","aA","textDirection","textWidth","setWidth","aB","aC","titleFont","titlePadding","topPaddingPlusHalfFontSize","_getLegendItemAt","hitBox","lh","handleEvent","onLeave","hoveredItem","sameItem","$216d2bdc6f281bf6$var$Title","_padding","textSize","_drawArgs","fontOpts","$216d2bdc6f281bf6$var$map","WeakMap","$216d2bdc6f281bf6$var$positioners","average","xSet","eventPosition","nearestElement","aE","tp","$216d2bdc6f281bf6$var$pushOrConcat","toPush","apply","$216d2bdc6f281bf6$var$splitNewlines","str","String","$216d2bdc6f281bf6$var$getTooltipSize","tooltip","body","footer","bodyFont","footerFont","titleLineCount","footerLineCount","bodyLineItemCount","combinedBodyLength","bodyItem","before","after","beforeBody","afterBody","titleSpacing","titleMarginBottom","displayColors","bodySpacing","footerMarginTop","footerSpacing","widthPadding","maxLineWidth","$216d2bdc6f281bf6$var$determineAlignment","yAlign","$216d2bdc6f281bf6$var$determineYAlign","xAlign","$216d2bdc6f281bf6$var$determineXAlign","chartWidth","$216d2bdc6f281bf6$var$doesNotFitWithAlign","caret","caretSize","caretPadding","$216d2bdc6f281bf6$var$getBackgroundPoint","alignment","cornerRadius","paddingAndSize","$216d2bdc6f281bf6$var$alignX","$216d2bdc6f281bf6$var$alignY","$216d2bdc6f281bf6$var$getAlignedX","$216d2bdc6f281bf6$var$overrideCallbacks","$216d2bdc6f281bf6$var$defaultCallbacks","beforeTitle","aF","tooltipItems","labelCount","afterTitle","beforeLabel","tooltipItem","formattedValue","labelColor","labelTextColor","bodyColor","labelPointStyle","afterLabel","beforeFooter","afterFooter","$216d2bdc6f281bf6$var$invokeCallbackWithFallback","$216d2bdc6f281bf6$var$Tooltip","positioners","opacity","_eventPosition","_size","_cachedAnimations","_tooltipItems","dataPoints","caretX","caretY","labelColors","labelPointStyles","labelTextColors","getTitle","getBeforeBody","getBody","bodyItems","scoped","getAfterBody","getFooter","_createItems","$216d2bdc6f281bf6$var$createTooltipItem","itemSort","positionAndSize","backgroundPoint","external","drawCaret","tooltipPoint","caretPosition","getCaretPosition","x3","y3","ptX","ptY","pt","titleAlign","titleColor","_drawColorBox","colorX","rtlColorX","yOffSet","colorY","multiKeyBackground","outerX","innerX","strokeRect","drawBody","textColor","bodyAlign","bodyLineHeight","xLinePadding","fillLineOfText","bodyAlignForCalculation","drawFooter","footerAlign","footerColor","tooltipSize","quadraticCurveTo","_updateAnimationTarget","animX","animY","_willRender","hasTooltipContent","globalAlpha","positionChanged","_positionChanged","_ignoreReplayEvents","$216d2bdc6f281bf6$export$8b3ca321c77fdea6","Colors","forceOverride","_args","chartOptions","containsColorDefenition","colorizer","Decimation","algorithm","beforeElementsUpdate","decimated","xAxis","$216d2bdc6f281bf6$var$getStartAndCountOfVisiblePointsSimplified","pointCount","threshold","$216d2bdc6f281bf6$var$lttbDecimation","maxAreaPoint","maxArea","nextA","samples","bucketWidth","sampledIndex","endIndex","avgY","avgRangeStart","avgRangeEnd","avgRangeLength","rangeOffs","rangeTo","pointAx","pointAy","$216d2bdc6f281bf6$var$minMaxDecimation","minIndex","maxIndex","startIndex","xMin","dx","xMax","lastIndex","intermediateIndex1","intermediateIndex2","Filler","afterDatasetsUpdate","sources","$216d2bdc6f281bf6$var$_decodeFill","firstCh","$216d2bdc6f281bf6$var$parseFillOption","parseFloat","$filler","$216d2bdc6f281bf6$var$_resolveTarget","propagate","visited","beforeDraw","drawTime","beforeDatasetsDraw","beforeDatasetDraw","Legend","_element","afterEvent","ci","useBorderRadius","SubTitle","Title","$216d2bdc6f281bf6$var$createTitle","titleBlock","Tooltip","afterInit","afterDraw","_fallback","$216d2bdc6f281bf6$var$addIfString","addedLabels","$216d2bdc6f281bf6$var$validIndex","$216d2bdc6f281bf6$var$_getLabelForValue","$216d2bdc6f281bf6$var$relativeLabelSize","minSpacing","rad","$216d2bdc6f281bf6$var$LinearScaleBase","_startValue","_endValue","_valueRange","isFinite","handleTickRangeOptions","setMin","setMax","minSign","maxSign","getTickLimit","maxTicks","stepSize","computeTickLimit","$216d2bdc6f281bf6$var$generateTicks$1","generationOptions","dataRange","niceMin","niceMax","numSpaces","precision","maxDigits","includeBounds","unit","maxSpaces","rmin","rmax","countDefined","aH","aI","aJ","decimalPlaces","aK","tickValue","aG","$216d2bdc6f281bf6$export$e7f4e5e8656f0b93","aL","formatters","numeric","$216d2bdc6f281bf6$var$log10Floor","aM","$216d2bdc6f281bf6$var$changeExponent","$216d2bdc6f281bf6$var$isMajor","tickVal","$216d2bdc6f281bf6$var$steps","rangeExp","rangeStep","$216d2bdc6f281bf6$export$85295eaf7cb3ac3e","logarithmic","_zero","$216d2bdc6f281bf6$var$generateTicks","minExp","exp","$216d2bdc6f281bf6$var$startExp","significand","lastTick","$216d2bdc6f281bf6$var$getTickBackdropHeight","$216d2bdc6f281bf6$var$determineLimits","$216d2bdc6f281bf6$var$pathRadiusLine","getPointPosition","$216d2bdc6f281bf6$export$cfafc36d95386d38","animate","centerPointLabels","drawingArea","_pointLabels","_pointLabelItems","$216d2bdc6f281bf6$var$fitWithPointLabels","limits","valueCount","pointLabelOpts","additionalAngle","getPointLabelContext","plFont","aN","$216d2bdc6f281bf6$var$updateLimits","hLimits","vLimits","setCenterPoint","$216d2bdc6f281bf6$var$buildPointLabelItems","itemOpts","extra","$216d2bdc6f281bf6$var$createPointLabelItem","outerDistance","pointLabelPosition","$216d2bdc6f281bf6$var$isNotOverlapped","leftMovement","rightMovement","topMovement","bottomMovement","angleMultiplier","scalingFactor","getValueForDistanceFromCenter","scaledDistance","pointLabel","distanceFromCenter","getBasePosition","getPointLabelPosition","$216d2bdc6f281bf6$var$drawPointLabels","$216d2bdc6f281bf6$var$drawPointLabelBox","backdropLeft","backdropTop","backdropWidth","backdropHeight","$216d2bdc6f281bf6$var$drawRadiusLine","gridLineOpts","rotate","$216d2bdc6f281bf6$var$INTERVALS","millisecond","common","steps","second","minute","hour","day","week","month","quarter","year","$216d2bdc6f281bf6$var$UNITS","$216d2bdc6f281bf6$var$sorter","$216d2bdc6f281bf6$var$parse","input","adapter","_adapter","parser","isoWeekday","_parseOpts","$216d2bdc6f281bf6$var$determineUnitForAutoTicks","minUnit","capacity","interval","MAX_SAFE_INTEGER","$216d2bdc6f281bf6$var$addTick","time","timestamps","aP","$216d2bdc6f281bf6$var$ticksFromTimestamps","majorUnit","$216d2bdc6f281bf6$var$setMajorTicks","$216d2bdc6f281bf6$export$a894c72689ff3ec","adapters","displayFormats","_unit","_majorUnit","_offsets","_normalized","normalized","_applyBounds","_getLabelBounds","getLabelTimestamps","timeOpts","_generate","aO","_getLabelCapacity","$216d2bdc6f281bf6$var$determineUnitForFormatting","$216d2bdc6f281bf6$var$determineMajorUnit","initOffsets","offsetAfterAutoskip","getDecimalForValue","minor","weekday","hasWeekday","getDataTimestamps","tooltipFormat","datetime","fmt","_tickFormatFunction","formatter","minorFormat","majorFormat","offsets","_getLabelSize","ticksOpts","tickLabelWidth","cosRotation","sinRotation","tickFontSize","exampleTime","exampleLabel","normalize","$216d2bdc6f281bf6$var$interpolate","table","prevSource","nextSource","prevTarget","nextTarget","span","$216d2bdc6f281bf6$export$85df64a8eb6dc986","_table","_minPos","_tableRange","_getTimestampsForTable","buildLookupTable","CategoryScale","_addedLabels","added","$216d2bdc6f281bf6$var$findOrAddLabel","lastIndexOf","LinearScale","LogarithmicScale","RadialLinearScale","TimeScale","TimeSeriesScale","$8d27ca75da600b9c$export$cf2f7c5792f80b46","$8d27ca75da600b9c$export$2219238a014317b0","$8d27ca75da600b9c$export$342063e11d6c3cad","$8d27ca75da600b9c$export$8b22cf2602fb60ce","$8d27ca75da600b9c$export$23f2a1d2818174ef","$8d27ca75da600b9c$export$39b482c5e57630a8","$8d27ca75da600b9c$export$c4ce752e73470fba","$8d27ca75da600b9c$export$90a7f3efeed30595","$8d27ca75da600b9c$export$953cecd6e717a553","$8d27ca75da600b9c$export$7ccc53e8f1e7dfc5","$8d27ca75da600b9c$export$3722cfe417b6ed86","$8d27ca75da600b9c$export$d66501df72047452","$8d27ca75da600b9c$export$995eb9fca571757","$8d27ca75da600b9c$export$efca4cbe5dd06740","$8d27ca75da600b9c$export$555508cbc6add439","$8d27ca75da600b9c$export$2d1720544b23b823","$8d27ca75da600b9c$export$a8550f7dbe79f93a","$8d27ca75da600b9c$export$dda1d9f60106f0e9","$8d27ca75da600b9c$export$a93c5207d687da10","$8d27ca75da600b9c$export$ee7c8ad385a60b7b","$8d27ca75da600b9c$export$f38c853ae54ed474","$8d27ca75da600b9c$export$56c0d5a1e737357d","$8d27ca75da600b9c$export$971d5caa766a69d7","$8d27ca75da600b9c$export$53c86fa97d611818","$8d27ca75da600b9c$export$7f8ddf7c7c20b3cd","$8d27ca75da600b9c$export$39c1cc7c062529d4","$8d27ca75da600b9c$export$7a0bdf7d4a91ea88","$8d27ca75da600b9c$export$9f4f30ee63539e24","$8d27ca75da600b9c$export$2408f22a0fab9ae5","$8d27ca75da600b9c$export$a05254e7c3aeba6e","$8d27ca75da600b9c$export$a33b77bbdbb8366c","$8d27ca75da600b9c$export$a07804094c3ecf2d","$8d27ca75da600b9c$export$d141bba7fdc215a3","$8d27ca75da600b9c$export$b9a6b53f9be3734","$8d27ca75da600b9c$export$53a70dd1ebbae346","$8d27ca75da600b9c$export$625550452a3fa3ec","$8d27ca75da600b9c$export$3a6d5c9ae78a2c08","$8d27ca75da600b9c$export$23ebac1979863676","$8d27ca75da600b9c$export$96f57966bedc81b4","$8d27ca75da600b9c$export$158acd800e1ef08b","$8d27ca75da600b9c$export$28f7fcd39efa255","$8d27ca75da600b9c$export$ffb5f4729a158638","$8d27ca75da600b9c$export$25ce5a424b770e84","$8d27ca75da600b9c$export$71cec2538cb2c617","$8d27ca75da600b9c$export$3b513254972cfc9c","$8d27ca75da600b9c$export$2ed0fc6709e59212","$8d27ca75da600b9c$export$ef35774e6d314e91","$8d27ca75da600b9c$export$ebd11618f299a286","$8d27ca75da600b9c$export$c03999cb2f36933f","$8d27ca75da600b9c$export$882b5998b3b9117c","$8d27ca75da600b9c$export$3b14a55fb2447963","$8d27ca75da600b9c$export$71511d61b312f219","$8d27ca75da600b9c$export$43caf9889c228507","$8d27ca75da600b9c$export$61196ced6d74a310","$8d27ca75da600b9c$export$4c3d22f3d993c33f","$8d27ca75da600b9c$export$3c2fa207a37baaea","$8d27ca75da600b9c$export$ce26c07117d59d6a","$8d27ca75da600b9c$export$9d398bebfec1c039","$8d27ca75da600b9c$export$9e5f44173e64f162","$8d27ca75da600b9c$export$efccba1c4a2ef57b","$8d27ca75da600b9c$export$f1e1789686576879","$8d27ca75da600b9c$export$db3b6bfb95261072","$8d27ca75da600b9c$export$ae1af26003f05816","$8d27ca75da600b9c$export$91477dc880baac21","$8d27ca75da600b9c$export$6559d589eb85fbb6","$8d27ca75da600b9c$export$2e2af4578d910ddf","$8d27ca75da600b9c$export$4368d992c4eafac0","$8d27ca75da600b9c$export$e7c866399fa523f5","$8d27ca75da600b9c$export$faec65b429be379","$8d27ca75da600b9c$export$78acf4525d8a74c4","$8d27ca75da600b9c$export$c9170ad7d4cd7e57","$8d27ca75da600b9c$export$493d36ec626b6698","$8d27ca75da600b9c$export$24baa2b76016ce0e","$8d27ca75da600b9c$export$e7094788287c5e9b","$8d27ca75da600b9c$export$8743009a87fcb00f","$8d27ca75da600b9c$export$3d8c2f653ac9d0b9","$8d27ca75da600b9c$export$d24c54395ce0c509","$8d27ca75da600b9c$export$6554612db691658e","$8d27ca75da600b9c$export$dc98b0b04f4c7758","$8d27ca75da600b9c$export$1fbe638ecf81657e","$8d27ca75da600b9c$export$21579262ef46735b","$8d27ca75da600b9c$export$d66dc83d8cfc8dd","$8d27ca75da600b9c$export$92108d983e8ee699","$8d27ca75da600b9c$export$a9c23c6ac3fc3eca","$8d27ca75da600b9c$export$34aec0b863436764","$8d27ca75da600b9c$export$407448d2b89b1813","$8d27ca75da600b9c$export$db202ddc8be9136","$8d27ca75da600b9c$export$35e795649ee09318","$8d27ca75da600b9c$export$a9c996f45e5784d0","$8d27ca75da600b9c$export$c3950d9923825c02","subProxy","Proxy","_context","_subProxy","$8d27ca75da600b9c$export$7910e0436ed8d1de","deleteProperty","receiver","$8d27ca75da600b9c$var$_cached","$8d27ca75da600b9c$var$_resolveWithContext","$8d27ca75da600b9c$var$_resolveScriptable","getValue","$8d27ca75da600b9c$var$needsSubResolver","$8d27ca75da600b9c$var$createSubResolver","_scopes","$8d27ca75da600b9c$var$_resolveArray","getOwnPropertyDescriptor","Reflect","ownKeys","$8d27ca75da600b9c$export$4a5767248b18ef41","$8d27ca75da600b9c$export$ab83b03e4111b1d0","$8d27ca75da600b9c$export$3a1a48c8f6ef640e","$8d27ca75da600b9c$export$9bb611d729802a56","$8d27ca75da600b9c$export$df995fae86a55f06","$8d27ca75da600b9c$export$2329c99376c9d0a4","$8d27ca75da600b9c$export$f787f51d84a910ad","$8d27ca75da600b9c$export$3466f893ebf79586","$8d27ca75da600b9c$export$b4171a6734a65d42","$8d27ca75da600b9c$export$8a5498727ef6be21","$8d27ca75da600b9c$export$7a38258bbe170828","$8d27ca75da600b9c$export$2f6ca3d3b1f80bf5","$8d27ca75da600b9c$export$3d12bd131bb975d1","$8d27ca75da600b9c$export$91c6e00c14e7e6fd","$8d27ca75da600b9c$export$890c4ad488842ce7","$8d27ca75da600b9c$export$9fa96a7d116ea3ce","$8d27ca75da600b9c$export$306ddfe3a8403e2","$8d27ca75da600b9c$export$1a82df3d29112e01","$bFoGN","isArray","toString","defaultValue","dimension","endsWith","thisArg","loopable","$8d27ca75da600b9c$export$d377dcb2b61d6c4e","klen","$8d27ca75da600b9c$var$isValidKey","$8d27ca75da600b9c$export$667d3bf0c5f83305","tval","sval","current","merger","$8d27ca75da600b9c$export$317a3d46287192d8","hasOwnProperty","$8d27ca75da600b9c$var$keyResolvers","$8d27ca75da600b9c$var$_getKeyResolver","$8d27ca75da600b9c$export$9d0e2d13d04f7070","tmp","part","toUpperCase","$8d27ca75da600b9c$export$d29e374196577086","$8d27ca75da600b9c$export$2ec5befb9e6c97d4","log10","sign","epsilon","roundedRange","niceRange","fraction","niceFraction","rounded","degrees","radians","centrePoint","anglePoint","distanceFromXCenter","distanceFromYCenter","radialDistanceFromCenter","atan2","$8d27ca75da600b9c$export$c18d01048907ea92","sameAngleIsFullCircle","angleToStart","angleToEnd","startToAngle","endToAngle","cmp","mid","ti","$8d27ca75da600b9c$var$arrayEvents","_chartjs","object","stub","requestAnimationFrame","argsToUse","ticking","timeout","clearTimeout","setTimeout","_scaleRanges","newRanges","xmin","xmax","ymin","ymax","$8d27ca75da600b9c$var$atEdge","$8d27ca75da600b9c$var$elasticIn","$8d27ca75da600b9c$var$elasticOut","easeInQuad","easeOutQuad","easeInOutQuad","easeInCubic","easeOutCubic","easeInOutCubic","easeInQuart","easeOutQuart","easeInOutQuart","easeInQuint","easeOutQuint","easeInOutQuint","easeInSine","easeOutSine","easeInOutSine","easeInExpo","easeOutExpo","easeInOutExpo","easeInCirc","easeOutCirc","easeInOutCirc","easeInElastic","easeOutElastic","easeInOutElastic","easeInBack","easeOutBack","easeInOutBack","easeInBounce","easeOutBounce","easeInOutBounce","$8d27ca75da600b9c$export$f96d196f7728bb5","Color","$8d27ca75da600b9c$export$738ab4df8bf92ae9","saturate","darken","$8d27ca75da600b9c$var$numbers","$8d27ca75da600b9c$var$colors","$8d27ca75da600b9c$var$intlCache","num","$8d27ca75da600b9c$var$getNumberFormat","JSON","stringify","Intl","NumberFormat","$8d27ca75da600b9c$var$formatters","notation","delta","maxTick","logDelta","numDecimal","minimumFractionDigits","maximumFractionDigits","$8d27ca75da600b9c$var$getScope$1","$8d27ca75da600b9c$var$set","root","_appliers","family","hoverBackgroundColor","hoverBorderColor","hoverColor","scopeObject","targetScopeObject","privateName","defineProperties","appliers","colors","longest","arrayOfThings","thing","nestedThing","garbageCollect","halfWidth","resetTransform","clearRect","xOffset","yOffset","xOffsetW","yOffsetW","drawImage","ellipse","SQRT1_2","flip","midpoint","bezierCurveTo","cp1x","cp2x","cp1y","cp2y","$8d27ca75da600b9c$var$drawBackdrop","oldColor","strokeText","$8d27ca75da600b9c$var$decorateText","underline","metrics","actualBoundingBoxLeft","actualBoundingBoxRight","actualBoundingBoxAscent","actualBoundingBoxDescent","yDecoration","decorationWidth","$8d27ca75da600b9c$var$LINE_HEIGHT","$8d27ca75da600b9c$var$FONT_STYLE","$8d27ca75da600b9c$var$numberOrZero","objProps","read","parseInt","match","$8d27ca75da600b9c$export$8c78c7c36408ea29","matches","inputs","info","cacheable","minmax","keepZero","parentContext","rootScopes","getTarget","finalRootScopes","$8d27ca75da600b9c$var$_resolve","Symbol","toStringTag","_rootScopes","_getTarget","_keys","$8d27ca75da600b9c$var$_resolveWithPrefixes","$8d27ca75da600b9c$var$readKey","$8d27ca75da600b9c$var$getKeysFromAllScopes","storage","_storage","_allKeys","resolve","$8d27ca75da600b9c$var$getScope","parentScopes","allScopes","$8d27ca75da600b9c$var$addScopesFromKey","$8d27ca75da600b9c$var$subGetTarget","$8d27ca75da600b9c$var$addScopes","parentFallback","$8d27ca75da600b9c$var$resolveKeysFromAllScopes","$8d27ca75da600b9c$var$EPSILON","EPSILON","$8d27ca75da600b9c$var$getPoint","$8d27ca75da600b9c$var$getValueAxis","$8d27ca75da600b9c$var$capControlPoint","controlPoints","$8d27ca75da600b9c$export$527e9aa3390079e9","pointBefore","pointCurrent","valueAxis","pointsLen","deltaK","mK","pointAfter","slopeDelta","$8d27ca75da600b9c$var$monotoneAdjust","alphaK","betaK","tauK","squaredMagnitude","$8d27ca75da600b9c$var$monotoneCompute","$8d27ca75da600b9c$export$e171bab687b50e0","middlePoint","afterPoint","d01","d12","s01","s12","fa","fb","$8d27ca75da600b9c$var$capBezierPoints","inArea","inAreaPrev","inAreaNext","domNode","parentNode","host","$8d27ca75da600b9c$var$parseMaxStyle","styleValue","parentProperty","valueInPixels","$8d27ca75da600b9c$var$getComputedStyle","ownerDocument","defaultView","getComputedStyle","$8d27ca75da600b9c$var$positions","$8d27ca75da600b9c$var$getPositionedStyle","styles","suffix","$8d27ca75da600b9c$var$useOffsetPos","shadowRoot","borderBox","paddings","borders","$8d27ca75da600b9c$var$getCanvasPosition","touches","getBoundingClientRect","clientX","clientY","$8d27ca75da600b9c$var$round1","bbWidth","bbHeight","containerSize","$8d27ca75da600b9c$var$getContainerSize","containerStyle","containerBorder","containerPadding","clientHeight","forceRatio","forceStyle","pixelRatio","deviceHeight","deviceWidth","setTransform","passiveSupported","getPropertyValue","cp1","cp2","rectX","_itemWidth","direction","original","getPropertyPriority","setProperty","prevTextDirection","$8d27ca75da600b9c$var$propertyFn","between","compare","$8d27ca75da600b9c$var$normalizeSegment","prevValue","startBound","endBound","$8d27ca75da600b9c$var$getSegment","inside","subStart","startIsBefore","endIsBefore","shouldStart","shouldStop","sub","segmentOptions","$8d27ca75da600b9c$var$findStartAndEnd","$8d27ca75da600b9c$var$splitByStyles","completeLoop","$8d27ca75da600b9c$var$solidSegments","$8d27ca75da600b9c$var$doSplitByStyles","chartContext","baseStyle","$8d27ca75da600b9c$var$readStyle","prevStyle","addStyle","st","dir","$8d27ca75da600b9c$var$styleChanged","replacer","p0","p0DataIndex","p1DataIndex","$87e6acd7396d97dc$var$names","$87e6acd7396d97dc$export$2077e0241d6afd3c","$87e6acd7396d97dc$export$892596cec99bc70e","$87e6acd7396d97dc$export$837ba5c449269406","$87e6acd7396d97dc$export$bcc6e673dfa14d36","$87e6acd7396d97dc$export$ed9bd8dcaeba14f6","$87e6acd7396d97dc$export$dbf961a8d278dbef","$87e6acd7396d97dc$export$aa35ef1f24408ab9","$87e6acd7396d97dc$var$map$1","$87e6acd7396d97dc$var$hex","$87e6acd7396d97dc$var$h1","$87e6acd7396d97dc$var$h2","$87e6acd7396d97dc$var$eq","$87e6acd7396d97dc$var$isShort","$87e6acd7396d97dc$var$alpha","$87e6acd7396d97dc$var$HUE_RE","$87e6acd7396d97dc$var$hsl2rgbn","$87e6acd7396d97dc$var$hsv2rgbn","$87e6acd7396d97dc$var$hwb2rgbn","rgb","$87e6acd7396d97dc$export$b5ba70b240f8f7f","$87e6acd7396d97dc$var$calln","$87e6acd7396d97dc$var$hue","$87e6acd7396d97dc$var$map","$87e6acd7396d97dc$var$names$1","OiceXe","antiquewEte","aqua","aquamarRe","azuY","beige","bisque","black","blanKedOmond","Xe","XeviTet","bPwn","burlywood","caMtXe","KartYuse","KocTate","cSO","cSnflowerXe","cSnsilk","crimson","cyan","xXe","xcyan","xgTMnPd","xWay","xgYF","xgYy","xkhaki","xmagFta","xTivegYF","xSange","xScEd","xYd","xsOmon","xsHgYF","xUXe","xUWay","xUgYy","xQe","xviTet","dAppRk","dApskyXe","dimWay","dimgYy","dodgerXe","fiYbrick","flSOwEte","foYstWAn","fuKsia","gaRsbSo","ghostwEte","gTd","gTMnPd","Way","gYF","gYFLw","gYy","honeyMw","hotpRk","RdianYd","Rdigo","ivSy","khaki","lavFMr","lavFMrXsh","lawngYF","NmoncEffon","ZXe","ZcSO","Zcyan","ZgTMnPdLw","ZWay","ZgYF","ZgYy","ZpRk","ZsOmon","ZsHgYF","ZskyXe","ZUWay","ZUgYy","ZstAlXe","ZLw","lime","limegYF","lRF","magFta","maPon","VaquamarRe","VXe","VScEd","VpurpN","VsHgYF","VUXe","VsprRggYF","VQe","VviTetYd","midnightXe","mRtcYam","mistyPse","moccasR","navajowEte","navy","Tdlace","Tive","TivedBb","Sange","SangeYd","ScEd","pOegTMnPd","pOegYF","pOeQe","pOeviTetYd","papayawEp","pHKpuff","peru","pRk","plum","powMrXe","purpN","YbeccapurpN","Yd","Psybrown","PyOXe","saddNbPwn","sOmon","sandybPwn","sHgYF","sHshell","siFna","silver","skyXe","UXe","UWay","UgYy","snow","sprRggYF","stAlXe","tan","teO","tEstN","tomato","Qe","viTet","JHt","wEte","wEtesmoke","Lw","LwgYF","$87e6acd7396d97dc$var$RGB_RE","$87e6acd7396d97dc$var$to","$87e6acd7396d97dc$var$from","$87e6acd7396d97dc$var$modHSL","$87e6acd7396d97dc$var$clone","$87e6acd7396d97dc$var$fromObject","$87e6acd7396d97dc$export$625a38b961e8b5e9","$87e6acd7396d97dc$export$b2f06b640faad956","$87e6acd7396d97dc$var$unpack","ok","nk","unpacked","tkeys","transparent","$87e6acd7396d97dc$export$91aedb20f296e541","exec","$87e6acd7396d97dc$export$5e91288c399be4f9","_rgb","_valid","rgbString","hslString","$87e6acd7396d97dc$export$a197af1c58e6260c","w2","c2","w1","$87e6acd7396d97dc$var$interpolate","rgb1","rgb2","clone","clearer","greyscale","opaquer","negate","lighten","desaturate","deg","$4049e6bf31df43d6$export$2e2bcd8739ae039","$4049e6bf31df43d6$var$interaction","visibleElements","$4049e6bf31df43d6$var$filterElements","nearestItems","evenPoint","_index","$4049e6bf31df43d6$var$getElements","$4049e6bf31df43d6$var$rotated","cx","cy","$4049e6bf31df43d6$var$isOlderPart","act","req","$4049e6bf31df43d6$var$clamp","$4049e6bf31df43d6$var$inLimit","hitSize","$4049e6bf31df43d6$var$inBoxRange","hitTolerance","inRangeX","inRangeY","$4049e6bf31df43d6$var$inLabelRange","$4049e6bf31df43d6$var$getElementCenterPoint","$4049e6bf31df43d6$var$isPercentString","$4049e6bf31df43d6$var$toPercent","$4049e6bf31df43d6$var$toPositivePercent","$4049e6bf31df43d6$var$boxAppering","$4049e6bf31df43d6$var$defaultInitAnimation","doughnutLabel","polygon","$4049e6bf31df43d6$var$getRelativePosition","$4049e6bf31df43d6$var$getSize","positivePercent","$4049e6bf31df43d6$var$measureLabelRectangle","labelSize","xAdjust","yAdjust","hasPadding","positionObj","$4049e6bf31df43d6$var$toPosition","$4049e6bf31df43d6$var$calculateLabelPosition$1","$4049e6bf31df43d6$var$shouldFit","fitRatio","autoFit","$4049e6bf31df43d6$var$toFonts","optFont","fonts","$4049e6bf31df43d6$var$isBoundToPoint","xValue","yValue","adjust","$4049e6bf31df43d6$var$initAnimationProperties","initAnim","$4049e6bf31df43d6$var$applyDefault","$4049e6bf31df43d6$var$execCallback","$4049e6bf31df43d6$var$loadHooks","hooks","hooksContainer","$4049e6bf31df43d6$var$widthCache","$4049e6bf31df43d6$var$notRadius","$4049e6bf31df43d6$var$fontsKey","$4049e6bf31df43d6$var$isImageOrCanvas","content","$4049e6bf31df43d6$var$translate","$4049e6bf31df43d6$var$setBorderStyle","$4049e6bf31df43d6$var$setShadowStyle","shadowColor","backgroundShadowColor","shadowBlur","shadowOffsetX","shadowOffsetY","$4049e6bf31df43d6$var$measureLabelSize","mapKey","_measureText","$4049e6bf31df43d6$var$calculateLabelSize","$4049e6bf31df43d6$var$drawBox","$4049e6bf31df43d6$var$clampAll","borderShadowColor","$4049e6bf31df43d6$var$drawLabel","$4049e6bf31df43d6$var$getOpacity","elementValue","optColor","$4049e6bf31df43d6$var$calculateTextAlignment","$4049e6bf31df43d6$var$setTextStrokeStyle","miterLimit","$4049e6bf31df43d6$var$applyLabelDecoration","lhs","$4049e6bf31df43d6$var$applyLabelContent","$4049e6bf31df43d6$var$positions","$4049e6bf31df43d6$var$limitedLineScale","xScaleID","startProp","endProp","yScaleID","$4049e6bf31df43d6$var$scaleValue","$4049e6bf31df43d6$var$retrieveScaleID","axes","$4049e6bf31df43d6$var$getDimensionByScale","$4049e6bf31df43d6$var$getChartPoint","$4049e6bf31df43d6$var$resolveBoxProperties","xDim","$4049e6bf31df43d6$var$getChartDimensionByScale","yDim","yMin","yMax","$4049e6bf31df43d6$var$resolvePointProperties","adjustCenterX","adjustCenterY","$4049e6bf31df43d6$var$getChartCircle","$4049e6bf31df43d6$var$resolveBoxAndLabelProperties","initProperties","optionScope","$4049e6bf31df43d6$var$resolveLabelElementProperties$1","callout","$4049e6bf31df43d6$var$calculateX","$4049e6bf31df43d6$var$calculatePosition","$4049e6bf31df43d6$var$calculateY","boxOpts","padStart","padEnd","availableSize","$4049e6bf31df43d6$var$moveHooks","$4049e6bf31df43d6$var$eventHooks","$4049e6bf31df43d6$var$dispatchMoveEvents","state","checkElements","$4049e6bf31df43d6$var$dispatchEvent","$4049e6bf31df43d6$var$elementHooks","$4049e6bf31df43d6$var$invokeHook","hooked","callbackHook","$4049e6bf31df43d6$var$changeScaleLimit","suggestedLimit","$4049e6bf31df43d6$var$updateLimits","annotation","$4049e6bf31df43d6$var$BoxAnnotation","Element","resolveElementProperties","adjustScaleRange","$4049e6bf31df43d6$var$DoughnutLabelAnnotation","$4049e6bf31df43d6$var$drawBackground","_centerX","_centerY","_radius","_startAngle","_endAngle","_counterclockwise","_fitRatio","$4049e6bf31df43d6$var$isControllerVisible","autoHide","controllerMeta","$4049e6bf31df43d6$var$getControllerMeta","square","space","angles","$4049e6bf31df43d6$var$getAngles","$4049e6bf31df43d6$var$getFitRatio","boxSize","$4049e6bf31df43d6$var$LabelAnnotation","_visible","$4049e6bf31df43d6$var$drawCallout","pointX","pointY","calloutPosition","$4049e6bf31df43d6$var$resolveCalloutPosition","$4049e6bf31df43d6$var$resolveCalloutAutoPosition","xPoints","yPoints","rotatedPoint","$4049e6bf31df43d6$var$isPointInRange","separatorStart","separatorEnd","$4049e6bf31df43d6$var$getCalloutSeparatorCoord","$4049e6bf31df43d6$var$getCalloutSeparatorAdjust","sideStart","sideEnd","$4049e6bf31df43d6$var$getCalloutSideCoord","side","$4049e6bf31df43d6$var$getCalloutSideAdjust","$4049e6bf31df43d6$var$getLabelSize","hBorderWidth","$4049e6bf31df43d6$var$pointInLine","$4049e6bf31df43d6$var$interpolateX","$4049e6bf31df43d6$var$interpolateY","$4049e6bf31df43d6$var$sqr","$4049e6bf31df43d6$var$rangeLimit","$4049e6bf31df43d6$var$coordInCurve","cp","$4049e6bf31df43d6$var$pointInCurve","$4049e6bf31df43d6$var$coordAngleInCurve","$4049e6bf31df43d6$var$angleInCurve","$4049e6bf31df43d6$var$LineAnnotation","mx","my","isPointInStroke","$4049e6bf31df43d6$var$isOnLabel","$4049e6bf31df43d6$var$intersects","xx","yy","dy","lenSq","$4049e6bf31df43d6$var$inAxisRange","curve","$4049e6bf31df43d6$var$drawCurve","startOpts","endOpts","startAdjust","endAdjust","$4049e6bf31df43d6$var$getArrowHeads","ps","pe","$4049e6bf31df43d6$var$drawArrowHeadOnCurve","$4049e6bf31df43d6$var$drawArrowHead","$4049e6bf31df43d6$var$resolveLineProperties","$4049e6bf31df43d6$var$resolveFullLineProperties","$4049e6bf31df43d6$var$resolveLimitedLineProperties","scaleId","dim","$4049e6bf31df43d6$var$isLineInArea","$4049e6bf31df43d6$var$limitLineToArea","$4049e6bf31df43d6$var$limitPointToArea","$4049e6bf31df43d6$var$getControlPoint","controlPoint","labelProperties","$4049e6bf31df43d6$var$resolveLabelElementProperties","$4049e6bf31df43d6$var$calculateLabelPosition","sizes","$4049e6bf31df43d6$var$calculateAutoRotation","$4049e6bf31df43d6$var$rotatedSize","$4049e6bf31df43d6$var$calculateT","$4049e6bf31df43d6$var$spaceAround","$4049e6bf31df43d6$var$calculateTAdjust","xCoordinateSizes","yCoordinateSizes","$4049e6bf31df43d6$var$adjustLabelCoordinate","$4049e6bf31df43d6$var$arrowHeadsDefaults","lineSize","lineW","lineH","coordinate","halfSize","arrowStartOpts","arrowHeads","arrowEndOpts","$4049e6bf31df43d6$var$getLineAdjust","arrowOpts","arrowOffsetX","$4049e6bf31df43d6$var$EllipseAnnotation","$4049e6bf31df43d6$var$pointInEllipse","xRadius","yRadius","cosAngle","sinAngle","$4049e6bf31df43d6$var$PointAnnotation","$4049e6bf31df43d6$var$drawPoint","b3","$4049e6bf31df43d6$var$drawPointStyle","b5","b4","$4049e6bf31df43d6$var$PolygonAnnotation","$4049e6bf31df43d6$var$pointIsInPolygon","isInside","bY","bX","axisPoints","sides","elProps","$4049e6bf31df43d6$var$buildPointElement","$4049e6bf31df43d6$var$annotationTypes","$4049e6bf31df43d6$var$directUpdater","$4049e6bf31df43d6$var$hooks$1","$4049e6bf31df43d6$var$resolve","optDefs","$4049e6bf31df43d6$var$resolveObj","$4049e6bf31df43d6$var$isIndexable","$4049e6bf31df43d6$var$resolveType","$4049e6bf31df43d6$var$getOrCreateElement","elementClass","$4049e6bf31df43d6$var$resolveAnnotationOptions","defs","$4049e6bf31df43d6$var$chartStates","$4049e6bf31df43d6$var$isNotDoughnutLabel","$4049e6bf31df43d6$var$hooks","beforeRegister","$4049e6bf31df43d6$var$requireVersion","pkg","ver","strict","afterRegister","afterUnregister","beforeInit","annotations","listened","moveListened","hovered","annotationOptions","$4049e6bf31df43d6$var$verifyScaleOptions","$4049e6bf31df43d6$var$verifyScaleIDs","$4049e6bf31df43d6$var$verifyProperties","$4049e6bf31df43d6$var$adjustScaleRange","$4049e6bf31df43d6$var$getScaleLimits","scaleIDOption","click","$4049e6bf31df43d6$var$updateElements","animOpts","Animations","$4049e6bf31df43d6$var$resyncElements","$4049e6bf31df43d6$var$updateSubElements","mainElement","subElements","definition","subElement","$4049e6bf31df43d6$var$updateHooks","$4049e6bf31df43d6$var$draw","afterDatasetsDraw","beforeEvent","$4049e6bf31df43d6$var$handleEvent","$4049e6bf31df43d6$var$handleMoveEvents","$4049e6bf31df43d6$var$handleClickEvents","afterDestroy","getAnnotations","_getAnnotationElementsAtEventForMode","caller","$4049e6bf31df43d6$var$getDrawableElements","drawableElements","main","$4049e6bf31df43d6$var$drawElement","$7ybDy","$57f4bc3f97ccace5$var$_default","$57f4bc3f97ccace5$var$_log","$57f4bc3f97ccace5$var$warn","inherit","white","slate","gray","zinc","neutral","stone","red","orange","amber","yellow","green","emerald","teal","sky","blue","indigo","violet","purple","fuchsia","pink","rose","lightBlue","warmGray","trueGray","coolGray","blueGray","$5668721651034315$var$_export","$5668721651034315$var$dim","$5668721651034315$var$_default","$5668721651034315$var$_picocolors","$5668721651034315$var$alreadyShown","$5668721651034315$var$log","messages","message","bold","risk","magenta","$cfae44f0dfdf62c0$var$cachedSetTimeout","$cfae44f0dfdf62c0$var$cachedClearTimeout","$cfae44f0dfdf62c0$var$currentQueue","$cfae44f0dfdf62c0$var$process","$cfae44f0dfdf62c0$var$defaultSetTimout","$cfae44f0dfdf62c0$var$defaultClearTimeout","$cfae44f0dfdf62c0$var$runTimeout","fun","$cfae44f0dfdf62c0$var$queue","$cfae44f0dfdf62c0$var$draining","$cfae44f0dfdf62c0$var$queueIndex","$cfae44f0dfdf62c0$var$cleanUpNextTick","$cfae44f0dfdf62c0$var$drainQueue","run","$cfae44f0dfdf62c0$var$runClearTimeout","marker","$cfae44f0dfdf62c0$var$Item","$cfae44f0dfdf62c0$var$noop","nextTick","browser","env","argv","versions","on","addListener","once","off","removeListener","removeAllListeners","emit","prependListener","prependOnceListener","binding","cwd","chdir","umask","$f9b5d605f52d8009$var$x","$f9b5d605f52d8009$var$create","isColorSupported","italic","inverse","bgBlack","bgRed","bgGreen","bgYellow","bgBlue","bgMagenta","bgCyan","bgWhite","blackBright","redBright","greenBright","yellowBright","blueBright","magentaBright","cyanBright","whiteBright","bgBlackBright","bgRedBright","bgGreenBright","bgYellowBright","bgBlueBright","bgMagentaBright","bgCyanBright","bgWhiteBright","createColors","$df5bef30413a053b$export$d2ca453b913dcdea","Utils","calculateMovingAverage","out","structuredClone","price","sum","setElementText","className","infoBox","getElementsByClassName","innerText","toTwoDecimals","toFixed","$jqz8H","$5wcQa","$5pY61","$4rPAP","$23umq","$mDWTX","chartElement","btc_data","dma350x2","dma111","indicator","mva_350","pointRadius","lowerBox","upperBox","Animator","requestAnimFrame","interpolators","helpersColor","Animation","effects","isObject","resolveTargetOptions","awaitAll","animator","scaleClip","defaultClip","toClip","getSortedDatasetIndices","convertObjectDataToArray","isStacked","getStackKey","getOrCreateStack","getLastIndexInStack","updateStacks","getFirstScaleId","createDatasetContext","createContext","createDataContext","clearStacks","isDirectUpdateMode","cloneIfNotShared","createStack","DatasetController","valueOrDefault","unlistenArrayEvents","listenArrayEvents","resolveObjectKey","defined","getAllScaleValues","_arrayUnique","computeMinSampleSize","computeFitCategoryTraits","isNullOrUndef","computeFlexCategoryTraits","parseFloatBar","parseValue","parseArrayOrPrimitive","isFloatBar","barSign","borderProps","setBorderSkipped","parseEdge","swap","startEnd","v2","setInflateAmount","getRatioAndOffset","TAU","_angleBetween","HALF_PI","toRadians","toPercentage","toDimension","formatNumber","_getStartAndCountOfVisiblePoints","_scaleRangesChanged","isNumber","_parseObjectDataRadialScale","abstract","DateAdapterBase","_date","binarySearch","_rlookupByKey","_lookupByKey","evaluateInteractionItems","getDistanceMetricForAxis","deltaX","deltaY","getIntersectItems","evaluationFunc","_isPointInArea","getNearestRadialItems","getAngleFromPoint","getNearestCartesianItems","pointInArea","getNearestItems","getAxisItems","getRelativePosition","STATIC_POSITIONS","filterByPosition","filterDynamicPositionByAxis","sortByWeight","wrapBoxes","buildStacks","setLayoutDims","buildLayoutBoxes","getCombinedMax","updateMaxPadding","updateDims","handleMaxPadding","getMargins","marginForPositions","fitBoxes","setBoxDims","placeBoxes","toPadding","each","visibleVerticalBoxCount","BasePlatform","BasicPlatform","EXPANDO_KEY","EVENT_TYPES","isNullOrEmpty","initCanvas","readUsedSize","eventListenerOptions","supportsEventListenerOptions","fromNativeEvent","nodeListContains","createAttachObserver","createDetachObserver","drpListeningCharts","oldDevicePixelRatio","onWindowResize","listenDevicePixelRatioChanges","unlistenDevicePixelRatioChanges","createResizeObserver","_getParentNode","throttled","releaseObserver","createProxyAndListen","DomPlatform","_detectPlatform","_isDomSupported","determineMaxTicks","getMajorIndices","skipMajors","calculateSpacing","maxScale","maxChart","getEvenSpacing","_factorize","reverseAlign","offsetFromEdge","getTicksLimit","sample","getPixelForGridLine","getTickMarkLength","getTitleHeight","toFont","createScaleContext","createTickContext","_toLeftRightCenter","titleArgs","_alignStartEnd","Scale","finiteOrDefault","_addGrace","_limitValue","toDegrees","_int16Range","_alignPixel","clipArea","renderText","unclipArea","TypedRegistry","isIChartComponent","registerDefaults","merge","routeDefaults","Registry","_capitalize","PluginService","callCallback","allPlugins","createDescriptors","getOpts","pluginOpts","getIndexAxis","getAxisFromDefaultScaleID","getDefaultScaleIDFromAxis","idMatchesAxis","axisFromPosition","determineAxis","getAxisFromDataset","retrieveAxisFromDatasets","mergeScaleConfig","mergeIf","initOptions","initData","initConfig","keyCache","keysCached","cachedKeys","addIfFound","Config","getResolver","needContext","isFunction","_attachContext","_createResolver","hasFunction","KNOWN_POSITIONS","positionIsHorizontal","compare2Level","onAnimationsComplete","onAnimationProgress","getCanvas","moveNumericKeys","determineLastEvent","getSizeForArea","getDatasetArea","invalidatePlugins","uid","debounce","retinaScale","clearCanvas","scaleClass","setsEqual","changes","Interaction","_elementsEqual","_isClickEvent","clipArc","toRadiusCorners","_readValueToProps","parseBorderRadius","rThetaToXY","pathArc","adjustedAngle","drawArc","_isBetween","fix","setStyle","getLineMethod","_steppedLineTo","_bezierCurveTo","pathVars","outside","fastPathSegment","_getSegmentMethod","_getInterpolationMethod","_steppedInterpolation","_bezierInterpolation","_pointInLine","strokePathWithCache","strokePathDirect","usePath2D","_updateBezierControlPoints","_computeSegments","_boundSegments","drawPoint","getBarBounds","skipOrLimit","parseBorderWidth","toTRBL","toTRBLCorners","boundingRects","skipBoth","hasRadius","addNormalRectPath","inflateRect","addRoundedRectPath","BORDER_COLORS","BACKGROUND_COLORS","getBorderColor","getBackgroundColor","colorizeDefaultDataset","colorizeDoughnutDataset","colorizePolarAreaDataset","getColorizer","containsColorsDefinitions","containsColorsDefinition","containsDefaultColorsDefenitions","lttbDecimation","minMaxDecimation","cleanDecimatedDataset","cleanDecimatedData","getStartAndCountOfVisiblePointsSimplified","_findSegmentEnd","_getBounds","targetSegments","fillSources","_boundSegment","_getEdge","_normalizeAngle","_pointsFromSegments","_createBoundaryLine","_shouldApplyFill","_resolveTarget","_decodeFill","parseFillOption","decodeTargetIndex","_getTargetPixel","_getTargetValue","_buildStackLine","getLinesBelow","addPointsBelow","findPoint","simpleArc","getLineByIndex","computeBoundary","computeCircularBoundary","computeLinearBoundary","_drawfill","doFill","clipVertical","clipBounds","interpolatedLineTo","getBoxSize","itemsEqual","calculateItemSize","getRtlAdapter","drawPointLegend","overrideTextDirection","realX","_textX","calculateLegendItemHeight","restoreTextDirection","isListened","calculateItemWidth","calculateItemHeight","createTitle","xAverage","distanceBetweenPoints","pushOrConcat","splitNewlines","createTooltipItem","getTooltipSize","determineYAlign","doesNotFitWithAlign","determineXAlign","determineAlignment","alignX","alignY","getBackgroundPoint","getAlignedX","getBeforeAfterBodyLines","createTooltipContext","overrideCallbacks","defaultCallbacks","noop","invokeCallbackWithFallback","addIfString","findOrAddLabel","_getLabelForValue","generateTicks","MIN_SPACING","niceNum","almostWhole","almostEquals","_decimalPlaces","relativeLabelSize","LinearScaleBase","numericGeneratorOptions","_setMinAndMaxByKey","Ticks","log10Floor","changeExponent","isMajor","startExp","getTickBackdropHeight","measureLabelSize","_longestText","determineLimits","fitWithPointLabels","updateLimits","buildPointLabelItems","createPointLabelItem","yForAngle","getTextAlignForAngle","leftForTextAlign","isNotOverlapped","apexesInArea","drawPointLabelBox","drawPointLabels","pathRadiusLine","drawRadiusLine","createPointLabelContext","INTERVALS","UNITS","sorter","determineUnitForAutoTicks","determineUnitForFormatting","determineMajorUnit","addTick","_lookup","timestamp","setMajorTicks","ticksFromTimestamps","_filterBetween","isNumberFinite","isValidKey","_merger","_mergerIf","_deprecated","keyResolvers","_splitKey","_getKeyResolver","PITAU","INFINITY","RAD_PER_DEG","QUARTER_PI","TWO_THIRDS_PI","isFiniteNumber","_angleDiff","arrayEvents","pixelSize","fontStyle","fontFamily","check","atEdge","elasticIn","elasticOut","isPatternOrGradient","getHoverColor","applyAnimationsDefaults","applyLayoutsDefaults","intlCache","getNumberFormat","calculateDelta","applyScaleDefaults","getScope","Defaults","toFontString","setRenderOpts","decorateText","drawBackdrop","LINE_HEIGHT","FONT_STYLE","toLineHeight","numberOrZero","_resolve","_cached","_resolveWithPrefixes","getKeysFromAllScopes","_resolveWithContext","readKey","needsSubResolver","_resolveScriptable","_resolveArray","createSubResolver","resolveFallback","addScopes","addScopesFromKey","subGetTarget","resolveKeysFromAllScopes","getPoint","getValueAxis","splineCurve","monotoneAdjust","monotoneCompute","splineCurveMonotone","capControlPoint","parseMaxStyle","getPositionedStyle","useOffsetPos","getCanvasPosition","getContainerSize","round1","maintainHeight","getRightToLeftAdapter","getLeftToRightAdapter","propertyFn","normalizeSegment","getSegment","findStartAndEnd","solidSegments","splitByStyles","doSplitByStyles","readStyle","styleChanged"],"version":3,"file":"index.2e064e06.js.map"}