{"mappings":"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","sources":["<anon>","src/mayer.ts"],"sourcesContent":["\nfunction $parcel$interopDefault(a) {\n  return a && a.__esModule ? a.default : a;\n}\n\n      var $parcel$global = globalThis;\n    \nvar $parcel$modules = {};\nvar $parcel$inits = {};\n\nvar parcelRequire = $parcel$global[\"parcelRequire4bea\"];\n\nif (parcelRequire == null) {\n  parcelRequire = function(id) {\n    if (id in $parcel$modules) {\n      return $parcel$modules[id].exports;\n    }\n    if (id in $parcel$inits) {\n      var init = $parcel$inits[id];\n      delete $parcel$inits[id];\n      var module = {id: id, exports: {}};\n      $parcel$modules[id] = module;\n      init.call(module.exports, module, module.exports);\n      return module.exports;\n    }\n    var err = new Error(\"Cannot find module '\" + id + \"'\");\n    err.code = 'MODULE_NOT_FOUND';\n    throw err;\n  };\n\n  parcelRequire.register = function register(id, init) {\n    $parcel$inits[id] = init;\n  };\n\n  $parcel$global[\"parcelRequire4bea\"] = parcelRequire;\n}\n\nvar parcelRegister = parcelRequire.register;\n\nvar $jqz8H = parcelRequire(\"jqz8H\");\n\nvar $mDWTX = parcelRequire(\"mDWTX\");\n\nvar $5wcQa = parcelRequire(\"5wcQa\");\n\nvar $23umq = parcelRequire(\"23umq\");\n\nvar $4rPAP = parcelRequire(\"4rPAP\");\n\nvar $5pY61 = parcelRequire(\"5pY61\");\n(0, $jqz8H.default).register((0, $5wcQa.default));\n(0, $jqz8H.default).defaults.color = (0, (/*@__PURE__*/$parcel$interopDefault($5pY61))).slate[400];\n(async ()=>{\n    const chartElement = document.getElementById(\"mayer\");\n    if (chartElement == null) return;\n    const btc_data = [\n        ...(0, (/*@__PURE__*/$parcel$interopDefault($23umq))),\n        ...(0, (/*@__PURE__*/$parcel$interopDefault($4rPAP)))\n    ];\n    const dma200 = (0, $mDWTX.Utils).calculateMovingAverage(btc_data, 200);\n    const mayer_multiple = dma200.map((val, index)=>{\n        if (btc_data[index].value === undefined || val.value === undefined) return {\n            date: val.date,\n            value: undefined\n        };\n        return {\n            date: val.date,\n            value: btc_data[index].value / val.value\n        };\n    });\n    const mayer_band_1 = dma200.map((val)=>{\n        return {\n            date: val.date,\n            value: val.value === undefined ? undefined : 0.5 * val.value\n        };\n    });\n    const mayer_band_2 = dma200;\n    const mayer_band_3 = dma200.map((val)=>{\n        return {\n            date: val.date,\n            value: val.value === undefined ? undefined : 2.0 * val.value\n        };\n    });\n    const mayer_band_4 = dma200.map((val)=>{\n        return {\n            date: val.date,\n            value: val.value === undefined ? undefined : 4.0 * val.value\n        };\n    });\n    new (0, $jqz8H.default)(chartElement, {\n        type: \"line\",\n        data: {\n            datasets: [\n                {\n                    label: \"USD/BTC\",\n                    data: btc_data,\n                    borderWidth: 1\n                },\n                {\n                    label: \"Oversold\",\n                    data: mayer_band_1,\n                    fill: \"origin\"\n                },\n                {\n                    label: \"Bearish\",\n                    data: mayer_band_2,\n                    fill: \"-1\"\n                },\n                {\n                    label: \"Bullish\",\n                    data: mayer_band_3,\n                    fill: \"-1\"\n                },\n                {\n                    label: \"Overbought\",\n                    data: mayer_band_4,\n                    fill: \"-1\"\n                },\n                {\n                    label: \"Mayer Multiple\",\n                    data: mayer_multiple,\n                    yAxisID: \"y1\"\n                }\n            ]\n        },\n        options: {\n            normalized: true,\n            animation: false,\n            // Don't draw dots per data point.\n            datasets: {\n                line: {\n                    pointRadius: 0,\n                    borderWidth: 2\n                }\n            },\n            // Hovering anywhere should hover the nearest x-value independent of y-value.\n            hover: {\n                mode: \"index\",\n                intersect: false\n            },\n            parsing: {\n                xAxisKey: \"date\",\n                yAxisKey: \"value\"\n            },\n            scales: {\n                y: {\n                    type: \"logarithmic\",\n                    display: true,\n                    position: \"left\"\n                },\n                y1: {\n                    type: \"linear\",\n                    display: true,\n                    position: \"right\",\n                    min: 0,\n                    max: 15,\n                    grid: {\n                        drawOnChartArea: false\n                    }\n                }\n            },\n            plugins: {\n                // Show tooltip for nearest x-value for all grpahs independent of y-value of mouse.\n                tooltip: {\n                    mode: \"index\",\n                    intersect: false\n                }\n            }\n        }\n    });\n    // Set current info.\n    const infoBox = document.getElementById(\"mayer_current_info\");\n    if (infoBox != null) {\n        const lastEntry = mayer_multiple[mayer_multiple.length - 1];\n        if (lastEntry.value !== undefined) {\n            let text = `On ${lastEntry.date}: `;\n            if (lastEntry.value < 0.5) text += \"Oversold\";\n            else if (lastEntry.value < 1.0) text += \"Bearish\";\n            else if (lastEntry.value < 2.0) text += \"Bullish\";\n            else text += \"Overbought\";\n            infoBox.innerText = text;\n        }\n    }\n})();\n\n\n//# sourceMappingURL=index.bb147229.js.map\n","import Chart from 'chart.js/auto'\nimport { Utils } from './utils'\nimport annotationPlugin from 'chartjs-plugin-annotation'\nimport btc_historical from '../data/btc_prices_until_2023.json'\nimport btc_newest from '../data/btc_newest.json'\nimport colors from 'tailwindcss/colors'\n\nChart.register(annotationPlugin)\nChart.defaults.color = colors.slate[400]\n;(async () => {\n  const chartElement = document.getElementById('mayer')\n  if (chartElement == null) {\n    return\n  }\n  const btc_data = [...btc_historical, ...btc_newest]\n\n  const dma200 = Utils.calculateMovingAverage(btc_data, 200)\n  const mayer_multiple = dma200.map((val, index) => {\n    if (btc_data[index].value === undefined || val.value === undefined) {\n      return {\n        date: val.date,\n        value: undefined,\n      }\n    }\n    return {\n      date: val.date,\n      value: btc_data[index].value / val.value,\n    }\n  })\n  const mayer_band_1 = dma200.map((val) => {\n    return {\n      date: val.date,\n      value: val.value === undefined ? undefined : 0.5 * val.value,\n    }\n  })\n  const mayer_band_2 = dma200\n  const mayer_band_3 = dma200.map((val) => {\n    return {\n      date: val.date,\n      value: val.value === undefined ? undefined : 2.0 * val.value,\n    }\n  })\n  const mayer_band_4 = dma200.map((val) => {\n    return {\n      date: val.date,\n      value: val.value === undefined ? undefined : 4.0 * val.value,\n    }\n  })\n\n  new Chart(chartElement as HTMLCanvasElement, {\n    type: 'line',\n    data: {\n      datasets: [\n        {\n          label: 'USD/BTC',\n          data: btc_data,\n          borderWidth: 1,\n        },\n        {\n          label: 'Oversold',\n          data: mayer_band_1,\n          fill: 'origin',\n        },\n        {\n          label: 'Bearish',\n          data: mayer_band_2,\n          fill: '-1',\n        },\n        {\n          label: 'Bullish',\n          data: mayer_band_3,\n          fill: '-1',\n        },\n        {\n          label: 'Overbought',\n          data: mayer_band_4,\n          fill: '-1',\n        },\n        {\n          label: 'Mayer Multiple',\n          data: mayer_multiple,\n          yAxisID: 'y1',\n        },\n      ],\n    },\n    options: {\n      normalized: true,\n      animation: false,\n      // Don't draw dots per data point.\n      datasets: {\n        line: {\n          pointRadius: 0,\n          borderWidth: 2,\n        },\n      },\n      // Hovering anywhere should hover the nearest x-value independent of y-value.\n      hover: {\n        mode: 'index',\n        intersect: false,\n      },\n      parsing: {\n        xAxisKey: 'date',\n        yAxisKey: 'value',\n      },\n      scales: {\n        y: {\n          type: 'logarithmic',\n          display: true,\n          position: 'left',\n        },\n        y1: {\n          type: 'linear',\n          display: true,\n          position: 'right',\n          min: 0,\n          max: 15,\n          grid: {\n            drawOnChartArea: false,\n          },\n        },\n      },\n      plugins: {\n        // Show tooltip for nearest x-value for all grpahs independent of y-value of mouse.\n        tooltip: {\n          mode: 'index',\n          intersect: false,\n        },\n      },\n    },\n  })\n\n  // Set current info.\n  const infoBox = document.getElementById('mayer_current_info')\n  if (infoBox != null) {\n    const lastEntry = mayer_multiple[mayer_multiple.length - 1]\n    if (lastEntry.value !== undefined) {\n      let text = `On ${lastEntry.date}: `\n      if (lastEntry.value < 0.5) {\n        text += 'Oversold'\n      } else if (lastEntry.value < 1.0) {\n        text += 'Bearish'\n      } else if (lastEntry.value < 2.0) {\n        text += 'Bullish'\n      } else {\n        text += 'Overbought'\n      }\n      infoBox.innerText = text\n    }\n  }\n})()\n"],"names":["$parcel$interopDefault","a","__esModule","default","$parcel$global","globalThis","$parcel$modules","$parcel$inits","parcelRequire","id","exports","init","module","call","err","Error","code","register","$jqz8H","$mDWTX","$5wcQa","$23umq","$4rPAP","$5pY61","defaults","color","slate","chartElement","document","getElementById","btc_data","dma200","Utils","calculateMovingAverage","mayer_multiple","map","val","index","undefined","value","date","mayer_band_1","mayer_band_3","mayer_band_4","type","data","datasets","label","borderWidth","fill","yAxisID","options","normalized","animation","line","pointRadius","hover","mode","intersect","parsing","xAxisKey","yAxisKey","scales","y","display","position","y1","min","max","grid","drawOnChartArea","plugins","tooltip","infoBox","lastEntry","length","text","innerText"],"version":3,"file":"index.bb147229.js.map"}